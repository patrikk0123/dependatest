{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Button, ButtonVariant } from '../Button';\nimport { AlertContext } from './AlertContext';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Alert/alert';\nexport var AlertToggleExpandButton = function AlertToggleExpandButton(_a) {\n  var ariaLabel = _a['aria-label'],\n      variantLabel = _a.variantLabel,\n      onToggleExpand = _a.onToggleExpand,\n      isExpanded = _a.isExpanded,\n      props = __rest(_a, ['aria-label', \"variantLabel\", \"onToggleExpand\", \"isExpanded\"]);\n\n  var _React$useContext = React.useContext(AlertContext),\n      title = _React$useContext.title,\n      alertVariantLabel = _React$useContext.variantLabel;\n\n  return React.createElement(Button, Object.assign({\n    variant: ButtonVariant.plain,\n    onClick: onToggleExpand,\n    \"aria-expanded\": isExpanded,\n    \"aria-label\": ariaLabel === '' ? \"Toggle \".concat(variantLabel || alertVariantLabel, \" alert: \").concat(title) : ariaLabel\n  }, props), React.createElement(\"span\", {\n    className: css(styles.alertToggleIcon)\n  }, React.createElement(AngleRightIcon, {\n    \"aria-hidden\": \"true\"\n  })));\n};\nAlertToggleExpandButton.displayName = 'AlertToggleExpandButton';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,EAA8BC,aAA9B,QAAmD,WAAnD;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAOC,cAAP,MAA2B,yDAA3B;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,qDAAnB;AAaA,OAAO,IAAMC,uBAAuB,GAA0D,SAAjFA,uBAAiF,CAACC,EAAD,EAM3D;MALnBC,YAGJD,GAHV;MACAE,eAEUF,GAFVE;MACAC,iBACUH,GADVG;MACAC,aAAUJ,GAAVI;MACGC,QAAKC,WALqF,8DAKrF;;EAER,wBAAmDd,KAAK,CAACe,UAAN,CAAiBZ,YAAjB,CAAnD;EAAA,IAAQa,KAAR,qBAAQA,KAAR;EAAA,IAA6BC,iBAA7B,qBAAeP,YAAf;;EACA,OACEV,oBAACC,MAAD,EAAOiB;IACLC,OAAO,EAAEjB,aAAa,CAACkB,KADlB;IAELC,OAAO,EAAEV,cAFJ;IAEkB,iBACRC,UAHV;IAGoB,cACbH,SAAS,KAAK,EAAd,oBAA6BC,YAAY,IAAIO,iBAA7C,qBAAyED,KAAzE,IAAmFP;EAJ1F,GAKDI,KALC,CAAP,EAOEb;IAAMsB,SAAS,EAAEjB,GAAG,CAACC,MAAM,CAACiB,eAAR;EAApB,GACEvB,oBAACI,cAAD,EAAe;IAAA,eAAa;EAAb,CAAf,CADF,CAPF,CADF;AAaD,CArBM;AAsBPG,uBAAuB,CAACiB,WAAxB,GAAsC,yBAAtC","names":["React","Button","ButtonVariant","AlertContext","AngleRightIcon","css","styles","AlertToggleExpandButton","_a","ariaLabel","variantLabel","onToggleExpand","isExpanded","props","__rest","useContext","title","alertVariantLabel","Object","variant","plain","onClick","className","alertToggleIcon","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Alert/AlertToggleExpandButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Button, ButtonProps, ButtonVariant } from '../Button';\nimport { AlertContext } from './AlertContext';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Alert/alert';\n\nexport interface AlertToggleExpandButtonProps extends ButtonProps {\n  /** Aria label for the toggle button */\n  'aria-label'?: string;\n  /** A callback for when the toggle button is clicked */\n  onToggleExpand?: () => void;\n  /** Flag to indicate if the content is expanded */\n  isExpanded?: boolean;\n  /** Variant label for the toggle button */\n  variantLabel?: string;\n}\n\nexport const AlertToggleExpandButton: React.FunctionComponent<AlertToggleExpandButtonProps> = ({\n  'aria-label': ariaLabel,\n  variantLabel,\n  onToggleExpand,\n  isExpanded,\n  ...props\n}: AlertToggleExpandButtonProps) => {\n  const { title, variantLabel: alertVariantLabel } = React.useContext(AlertContext);\n  return (\n    <Button\n      variant={ButtonVariant.plain}\n      onClick={onToggleExpand}\n      aria-expanded={isExpanded}\n      aria-label={ariaLabel === '' ? `Toggle ${variantLabel || alertVariantLabel} alert: ${title}` : ariaLabel}\n      {...props}\n    >\n      <span className={css(styles.alertToggleIcon)}>\n        <AngleRightIcon aria-hidden=\"true\" />\n      </span>\n    </Button>\n  );\n};\nAlertToggleExpandButton.displayName = 'AlertToggleExpandButton';\n"]},"metadata":{},"sourceType":"module"}