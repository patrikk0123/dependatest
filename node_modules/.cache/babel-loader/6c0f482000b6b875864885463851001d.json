{"ast":null,"code":"import axios from 'axios';\nimport * as WebConfigAPI from './WebConfigService';\nimport { keycloakService } from './keycloakService';\n/**\n * Utils class managing http client instance, only one instance is created.\n */\n\nclass PncClient {\n  // development and testing purposes\n  constructor() {\n    this.httpClient = void 0;\n    this.mathRandom = Math.random();\n\n    this.createHttpClient = () => {\n      const httpClient = axios.create({\n        baseURL: WebConfigAPI.getPncUrl()\n      });\n      httpClient.interceptors.request.use(config => {\n        var _config$params, _config$params2;\n\n        // perform actions before request is sent\n        if (keycloakService.isKeycloakAvailable && keycloakService.isAuthenticated()) {\n          var _config$headers;\n\n          config.headers = (_config$headers = config.headers) !== null && _config$headers !== void 0 ? _config$headers : {};\n          config.headers.Authorization = `Bearer ` + keycloakService.getToken();\n        }\n        /*\n         * Convert pageIndex to zero based to be compatible with Orch API\n         *  - Orch API first page index value is 0\n         *  - UI first page index value is 1\n         */\n\n\n        if ((_config$params = config.params) !== null && _config$params !== void 0 && _config$params.pageIndex) {\n          const pageIndex = config.params.pageIndex;\n\n          if (Number.isInteger(+pageIndex)) {\n            config.params.pageIndex = Number(pageIndex) - 1;\n          } else {\n            throw new Error(`Invalid pageIndex: ${pageIndex}, canceling HTTP request`);\n          }\n        }\n        /**\n         * If sorting is set to 'none', delete it from config.\n         */\n\n\n        if (((_config$params2 = config.params) === null || _config$params2 === void 0 ? void 0 : _config$params2.sort) === 'none') {\n          config.params.sort = '';\n        }\n\n        return config;\n      });\n      return httpClient;\n    };\n\n    this.httpClient = this.createHttpClient();\n  }\n  /**\n   * Creates Axios instance and configure interceptors.\n   *\n   * @returns Axios instance\n   */\n\n\n  // PUBLIC\n\n  /**\n   * @returns Axios instance\n   */\n  getHttpClient() {\n    return this.httpClient;\n  }\n\n}\n\nexport const pncClient = new PncClient();","map":{"version":3,"names":["axios","WebConfigAPI","keycloakService","PncClient","constructor","httpClient","mathRandom","Math","random","createHttpClient","create","baseURL","getPncUrl","interceptors","request","use","config","isKeycloakAvailable","isAuthenticated","headers","Authorization","getToken","params","pageIndex","Number","isInteger","Error","sort","getHttpClient","pncClient"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/services/pncClient.ts"],"sourcesContent":["import axios, { AxiosInstance } from 'axios';\nimport { isGeneratorFunction } from 'util/types';\n\nimport * as WebConfigAPI from './WebConfigService';\nimport { keycloakService } from './keycloakService';\n\n/**\n * Utils class managing http client instance, only one instance is created.\n */\nclass PncClient {\n  private httpClient: AxiosInstance;\n  public mathRandom: number = Math.random(); // development and testing purposes\n\n  constructor() {\n    this.httpClient = this.createHttpClient();\n  }\n\n  /**\n   * Creates Axios instance and configure interceptors.\n   *\n   * @returns Axios instance\n   */\n  private createHttpClient = (): AxiosInstance => {\n    const httpClient = axios.create({\n      baseURL: WebConfigAPI.getPncUrl(),\n    });\n\n    httpClient.interceptors.request.use((config) => {\n      // perform actions before request is sent\n\n      if (keycloakService.isKeycloakAvailable && keycloakService.isAuthenticated()) {\n        config.headers = config.headers ?? {};\n        config.headers.Authorization = `Bearer ` + keycloakService.getToken();\n      }\n\n      /*\n       * Convert pageIndex to zero based to be compatible with Orch API\n       *  - Orch API first page index value is 0\n       *  - UI first page index value is 1\n       */\n      if (config.params?.pageIndex) {\n        const pageIndex = config.params.pageIndex;\n        if (Number.isInteger(+pageIndex)) {\n          config.params.pageIndex = Number(pageIndex) - 1;\n        } else {\n          throw new Error(`Invalid pageIndex: ${pageIndex}, canceling HTTP request`);\n        }\n      }\n\n      /**\n       * If sorting is set to 'none', delete it from config.\n       */\n      if (config.params?.sort === 'none') {\n        config.params.sort = '';\n      }\n\n      return config;\n    });\n    return httpClient;\n  };\n\n  // PUBLIC\n\n  /**\n   * @returns Axios instance\n   */\n  public getHttpClient(): AxiosInstance {\n    return this.httpClient;\n  }\n}\n\nexport const pncClient = new PncClient();\n"],"mappings":"AAAA,OAAOA,KAAP,MAAqC,OAArC;AAGA,OAAO,KAAKC,YAAZ,MAA8B,oBAA9B;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAEA;AACA;AACA;;AACA,MAAMC,SAAN,CAAgB;EAE6B;EAE3CC,WAAW,GAAG;IAAA,KAHNC,UAGM;IAAA,KAFPC,UAEO,GAFcC,IAAI,CAACC,MAAL,EAEd;;IAAA,KASNC,gBATM,GASa,MAAqB;MAC9C,MAAMJ,UAAU,GAAGL,KAAK,CAACU,MAAN,CAAa;QAC9BC,OAAO,EAAEV,YAAY,CAACW,SAAb;MADqB,CAAb,CAAnB;MAIAP,UAAU,CAACQ,YAAX,CAAwBC,OAAxB,CAAgCC,GAAhC,CAAqCC,MAAD,IAAY;QAAA;;QAC9C;QAEA,IAAId,eAAe,CAACe,mBAAhB,IAAuCf,eAAe,CAACgB,eAAhB,EAA3C,EAA8E;UAAA;;UAC5EF,MAAM,CAACG,OAAP,sBAAiBH,MAAM,CAACG,OAAxB,6DAAmC,EAAnC;UACAH,MAAM,CAACG,OAAP,CAAeC,aAAf,GAAgC,SAAD,GAAYlB,eAAe,CAACmB,QAAhB,EAA3C;QACD;QAED;AACN;AACA;AACA;AACA;;;QACM,sBAAIL,MAAM,CAACM,MAAX,2CAAI,eAAeC,SAAnB,EAA8B;UAC5B,MAAMA,SAAS,GAAGP,MAAM,CAACM,MAAP,CAAcC,SAAhC;;UACA,IAAIC,MAAM,CAACC,SAAP,CAAiB,CAACF,SAAlB,CAAJ,EAAkC;YAChCP,MAAM,CAACM,MAAP,CAAcC,SAAd,GAA0BC,MAAM,CAACD,SAAD,CAAN,GAAoB,CAA9C;UACD,CAFD,MAEO;YACL,MAAM,IAAIG,KAAJ,CAAW,sBAAqBH,SAAU,0BAA1C,CAAN;UACD;QACF;QAED;AACN;AACA;;;QACM,IAAI,oBAAAP,MAAM,CAACM,MAAP,oEAAeK,IAAf,MAAwB,MAA5B,EAAoC;UAClCX,MAAM,CAACM,MAAP,CAAcK,IAAd,GAAqB,EAArB;QACD;;QAED,OAAOX,MAAP;MACD,CA9BD;MA+BA,OAAOX,UAAP;IACD,CA9Ca;;IACZ,KAAKA,UAAL,GAAkB,KAAKI,gBAAL,EAAlB;EACD;EAED;AACF;AACA;AACA;AACA;;;EAwCE;;EAEA;AACF;AACA;EACSmB,aAAa,GAAkB;IACpC,OAAO,KAAKvB,UAAZ;EACD;;AA3Da;;AA8DhB,OAAO,MAAMwB,SAAS,GAAG,IAAI1B,SAAJ,EAAlB"},"metadata":{},"sourceType":"module"}