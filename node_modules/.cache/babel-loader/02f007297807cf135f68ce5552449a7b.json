{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/SimpleList/simple-list';\nimport { SimpleListContext } from './SimpleList';\nexport class SimpleListItem extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.ref = React.createRef();\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      children,\n      isCurrent,\n      isActive,\n      className,\n      component: Component,\n      componentClassName,\n      componentProps,\n      onClick,\n      type,\n      href,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      itemId\n    } = _a,\n          props = __rest(_a, [\"children\", \"isCurrent\", \"isActive\", \"className\", \"component\", \"componentClassName\", \"componentProps\", \"onClick\", \"type\", \"href\", \"itemId\"]);\n\n    return React.createElement(SimpleListContext.Consumer, null, _ref => {\n      let {\n        currentRef,\n        updateCurrentRef,\n        isControlled\n      } = _ref;\n      const isButton = Component === 'button';\n      const isCurrentItem = this.ref && currentRef && isControlled ? currentRef.current === this.ref.current : isActive || isCurrent;\n      const additionalComponentProps = isButton ? {\n        type\n      } : {\n        tabIndex: 0,\n        href\n      };\n      return React.createElement(\"li\", Object.assign({\n        className: css(className)\n      }, props), React.createElement(Component, Object.assign({\n        className: css(styles.simpleListItemLink, isCurrentItem && styles.modifiers.current, componentClassName),\n        onClick: evt => {\n          onClick(evt);\n          updateCurrentRef(this.ref, this.props);\n        },\n        ref: this.ref\n      }, componentProps, additionalComponentProps), children));\n    });\n  }\n\n}\nSimpleListItem.displayName = 'SimpleListItem';\nSimpleListItem.defaultProps = {\n  children: null,\n  className: '',\n  isActive: false,\n  isCurrent: false,\n  component: 'button',\n  componentClassName: '',\n  type: 'button',\n  href: '',\n  onClick: () => {}\n};","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,gEAAnB;AACA,SAASC,iBAAT,QAAkC,cAAlC;AA2BA,OAAM,MAAOC,cAAP,SAA8BJ,KAAK,CAACK,SAApC,CAAkE;EAAxEC;;IAEE,WAAMN,KAAK,CAACO,SAAN,EAAN;EAqED;;EAxDCC,MAAM;IACJ,MAAMC,KAcF,KAAKC,KAdT;IAAA,MAAM;MACJC,QADI;MAEJC,SAFI;MAGJC,QAHI;MAIJC,SAJI;MAKJC,SAAS,EAAEV,SALP;MAMJW,kBANI;MAOJC,cAPI;MAQJC,OARI;MASJC,IATI;MAUJC,IAVI;MAWJ;MACAC;IAZI,IAYEZ,EAZR;IAAA,MAaKC,KAAK,cAbJ,4IAaI,CAbV;;IAeA,OACEV,oBAACG,iBAAiB,CAACmB,QAAnB,EAA2B,IAA3B,EACG,QAAmD;MAAA,IAAlD;QAAEC,UAAF;QAAcC,gBAAd;QAAgCC;MAAhC,CAAkD;MAClD,MAAMC,QAAQ,GAAGrB,SAAS,KAAK,QAA/B;MACA,MAAMsB,aAAa,GACjB,KAAKC,GAAL,IAAYL,UAAZ,IAA0BE,YAA1B,GAAyCF,UAAU,CAACM,OAAX,KAAuB,KAAKD,GAAL,CAASC,OAAzE,GAAmFhB,QAAQ,IAAID,SADjG;MAGA,MAAMkB,wBAAwB,GAAGJ,QAAQ,GACrC;QACEP;MADF,CADqC,GAIrC;QACEY,QAAQ,EAAE,CADZ;QAEEX;MAFF,CAJJ;MASA,OACEpB;QAAIc,SAAS,EAAEb,GAAG,CAACa,SAAD;MAAlB,GAAmCJ,KAAnC,GACEV,oBAACK,SAAD,EAAU2B;QACRlB,SAAS,EAAEb,GAAG,CACZC,MAAM,CAAC+B,kBADK,EAEZN,aAAa,IAAIzB,MAAM,CAACgC,SAAP,CAAiBL,OAFtB,EAGZb,kBAHY,CADN;QAMRE,OAAO,EAAGiB,GAAD,IAA0B;UACjCjB,OAAO,CAACiB,GAAD,CAAP;UACAX,gBAAgB,CAAC,KAAKI,GAAN,EAAW,KAAKlB,KAAhB,CAAhB;QACD,CATO;QAURkB,GAAG,EAAE,KAAKA;MAVF,GAWJX,cAXI,EAYJa,wBAZI,CAAV,EAcGnB,QAdH,CADF,CADF;IAoBD,CAnCH,CADF;EAuCD;;AAtEqE;AAC/DP,6BAAc,gBAAd;AAEAA,8BAAoC;EACzCO,QAAQ,EAAE,IAD+B;EAEzCG,SAAS,EAAE,EAF8B;EAGzCD,QAAQ,EAAE,KAH+B;EAIzCD,SAAS,EAAE,KAJ8B;EAKzCG,SAAS,EAAE,QAL8B;EAMzCC,kBAAkB,EAAE,EANqB;EAOzCG,IAAI,EAAE,QAPmC;EAQzCC,IAAI,EAAE,EARmC;EASzCF,OAAO,EAAE,MAAK,CAAG;AATwB,CAApC","names":["React","css","styles","SimpleListContext","SimpleListItem","Component","constructor","createRef","render","_a","props","children","isCurrent","isActive","className","component","componentClassName","componentProps","onClick","type","href","itemId","Consumer","currentRef","updateCurrentRef","isControlled","isButton","isCurrentItem","ref","current","additionalComponentProps","tabIndex","Object","simpleListItemLink","modifiers","evt"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/SimpleList/SimpleListItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/SimpleList/simple-list';\nimport { SimpleListContext } from './SimpleList';\n\nexport interface SimpleListItemProps {\n  /** id for the item. */\n  itemId?: number | string;\n  /** Content rendered inside the SimpleList item */\n  children?: React.ReactNode;\n  /** Additional classes added to the SimpleList <li> */\n  className?: string;\n  /** Component type of the SimpleList item */\n  component?: 'button' | 'a';\n  /** Additional classes added to the SimpleList <a> or <button> */\n  componentClassName?: string;\n  /** Additional props added to the SimpleList <a> or <button> */\n  componentProps?: any;\n  /** Indicates if the link is current/highlighted */\n  isActive?: boolean;\n  /** @deprecated please use isActive instead */\n  isCurrent?: boolean;\n  /** OnClick callback for the SimpleList item */\n  onClick?: (event: React.MouseEvent | React.ChangeEvent) => void;\n  /** Type of button SimpleList item */\n  type?: 'button' | 'submit' | 'reset';\n  /** Default hyperlink location */\n  href?: string;\n}\n\nexport class SimpleListItem extends React.Component<SimpleListItemProps> {\n  static displayName = 'SimpleListItem';\n  ref = React.createRef<any>();\n  static defaultProps: SimpleListItemProps = {\n    children: null,\n    className: '',\n    isActive: false,\n    isCurrent: false,\n    component: 'button',\n    componentClassName: '',\n    type: 'button',\n    href: '',\n    onClick: () => {}\n  };\n\n  render() {\n    const {\n      children,\n      isCurrent,\n      isActive,\n      className,\n      component: Component,\n      componentClassName,\n      componentProps,\n      onClick,\n      type,\n      href,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      itemId,\n      ...props\n    } = this.props;\n    return (\n      <SimpleListContext.Consumer>\n        {({ currentRef, updateCurrentRef, isControlled }) => {\n          const isButton = Component === 'button';\n          const isCurrentItem =\n            this.ref && currentRef && isControlled ? currentRef.current === this.ref.current : isActive || isCurrent;\n\n          const additionalComponentProps = isButton\n            ? {\n                type\n              }\n            : {\n                tabIndex: 0,\n                href\n              };\n\n          return (\n            <li className={css(className)} {...props}>\n              <Component\n                className={css(\n                  styles.simpleListItemLink,\n                  isCurrentItem && styles.modifiers.current,\n                  componentClassName\n                )}\n                onClick={(evt: React.MouseEvent) => {\n                  onClick(evt);\n                  updateCurrentRef(this.ref, this.props);\n                }}\n                ref={this.ref}\n                {...componentProps}\n                {...additionalComponentProps}\n              >\n                {children}\n              </Component>\n            </li>\n          );\n        }}\n      </SimpleListContext.Consumer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}