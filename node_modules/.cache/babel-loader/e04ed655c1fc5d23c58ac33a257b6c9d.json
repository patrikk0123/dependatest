{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Divider/divider';\nimport { formatBreakpointMods } from '../../helpers/util';\nexport var DividerVariant;\n\n(function (DividerVariant) {\n  DividerVariant[\"hr\"] = \"hr\";\n  DividerVariant[\"li\"] = \"li\";\n  DividerVariant[\"div\"] = \"div\";\n})(DividerVariant || (DividerVariant = {}));\n\nexport var Divider = function Divider(_a) {\n  var className = _a.className,\n      _a$component = _a.component,\n      component = _a$component === void 0 ? DividerVariant.hr : _a$component,\n      _a$isVertical = _a.isVertical,\n      isVertical = _a$isVertical === void 0 ? false : _a$isVertical,\n      inset = _a.inset,\n      orientation = _a.orientation,\n      props = __rest(_a, [\"className\", \"component\", \"isVertical\", \"inset\", \"orientation\"]);\n\n  var Component = component;\n  return React.createElement(Component, Object.assign({\n    className: css(styles.divider, isVertical && styles.modifiers.vertical, formatBreakpointMods(inset, styles), formatBreakpointMods(orientation, styles), className)\n  }, component !== 'hr' && {\n    role: 'separator'\n  }, props));\n};\nDivider.displayName = 'Divider';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,yDAAnB;AACA,SAASC,oBAAT,QAAqC,oBAArC;AAEA,WAAYC,cAAZ;;AAAA,WAAYA,cAAZ,EAA0B;EACxBA;EACAA;EACAA;AACD,CAJD,EAAYA,cAAc,KAAdA,cAAc,MAA1B;;AAiCA,OAAO,IAAMC,OAAO,GAA0C,SAAjDA,OAAiD,CAACC,EAAD,EAO3C;MANjBC,YAIWD,GAJXC;qBAIWD,GAHXE;MAAAA,sCAAYJ,cAAc,CAACK;sBAGhBH,GAFXI;MAAAA,wCAAa;MACbC,QACWL,GADXK;MACAC,cAAWN,GAAXM;MACGC,QAAKC,WANqD,gEAMrD;;EAER,IAAMC,SAAS,GAAQP,SAAvB;EAEA,OACER,oBAACe,SAAD,EAAUC;IACRT,SAAS,EAAEN,GAAG,CACZC,MAAM,CAACe,OADK,EAEZP,UAAU,IAAIR,MAAM,CAACgB,SAAP,CAAiBC,QAFnB,EAGZhB,oBAAoB,CAACQ,KAAD,EAAQT,MAAR,CAHR,EAIZC,oBAAoB,CAACS,WAAD,EAAcV,MAAd,CAJR,EAKZK,SALY;EADN,GAQHC,SAAS,KAAK,IAAd,IAAsB;IAAEY,IAAI,EAAE;EAAR,CARnB,EASJP,KATI,CAAV,CADF;AAaD,CAvBM;AAwBPR,OAAO,CAACgB,WAAR,GAAsB,SAAtB","names":["React","css","styles","formatBreakpointMods","DividerVariant","Divider","_a","className","component","hr","isVertical","inset","orientation","props","__rest","Component","Object","divider","modifiers","vertical","role","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Divider/Divider.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Divider/divider';\nimport { formatBreakpointMods } from '../../helpers/util';\n\nexport enum DividerVariant {\n  hr = 'hr',\n  li = 'li',\n  div = 'div'\n}\n\nexport interface DividerProps extends React.HTMLProps<HTMLElement> {\n  /** Additional classes added to the divider */\n  className?: string;\n  /** The component type to use */\n  component?: 'hr' | 'li' | 'div';\n  /** @deprecated Use `orientation` instead. Flag to indicate the divider is vertical (must be in a flex layout) */\n  isVertical?: boolean;\n  /** Insets at various breakpoints. */\n  inset?: {\n    default?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\n    sm?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\n    md?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\n    lg?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\n    xl?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\n    '2xl'?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\n  };\n  /** Indicates how the divider will display at various breakpoints. Vertical divider must be in a flex layout. */\n  orientation?: {\n    default?: 'vertical' | 'horizontal';\n    sm?: 'vertical' | 'horizontal';\n    md?: 'vertical' | 'horizontal';\n    lg?: 'vertical' | 'horizontal';\n    xl?: 'vertical' | 'horizontal';\n    '2xl'?: 'vertical' | 'horizontal';\n  };\n}\n\nexport const Divider: React.FunctionComponent<DividerProps> = ({\n  className,\n  component = DividerVariant.hr,\n  isVertical = false,\n  inset,\n  orientation,\n  ...props\n}: DividerProps) => {\n  const Component: any = component;\n\n  return (\n    <Component\n      className={css(\n        styles.divider,\n        isVertical && styles.modifiers.vertical,\n        formatBreakpointMods(inset, styles),\n        formatBreakpointMods(orientation, styles),\n        className\n      )}\n      {...(component !== 'hr' && { role: 'separator' })}\n      {...props}\n    />\n  );\n};\nDivider.displayName = 'Divider';\n"]},"metadata":{},"sourceType":"module"}