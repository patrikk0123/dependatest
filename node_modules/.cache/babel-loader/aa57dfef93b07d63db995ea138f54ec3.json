{"ast":null,"code":"var _jsxFileName = \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/SearchSelect/SearchSelect.tsx\";\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchSelect = _ref => {\n  let {\n    attribute,\n    callback\n  } = _ref;\n  const [selectOptions, setSelectOptions] = useState([]);\n  const [isSelectOpen, setIsSelectOpen] = useState(false);\n  const [selected, setSelected] = useState();\n  const [loading, setLoading] = useState(false);\n  const timer = useRef();\n  const fetchData = useCallback(() => {\n    callback({\n      params: {\n        pageSize: 20\n      }\n    }).then(response => {\n      const data = response.data.content.map(obj => {\n        return {\n          value: obj[attribute]\n        };\n      }).map((option, index) => /*#__PURE__*/_jsxDEV(SelectOption, {\n        value: option.value\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 43\n      }, this));\n      setSelectOptions(data);\n      setLoading(false);\n    });\n  }, [callback, attribute]);\n  useEffect(() => {\n    setLoading(true);\n    fetchData();\n  }, [fetchData]);\n\n  const clearSelection = () => {\n    setSelected(null);\n    setIsSelectOpen(false);\n    setLoading(true);\n    callback({\n      params: {\n        pageSize: 20\n      }\n    }).then(response => {\n      const obj = response.data.content.map(obj => {\n        return {\n          value: obj[attribute]\n        };\n      }).map((option, index) => /*#__PURE__*/_jsxDEV(SelectOption, {\n        value: option.value\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 43\n      }, this));\n      setSelectOptions(obj);\n      setLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Select, {\n    variant: SelectVariant.typeahead,\n    onToggle: isOpen => {\n      setIsSelectOpen(isOpen);\n    },\n    onSelect: (event, selection, isPlaceholder) => {\n      if (isPlaceholder) clearSelection();else {\n        if (event) {\n          // setSelectOptions([<SelectOption key={0} value={selection} />]);\n          clearTimeout(timer === null || timer === void 0 ? void 0 : timer.current);\n          timer.current = setTimeout(() => {\n            callback({\n              params: {\n                pageSize: 20,\n                q: `${attribute}=like=\"%${selection}%\"`\n              }\n            }).then(response => {\n              setSelectOptions(response.data.content.map(obj => {\n                return {\n                  value: obj[attribute]\n                };\n              }).map((option, index) => /*#__PURE__*/_jsxDEV(SelectOption, {\n                value: option.value\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 55\n              }, this)));\n              setLoading(false);\n            });\n          }, 100);\n        }\n\n        setSelected(selection);\n        setIsSelectOpen(false);\n      }\n    },\n    onTypeaheadInputChanged: val => {\n      clearTimeout(timer === null || timer === void 0 ? void 0 : timer.current);\n      timer.current = setTimeout(() => {\n        setLoading(true);\n        callback({\n          params: {\n            pageSize: 20,\n            q: `${attribute}=like=\"%${val}%\"`\n          }\n        }).then(response => {\n          setSelectOptions(response.data.content.map(obj => {\n            return {\n              value: obj[attribute]\n            };\n          }).map((option, index) => /*#__PURE__*/_jsxDEV(SelectOption, {\n            value: option.value\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 51\n          }, this)));\n          setLoading(false);\n        });\n      }, 100);\n    },\n    isInputFilterPersisted: true,\n    isInputValuePersisted: true,\n    onClear: clearSelection,\n    onFilter: () => {\n      // filtering is done above\n      return selectOptions;\n    },\n    selections: selected,\n    isOpen: isSelectOpen,\n    hasInlineFilter: true,\n    children: selectOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["Select","SelectOption","SelectVariant","useCallback","useEffect","useRef","useState","SearchSelect","attribute","callback","selectOptions","setSelectOptions","isSelectOpen","setIsSelectOpen","selected","setSelected","loading","setLoading","timer","fetchData","params","pageSize","then","response","data","content","map","obj","value","option","index","clearSelection","typeahead","isOpen","event","selection","isPlaceholder","clearTimeout","current","setTimeout","q","val"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/SearchSelect/SearchSelect.tsx"],"sourcesContent":["import { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { useCallback, useEffect, useRef, useState } from 'react';\n\ninterface ISearchSelect {\n  attribute: string;\n  callback: Function;\n}\n\nexport const SearchSelect = ({ attribute, callback }: ISearchSelect) => {\n  const [selectOptions, setSelectOptions] = useState<any>([]);\n  const [isSelectOpen, setIsSelectOpen] = useState<boolean>(false);\n  const [selected, setSelected] = useState<any>();\n  const [loading, setLoading] = useState<boolean>(false);\n  const timer = useRef<any>();\n\n  const fetchData = useCallback(() => {\n    callback({ params: { pageSize: 20 } }).then((response: any) => {\n      const data = response.data.content\n        .map((obj: any) => {\n          return {\n            value: obj[attribute],\n          };\n        })\n        .map((option: any, index: any) => <SelectOption key={index} value={option.value} />);\n      setSelectOptions(data);\n      setLoading(false);\n    });\n  }, [callback, attribute]);\n\n  useEffect(() => {\n    setLoading(true);\n    fetchData();\n  }, [fetchData]);\n\n  const clearSelection = () => {\n    setSelected(null);\n    setIsSelectOpen(false);\n    setLoading(true);\n    callback({ params: { pageSize: 20 } }).then((response: any) => {\n      const obj = response.data.content\n        .map((obj: any) => {\n          return {\n            value: obj[attribute],\n          };\n        })\n        .map((option: any, index: any) => <SelectOption key={index} value={option.value} />);\n      setSelectOptions(obj);\n      setLoading(false);\n    });\n  };\n\n  return (\n    <Select\n      variant={SelectVariant.typeahead}\n      onToggle={(isOpen) => {\n        setIsSelectOpen(isOpen);\n      }}\n      onSelect={(event, selection, isPlaceholder) => {\n        if (isPlaceholder) clearSelection();\n        else {\n          if (event) {\n            // setSelectOptions([<SelectOption key={0} value={selection} />]);\n            clearTimeout(timer?.current);\n            timer.current = setTimeout(() => {\n              callback({ params: { pageSize: 20, q: `${attribute}=like=\"%${selection}%\"` } }).then((response: any) => {\n                setSelectOptions(\n                  response.data.content\n                    .map((obj: any) => {\n                      return {\n                        value: obj[attribute],\n                      };\n                    })\n                    .map((option: any, index: any) => <SelectOption key={index} value={option.value} />)\n                );\n                setLoading(false);\n              });\n            }, 100);\n          }\n          setSelected(selection);\n          setIsSelectOpen(false);\n        }\n      }}\n      onTypeaheadInputChanged={(val: string) => {\n        clearTimeout(timer?.current);\n        timer.current = setTimeout(() => {\n          setLoading(true);\n          callback({ params: { pageSize: 20, q: `${attribute}=like=\"%${val}%\"` } }).then((response: any) => {\n            setSelectOptions(\n              response.data.content\n                .map((obj: any) => {\n                  return {\n                    value: obj[attribute],\n                  };\n                })\n                .map((option: any, index: any) => <SelectOption key={index} value={option.value} />)\n            );\n            setLoading(false);\n          });\n        }, 100);\n      }}\n      isInputFilterPersisted={true}\n      isInputValuePersisted={true}\n      onClear={clearSelection}\n      onFilter={() => {\n        // filtering is done above\n        return selectOptions;\n      }}\n      selections={selected}\n      isOpen={isSelectOpen}\n      hasInlineFilter={true}\n    >\n      {selectOptions}\n    </Select>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}