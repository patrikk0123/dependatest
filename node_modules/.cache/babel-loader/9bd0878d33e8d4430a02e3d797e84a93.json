{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { css } from '@patternfly/react-styles';\nimport { PageContextConsumer } from './Page';\nexport const pageSidebarContextDefaults = {\n  isNavOpen: true\n};\nexport const PageSidebarContext = React.createContext(pageSidebarContextDefaults);\nexport const PageSidebar = _a => {\n  var {\n    className = '',\n    nav,\n    isNavOpen = true,\n    theme = 'dark'\n  } = _a,\n      props = __rest(_a, [\"className\", \"nav\", \"isNavOpen\", \"theme\"]);\n\n  return React.createElement(PageContextConsumer, null, _ref => {\n    let {\n      isManagedSidebar,\n      isNavOpen: managedIsNavOpen\n    } = _ref;\n    const navOpen = isManagedSidebar ? managedIsNavOpen : isNavOpen;\n    return React.createElement(\"div\", Object.assign({\n      id: \"page-sidebar\",\n      className: css(styles.pageSidebar, theme === 'light' && styles.modifiers.light, navOpen && styles.modifiers.expanded, !navOpen && styles.modifiers.collapsed, className),\n      \"aria-hidden\": !navOpen\n    }, props), React.createElement(\"div\", {\n      className: \"pf-topology-side-bar__body\"\n    }, React.createElement(PageSidebarContext.Provider, {\n      value: {\n        isNavOpen: navOpen\n      }\n    }, nav)));\n  });\n};\nPageSidebar.displayName = 'PageSidebar';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,mDAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,SAASC,mBAAT,QAAoC,QAApC;AAqBA,OAAO,MAAMC,0BAA0B,GAA4B;EACjEC,SAAS,EAAE;AADsD,CAA5D;AAGP,OAAO,MAAMC,kBAAkB,GAAGN,KAAK,CAACO,aAAN,CAAsDH,0BAAtD,CAA3B;AAEP,OAAO,MAAMI,WAAW,GAA+CC,EAAD,IAM/C;MANgD;IACrEC,SAAS,GAAG,EADyD;IAErEC,GAFqE;IAGrEN,SAAS,GAAG,IAHyD;IAIrEO,KAAK,GAAG;EAJ6D,IAIvDH;MACXI,KAAK,cAL6D,0CAK7D;;EACc,OACtBb,oBAACG,mBAAD,EAAoB,IAApB,EACG,QAAwE;IAAA,IAAvE;MAAEW,gBAAF;MAAoBT,SAAS,EAAEU;IAA/B,CAAuE;IACvE,MAAMC,OAAO,GAAGF,gBAAgB,GAAGC,gBAAH,GAAsBV,SAAtD;IAEA,OACEL;MACEiB,EAAE,EAAC,cADL;MAEEP,SAAS,EAAER,GAAG,CACZD,MAAM,CAACiB,WADK,EAEZN,KAAK,KAAK,OAAV,IAAqBX,MAAM,CAACkB,SAAP,CAAiBC,KAF1B,EAGZJ,OAAO,IAAIf,MAAM,CAACkB,SAAP,CAAiBE,QAHhB,EAIZ,CAACL,OAAD,IAAYf,MAAM,CAACkB,SAAP,CAAiBG,SAJjB,EAKZZ,SALY,CAFhB;MAQG,eACY,CAACM;IAThB,GAUMH,KAVN,GAYEb;MAAKU,SAAS,EAAC;IAAf,GACEV,oBAACM,kBAAkB,CAACiB,QAApB,EAA4B;MAACC,KAAK,EAAE;QAAEnB,SAAS,EAAEW;MAAb;IAAR,CAA5B,EAA6DL,GAA7D,CADF,CAZF,CADF;EAkBD,CAtBH,CADsB;AAyBvB,CA/BM;AAgCPH,WAAW,CAACiB,WAAZ,GAA0B,aAA1B","names":["React","styles","css","PageContextConsumer","pageSidebarContextDefaults","isNavOpen","PageSidebarContext","createContext","PageSidebar","_a","className","nav","theme","props","isManagedSidebar","managedIsNavOpen","navOpen","id","pageSidebar","modifiers","light","expanded","collapsed","Provider","value","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Page/PageSidebar.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { css } from '@patternfly/react-styles';\nimport { PageContextConsumer } from './Page';\n\nexport interface PageSidebarProps extends React.HTMLProps<HTMLDivElement> {\n  /** Additional classes added to the page sidebar */\n  className?: string;\n  /** Component to render the side navigation (e.g. <Nav /> */\n  nav?: React.ReactNode;\n  /**\n   * If true, manages the sidebar open/close state and there is no need to pass the isNavOpen boolean into\n   * the sidebar component or add a callback onNavToggle function into the PageHeader component\n   */\n  isManagedSidebar?: boolean;\n  /** Programmatically manage if the side nav is shown, if isManagedSidebar is set to true in the Page component, this prop is managed */\n  isNavOpen?: boolean;\n  /** Indicates the color scheme of the sidebar */\n  theme?: 'dark' | 'light';\n}\n\nexport interface PageSidebarContextProps {\n  isNavOpen: boolean;\n}\nexport const pageSidebarContextDefaults: PageSidebarContextProps = {\n  isNavOpen: true\n};\nexport const PageSidebarContext = React.createContext<Partial<PageSidebarContextProps>>(pageSidebarContextDefaults);\n\nexport const PageSidebar: React.FunctionComponent<PageSidebarProps> = ({\n  className = '',\n  nav,\n  isNavOpen = true,\n  theme = 'dark',\n  ...props\n}: PageSidebarProps) => (\n  <PageContextConsumer>\n    {({ isManagedSidebar, isNavOpen: managedIsNavOpen }: PageSidebarProps) => {\n      const navOpen = isManagedSidebar ? managedIsNavOpen : isNavOpen;\n\n      return (\n        <div\n          id=\"page-sidebar\"\n          className={css(\n            styles.pageSidebar,\n            theme === 'light' && styles.modifiers.light,\n            navOpen && styles.modifiers.expanded,\n            !navOpen && styles.modifiers.collapsed,\n            className\n          )}\n          aria-hidden={!navOpen}\n          {...props}\n        >\n          <div className=\"pf-topology-side-bar__body\">\n            <PageSidebarContext.Provider value={{ isNavOpen: navOpen }}>{nav}</PageSidebarContext.Provider>\n          </div>\n        </div>\n      );\n    }}\n  </PageContextConsumer>\n);\nPageSidebar.displayName = 'PageSidebar';\n"]},"metadata":{},"sourceType":"module"}