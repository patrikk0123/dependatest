{"ast":null,"code":"/**\n * Generic function for using unified date.\n *\n * Long version additionally also includes the time.\n *\n * @param date - Date (or string representing a date) to display\n * @param includeDate - Whether the date should be displayed, defaults to true\n * @param includeTime - Whether the time should be displayed, defaults to true\n */\nexport const createDateTime = _ref => {\n  let {\n    date,\n    includeDate = true,\n    includeTime = true\n  } = _ref;\n  return new Intl.DateTimeFormat('en-US', { ...(includeDate && {\n      dateStyle: 'medium'\n    }),\n    ...(includeTime && {\n      timeStyle: 'medium'\n    })\n  }).format(typeof date === 'string' ? new Date(date) : date);\n};\nObject.defineProperty(Object.prototype, 'copyAndSetSameValue', {\n  value: function () {\n    return true;\n  },\n  enumerable: false\n});\nconst initFieldStates = { ...initValues\n};\nObject.keys(initFieldStates).forEach(key => {\n  initFieldStates[key] = 'default';\n});","map":{"version":3,"names":["createDateTime","date","includeDate","includeTime","Intl","DateTimeFormat","dateStyle","timeStyle","format","Date","Object","defineProperty","prototype","value","enumerable","initFieldStates","initValues","keys","forEach","key"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/utils/utils.ts"],"sourcesContent":["/**\n * Generic function for using unified date.\n *\n * Long version additionally also includes the time.\n *\n * @param date - Date (or string representing a date) to display\n * @param includeDate - Whether the date should be displayed, defaults to true\n * @param includeTime - Whether the time should be displayed, defaults to true\n */\n\ninterface ICreateDateTimeObject {\n  date: Date | string;\n  includeDate?: boolean;\n  includeTime?: boolean;\n}\n\nexport const createDateTime = ({ date, includeDate = true, includeTime = true }: ICreateDateTimeObject): string =>\n  new Intl.DateTimeFormat('en-US', {\n    ...(includeDate && { dateStyle: 'medium' }),\n    ...(includeTime && { timeStyle: 'medium' }),\n  }).format(typeof date === 'string' ? new Date(date) : date);\n\nObject.defineProperty(Object.prototype, 'copyAndSetSameValue', {\n  value: function () {\n    return true;\n  },\n  enumerable: false,\n});\n\nconst initFieldStates = { ...initValues };\nObject.keys(initFieldStates).forEach((key) => {\n  initFieldStates[key] = 'default';\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA,OAAO,MAAMA,cAAc,GAAG;EAAA,IAAC;IAAEC,IAAF;IAAQC,WAAW,GAAG,IAAtB;IAA4BC,WAAW,GAAG;EAA1C,CAAD;EAAA,OAC5B,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC,EAC/B,IAAIH,WAAW,IAAI;MAAEI,SAAS,EAAE;IAAb,CAAnB,CAD+B;IAE/B,IAAIH,WAAW,IAAI;MAAEI,SAAS,EAAE;IAAb,CAAnB;EAF+B,CAAjC,EAGGC,MAHH,CAGU,OAAOP,IAAP,KAAgB,QAAhB,GAA2B,IAAIQ,IAAJ,CAASR,IAAT,CAA3B,GAA4CA,IAHtD,CAD4B;AAAA,CAAvB;AAMPS,MAAM,CAACC,cAAP,CAAsBD,MAAM,CAACE,SAA7B,EAAwC,qBAAxC,EAA+D;EAC7DC,KAAK,EAAE,YAAY;IACjB,OAAO,IAAP;EACD,CAH4D;EAI7DC,UAAU,EAAE;AAJiD,CAA/D;AAOA,MAAMC,eAAe,GAAG,EAAE,GAAGC;AAAL,CAAxB;AACAN,MAAM,CAACO,IAAP,CAAYF,eAAZ,EAA6BG,OAA7B,CAAsCC,GAAD,IAAS;EAC5CJ,eAAe,CAACI,GAAD,CAAf,GAAuB,SAAvB;AACD,CAFD"},"metadata":{},"sourceType":"module"}