{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Alert/alert';\nimport accessibleStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { AlertIcon } from './AlertIcon';\nimport { capitalize, useOUIAProps } from '../../helpers';\nimport { AlertContext } from './AlertContext';\nimport maxLines from '@patternfly/react-tokens/dist/esm/c_alert__title_max_lines';\nimport { Tooltip } from '../Tooltip';\nimport { AlertToggleExpandButton } from './AlertToggleExpandButton';\nexport var AlertVariant;\n\n(function (AlertVariant) {\n  AlertVariant[\"success\"] = \"success\";\n  AlertVariant[\"danger\"] = \"danger\";\n  AlertVariant[\"warning\"] = \"warning\";\n  AlertVariant[\"info\"] = \"info\";\n  AlertVariant[\"default\"] = \"default\";\n})(AlertVariant || (AlertVariant = {}));\n\nexport const Alert = _a => {\n  var {\n    variant = AlertVariant.default,\n    isInline = false,\n    isPlain = false,\n    isLiveRegion = false,\n    variantLabel = `${capitalize(variant)} alert:`,\n    'aria-label': ariaLabel = `${capitalize(variant)} Alert`,\n    actionClose,\n    actionLinks,\n    title,\n    titleHeadingLevel: TitleHeadingLevel = 'h4',\n    children = '',\n    className = '',\n    ouiaId,\n    ouiaSafe = true,\n    timeout = false,\n    timeoutAnimation = 3000,\n    onTimeout = () => {},\n    truncateTitle = 0,\n    tooltipPosition,\n    customIcon,\n    isExpandable = false,\n    toggleAriaLabel = `${capitalize(variant)} alert details`,\n    onMouseEnter = () => {},\n    onMouseLeave = () => {}\n  } = _a,\n      props = __rest(_a, [\"variant\", \"isInline\", \"isPlain\", \"isLiveRegion\", \"variantLabel\", 'aria-label', \"actionClose\", \"actionLinks\", \"title\", \"titleHeadingLevel\", \"children\", \"className\", \"ouiaId\", \"ouiaSafe\", \"timeout\", \"timeoutAnimation\", \"onTimeout\", \"truncateTitle\", \"tooltipPosition\", \"customIcon\", \"isExpandable\", \"toggleAriaLabel\", \"onMouseEnter\", \"onMouseLeave\"]);\n\n  const ouiaProps = useOUIAProps(Alert.displayName, ouiaId, ouiaSafe, variant);\n  const getHeadingContent = React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    className: css(accessibleStyles.screenReader)\n  }, variantLabel), title);\n  const titleRef = React.useRef(null);\n  const divRef = React.useRef();\n  const [isTooltipVisible, setIsTooltipVisible] = useState(false);\n  React.useEffect(() => {\n    if (!titleRef.current || !truncateTitle) {\n      return;\n    }\n\n    titleRef.current.style.setProperty(maxLines.name, truncateTitle.toString());\n    const showTooltip = titleRef.current && titleRef.current.offsetHeight < titleRef.current.scrollHeight;\n\n    if (isTooltipVisible !== showTooltip) {\n      setIsTooltipVisible(showTooltip);\n    }\n  }, [titleRef, truncateTitle, isTooltipVisible]);\n  const [timedOut, setTimedOut] = useState(false);\n  const [timedOutAnimation, setTimedOutAnimation] = useState(true);\n  const [isMouseOver, setIsMouseOver] = useState();\n  const [containsFocus, setContainsFocus] = useState();\n  const dismissed = timedOut && timedOutAnimation && !isMouseOver && !containsFocus;\n  React.useEffect(() => {\n    timeout = timeout === true ? 8000 : Number(timeout);\n\n    if (timeout > 0) {\n      const timer = setTimeout(() => setTimedOut(true), timeout);\n      return () => clearTimeout(timer);\n    }\n  }, []);\n  React.useEffect(() => {\n    const onDocumentFocus = () => {\n      if (divRef.current) {\n        if (divRef.current.contains(document.activeElement)) {\n          setContainsFocus(true);\n          setTimedOutAnimation(false);\n        } else if (containsFocus) {\n          setContainsFocus(false);\n        }\n      }\n    };\n\n    document.addEventListener('focus', onDocumentFocus, true);\n    return () => document.removeEventListener('focus', onDocumentFocus, true);\n  }, [containsFocus]);\n  React.useEffect(() => {\n    if (containsFocus === false || isMouseOver === false) {\n      const timer = setTimeout(() => setTimedOutAnimation(true), timeoutAnimation);\n      return () => clearTimeout(timer);\n    }\n  }, [containsFocus, isMouseOver]);\n  React.useEffect(() => {\n    dismissed && onTimeout();\n  }, [dismissed]);\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const onToggleExpand = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  const myOnMouseEnter = ev => {\n    setIsMouseOver(true);\n    setTimedOutAnimation(false);\n    onMouseEnter(ev);\n  };\n\n  const myOnMouseLeave = ev => {\n    setIsMouseOver(false);\n    onMouseLeave(ev);\n  };\n\n  if (dismissed) {\n    return null;\n  }\n\n  const Title = React.createElement(TitleHeadingLevel, Object.assign({}, isTooltipVisible && {\n    tabIndex: 0\n  }, {\n    ref: titleRef,\n    className: css(styles.alertTitle, truncateTitle && styles.modifiers.truncate)\n  }), getHeadingContent);\n  return React.createElement(\"div\", Object.assign({\n    ref: divRef,\n    className: css(styles.alert, isInline && styles.modifiers.inline, isPlain && styles.modifiers.plain, isExpandable && styles.modifiers.expandable, isExpanded && styles.modifiers.expanded, styles.modifiers[variant], className),\n    \"aria-label\": ariaLabel\n  }, ouiaProps, isLiveRegion && {\n    'aria-live': 'polite',\n    'aria-atomic': 'false'\n  }, {\n    onMouseEnter: myOnMouseEnter,\n    onMouseLeave: myOnMouseLeave\n  }, props), isExpandable && React.createElement(AlertContext.Provider, {\n    value: {\n      title,\n      variantLabel\n    }\n  }, React.createElement(\"div\", {\n    className: css(styles.alertToggle)\n  }, React.createElement(AlertToggleExpandButton, {\n    isExpanded: isExpanded,\n    onToggleExpand: onToggleExpand,\n    \"aria-label\": toggleAriaLabel\n  }))), React.createElement(AlertIcon, {\n    variant: variant,\n    customIcon: customIcon\n  }), isTooltipVisible ? React.createElement(Tooltip, {\n    content: getHeadingContent,\n    position: tooltipPosition\n  }, Title) : Title, actionClose && React.createElement(AlertContext.Provider, {\n    value: {\n      title,\n      variantLabel\n    }\n  }, React.createElement(\"div\", {\n    className: css(styles.alertAction)\n  }, actionClose)), children && (!isExpandable || isExpandable && isExpanded) && React.createElement(\"div\", {\n    className: css(styles.alertDescription)\n  }, children), actionLinks && React.createElement(\"div\", {\n    className: css(styles.alertActionGroup)\n  }, actionLinks));\n};\nAlert.displayName = 'Alert';","map":{"version":3,"mappings":"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","names":["React","useState","css","styles","accessibleStyles","AlertIcon","capitalize","useOUIAProps","AlertContext","maxLines","Tooltip","AlertToggleExpandButton","AlertVariant","Alert","_a","variant","default","isInline","isPlain","isLiveRegion","variantLabel","ariaLabel","actionClose","actionLinks","title","titleHeadingLevel","TitleHeadingLevel","children","className","ouiaId","ouiaSafe","timeout","timeoutAnimation","onTimeout","truncateTitle","tooltipPosition","customIcon","isExpandable","toggleAriaLabel","onMouseEnter","onMouseLeave","props","ouiaProps","displayName","getHeadingContent","Fragment","screenReader","titleRef","useRef","divRef","isTooltipVisible","setIsTooltipVisible","useEffect","current","style","setProperty","name","toString","showTooltip","offsetHeight","scrollHeight","timedOut","setTimedOut","timedOutAnimation","setTimedOutAnimation","isMouseOver","setIsMouseOver","containsFocus","setContainsFocus","dismissed","Number","timer","setTimeout","clearTimeout","onDocumentFocus","contains","document","activeElement","addEventListener","removeEventListener","isExpanded","setIsExpanded","onToggleExpand","myOnMouseEnter","ev","myOnMouseLeave","Title","Object","tabIndex","ref","alertTitle","modifiers","truncate","alert","inline","plain","expandable","expanded","Provider","value","alertToggle","content","position","alertAction","alertDescription","alertActionGroup"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Alert/Alert.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Alert/alert';\nimport accessibleStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { AlertIcon } from './AlertIcon';\nimport { capitalize, useOUIAProps, OUIAProps } from '../../helpers';\nimport { AlertContext } from './AlertContext';\nimport maxLines from '@patternfly/react-tokens/dist/esm/c_alert__title_max_lines';\nimport { Tooltip, TooltipPosition } from '../Tooltip';\nimport { AlertToggleExpandButton } from './AlertToggleExpandButton';\n\nexport enum AlertVariant {\n  success = 'success',\n  danger = 'danger',\n  warning = 'warning',\n  info = 'info',\n  default = 'default'\n}\n\nexport interface AlertProps extends Omit<React.HTMLProps<HTMLDivElement>, 'action' | 'title'>, OUIAProps {\n  /** Adds alert variant styles  */\n  variant?: 'success' | 'danger' | 'warning' | 'info' | 'default';\n  /** Flag to indicate if the alert is inline */\n  isInline?: boolean;\n  /** Flag to indicate if the alert is plain */\n  isPlain?: boolean;\n  /** Title of the alert  */\n  title: React.ReactNode;\n  /** Sets the heading level to use for the alert title. Default is h4. */\n  titleHeadingLevel?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n  /** Close button; use the alertActionCloseButton component  */\n  actionClose?: React.ReactNode;\n  /** Action links; use a single alertActionLink component or multiple wrapped in an array or React.Fragment */\n  actionLinks?: React.ReactNode;\n  /** Content rendered inside the alert */\n  children?: React.ReactNode;\n  /** Additional classes added to the alert  */\n  className?: string;\n  /** Adds accessible text to the alert */\n  'aria-label'?: string;\n  /** Variant label text for screen readers */\n  variantLabel?: string;\n  /** Flag to indicate if the alert is in a live region */\n  isLiveRegion?: boolean;\n  /** If set to true, the timeout is 8000 milliseconds. If a number is provided, alert will be dismissed after that amount of time in milliseconds. */\n  timeout?: number | boolean;\n  /** If the user hovers over the alert and `timeout` expires, this is how long to wait before finally dismissing the alert */\n  timeoutAnimation?: number;\n  /** Function to be executed on alert timeout. Relevant when the timeout prop is set */\n  onTimeout?: () => void;\n  /** Truncate title to number of lines */\n  truncateTitle?: number;\n  /** Position of the tooltip which is displayed if text is truncated */\n  tooltipPosition?:\n    | TooltipPosition\n    | 'auto'\n    | 'top'\n    | 'bottom'\n    | 'left'\n    | 'right'\n    | 'top-start'\n    | 'top-end'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'left-start'\n    | 'left-end'\n    | 'right-start'\n    | 'right-end';\n  /** Set a custom icon to the alert. If not set the icon is set according to the variant */\n  customIcon?: React.ReactNode;\n  /** Flag indicating that the alert is expandable */\n  isExpandable?: boolean;\n  /** Adds accessible text to the alert Toggle */\n  toggleAriaLabel?: string;\n}\n\nexport const Alert: React.FunctionComponent<AlertProps> = ({\n  variant = AlertVariant.default,\n  isInline = false,\n  isPlain = false,\n  isLiveRegion = false,\n  variantLabel = `${capitalize(variant)} alert:`,\n  'aria-label': ariaLabel = `${capitalize(variant)} Alert`,\n  actionClose,\n  actionLinks,\n  title,\n  titleHeadingLevel: TitleHeadingLevel = 'h4',\n  children = '',\n  className = '',\n  ouiaId,\n  ouiaSafe = true,\n  timeout = false,\n  timeoutAnimation = 3000,\n  onTimeout = () => {},\n  truncateTitle = 0,\n  tooltipPosition,\n  customIcon,\n  isExpandable = false,\n  toggleAriaLabel = `${capitalize(variant)} alert details`,\n  onMouseEnter = () => {},\n  onMouseLeave = () => {},\n  ...props\n}: AlertProps) => {\n  const ouiaProps = useOUIAProps(Alert.displayName, ouiaId, ouiaSafe, variant);\n  const getHeadingContent = (\n    <React.Fragment>\n      <span className={css(accessibleStyles.screenReader)}>{variantLabel}</span>\n      {title}\n    </React.Fragment>\n  );\n\n  const titleRef = React.useRef(null);\n  const divRef = React.useRef<HTMLDivElement>();\n  const [isTooltipVisible, setIsTooltipVisible] = useState(false);\n  React.useEffect(() => {\n    if (!titleRef.current || !truncateTitle) {\n      return;\n    }\n    titleRef.current.style.setProperty(maxLines.name, truncateTitle.toString());\n    const showTooltip = titleRef.current && titleRef.current.offsetHeight < titleRef.current.scrollHeight;\n    if (isTooltipVisible !== showTooltip) {\n      setIsTooltipVisible(showTooltip);\n    }\n  }, [titleRef, truncateTitle, isTooltipVisible]);\n\n  const [timedOut, setTimedOut] = useState(false);\n  const [timedOutAnimation, setTimedOutAnimation] = useState(true);\n  const [isMouseOver, setIsMouseOver] = useState<boolean | undefined>();\n  const [containsFocus, setContainsFocus] = useState<boolean | undefined>();\n  const dismissed = timedOut && timedOutAnimation && !isMouseOver && !containsFocus;\n  React.useEffect(() => {\n    timeout = timeout === true ? 8000 : Number(timeout);\n    if (timeout > 0) {\n      const timer = setTimeout(() => setTimedOut(true), timeout);\n      return () => clearTimeout(timer);\n    }\n  }, []);\n  React.useEffect(() => {\n    const onDocumentFocus = () => {\n      if (divRef.current) {\n        if (divRef.current.contains(document.activeElement)) {\n          setContainsFocus(true);\n          setTimedOutAnimation(false);\n        } else if (containsFocus) {\n          setContainsFocus(false);\n        }\n      }\n    };\n\n    document.addEventListener('focus', onDocumentFocus, true);\n\n    return () => document.removeEventListener('focus', onDocumentFocus, true);\n  }, [containsFocus]);\n  React.useEffect(() => {\n    if (containsFocus === false || isMouseOver === false) {\n      const timer = setTimeout(() => setTimedOutAnimation(true), timeoutAnimation);\n      return () => clearTimeout(timer);\n    }\n  }, [containsFocus, isMouseOver]);\n  React.useEffect(() => {\n    dismissed && onTimeout();\n  }, [dismissed]);\n\n  const [isExpanded, setIsExpanded] = useState(false);\n  const onToggleExpand = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  const myOnMouseEnter = (ev: React.MouseEvent<HTMLDivElement>) => {\n    setIsMouseOver(true);\n    setTimedOutAnimation(false);\n    onMouseEnter(ev);\n  };\n\n  const myOnMouseLeave = (ev: React.MouseEvent<HTMLDivElement>) => {\n    setIsMouseOver(false);\n    onMouseLeave(ev);\n  };\n\n  if (dismissed) {\n    return null;\n  }\n  const Title = (\n    <TitleHeadingLevel\n      {...(isTooltipVisible && { tabIndex: 0 })}\n      ref={titleRef}\n      className={css(styles.alertTitle, truncateTitle && styles.modifiers.truncate)}\n    >\n      {getHeadingContent}\n    </TitleHeadingLevel>\n  );\n\n  return (\n    <div\n      ref={divRef}\n      className={css(\n        styles.alert,\n        isInline && styles.modifiers.inline,\n        isPlain && styles.modifiers.plain,\n        isExpandable && styles.modifiers.expandable,\n        isExpanded && styles.modifiers.expanded,\n        styles.modifiers[variant as 'success' | 'danger' | 'warning' | 'info'],\n        className\n      )}\n      aria-label={ariaLabel}\n      {...ouiaProps}\n      {...(isLiveRegion && {\n        'aria-live': 'polite',\n        'aria-atomic': 'false'\n      })}\n      onMouseEnter={myOnMouseEnter}\n      onMouseLeave={myOnMouseLeave}\n      {...props}\n    >\n      {isExpandable && (\n        <AlertContext.Provider value={{ title, variantLabel }}>\n          <div className={css(styles.alertToggle)}>\n            <AlertToggleExpandButton\n              isExpanded={isExpanded}\n              onToggleExpand={onToggleExpand}\n              aria-label={toggleAriaLabel}\n            />\n          </div>\n        </AlertContext.Provider>\n      )}\n      <AlertIcon variant={variant} customIcon={customIcon} />\n      {isTooltipVisible ? (\n        <Tooltip content={getHeadingContent} position={tooltipPosition}>\n          {Title}\n        </Tooltip>\n      ) : (\n        Title\n      )}\n      {actionClose && (\n        <AlertContext.Provider value={{ title, variantLabel }}>\n          <div className={css(styles.alertAction)}>{actionClose}</div>\n        </AlertContext.Provider>\n      )}\n      {children && (!isExpandable || (isExpandable && isExpanded)) && (\n        <div className={css(styles.alertDescription)}>{children}</div>\n      )}\n      {actionLinks && <div className={css(styles.alertActionGroup)}>{actionLinks}</div>}\n    </div>\n  );\n};\nAlert.displayName = 'Alert';\n"]},"metadata":{},"sourceType":"module"}