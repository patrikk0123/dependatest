{"ast":null,"code":"// @ts-nocheck\n\n/* :: import type { Window } from '../types'; */\n\n/* :: declare function getWindow(node: Node | Window): Window; */\n\n/**\n * @param node\n */\nexport default function getWindow(node) {\n  if (node.toString() !== '[object Window]') {\n    const ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView : window;\n  }\n\n  return node;\n}","map":{"version":3,"mappings":"AAAA;;AAEA;;AAEA;;AAEA;;;AAGA,eAAc,SAAUA,SAAV,CAAoBC,IAApB,EAAwB;EACpC,IAAIA,IAAI,CAACC,QAAL,OAAoB,iBAAxB,EAA2C;IACzC,MAAMC,aAAa,GAAGF,IAAI,CAACE,aAA3B;IACA,OAAOA,aAAa,GAAGA,aAAa,CAACC,WAAjB,GAA+BC,MAAnD;EACD;;EAED,OAAOJ,IAAP;AACD","names":["getWindow","node","toString","ownerDocument","defaultView","window"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/dom-utils/getWindow.ts"],"sourcesContent":["// @ts-nocheck\n\n/* :: import type { Window } from '../types'; */\n\n/* :: declare function getWindow(node: Node | Window): Window; */\n\n/**\n * @param node\n */\nexport default function getWindow(node) {\n  if (node.toString() !== '[object Window]') {\n    const ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView : window;\n  }\n\n  return node;\n}\n"]},"metadata":{},"sourceType":"module"}