{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nimport { MenuContext } from './MenuContext';\nimport { canUseDOM } from '../../helpers/util';\nimport { KeyboardHandler } from '../../helpers';\n\nclass MenuBase extends React.Component {\n  constructor(props) {\n    super(props);\n    this.menuRef = React.createRef();\n    this.activeMenu = null;\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(Menu.displayName),\n      searchInputValue: '',\n      transitionMoveTarget: null,\n      flyoutRef: null,\n      disableHover: false\n    };\n\n    this.handleDrilldownTransition = event => {\n      const current = this.menuRef.current;\n\n      if (!current || current !== event.target.closest('.pf-c-menu') && !Array.from(current.getElementsByClassName('pf-c-menu')).includes(event.target.closest('.pf-c-menu'))) {\n        return;\n      }\n\n      if (this.state.transitionMoveTarget) {\n        this.state.transitionMoveTarget.focus();\n        this.setState({\n          transitionMoveTarget: null\n        });\n      } else {\n        const nextMenu = current.querySelector('#' + this.props.activeMenu) || current || null;\n        const nextTarget = Array.from(nextMenu.getElementsByTagName('UL')[0].children).filter(el => !(el.classList.contains('pf-m-disabled') || el.classList.contains('pf-c-divider')))[0].firstChild;\n        nextTarget.focus();\n        nextTarget.tabIndex = 0;\n      }\n    };\n\n    this.handleExtraKeys = event => {\n      const isDrilldown = this.props.containsDrilldown;\n      const activeElement = document.activeElement;\n\n      if (event.target.closest('.pf-c-menu') !== this.activeMenu && !event.target.classList.contains('pf-c-breadcrumb__link')) {\n        this.activeMenu = event.target.closest('.pf-c-menu');\n        this.setState({\n          disableHover: true\n        });\n      }\n\n      if (event.target.tagName === 'INPUT') {\n        return;\n      }\n\n      const parentMenu = this.activeMenu;\n      const key = event.key;\n      const isFromBreadcrumb = activeElement.classList.contains('pf-c-breadcrumb__link') || activeElement.classList.contains('pf-c-dropdown__toggle');\n\n      if (key === ' ' || key === 'Enter') {\n        event.preventDefault();\n\n        if (isDrilldown && !isFromBreadcrumb) {\n          const isDrillingOut = activeElement.closest('li').classList.contains('pf-m-current-path');\n\n          if (isDrillingOut && parentMenu.parentElement.tagName === 'LI') {\n            activeElement.tabIndex = -1;\n            parentMenu.parentElement.firstChild.tabIndex = 0;\n            this.setState({\n              transitionMoveTarget: parentMenu.parentElement.firstChild\n            });\n          } else {\n            if (activeElement.nextElementSibling && activeElement.nextElementSibling.classList.contains('pf-c-menu')) {\n              const childItems = Array.from(activeElement.nextElementSibling.getElementsByTagName('UL')[0].children).filter(el => !(el.classList.contains('pf-m-disabled') || el.classList.contains('pf-c-divider')));\n              activeElement.tabIndex = -1;\n              childItems[0].firstChild.tabIndex = 0;\n              this.setState({\n                transitionMoveTarget: childItems[0].firstChild\n              });\n            }\n          }\n        }\n\n        document.activeElement.click();\n      }\n    };\n\n    this.createNavigableElements = () => {\n      const isDrilldown = this.props.containsDrilldown;\n      return isDrilldown ? Array.from(this.activeMenu.getElementsByTagName('UL')[0].children).filter(el => !(el.classList.contains('pf-m-disabled') || el.classList.contains('pf-c-divider'))) : Array.from(this.menuRef.current.getElementsByTagName('LI')).filter(el => !(el.classList.contains('pf-m-disabled') || el.classList.contains('pf-c-divider')));\n    };\n\n    if (props.innerRef) {\n      this.menuRef = props.innerRef;\n    }\n  }\n\n  allowTabFirstItem() {\n    // Allow tabbing to first menu item\n    const current = this.menuRef.current;\n\n    if (current) {\n      const first = current.querySelector('ul button, ul a');\n\n      if (first) {\n        first.tabIndex = 0;\n      }\n    }\n  }\n\n  componentDidMount() {\n    if (this.context) {\n      this.setState({\n        disableHover: this.context.disableHover\n      });\n    }\n\n    if (canUseDOM) {\n      window.addEventListener('transitionend', this.props.isRootMenu ? this.handleDrilldownTransition : null);\n    }\n\n    this.allowTabFirstItem();\n  }\n\n  componentWillUnmount() {\n    if (canUseDOM) {\n      window.removeEventListener('transitionend', this.handleDrilldownTransition);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.children !== this.props.children) {\n      this.allowTabFirstItem();\n    }\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      'aria-label': ariaLabel,\n      id,\n      children,\n      className,\n      onSelect,\n      selected = null,\n      onActionClick,\n      ouiaId,\n      ouiaSafe,\n      containsFlyout,\n      isNavFlyout,\n      containsDrilldown,\n      isMenuDrilledIn,\n      isPlain,\n      isScrollable,\n      drilldownItemPath,\n      drilledInMenus,\n      onDrillIn,\n      onDrillOut,\n      onGetMenuHeight,\n      parentMenu = null,\n      activeItemId = null,\n\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      innerRef,\n      isRootMenu,\n      activeMenu\n    } = _a,\n\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    props = __rest(_a, ['aria-label', \"id\", \"children\", \"className\", \"onSelect\", \"selected\", \"onActionClick\", \"ouiaId\", \"ouiaSafe\", \"containsFlyout\", \"isNavFlyout\", \"containsDrilldown\", \"isMenuDrilledIn\", \"isPlain\", \"isScrollable\", \"drilldownItemPath\", \"drilledInMenus\", \"onDrillIn\", \"onDrillOut\", \"onGetMenuHeight\", \"parentMenu\", \"activeItemId\", \"innerRef\", \"isRootMenu\", \"activeMenu\"]);\n\n    const _isMenuDrilledIn = isMenuDrilledIn || drilledInMenus && drilledInMenus.includes(id) || false;\n\n    return React.createElement(MenuContext.Provider, {\n      value: {\n        menuId: id,\n        parentMenu: parentMenu || id,\n        onSelect,\n        onActionClick,\n        activeItemId,\n        selected,\n        drilledInMenus,\n        drilldownItemPath,\n        onDrillIn,\n        onDrillOut,\n        onGetMenuHeight,\n        flyoutRef: this.state.flyoutRef,\n        setFlyoutRef: flyoutRef => this.setState({\n          flyoutRef\n        }),\n        disableHover: this.state.disableHover\n      }\n    }, isRootMenu && React.createElement(KeyboardHandler, {\n      containerRef: this.menuRef || null,\n      additionalKeyHandler: this.handleExtraKeys,\n      createNavigableElements: this.createNavigableElements,\n      isActiveElement: element => document.activeElement.parentElement === element || document.activeElement.closest('ol') && document.activeElement.closest('ol').firstChild === element,\n      getFocusableElement: navigableElement => navigableElement.firstChild,\n      noHorizontalArrowHandling: document.activeElement && (document.activeElement.classList.contains('pf-c-breadcrumb__link') || document.activeElement.classList.contains('pf-c-dropdown__toggle')),\n      noEnterHandling: true,\n      noSpaceHandling: true\n    }), React.createElement(\"div\", Object.assign({\n      id: id,\n      className: css(styles.menu, isPlain && styles.modifiers.plain, isScrollable && styles.modifiers.scrollable, containsFlyout && styles.modifiers.flyout, isNavFlyout && styles.modifiers.nav, containsDrilldown && styles.modifiers.drilldown, _isMenuDrilledIn && styles.modifiers.drilledIn, className),\n      \"aria-label\": ariaLabel,\n      ref: this.menuRef\n    }, getOUIAProps(Menu.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), props), children));\n  }\n\n}\n\nMenuBase.displayName = 'Menu';\nMenuBase.contextType = MenuContext;\nMenuBase.defaultProps = {\n  ouiaSafe: true,\n  isRootMenu: true,\n  isPlain: false,\n  isScrollable: false\n};\nexport const Menu = React.forwardRef((props, ref) => React.createElement(MenuBase, Object.assign({}, props, {\n  innerRef: ref\n})));\nMenu.displayName = 'Menu';","map":{"version":3,"mappings":"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","names":["React","styles","css","getOUIAProps","getDefaultOUIAId","MenuContext","canUseDOM","KeyboardHandler","MenuBase","Component","constructor","props","createRef","ouiaStateId","Menu","displayName","searchInputValue","transitionMoveTarget","flyoutRef","disableHover","event","current","menuRef","target","closest","Array","from","getElementsByClassName","includes","state","focus","setState","nextMenu","querySelector","activeMenu","nextTarget","getElementsByTagName","children","filter","el","classList","contains","firstChild","tabIndex","isDrilldown","containsDrilldown","activeElement","document","tagName","parentMenu","key","isFromBreadcrumb","preventDefault","isDrillingOut","parentElement","nextElementSibling","childItems","click","innerRef","allowTabFirstItem","first","componentDidMount","context","window","addEventListener","isRootMenu","handleDrilldownTransition","componentWillUnmount","removeEventListener","componentDidUpdate","prevProps","render","_a","ariaLabel","id","className","onSelect","selected","onActionClick","ouiaId","ouiaSafe","containsFlyout","isNavFlyout","isMenuDrilledIn","isPlain","isScrollable","drilldownItemPath","drilledInMenus","onDrillIn","onDrillOut","onGetMenuHeight","activeItemId","_isMenuDrilledIn","Provider","value","menuId","setFlyoutRef","containerRef","additionalKeyHandler","handleExtraKeys","createNavigableElements","isActiveElement","element","getFocusableElement","navigableElement","noHorizontalArrowHandling","noEnterHandling","noSpaceHandling","menu","modifiers","plain","scrollable","flyout","nav","drilldown","drilledIn","ref","undefined","forwardRef","Object"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Menu/Menu.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId } from '../../helpers';\nimport { MenuContext } from './MenuContext';\nimport { canUseDOM } from '../../helpers/util';\nimport { KeyboardHandler } from '../../helpers';\nexport interface MenuProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'ref' | 'onSelect'>, OUIAProps {\n  /** Anything that can be rendered inside of the Menu */\n  children?: React.ReactNode;\n  /** Additional classes added to the Menu */\n  className?: string;\n  /** ID of the menu */\n  id?: string;\n  /** Callback for updating when item selection changes. You can also specify onClick on the MenuItem. */\n  onSelect?: (event?: React.MouseEvent, itemId?: string | number) => void;\n  /** Single itemId for single select menus, or array of itemIds for multi select. You can also specify isSelected on the MenuItem. */\n  selected?: any | any[];\n  /** Callback called when an MenuItems's action button is clicked. You can also specify it within a MenuItemAction. */\n  onActionClick?: (event?: any, itemId?: any, actionId?: any) => void;\n  /** Search input of menu */\n  hasSearchInput?: boolean;\n  /** A callback for when the input value changes. */\n  onSearchInputChange?: (\n    event: React.FormEvent<HTMLInputElement> | React.SyntheticEvent<HTMLButtonElement>,\n    value: string\n  ) => void;\n  /** Accessibility label */\n  'aria-label'?: string;\n  /** @beta Indicates if menu contains a flyout menu */\n  containsFlyout?: boolean;\n  /** @beta Indicating that the menu should have nav flyout styling */\n  isNavFlyout?: boolean;\n  /** @beta Indicates if menu contains a drilldown menu */\n  containsDrilldown?: boolean;\n  /** @beta Indicates if a menu is drilled into */\n  isMenuDrilledIn?: boolean;\n  /** @beta Indicates the path of drilled in menu itemIds */\n  drilldownItemPath?: string[];\n  /** @beta Array of menus that are drilled in */\n  drilledInMenus?: string[];\n  /** @beta Callback for drilling into a submenu */\n  onDrillIn?: (fromItemId: string, toItemId: string, itemId: string) => void;\n  /** @beta Callback for drilling out of a submenu */\n  onDrillOut?: (toItemId: string, itemId: string) => void;\n  /** @beta Callback for collecting menu heights */\n  onGetMenuHeight?: (menuId: string, height: number) => void;\n  /** @beta ID of parent menu for drilldown menus */\n  parentMenu?: string;\n  /** @beta ID of the currently active menu for the drilldown variant */\n  activeMenu?: string;\n  /** @beta itemId of the currently active item. You can also specify isActive on the MenuItem. */\n  activeItemId?: string | number;\n  /** @hide Forwarded ref */\n  innerRef?: React.Ref<HTMLDivElement>;\n  /** Internal flag indicating if the Menu is the root of a menu tree */\n  isRootMenu?: boolean;\n  /** Indicates if the menu should be without the outer box-shadow */\n  isPlain?: boolean;\n  /** Indicates if the menu should be srollable */\n  isScrollable?: boolean;\n}\n\nexport interface MenuState {\n  searchInputValue: string | null;\n  ouiaStateId: string;\n  transitionMoveTarget: HTMLElement;\n  flyoutRef: React.Ref<HTMLLIElement> | null;\n  disableHover: boolean;\n}\n\nclass MenuBase extends React.Component<MenuProps, MenuState> {\n  static displayName = 'Menu';\n  static contextType = MenuContext;\n  context!: React.ContextType<typeof MenuContext>;\n  private menuRef = React.createRef<HTMLDivElement>();\n  private activeMenu = null as Element;\n  static defaultProps: MenuProps = {\n    ouiaSafe: true,\n    isRootMenu: true,\n    isPlain: false,\n    isScrollable: false\n  };\n\n  constructor(props: MenuProps) {\n    super(props);\n    if (props.innerRef) {\n      this.menuRef = props.innerRef as React.RefObject<HTMLDivElement>;\n    }\n  }\n\n  state: MenuState = {\n    ouiaStateId: getDefaultOUIAId(Menu.displayName),\n    searchInputValue: '',\n    transitionMoveTarget: null,\n    flyoutRef: null,\n    disableHover: false\n  };\n\n  allowTabFirstItem() {\n    // Allow tabbing to first menu item\n    const current = this.menuRef.current;\n    if (current) {\n      const first = current.querySelector('ul button, ul a') as HTMLButtonElement | HTMLAnchorElement;\n      if (first) {\n        first.tabIndex = 0;\n      }\n    }\n  }\n\n  componentDidMount() {\n    if (this.context) {\n      this.setState({ disableHover: this.context.disableHover });\n    }\n    if (canUseDOM) {\n      window.addEventListener('transitionend', this.props.isRootMenu ? this.handleDrilldownTransition : null);\n    }\n\n    this.allowTabFirstItem();\n  }\n\n  componentWillUnmount() {\n    if (canUseDOM) {\n      window.removeEventListener('transitionend', this.handleDrilldownTransition);\n    }\n  }\n\n  componentDidUpdate(prevProps: MenuProps) {\n    if (prevProps.children !== this.props.children) {\n      this.allowTabFirstItem();\n    }\n  }\n\n  handleDrilldownTransition = (event: TransitionEvent) => {\n    const current = this.menuRef.current;\n\n    if (\n      !current ||\n      (current !== (event.target as HTMLElement).closest('.pf-c-menu') &&\n        !Array.from(current.getElementsByClassName('pf-c-menu')).includes(\n          (event.target as HTMLElement).closest('.pf-c-menu')\n        ))\n    ) {\n      return;\n    }\n\n    if (this.state.transitionMoveTarget) {\n      this.state.transitionMoveTarget.focus();\n      this.setState({ transitionMoveTarget: null });\n    } else {\n      const nextMenu = current.querySelector('#' + this.props.activeMenu) || current || null;\n      const nextTarget = Array.from(nextMenu.getElementsByTagName('UL')[0].children).filter(\n        el => !(el.classList.contains('pf-m-disabled') || el.classList.contains('pf-c-divider'))\n      )[0].firstChild;\n      (nextTarget as HTMLElement).focus();\n      (nextTarget as HTMLElement).tabIndex = 0;\n    }\n  };\n\n  handleExtraKeys = (event: KeyboardEvent) => {\n    const isDrilldown = this.props.containsDrilldown;\n    const activeElement = document.activeElement;\n\n    if (\n      (event.target as HTMLElement).closest('.pf-c-menu') !== this.activeMenu &&\n      !(event.target as HTMLElement).classList.contains('pf-c-breadcrumb__link')\n    ) {\n      this.activeMenu = (event.target as HTMLElement).closest('.pf-c-menu');\n      this.setState({ disableHover: true });\n    }\n\n    if ((event.target as HTMLElement).tagName === 'INPUT') {\n      return;\n    }\n\n    const parentMenu = this.activeMenu;\n    const key = event.key;\n    const isFromBreadcrumb =\n      activeElement.classList.contains('pf-c-breadcrumb__link') ||\n      activeElement.classList.contains('pf-c-dropdown__toggle');\n\n    if (key === ' ' || key === 'Enter') {\n      event.preventDefault();\n      if (isDrilldown && !isFromBreadcrumb) {\n        const isDrillingOut = activeElement.closest('li').classList.contains('pf-m-current-path');\n        if (isDrillingOut && parentMenu.parentElement.tagName === 'LI') {\n          (activeElement as HTMLElement).tabIndex = -1;\n          (parentMenu.parentElement.firstChild as HTMLElement).tabIndex = 0;\n          this.setState({ transitionMoveTarget: parentMenu.parentElement.firstChild as HTMLElement });\n        } else {\n          if (activeElement.nextElementSibling && activeElement.nextElementSibling.classList.contains('pf-c-menu')) {\n            const childItems = Array.from(\n              activeElement.nextElementSibling.getElementsByTagName('UL')[0].children\n            ).filter(el => !(el.classList.contains('pf-m-disabled') || el.classList.contains('pf-c-divider')));\n\n            (activeElement as HTMLElement).tabIndex = -1;\n            (childItems[0].firstChild as HTMLElement).tabIndex = 0;\n            this.setState({ transitionMoveTarget: childItems[0].firstChild as HTMLElement });\n          }\n        }\n      }\n      (document.activeElement as HTMLElement).click();\n    }\n  };\n\n  createNavigableElements = () => {\n    const isDrilldown = this.props.containsDrilldown;\n\n    return isDrilldown\n      ? Array.from(this.activeMenu.getElementsByTagName('UL')[0].children).filter(\n          el => !(el.classList.contains('pf-m-disabled') || el.classList.contains('pf-c-divider'))\n        )\n      : Array.from(this.menuRef.current.getElementsByTagName('LI')).filter(\n          el => !(el.classList.contains('pf-m-disabled') || el.classList.contains('pf-c-divider'))\n        );\n  };\n\n  render() {\n    const {\n      'aria-label': ariaLabel,\n      id,\n      children,\n      className,\n      onSelect,\n      selected = null,\n      onActionClick,\n      ouiaId,\n      ouiaSafe,\n      containsFlyout,\n      isNavFlyout,\n      containsDrilldown,\n      isMenuDrilledIn,\n      isPlain,\n      isScrollable,\n      drilldownItemPath,\n      drilledInMenus,\n      onDrillIn,\n      onDrillOut,\n      onGetMenuHeight,\n      parentMenu = null,\n      activeItemId = null,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      innerRef,\n      isRootMenu,\n      activeMenu,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      ...props\n    } = this.props;\n    const _isMenuDrilledIn = isMenuDrilledIn || (drilledInMenus && drilledInMenus.includes(id)) || false;\n    return (\n      <MenuContext.Provider\n        value={{\n          menuId: id,\n          parentMenu: parentMenu || id,\n          onSelect,\n          onActionClick,\n          activeItemId,\n          selected,\n          drilledInMenus,\n          drilldownItemPath,\n          onDrillIn,\n          onDrillOut,\n          onGetMenuHeight,\n          flyoutRef: this.state.flyoutRef,\n          setFlyoutRef: flyoutRef => this.setState({ flyoutRef }),\n          disableHover: this.state.disableHover\n        }}\n      >\n        {isRootMenu && (\n          <KeyboardHandler\n            containerRef={(this.menuRef as React.RefObject<HTMLDivElement>) || null}\n            additionalKeyHandler={this.handleExtraKeys}\n            createNavigableElements={this.createNavigableElements}\n            isActiveElement={(element: Element) =>\n              document.activeElement.parentElement === element ||\n              (document.activeElement.closest('ol') && document.activeElement.closest('ol').firstChild === element)\n            }\n            getFocusableElement={(navigableElement: Element) => navigableElement.firstChild as Element}\n            noHorizontalArrowHandling={\n              document.activeElement &&\n              (document.activeElement.classList.contains('pf-c-breadcrumb__link') ||\n                document.activeElement.classList.contains('pf-c-dropdown__toggle'))\n            }\n            noEnterHandling\n            noSpaceHandling\n          />\n        )}\n        <div\n          id={id}\n          className={css(\n            styles.menu,\n            isPlain && styles.modifiers.plain,\n            isScrollable && styles.modifiers.scrollable,\n            containsFlyout && styles.modifiers.flyout,\n            isNavFlyout && styles.modifiers.nav,\n            containsDrilldown && styles.modifiers.drilldown,\n            _isMenuDrilledIn && styles.modifiers.drilledIn,\n            className\n          )}\n          aria-label={ariaLabel}\n          ref={this.menuRef}\n          {...getOUIAProps(Menu.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n          {...props}\n        >\n          {children}\n        </div>\n      </MenuContext.Provider>\n    );\n  }\n}\n\nexport const Menu = React.forwardRef((props: MenuProps, ref: React.Ref<HTMLDivElement>) => (\n  <MenuBase {...props} innerRef={ref} />\n));\nMenu.displayName = 'Menu';\n"]},"metadata":{},"sourceType":"module"}