{"ast":null,"code":"import _classCallCheck from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport formStyles from '@patternfly/react-styles/css/components/Form/form';\nimport { css } from '@patternfly/react-styles';\nimport { SelectOption } from './SelectOption';\nimport { SelectConsumer, SelectPosition, SelectVariant } from './selectConstants';\nimport { SelectGroup } from './SelectGroup';\nimport { Divider } from '../Divider/Divider';\n\nvar SelectMenuWithRef = /*#__PURE__*/function (_React$Component) {\n  _inherits(SelectMenuWithRef, _React$Component);\n\n  var _super = _createSuper(SelectMenuWithRef);\n\n  function SelectMenuWithRef() {\n    _classCallCheck(this, SelectMenuWithRef);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SelectMenuWithRef, [{\n    key: \"extendChildren\",\n    value: function extendChildren(randomId) {\n      var _this = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          hasInlineFilter = _this$props.hasInlineFilter,\n          isGrouped = _this$props.isGrouped;\n      var childrenArray = children;\n      var index = hasInlineFilter ? 1 : 0;\n\n      if (isGrouped) {\n        return React.Children.map(childrenArray, function (group) {\n          if (group.type === SelectGroup) {\n            return React.cloneElement(group, {\n              titleId: group.props.label && group.props.label.replace(/\\W/g, '-'),\n              children: React.Children.map(group.props.children, function (option) {\n                return _this.cloneOption(option, index++, randomId);\n              })\n            });\n          } else {\n            return _this.cloneOption(group, index++, randomId);\n          }\n        });\n      }\n\n      return React.Children.map(childrenArray, function (child) {\n        return _this.cloneOption(child, index++, randomId);\n      });\n    }\n  }, {\n    key: \"cloneOption\",\n    value: function cloneOption(child, index, randomId) {\n      var _this$props2 = this.props,\n          selected = _this$props2.selected,\n          sendRef = _this$props2.sendRef,\n          keyHandler = _this$props2.keyHandler;\n      var isSelected = this.checkForValue(child.props.value, selected);\n\n      if (child.type === Divider) {\n        return child;\n      }\n\n      return React.cloneElement(child, {\n        inputId: \"\".concat(randomId, \"-\").concat(index),\n        isSelected: isSelected,\n        sendRef: sendRef,\n        keyHandler: keyHandler,\n        index: index\n      });\n    }\n  }, {\n    key: \"checkForValue\",\n    value: function checkForValue(valueToCheck, options) {\n      if (!options || !valueToCheck) {\n        return false;\n      }\n\n      var isSelectOptionObject = typeof valueToCheck !== 'string' && valueToCheck.toString && valueToCheck.compareTo;\n\n      if (Array.isArray(options)) {\n        if (isSelectOptionObject) {\n          return options.some(function (option) {\n            return option.compareTo(valueToCheck);\n          });\n        } else {\n          return options.includes(valueToCheck);\n        }\n      } else {\n        if (isSelectOptionObject) {\n          return options.compareTo(valueToCheck);\n        } else {\n          return options === valueToCheck;\n        }\n      }\n    }\n  }, {\n    key: \"extendCheckboxChildren\",\n    value: function extendCheckboxChildren(children) {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          isGrouped = _this$props3.isGrouped,\n          checked = _this$props3.checked,\n          sendRef = _this$props3.sendRef,\n          keyHandler = _this$props3.keyHandler,\n          hasInlineFilter = _this$props3.hasInlineFilter,\n          isLastOptionBeforeFooter = _this$props3.isLastOptionBeforeFooter;\n      var index = hasInlineFilter ? 1 : 0;\n\n      if (isGrouped) {\n        return React.Children.map(children, function (group) {\n          if (group.type === Divider) {\n            return group;\n          } else if (group.type === SelectOption) {\n            return React.cloneElement(group, {\n              isChecked: _this2.checkForValue(group.props.value, checked),\n              sendRef: sendRef,\n              keyHandler: keyHandler,\n              index: index++,\n              isLastOptionBeforeFooter: isLastOptionBeforeFooter\n            });\n          }\n\n          return React.cloneElement(group, {\n            titleId: group.props.label && group.props.label.replace(/\\W/g, '-'),\n            children: group.props.children ? React.createElement(\"fieldset\", {\n              \"aria-labelledby\": group.props.label && group.props.label.replace(/\\W/g, '-'),\n              className: css(styles.selectMenuFieldset)\n            }, React.Children.map(group.props.children, function (option) {\n              return option.type === Divider ? option : React.cloneElement(option, {\n                isChecked: _this2.checkForValue(option.props.value, checked),\n                sendRef: sendRef,\n                keyHandler: keyHandler,\n                index: index++,\n                isLastOptionBeforeFooter: isLastOptionBeforeFooter\n              });\n            })) : null\n          });\n        });\n      }\n\n      return React.Children.map(children, function (child) {\n        return child.type === Divider ? child : React.cloneElement(child, {\n          isChecked: _this2.checkForValue(child.props.value, checked),\n          sendRef: sendRef,\n          keyHandler: keyHandler,\n          index: index++,\n          isLastOptionBeforeFooter: isLastOptionBeforeFooter\n        });\n      });\n    }\n  }, {\n    key: \"renderSelectMenu\",\n    value: function renderSelectMenu(_ref) {\n      var _this3 = this;\n\n      var variant = _ref.variant,\n          inputIdPrefix = _ref.inputIdPrefix;\n\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      var _a = this.props,\n          children = _a.children,\n          isCustomContent = _a.isCustomContent,\n          className = _a.className,\n          isExpanded = _a.isExpanded,\n          openedOnEnter = _a.openedOnEnter,\n          selected = _a.selected,\n          checked = _a.checked,\n          isGrouped = _a.isGrouped,\n          position = _a.position,\n          sendRef = _a.sendRef,\n          keyHandler = _a.keyHandler,\n          maxHeight = _a.maxHeight,\n          noResultsFoundText = _a.noResultsFoundText,\n          createText = _a.createText,\n          ariaLabel = _a['aria-label'],\n          ariaLabelledBy = _a['aria-labelledby'],\n          hasInlineFilter = _a.hasInlineFilter,\n          innerRef = _a.innerRef,\n          footer = _a.footer,\n          footerRef = _a.footerRef,\n          isLastOptionBeforeFooter = _a.isLastOptionBeforeFooter,\n          props = __rest(_a, [\"children\", \"isCustomContent\", \"className\", \"isExpanded\", \"openedOnEnter\", \"selected\", \"checked\", \"isGrouped\", \"position\", \"sendRef\", \"keyHandler\", \"maxHeight\", \"noResultsFoundText\", \"createText\", 'aria-label', 'aria-labelledby', \"hasInlineFilter\", \"innerRef\", \"footer\", \"footerRef\", \"isLastOptionBeforeFooter\"]);\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n      var Component = 'div';\n      var variantProps = Object.assign({\n        ref: innerRef,\n        className: css(!footer ? styles.selectMenu : 'pf-c-select__menu-list', position === SelectPosition.right && styles.modifiers.alignRight, className)\n      }, maxHeight && {\n        style: {\n          maxHeight: maxHeight,\n          overflow: 'auto'\n        }\n      });\n\n      var extendedChildren = function extendedChildren() {\n        return variant === SelectVariant.checkbox ? _this3.extendCheckboxChildren(children) : _this3.extendChildren(inputIdPrefix);\n      };\n\n      if (isCustomContent) {\n        variantProps.children = children;\n      } else if (hasInlineFilter) {\n        if (React.Children.count(children) === 0) {\n          variantProps.children = React.createElement(\"fieldset\", {\n            className: css(styles.selectMenuFieldset)\n          });\n        } else {\n          variantProps.children = React.createElement(\"fieldset\", {\n            \"aria-label\": ariaLabel,\n            \"aria-labelledby\": !ariaLabel && ariaLabelledBy || null,\n            className: css(formStyles.formFieldset)\n          }, children.shift(), extendedChildren());\n        }\n      } else {\n        variantProps.children = extendedChildren();\n\n        if (!isGrouped) {\n          Component = 'ul';\n          variantProps.role = 'listbox';\n          variantProps['aria-label'] = ariaLabel;\n          variantProps['aria-labelledby'] = !ariaLabel && ariaLabelledBy || null;\n        }\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(Component, Object.assign({}, variantProps, props)), footer && React.createElement(\"div\", {\n        className: css(styles.selectMenuFooter),\n        ref: footerRef\n      }, footer));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(SelectConsumer, null, function (context) {\n        return _this4.renderSelectMenu(context);\n      });\n    }\n  }]);\n\n  return SelectMenuWithRef;\n}(React.Component);\n\nSelectMenuWithRef.displayName = 'SelectMenu';\nSelectMenuWithRef.defaultProps = {\n  className: '',\n  isExpanded: false,\n  isGrouped: false,\n  openedOnEnter: false,\n  selected: '',\n  maxHeight: '',\n  position: SelectPosition.left,\n  sendRef: function sendRef() {},\n  keyHandler: function keyHandler() {},\n  isCustomContent: false,\n  hasInlineFilter: false,\n  isLastOptionBeforeFooter: function isLastOptionBeforeFooter() {}\n};\nexport var SelectMenu = React.forwardRef(function (props, ref) {\n  return React.createElement(SelectMenuWithRef, Object.assign({\n    innerRef: ref\n  }, props), props.children);\n});","map":{"version":3,"mappings":"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","names":["React","styles","formStyles","css","SelectOption","SelectConsumer","SelectPosition","SelectVariant","SelectGroup","Divider","SelectMenuWithRef","randomId","props","children","hasInlineFilter","isGrouped","childrenArray","index","Children","map","group","type","cloneElement","titleId","label","replace","option","cloneOption","child","selected","sendRef","keyHandler","isSelected","checkForValue","value","inputId","valueToCheck","options","isSelectOptionObject","toString","compareTo","Array","isArray","some","includes","checked","isLastOptionBeforeFooter","isChecked","className","selectMenuFieldset","variant","inputIdPrefix","_a","isCustomContent","isExpanded","openedOnEnter","position","maxHeight","noResultsFoundText","createText","ariaLabel","ariaLabelledBy","innerRef","footer","footerRef","__rest","Component","variantProps","Object","ref","selectMenu","right","modifiers","alignRight","style","overflow","extendedChildren","checkbox","extendCheckboxChildren","extendChildren","count","formFieldset","shift","role","Fragment","selectMenuFooter","renderSelectMenu","context","left","SelectMenu","forwardRef"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Select/SelectMenu.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport formStyles from '@patternfly/react-styles/css/components/Form/form';\nimport { css } from '@patternfly/react-styles';\nimport { SelectOptionObject, SelectOption } from './SelectOption';\nimport { SelectConsumer, SelectPosition, SelectVariant, SelectContextInterface } from './selectConstants';\nimport { PickOptional } from '../../helpers/typeUtils';\n\nimport { SelectGroup } from './SelectGroup';\nimport { Divider } from '../Divider/Divider';\n\nexport interface SelectMenuProps extends Omit<React.HTMLProps<HTMLElement>, 'checked' | 'selected' | 'ref'> {\n  /** Content rendered inside the SelectMenu */\n  children: React.ReactElement[] | React.ReactNode;\n  /** Flag indicating that the children is custom content to render inside the SelectMenu.  If true, variant prop is ignored. */\n  isCustomContent?: boolean;\n  /** Additional classes added to the SelectMenu control */\n  className?: string;\n  /** Flag indicating the Select is expanded */\n  isExpanded?: boolean;\n  /** Flag indicating the Select options are grouped */\n  isGrouped?: boolean;\n  /** Currently selected option (for single, typeahead variants) */\n  selected?: string | SelectOptionObject | (string | SelectOptionObject)[];\n  /** Currently checked options (for checkbox variant) */\n  checked?: (string | SelectOptionObject)[];\n  /** @hide Internal flag for specifiying how the menu was opened */\n  openedOnEnter?: boolean;\n  /** Flag to specify the  maximum height of the menu, as a string percentage or number of pixels */\n  maxHeight?: string | number;\n  /** Indicates where menu will be alligned horizontally */\n  position?: SelectPosition | 'right' | 'left';\n  /** Inner prop passed from parent */\n  noResultsFoundText?: string;\n  /** Inner prop passed from parent */\n  createText?: string;\n  /** @hide Internal callback for ref tracking */\n  sendRef?: (ref: React.ReactNode, favoriteRef: React.ReactNode, index: number) => void;\n  /** @hide Internal callback for keyboard navigation */\n  keyHandler?: (index: number, innerIndex: number, position: string) => void;\n  /** Flag indicating select has an inline text input for filtering */\n  hasInlineFilter?: boolean;\n  innerRef?: any;\n  /** Content rendered in the footer of the select menu */\n  footer?: React.ReactNode;\n  /** The menu footer element */\n  footerRef?: React.RefObject<HTMLDivElement>;\n  /** @hide callback to check if option is the last one in the menu when there is a footer  */\n  isLastOptionBeforeFooter?: (index: number) => void;\n}\n\nclass SelectMenuWithRef extends React.Component<SelectMenuProps> {\n  static displayName = 'SelectMenu';\n  static defaultProps: PickOptional<SelectMenuProps> = {\n    className: '',\n    isExpanded: false,\n    isGrouped: false,\n    openedOnEnter: false,\n    selected: '',\n    maxHeight: '',\n    position: SelectPosition.left,\n    sendRef: () => {},\n    keyHandler: () => {},\n    isCustomContent: false,\n    hasInlineFilter: false,\n    isLastOptionBeforeFooter: () => {}\n  };\n\n  extendChildren(randomId: string) {\n    const { children, hasInlineFilter, isGrouped } = this.props;\n    const childrenArray: React.ReactElement[] = children as React.ReactElement[];\n    let index = hasInlineFilter ? 1 : 0;\n    if (isGrouped) {\n      return React.Children.map(childrenArray, (group: React.ReactElement) => {\n        if (group.type === SelectGroup) {\n          return React.cloneElement(group, {\n            titleId: group.props.label && group.props.label.replace(/\\W/g, '-'),\n            children: React.Children.map(group.props.children, (option: React.ReactElement) =>\n              this.cloneOption(option, index++, randomId)\n            )\n          });\n        } else {\n          return this.cloneOption(group, index++, randomId);\n        }\n      });\n    }\n    return React.Children.map(childrenArray, (child: React.ReactElement) => this.cloneOption(child, index++, randomId));\n  }\n\n  cloneOption(child: React.ReactElement, index: number, randomId: string) {\n    const { selected, sendRef, keyHandler } = this.props;\n    const isSelected = this.checkForValue(child.props.value, selected);\n    if (child.type === Divider) {\n      return child;\n    }\n    return React.cloneElement(child, {\n      inputId: `${randomId}-${index}`,\n      isSelected,\n      sendRef,\n      keyHandler,\n      index\n    });\n  }\n\n  checkForValue(\n    valueToCheck: string | SelectOptionObject,\n    options: string | SelectOptionObject | (string | SelectOptionObject)[]\n  ) {\n    if (!options || !valueToCheck) {\n      return false;\n    }\n\n    const isSelectOptionObject =\n      typeof valueToCheck !== 'string' &&\n      (valueToCheck as SelectOptionObject).toString &&\n      (valueToCheck as SelectOptionObject).compareTo;\n\n    if (Array.isArray(options)) {\n      if (isSelectOptionObject) {\n        return options.some(option => (option as SelectOptionObject).compareTo(valueToCheck));\n      } else {\n        return options.includes(valueToCheck);\n      }\n    } else {\n      if (isSelectOptionObject) {\n        return (options as SelectOptionObject).compareTo(valueToCheck);\n      } else {\n        return options === valueToCheck;\n      }\n    }\n  }\n\n  extendCheckboxChildren(children: React.ReactElement[]) {\n    const { isGrouped, checked, sendRef, keyHandler, hasInlineFilter, isLastOptionBeforeFooter } = this.props;\n    let index = hasInlineFilter ? 1 : 0;\n    if (isGrouped) {\n      return React.Children.map(children, (group: React.ReactElement) => {\n        if (group.type === Divider) {\n          return group;\n        } else if (group.type === SelectOption) {\n          return React.cloneElement(group, {\n            isChecked: this.checkForValue(group.props.value, checked),\n            sendRef,\n            keyHandler,\n            index: index++,\n            isLastOptionBeforeFooter\n          });\n        }\n        return React.cloneElement(group, {\n          titleId: group.props.label && group.props.label.replace(/\\W/g, '-'),\n          children: group.props.children ? (\n            <fieldset\n              aria-labelledby={group.props.label && group.props.label.replace(/\\W/g, '-')}\n              className={css(styles.selectMenuFieldset)}\n            >\n              {React.Children.map(group.props.children, (option: React.ReactElement) =>\n                option.type === Divider\n                  ? option\n                  : React.cloneElement(option, {\n                      isChecked: this.checkForValue(option.props.value, checked),\n                      sendRef,\n                      keyHandler,\n                      index: index++,\n                      isLastOptionBeforeFooter\n                    })\n              )}\n            </fieldset>\n          ) : null\n        });\n      });\n    }\n    return React.Children.map(children, (child: React.ReactElement) =>\n      child.type === Divider\n        ? child\n        : React.cloneElement(child, {\n            isChecked: this.checkForValue(child.props.value, checked),\n            sendRef,\n            keyHandler,\n            index: index++,\n            isLastOptionBeforeFooter\n          })\n    );\n  }\n\n  renderSelectMenu({ variant, inputIdPrefix }: SelectContextInterface) {\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    const {\n      children,\n      isCustomContent,\n      className,\n      isExpanded,\n      openedOnEnter,\n      selected,\n      checked,\n      isGrouped,\n      position,\n      sendRef,\n      keyHandler,\n      maxHeight,\n      noResultsFoundText,\n      createText,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      hasInlineFilter,\n      innerRef,\n      footer,\n      footerRef,\n      isLastOptionBeforeFooter,\n      ...props\n    } = this.props;\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    let Component = 'div';\n    const variantProps = {\n      ref: innerRef,\n      className: css(\n        !footer ? styles.selectMenu : 'pf-c-select__menu-list',\n        position === SelectPosition.right && styles.modifiers.alignRight,\n        className\n      ),\n      ...(maxHeight && { style: { maxHeight, overflow: 'auto' } })\n    } as React.HTMLAttributes<HTMLElement>;\n    const extendedChildren = () =>\n      variant === SelectVariant.checkbox\n        ? this.extendCheckboxChildren(children as React.ReactElement[])\n        : this.extendChildren(inputIdPrefix);\n\n    if (isCustomContent) {\n      variantProps.children = children;\n    } else if (hasInlineFilter) {\n      if (React.Children.count(children) === 0) {\n        variantProps.children = <fieldset className={css(styles.selectMenuFieldset)} />;\n      } else {\n        variantProps.children = (\n          <fieldset\n            aria-label={ariaLabel}\n            aria-labelledby={(!ariaLabel && ariaLabelledBy) || null}\n            className={css(formStyles.formFieldset)}\n          >\n            {(children as React.ReactElement[]).shift()}\n            {extendedChildren()}\n          </fieldset>\n        );\n      }\n    } else {\n      variantProps.children = extendedChildren();\n      if (!isGrouped) {\n        Component = 'ul';\n        variantProps.role = 'listbox';\n        variantProps['aria-label'] = ariaLabel;\n        variantProps['aria-labelledby'] = (!ariaLabel && ariaLabelledBy) || null;\n      }\n    }\n\n    return (\n      <React.Fragment>\n        <Component {...variantProps} {...props} />\n        {footer && (\n          <div className={css(styles.selectMenuFooter)} ref={footerRef}>\n            {footer}\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return <SelectConsumer>{context => this.renderSelectMenu(context)}</SelectConsumer>;\n  }\n}\n\nexport const SelectMenu = React.forwardRef<unknown, React.PropsWithChildren<unknown>>((props, ref) => (\n  <SelectMenuWithRef innerRef={ref} {...props}>\n    {props.children}\n  </SelectMenuWithRef>\n));\n"]},"metadata":{},"sourceType":"module"}