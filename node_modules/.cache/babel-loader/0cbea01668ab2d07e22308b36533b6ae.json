{"ast":null,"code":"import _slicedToArray from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { css } from '@patternfly/react-styles';\nimport { Tooltip } from '@patternfly/react-core/dist/esm/components/Tooltip/Tooltip';\nexport var TableTextVariant;\n\n(function (TableTextVariant) {\n  TableTextVariant[\"div\"] = \"div\";\n  TableTextVariant[\"nav\"] = \"nav\";\n})(TableTextVariant || (TableTextVariant = {}));\n\nexport var WrapModifier;\n\n(function (WrapModifier) {\n  WrapModifier[\"wrap\"] = \"wrap\";\n  WrapModifier[\"nowrap\"] = \"nowrap\";\n  WrapModifier[\"truncate\"] = \"truncate\";\n  WrapModifier[\"breakWord\"] = \"breakWord\";\n  WrapModifier[\"fitContent\"] = \"fitContent\";\n})(WrapModifier || (WrapModifier = {}));\n\nexport var TableText = function TableText(_a) {\n  var _a$children = _a.children,\n      children = _a$children === void 0 ? null : _a$children,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      _a$variant = _a.variant,\n      variant = _a$variant === void 0 ? 'span' : _a$variant,\n      _a$wrapModifier = _a.wrapModifier,\n      wrapModifier = _a$wrapModifier === void 0 ? null : _a$wrapModifier,\n      _a$tooltip = _a.tooltip,\n      tooltipProp = _a$tooltip === void 0 ? '' : _a$tooltip,\n      _a$tooltipProps = _a.tooltipProps,\n      tooltipProps = _a$tooltipProps === void 0 ? {} : _a$tooltipProps,\n      _a$onMouseEnter = _a.onMouseEnter,\n      onMouseEnterProp = _a$onMouseEnter === void 0 ? function () {} : _a$onMouseEnter,\n      props = __rest(_a, [\"children\", \"className\", \"variant\", \"wrapModifier\", \"tooltip\", \"tooltipProps\", \"onMouseEnter\"]);\n\n  var Component = variant;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      tooltip = _React$useState2[0],\n      setTooltip = _React$useState2[1];\n\n  var onMouseEnter = function onMouseEnter(event) {\n    if (event.target.offsetWidth < event.target.scrollWidth) {\n      setTooltip(tooltipProp || event.target.innerText);\n    } else {\n      setTooltip('');\n    }\n\n    onMouseEnterProp(event);\n  };\n\n  var text = React.createElement(Component, Object.assign({\n    onMouseEnter: onMouseEnter,\n    className: css(className, wrapModifier && styles.modifiers[wrapModifier], styles.tableText)\n  }, props), children);\n  return tooltip !== '' ? React.createElement(Tooltip, Object.assign({\n    content: tooltip,\n    isVisible: true\n  }, tooltipProps), text) : text;\n};\nTableText.displayName = 'TableText';","map":{"version":3,"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,qDAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,SAASC,OAAT,QAAsC,4DAAtC;AAEA,WAAYC,gBAAZ;;AAAA,WAAYA,gBAAZ,EAA4B;EAC1BA;EACAA;AACD,CAHD,EAAYA,gBAAgB,KAAhBA,gBAAgB,MAA5B;;AAKA,WAAYC,YAAZ;;AAAA,WAAYA,YAAZ,EAAwB;EACtBA;EACAA;EACAA;EACAA;EACAA;AACD,CAND,EAAYA,YAAY,KAAZA,YAAY,MAAxB;;AAyBA,OAAO,IAAMC,SAAS,GAA4C,SAArDA,SAAqD,CAACC,EAAD,EAS7C;oBAFsBA,GANzCC;MAAAA,oCAAW;qBAM8BD,GALzCE;MAAAA,sCAAY;mBAK6BF,GAJzCG;MAAAA,kCAAU;wBAI+BH,GAHzCI;MAAAA,4CAAe;mBAG0BJ,GAFzCK;MAASC,sCAAc;wBAEkBN,GADzCO;MAAAA,4CAAe;wBAC0BP,GAAzCQ;MAAcC,gDAAmB,YAAK,CAAG;MACtCC,QAAKC,WARyD,+FAQzD;;EAER,IAAMC,SAAS,GAAsCT,OAArD;;EAEA,sBAA8BV,KAAK,CAACoB,QAAN,CAAe,EAAf,CAA9B;EAAA;EAAA,IAAOR,OAAP;EAAA,IAAgBS,UAAhB;;EACA,IAAMN,YAAY,GAAG,SAAfA,YAAe,CAACO,KAAD,EAAe;IAClC,IAAIA,KAAK,CAACC,MAAN,CAAaC,WAAb,GAA2BF,KAAK,CAACC,MAAN,CAAaE,WAA5C,EAAyD;MACvDJ,UAAU,CAACR,WAAW,IAAIS,KAAK,CAACC,MAAN,CAAaG,SAA7B,CAAV;IACD,CAFD,MAEO;MACLL,UAAU,CAAC,EAAD,CAAV;IACD;;IACDL,gBAAgB,CAACM,KAAD,CAAhB;EACD,CAPD;;EASA,IAAMK,IAAI,GACR3B,oBAACmB,SAAD,EAAUS;IACRb,YAAY,EAAEA,YADN;IAERN,SAAS,EAAEP,GAAG,CAACO,SAAD,EAAYE,YAAY,IAAIV,MAAM,CAAC4B,SAAP,CAAiBlB,YAAjB,CAA5B,EAA4DV,MAAM,CAAC6B,SAAnE;EAFN,GAGJb,KAHI,CAAV,EAKGT,QALH,CADF;EAUA,OAAOI,OAAO,KAAK,EAAZ,GACLZ,oBAACG,OAAD,EAAQyB;IAACG,OAAO,EAAEnB,OAAV;IAAmBoB,SAAS;EAA5B,GAAiClB,YAAjC,CAAR,EACGa,IADH,CADK,GAKLA,IALF;AAOD,CAvCM;AAwCPrB,SAAS,CAAC2B,WAAV,GAAwB,WAAxB","names":["React","styles","css","Tooltip","TableTextVariant","WrapModifier","TableText","_a","children","className","variant","wrapModifier","tooltip","tooltipProp","tooltipProps","onMouseEnter","onMouseEnterProp","props","__rest","Component","useState","setTooltip","event","target","offsetWidth","scrollWidth","innerText","text","Object","modifiers","tableText","content","isVisible","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-table/src/components/Table/TableText.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { css } from '@patternfly/react-styles';\nimport { Tooltip, TooltipProps } from '@patternfly/react-core/dist/esm/components/Tooltip/Tooltip';\n\nexport enum TableTextVariant {\n  div = 'div',\n  nav = 'nav'\n}\n\nexport enum WrapModifier {\n  wrap = 'wrap',\n  nowrap = 'nowrap',\n  truncate = 'truncate',\n  breakWord = 'breakWord',\n  fitContent = 'fitContent'\n}\n\nexport interface TableTextProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content rendered within the table text */\n  children?: React.ReactNode;\n  /** Additional classes added to the table text */\n  className?: string;\n  /** Determines which element to render as a table text */\n  variant?: TableTextVariant | 'span' | 'div';\n  /** Determines which wrapping modifier to apply to the table text */\n  wrapModifier?: WrapModifier | 'wrap' | 'nowrap' | 'truncate' | 'breakWord' | 'fitContent';\n  /** text to display on the tooltip */\n  tooltip?: string;\n  /** other props to pass to the tooltip */\n  tooltipProps?: Omit<TooltipProps, 'content'>;\n  /** callback used to create the tooltip if text is truncated */\n  onMouseEnter?: (event: any) => void;\n}\n\nexport const TableText: React.FunctionComponent<TableTextProps> = ({\n  children = null,\n  className = '',\n  variant = 'span',\n  wrapModifier = null,\n  tooltip: tooltipProp = '',\n  tooltipProps = {},\n  onMouseEnter: onMouseEnterProp = () => {},\n  ...props\n}: TableTextProps) => {\n  const Component: TableTextVariant | 'span' | 'div' = variant;\n\n  const [tooltip, setTooltip] = React.useState('');\n  const onMouseEnter = (event: any) => {\n    if (event.target.offsetWidth < event.target.scrollWidth) {\n      setTooltip(tooltipProp || event.target.innerText);\n    } else {\n      setTooltip('');\n    }\n    onMouseEnterProp(event);\n  };\n\n  const text = (\n    <Component\n      onMouseEnter={onMouseEnter}\n      className={css(className, wrapModifier && styles.modifiers[wrapModifier], styles.tableText)}\n      {...props}\n    >\n      {children}\n    </Component>\n  );\n\n  return tooltip !== '' ? (\n    <Tooltip content={tooltip} isVisible {...tooltipProps}>\n      {text}\n    </Tooltip>\n  ) : (\n    text\n  );\n};\nTableText.displayName = 'TableText';\n"]},"metadata":{},"sourceType":"module"}