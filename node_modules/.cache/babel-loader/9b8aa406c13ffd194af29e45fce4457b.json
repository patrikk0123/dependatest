{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Nav/nav';\nimport { css } from '@patternfly/react-styles';\nimport { getUniqueId } from '../../helpers/util';\nexport const NavGroup = _a => {\n  var {\n    title,\n    children = null,\n    className = '',\n    id = getUniqueId()\n  } = _a,\n      props = __rest(_a, [\"title\", \"children\", \"className\", \"id\"]);\n\n  if (!title && !props['aria-label']) {\n    // eslint-disable-next-line no-console\n    console.warn(\"For accessibility reasons an aria-label should be specified on nav groups if a title isn't\");\n  }\n\n  const labelledBy = title ? id : undefined;\n  return React.createElement(\"section\", Object.assign({\n    className: css(styles.navSection, className),\n    \"aria-labelledby\": labelledBy\n  }, props), title && React.createElement(\"h2\", {\n    className: css(styles.navSectionTitle),\n    id: id\n  }, title), React.createElement(\"ul\", {\n    className: css(styles.navList, className)\n  }, children));\n};\nNavGroup.displayName = 'NavGroup';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,iDAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AAaA,OAAO,MAAMC,QAAQ,GAA4CC,EAAD,IAM5C;MAN6C;IAC/DC,KAD+D;IAE/DC,QAAQ,GAAG,IAFoD;IAG/DC,SAAS,GAAG,EAHmD;IAI/DC,EAAE,GAAGN,WAAW;EAJ+C,IAI7CE;MACfK,KAAK,cALuD,wCAKvD;;EAER,IAAI,CAACJ,KAAD,IAAU,CAACI,KAAK,CAAC,YAAD,CAApB,EAAoC;IAClC;IACAC,OAAO,CAACC,IAAR,CAAa,4FAAb;EACD;;EAED,MAAMC,UAAU,GAAGP,KAAK,GAAGG,EAAH,GAAQK,SAAhC;EAEA,OACEd;IAASQ,SAAS,EAAEN,GAAG,CAACD,MAAM,CAACc,UAAR,EAAoBP,SAApB,CAAvB;IAAqD,mBAAmBK;EAAxE,GAAwFH,KAAxF,GACGJ,KAAK,IACJN;IAAIQ,SAAS,EAAEN,GAAG,CAACD,MAAM,CAACe,eAAR,CAAlB;IAA4CP,EAAE,EAAEA;EAAhD,GACGH,KADH,CAFJ,EAMEN;IAAIQ,SAAS,EAAEN,GAAG,CAACD,MAAM,CAACgB,OAAR,EAAiBT,SAAjB;EAAlB,GAAgDD,QAAhD,CANF,CADF;AAUD,CAxBM;AAyBPH,QAAQ,CAACc,WAAT,GAAuB,UAAvB","names":["React","styles","css","getUniqueId","NavGroup","_a","title","children","className","id","props","console","warn","labelledBy","undefined","navSection","navSectionTitle","navList","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Nav/NavGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Nav/nav';\nimport { css } from '@patternfly/react-styles';\nimport { getUniqueId } from '../../helpers/util';\n\nexport interface NavGroupProps extends React.HTMLProps<HTMLDivElement> {\n  /** Title shown for the group */\n  title?: string;\n  /** Anything that can be rendered inside of the group */\n  children?: React.ReactNode;\n  /** Additional classes added to the container */\n  className?: string;\n  /** Identifier to use for the section aria label */\n  id?: string;\n}\n\nexport const NavGroup: React.FunctionComponent<NavGroupProps> = ({\n  title,\n  children = null,\n  className = '',\n  id = getUniqueId(),\n  ...props\n}: NavGroupProps) => {\n  if (!title && !props['aria-label']) {\n    // eslint-disable-next-line no-console\n    console.warn(\"For accessibility reasons an aria-label should be specified on nav groups if a title isn't\");\n  }\n\n  const labelledBy = title ? id : undefined;\n\n  return (\n    <section className={css(styles.navSection, className)} aria-labelledby={labelledBy} {...props}>\n      {title && (\n        <h2 className={css(styles.navSectionTitle)} id={id}>\n          {title}\n        </h2>\n      )}\n      <ul className={css(styles.navList, className)}>{children}</ul>\n    </section>\n  );\n};\nNavGroup.displayName = 'NavGroup';\n"]},"metadata":{},"sourceType":"module"}