{"ast":null,"code":"import _toConsumableArray from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport * as React from 'react';\nimport { createPopper as defaultCreatePopper } from '../popper-core/popper';\nimport { useIsomorphicLayoutEffect } from '../../../../helpers/useIsomorphicLayout';\n\nvar isEqual = function isEqual(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n/**\n * Simple ponyfill for Object.fromEntries\n */\n\n\nvar fromEntries = function fromEntries(entries) {\n  return entries.reduce(function (acc, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    acc[key] = value;\n    return acc;\n  }, {});\n};\n\nvar EMPTY_MODIFIERS = [];\nexport var usePopper = function usePopper(referenceElement, popperElement) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var prevOptions = React.useRef(null);\n  var optionsWithDefaults = {\n    onFirstUpdate: options.onFirstUpdate,\n    placement: options.placement || 'bottom',\n    strategy: options.strategy || 'absolute',\n    modifiers: options.modifiers || EMPTY_MODIFIERS\n  };\n\n  var _React$useState = React.useState({\n    styles: {\n      popper: {\n        position: optionsWithDefaults.strategy,\n        left: '0',\n        top: '0'\n      }\n    },\n    attributes: {}\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var updateStateModifier = React.useMemo(function () {\n    return {\n      name: 'updateState',\n      enabled: true,\n      phase: 'write',\n      // eslint-disable-next-line no-shadow\n      fn: function fn(_ref3) {\n        var state = _ref3.state;\n        var elements = Object.keys(state.elements);\n        setState({\n          styles: fromEntries(elements.map(function (element) {\n            return [element, state.styles[element] || {}];\n          })),\n          attributes: fromEntries(elements.map(function (element) {\n            return [element, state.attributes[element]];\n          }))\n        });\n      },\n      requires: ['computeStyles']\n    };\n  }, []);\n  var popperOptions = React.useMemo(function () {\n    var newOptions = {\n      onFirstUpdate: optionsWithDefaults.onFirstUpdate,\n      placement: optionsWithDefaults.placement,\n      strategy: optionsWithDefaults.strategy,\n      modifiers: [].concat(_toConsumableArray(optionsWithDefaults.modifiers), [updateStateModifier, {\n        name: 'applyStyles',\n        enabled: false\n      }])\n    };\n\n    if (isEqual(prevOptions.current, newOptions)) {\n      return prevOptions.current || newOptions;\n    } else {\n      prevOptions.current = newOptions;\n      return newOptions;\n    }\n  }, [optionsWithDefaults.onFirstUpdate, optionsWithDefaults.placement, optionsWithDefaults.strategy, optionsWithDefaults.modifiers, updateStateModifier]);\n  var popperInstanceRef = React.useRef();\n  useIsomorphicLayoutEffect(function () {\n    if (popperInstanceRef && popperInstanceRef.current) {\n      popperInstanceRef.current.setOptions(popperOptions);\n    }\n  }, [popperOptions]);\n  useIsomorphicLayoutEffect(function () {\n    if (referenceElement == null || popperElement == null) {\n      return;\n    }\n\n    var createPopper = options.createPopper || defaultCreatePopper;\n    var popperInstance = createPopper(referenceElement, popperElement, popperOptions);\n    popperInstanceRef.current = popperInstance;\n    return function () {\n      popperInstance.destroy();\n      popperInstanceRef.current = null;\n    };\n  }, [referenceElement, popperElement, options.createPopper]);\n  return {\n    state: popperInstanceRef.current ? popperInstanceRef.current.state : null,\n    styles: state.styles,\n    attributes: state.attributes,\n    update: popperInstanceRef.current ? popperInstanceRef.current.update : null,\n    forceUpdate: popperInstanceRef.current ? popperInstanceRef.current.forceUpdate : null\n  };\n};","map":{"version":3,"mappings":";;;AAAA;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAY,IAAIC,mBAAzB,QAA8F,uBAA9F;AACA,SAASC,yBAAT,QAA0C,yCAA1C;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,CAAD,EAASC,CAAT;EAAA,OAAoBC,IAAI,CAACC,SAAL,CAAeH,CAAf,MAAsBE,IAAI,CAACC,SAAL,CAAeF,CAAf,CAA1C;AAAA,CAAhB;AAEA;;;;;AAGA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD;EAAA,OAClBA,OAAO,CAACC,MAAR,CAAe,UAACC,GAAD,QAA2B;IAAA;IAAA,IAAfC,GAAe;IAAA,IAAVC,KAAU;;IACxCF,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;IACA,OAAOF,GAAP;EACD,CAHD,EAGG,EAHH,CADkB;AAAA,CAApB;;AAuBA,IAAMG,eAAe,GAAQ,EAA7B;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CACvBC,gBADuB,EAEvBC,aAFuB,EAIrB;EAAA,IADFC,OACE,uEADiB,EACjB;EACF,IAAMC,WAAW,GAAGpB,KAAK,CAACqB,MAAN,CAA+C,IAA/C,CAApB;EAEA,IAAMC,mBAAmB,GAAG;IAC1BC,aAAa,EAAEJ,OAAO,CAACI,aADG;IAE1BC,SAAS,EAAEL,OAAO,CAACK,SAAR,IAAqB,QAFN;IAG1BC,QAAQ,EAAEN,OAAO,CAACM,QAAR,IAAoB,UAHJ;IAI1BC,SAAS,EAAEP,OAAO,CAACO,SAAR,IAAqBX;EAJN,CAA5B;;EAOA,sBAA0Bf,KAAK,CAAC2B,QAAN,CAAsB;IAC9CC,MAAM,EAAE;MACNC,MAAM,EAAE;QACNC,QAAQ,EAAER,mBAAmB,CAACG,QADxB;QAENM,IAAI,EAAE,GAFA;QAGNC,GAAG,EAAE;MAHC;IADF,CADsC;IAQ9CC,UAAU,EAAE;EARkC,CAAtB,CAA1B;EAAA;EAAA,IAAOC,KAAP;EAAA,IAAcC,QAAd;;EAWA,IAAMC,mBAAmB,GAAGpC,KAAK,CAACqC,OAAN,CAC1B;IAAA,OAAO;MACLC,IAAI,EAAE,aADD;MAELC,OAAO,EAAE,IAFJ;MAGLC,KAAK,EAAE,OAHF;MAIL;MACAC,EAAE,EAAE,mBAAmB;QAAA,IAAhBP,KAAgB,SAAhBA,KAAgB;QACrB,IAAMQ,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYV,KAAK,CAACQ,QAAlB,CAAjB;QAEAP,QAAQ,CAAC;UACPP,MAAM,EAAEnB,WAAW,CAACiC,QAAQ,CAACG,GAAT,CAAa,iBAAO;YAAA,OAAI,CAACC,OAAD,EAAUZ,KAAK,CAACN,MAAN,CAAakB,OAAb,KAAyB,EAAnC,CAAJ;UAAA,CAApB,CAAD,CADZ;UAEPb,UAAU,EAAExB,WAAW,CAACiC,QAAQ,CAACG,GAAT,CAAa,iBAAO;YAAA,OAAI,CAACC,OAAD,EAAUZ,KAAK,CAACD,UAAN,CAAiBa,OAAjB,CAAV,CAAJ;UAAA,CAApB,CAAD;QAFhB,CAAD,CAAR;MAID,CAZI;MAaLC,QAAQ,EAAE,CAAC,eAAD;IAbL,CAAP;EAAA,CAD0B,EAgB1B,EAhB0B,CAA5B;EAmBA,IAAMC,aAAa,GAAGhD,KAAK,CAACqC,OAAN,CAAc,YAAK;IACvC,IAAMY,UAAU,GAAG;MACjB1B,aAAa,EAAED,mBAAmB,CAACC,aADlB;MAEjBC,SAAS,EAAEF,mBAAmB,CAACE,SAFd;MAGjBC,QAAQ,EAAEH,mBAAmB,CAACG,QAHb;MAIjBC,SAAS,+BAAMJ,mBAAmB,CAACI,SAA1B,IAAqCU,mBAArC,EAA0D;QAAEE,IAAI,EAAE,aAAR;QAAuBC,OAAO,EAAE;MAAhC,CAA1D;IAJQ,CAAnB;;IAOA,IAAInC,OAAO,CAACgB,WAAW,CAAC8B,OAAb,EAAsBD,UAAtB,CAAX,EAA8C;MAC5C,OAAO7B,WAAW,CAAC8B,OAAZ,IAAuBD,UAA9B;IACD,CAFD,MAEO;MACL7B,WAAW,CAAC8B,OAAZ,GAAsBD,UAAtB;MACA,OAAOA,UAAP;IACD;EACF,CAdqB,EAcnB,CACD3B,mBAAmB,CAACC,aADnB,EAEDD,mBAAmB,CAACE,SAFnB,EAGDF,mBAAmB,CAACG,QAHnB,EAIDH,mBAAmB,CAACI,SAJnB,EAKDU,mBALC,CAdmB,CAAtB;EAsBA,IAAMe,iBAAiB,GAAGnD,KAAK,CAACqB,MAAN,EAA1B;EAEAlB,yBAAyB,CAAC,YAAK;IAC7B,IAAIgD,iBAAiB,IAAIA,iBAAiB,CAACD,OAA3C,EAAoD;MAClDC,iBAAiB,CAACD,OAAlB,CAA0BE,UAA1B,CAAqCJ,aAArC;IACD;EACF,CAJwB,EAItB,CAACA,aAAD,CAJsB,CAAzB;EAMA7C,yBAAyB,CAAC,YAAK;IAC7B,IAAIc,gBAAgB,IAAI,IAApB,IAA4BC,aAAa,IAAI,IAAjD,EAAuD;MACrD;IACD;;IAED,IAAMjB,YAAY,GAAGkB,OAAO,CAAClB,YAAR,IAAwBC,mBAA7C;IACA,IAAMmD,cAAc,GAAGpD,YAAY,CAACgB,gBAAD,EAAmBC,aAAnB,EAAkC8B,aAAlC,CAAnC;IAEAG,iBAAiB,CAACD,OAAlB,GAA4BG,cAA5B;IAEA,OAAO,YAAK;MACVA,cAAc,CAACC,OAAf;MACAH,iBAAiB,CAACD,OAAlB,GAA4B,IAA5B;IACD,CAHD;EAID,CAdwB,EActB,CAACjC,gBAAD,EAAmBC,aAAnB,EAAkCC,OAAO,CAAClB,YAA1C,CAdsB,CAAzB;EAgBA,OAAO;IACLiC,KAAK,EAAEiB,iBAAiB,CAACD,OAAlB,GAA4BC,iBAAiB,CAACD,OAAlB,CAA0BhB,KAAtD,GAA8D,IADhE;IAELN,MAAM,EAAEM,KAAK,CAACN,MAFT;IAGLK,UAAU,EAAEC,KAAK,CAACD,UAHb;IAILsB,MAAM,EAAEJ,iBAAiB,CAACD,OAAlB,GAA4BC,iBAAiB,CAACD,OAAlB,CAA0BK,MAAtD,GAA+D,IAJlE;IAKLC,WAAW,EAAEL,iBAAiB,CAACD,OAAlB,GAA4BC,iBAAiB,CAACD,OAAlB,CAA0BM,WAAtD,GAAoE;EAL5E,CAAP;AAOD,CAjGM","names":["React","createPopper","defaultCreatePopper","useIsomorphicLayoutEffect","isEqual","a","b","JSON","stringify","fromEntries","entries","reduce","acc","key","value","EMPTY_MODIFIERS","usePopper","referenceElement","popperElement","options","prevOptions","useRef","optionsWithDefaults","onFirstUpdate","placement","strategy","modifiers","useState","styles","popper","position","left","top","attributes","state","setState","updateStateModifier","useMemo","name","enabled","phase","fn","elements","Object","keys","map","element","requires","popperOptions","newOptions","current","popperInstanceRef","setOptions","popperInstance","destroy","update","forceUpdate"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/helpers/Popper/thirdparty/react-popper/usePopper.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/consistent-type-definitions */\n\nimport * as React from 'react';\nimport { createPopper as defaultCreatePopper, Options as PopperOptions, VirtualElement } from '../popper-core/popper';\nimport { useIsomorphicLayoutEffect } from '../../../../helpers/useIsomorphicLayout';\n\ntype $Shape<T extends object> = Partial<T>;\n\nconst isEqual = (a: any, b: any) => JSON.stringify(a) === JSON.stringify(b);\n\n/**\n * Simple ponyfill for Object.fromEntries\n */\nconst fromEntries = (entries: [string, any][]) =>\n  entries.reduce((acc: any, [key, value]) => {\n    acc[key] = value;\n    return acc;\n  }, {});\n\ntype Options = $Shape<\n  PopperOptions & {\n    createPopper: typeof defaultCreatePopper;\n  }\n>;\n\ntype State = {\n  styles: {\n    [key: string]: $Shape<CSSStyleDeclaration>;\n  };\n  attributes: {\n    [key: string]: {\n      [key: string]: string;\n    };\n  };\n};\n\nconst EMPTY_MODIFIERS: any = [];\n\nexport const usePopper = (\n  referenceElement: (Element | VirtualElement) | null | undefined,\n  popperElement: HTMLElement | null | undefined,\n  options: Options = {}\n) => {\n  const prevOptions = React.useRef<PopperOptions | null | undefined>(null);\n\n  const optionsWithDefaults = {\n    onFirstUpdate: options.onFirstUpdate,\n    placement: options.placement || 'bottom',\n    strategy: options.strategy || 'absolute',\n    modifiers: options.modifiers || EMPTY_MODIFIERS\n  };\n\n  const [state, setState] = React.useState<State>({\n    styles: {\n      popper: {\n        position: optionsWithDefaults.strategy,\n        left: '0',\n        top: '0'\n      }\n    },\n    attributes: {}\n  });\n\n  const updateStateModifier = React.useMemo(\n    () => ({\n      name: 'updateState',\n      enabled: true,\n      phase: 'write',\n      // eslint-disable-next-line no-shadow\n      fn: ({ state }: any) => {\n        const elements = Object.keys(state.elements);\n\n        setState({\n          styles: fromEntries(elements.map(element => [element, state.styles[element] || {}])),\n          attributes: fromEntries(elements.map(element => [element, state.attributes[element]]))\n        });\n      },\n      requires: ['computeStyles']\n    }),\n    []\n  );\n\n  const popperOptions = React.useMemo(() => {\n    const newOptions = {\n      onFirstUpdate: optionsWithDefaults.onFirstUpdate,\n      placement: optionsWithDefaults.placement,\n      strategy: optionsWithDefaults.strategy,\n      modifiers: [...optionsWithDefaults.modifiers, updateStateModifier, { name: 'applyStyles', enabled: false }]\n    };\n\n    if (isEqual(prevOptions.current, newOptions)) {\n      return prevOptions.current || newOptions;\n    } else {\n      prevOptions.current = newOptions;\n      return newOptions;\n    }\n  }, [\n    optionsWithDefaults.onFirstUpdate,\n    optionsWithDefaults.placement,\n    optionsWithDefaults.strategy,\n    optionsWithDefaults.modifiers,\n    updateStateModifier\n  ]);\n\n  const popperInstanceRef = React.useRef<any>();\n\n  useIsomorphicLayoutEffect(() => {\n    if (popperInstanceRef && popperInstanceRef.current) {\n      popperInstanceRef.current.setOptions(popperOptions);\n    }\n  }, [popperOptions]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (referenceElement == null || popperElement == null) {\n      return;\n    }\n\n    const createPopper = options.createPopper || defaultCreatePopper;\n    const popperInstance = createPopper(referenceElement, popperElement, popperOptions);\n\n    popperInstanceRef.current = popperInstance;\n\n    return () => {\n      popperInstance.destroy();\n      popperInstanceRef.current = null;\n    };\n  }, [referenceElement, popperElement, options.createPopper]);\n\n  return {\n    state: popperInstanceRef.current ? popperInstanceRef.current.state : null,\n    styles: state.styles,\n    attributes: state.attributes,\n    update: popperInstanceRef.current ? popperInstanceRef.current.update : null,\n    forceUpdate: popperInstanceRef.current ? popperInstanceRef.current.forceUpdate : null\n  };\n};\n"]},"metadata":{},"sourceType":"module"}