{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { Divider } from '../Divider';\nexport var TreeViewList = function TreeViewList(_a) {\n  var _a$isNested = _a.isNested,\n      isNested = _a$isNested === void 0 ? false : _a$isNested,\n      toolbar = _a.toolbar,\n      children = _a.children,\n      props = __rest(_a, [\"isNested\", \"toolbar\", \"children\"]);\n\n  return React.createElement(React.Fragment, null, toolbar && React.createElement(React.Fragment, null, toolbar, React.createElement(Divider, null)), React.createElement(\"ul\", Object.assign({\n    className: css('pf-c-tree-view__list'),\n    role: isNested ? 'group' : 'tree'\n  }, props), children));\n};\nTreeViewList.displayName = 'TreeViewList';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,SAASC,OAAT,QAAwB,YAAxB;AAWA,OAAO,IAAMC,YAAY,GAA+C,SAA3DA,YAA2D,CAACC,EAAD,EAKhD;oBAFdA,GAFRC;MAAAA,oCAAW;MACXC,UACQF,GADRE;MACAC,WAAQH,GAARG;MACGC,QAAKC,WAJ+D,mCAI/D;;EACe,OACvBT,0CACGM,OAAO,IACNN,oBAACA,KAAK,CAACU,QAAP,EAAe,IAAf,EACGJ,OADH,EAEEN,oBAACE,OAAD,EAAQ,IAAR,CAFF,CAFJ,EAOEF;IAAIW,SAAS,EAAEV,GAAG,CAAC,sBAAD,CAAlB;IAA4CW,IAAI,EAAEP,QAAQ,GAAG,OAAH,GAAa;EAAvE,GAAmFG,KAAnF,GACGD,QADH,CAPF,CADuB;AAYxB,CAjBM;AAkBPJ,YAAY,CAACU,WAAb,GAA2B,cAA3B","names":["React","css","Divider","TreeViewList","_a","isNested","toolbar","children","props","__rest","Fragment","className","role","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/TreeView/TreeViewList.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { Divider } from '../Divider';\n\nexport interface TreeViewListProps extends React.HTMLProps<HTMLUListElement> {\n  /** Flag indicating if the tree view is nested under another tree view */\n  isNested?: boolean;\n  /** Toolbar to display above the tree view */\n  toolbar?: React.ReactNode;\n  /** Child nodes of the current tree view */\n  children: React.ReactNode;\n}\n\nexport const TreeViewList: React.FunctionComponent<TreeViewListProps> = ({\n  isNested = false,\n  toolbar,\n  children,\n  ...props\n}: TreeViewListProps) => (\n  <>\n    {toolbar && (\n      <React.Fragment>\n        {toolbar}\n        <Divider />\n      </React.Fragment>\n    )}\n    <ul className={css('pf-c-tree-view__list')} role={isNested ? 'group' : 'tree'} {...props}>\n      {children}\n    </ul>\n  </>\n);\nTreeViewList.displayName = 'TreeViewList';\n"]},"metadata":{},"sourceType":"module"}