{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { InternalDropdownItem } from './InternalDropdownItem';\nimport { DropdownArrowContext } from './dropdownConstants';\nimport { useOUIAProps } from '../../helpers';\nexport const DropdownItem = _a => {\n  var {\n    children,\n    className,\n    component = 'a',\n    isDisabled = false,\n    isAriaDisabled = false,\n    isPlainText = false,\n    isHovered = false,\n    href,\n    tooltip,\n    tooltipProps = {},\n    listItemClassName,\n    onClick,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref,\n    // Types of Ref are different for React.FunctionComponent vs React.Component\n    additionalChild,\n    customChild,\n    tabIndex = -1,\n    icon = null,\n    autoFocus,\n    description = null,\n    styleChildren,\n    ouiaId,\n    ouiaSafe\n  } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"component\", \"isDisabled\", \"isAriaDisabled\", \"isPlainText\", \"isHovered\", \"href\", \"tooltip\", \"tooltipProps\", \"listItemClassName\", \"onClick\", \"ref\", \"additionalChild\", \"customChild\", \"tabIndex\", \"icon\", \"autoFocus\", \"description\", \"styleChildren\", \"ouiaId\", \"ouiaSafe\"]);\n\n  const ouiaProps = useOUIAProps(DropdownItem.displayName, ouiaId, ouiaSafe);\n  return React.createElement(DropdownArrowContext.Consumer, null, context => React.createElement(InternalDropdownItem, Object.assign({\n    context: context,\n    role: \"menuitem\",\n    tabIndex: tabIndex,\n    className: className,\n    component: component,\n    isDisabled: isDisabled,\n    isAriaDisabled: isAriaDisabled,\n    isPlainText: isPlainText,\n    isHovered: isHovered,\n    href: href,\n    tooltip: tooltip,\n    tooltipProps: tooltipProps,\n    listItemClassName: listItemClassName,\n    onClick: onClick,\n    additionalChild: additionalChild,\n    customChild: customChild,\n    icon: icon,\n    autoFocus: autoFocus,\n    styleChildren: styleChildren,\n    description: description\n  }, ouiaProps, props), children));\n};\nDropdownItem.displayName = 'DropdownItem';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAoCC,oBAApC,QAAgE,wBAAhE;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,SAASC,YAAT,QAAwC,eAAxC;AAgDA,OAAO,MAAMC,YAAY,GAAgDC,EAAD,IAyBhD;MAzBiD;IACvEC,QADuE;IAEvEC,SAFuE;IAGvEC,SAAS,GAAG,GAH2D;IAIvEC,UAAU,GAAG,KAJ0D;IAKvEC,cAAc,GAAG,KALsD;IAMvEC,WAAW,GAAG,KANyD;IAOvEC,SAAS,GAAG,KAP2D;IAQvEC,IARuE;IASvEC,OATuE;IAUvEC,YAAY,GAAG,EAVwD;IAWvEC,iBAXuE;IAYvEC,OAZuE;IAavE;IACAC,GAduE;IAclE;IACLC,eAfuE;IAgBvEC,WAhBuE;IAiBvEC,QAAQ,GAAG,CAAC,CAjB2D;IAkBvEC,IAAI,GAAG,IAlBgE;IAmBvEC,SAnBuE;IAoBvEC,WAAW,GAAG,IApByD;IAqBvEC,aArBuE;IAsBvEC,MAtBuE;IAuBvEC;EAvBuE,IAuB/DtB;MACLuB,KAAK,cAxB+D,qSAwB/D;;EAER,MAAMC,SAAS,GAAG1B,YAAY,CAACC,YAAY,CAAC0B,WAAd,EAA2BJ,MAA3B,EAAmCC,QAAnC,CAA9B;EACA,OACE3B,oBAACE,oBAAoB,CAAC6B,QAAtB,EAA8B,IAA9B,EACGC,OAAO,IACNhC,oBAACC,oBAAD,EAAqBgC;IACnBD,OAAO,EAAEA,OADU;IAEnBE,IAAI,EAAC,UAFc;IAGnBb,QAAQ,EAAEA,QAHS;IAInBd,SAAS,EAAEA,SAJQ;IAKnBC,SAAS,EAAEA,SALQ;IAMnBC,UAAU,EAAEA,UANO;IAOnBC,cAAc,EAAEA,cAPG;IAQnBC,WAAW,EAAEA,WARM;IASnBC,SAAS,EAAEA,SATQ;IAUnBC,IAAI,EAAEA,IAVa;IAWnBC,OAAO,EAAEA,OAXU;IAYnBC,YAAY,EAAEA,YAZK;IAanBC,iBAAiB,EAAEA,iBAbA;IAcnBC,OAAO,EAAEA,OAdU;IAenBE,eAAe,EAAEA,eAfE;IAgBnBC,WAAW,EAAEA,WAhBM;IAiBnBE,IAAI,EAAEA,IAjBa;IAkBnBC,SAAS,EAAEA,SAlBQ;IAmBnBE,aAAa,EAAEA,aAnBI;IAoBnBD,WAAW,EAAEA;EApBM,GAqBfK,SArBe,EAsBfD,KAtBe,CAArB,EAwBGtB,QAxBH,CAFJ,CADF;AAgCD,CA3DM;AA6DPF,YAAY,CAAC0B,WAAb,GAA2B,cAA3B","names":["React","InternalDropdownItem","DropdownArrowContext","useOUIAProps","DropdownItem","_a","children","className","component","isDisabled","isAriaDisabled","isPlainText","isHovered","href","tooltip","tooltipProps","listItemClassName","onClick","ref","additionalChild","customChild","tabIndex","icon","autoFocus","description","styleChildren","ouiaId","ouiaSafe","props","ouiaProps","displayName","Consumer","context","Object","role"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Dropdown/DropdownItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport { InternalDropdownItemProps, InternalDropdownItem } from './InternalDropdownItem';\nimport { DropdownArrowContext } from './dropdownConstants';\nimport { useOUIAProps, OUIAProps } from '../../helpers';\n\nexport interface DropdownItemProps extends InternalDropdownItemProps, OUIAProps {\n  /** Anything which can be rendered as dropdown item */\n  children?: React.ReactNode;\n  /** Classes applied to root element of dropdown item */\n  className?: string;\n  /** Class to be applied to list item */\n  listItemClassName?: string;\n  /**\n   * A ReactElement to render, or a string to use as the component tag.\n   * Example: component={<Link to=\"/components/alert/\">Alert</Link>}\n   * Example: component=\"button\"\n   * If React.isValidElement(component) the className prop will be injected unless styleChildren=\"false\"\n   */\n  component?: React.ReactNode;\n  /** ID for the component element */\n  componentID?: string;\n  /** Whether to set className on component when React.isValidElement(component) */\n  styleChildren?: boolean;\n  /** Render dropdown item as disabled option */\n  isDisabled?: boolean;\n  /** Render dropdown item as aria-disabled option */\n  isAriaDisabled?: boolean;\n  /** Render dropdown item as non-interactive item */\n  isPlainText?: boolean;\n  /** Forces display of the hover state of the element */\n  isHovered?: boolean;\n  /** Default hyperlink location */\n  href?: string;\n  /** Tooltip to display when hovered over the item */\n  tooltip?: React.ReactNode;\n  /** Additional tooltip props forwarded to the Tooltip component */\n  tooltipProps?: any;\n  /** Additional node to include alongside item within the <li> */\n  additionalChild?: React.ReactNode;\n  /** Custom item rendering that receives the DropdownContext */\n  customChild?: React.ReactNode;\n  /** tabIndex to use, null to unset it */\n  tabIndex?: number | null;\n  /** An image to display within the DropdownItem, appearing before any component children */\n  icon?: React.ReactNode;\n  /** Initial focus on the item when the menu is opened (Note: Only applicable to one of the items) */\n  autoFocus?: boolean;\n  /** A short description of the dropdown item, displayed under the dropdown item content */\n  description?: React.ReactNode;\n}\n\nexport const DropdownItem: React.FunctionComponent<DropdownItemProps> = ({\n  children,\n  className,\n  component = 'a',\n  isDisabled = false,\n  isAriaDisabled = false,\n  isPlainText = false,\n  isHovered = false,\n  href,\n  tooltip,\n  tooltipProps = {},\n  listItemClassName,\n  onClick,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ref, // Types of Ref are different for React.FunctionComponent vs React.Component\n  additionalChild,\n  customChild,\n  tabIndex = -1,\n  icon = null,\n  autoFocus,\n  description = null,\n  styleChildren,\n  ouiaId,\n  ouiaSafe,\n  ...props\n}: DropdownItemProps) => {\n  const ouiaProps = useOUIAProps(DropdownItem.displayName, ouiaId, ouiaSafe);\n  return (\n    <DropdownArrowContext.Consumer>\n      {context => (\n        <InternalDropdownItem\n          context={context}\n          role=\"menuitem\"\n          tabIndex={tabIndex}\n          className={className}\n          component={component}\n          isDisabled={isDisabled}\n          isAriaDisabled={isAriaDisabled}\n          isPlainText={isPlainText}\n          isHovered={isHovered}\n          href={href}\n          tooltip={tooltip}\n          tooltipProps={tooltipProps}\n          listItemClassName={listItemClassName}\n          onClick={onClick}\n          additionalChild={additionalChild}\n          customChild={customChild}\n          icon={icon}\n          autoFocus={autoFocus}\n          styleChildren={styleChildren}\n          description={description}\n          {...ouiaProps}\n          {...props}\n        >\n          {children}\n        </InternalDropdownItem>\n      )}\n    </DropdownArrowContext.Consumer>\n  );\n};\n\nDropdownItem.displayName = 'DropdownItem';\n"]},"metadata":{},"sourceType":"module"}