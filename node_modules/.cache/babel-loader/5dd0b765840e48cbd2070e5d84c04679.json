{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Accordion/accordion';\nimport { AccordionContext } from './AccordionContext';\nexport var Accordion = function Accordion(_a) {\n  var _a$children = _a.children,\n      children = _a$children === void 0 ? null : _a$children,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      _a$ariaLabel = _a['aria-label'],\n      ariaLabel = _a$ariaLabel === void 0 ? '' : _a$ariaLabel,\n      _a$headingLevel = _a.headingLevel,\n      headingLevel = _a$headingLevel === void 0 ? 'h3' : _a$headingLevel,\n      _a$asDefinitionList = _a.asDefinitionList,\n      asDefinitionList = _a$asDefinitionList === void 0 ? true : _a$asDefinitionList,\n      _a$isBordered = _a.isBordered,\n      isBordered = _a$isBordered === void 0 ? false : _a$isBordered,\n      _a$displaySize = _a.displaySize,\n      displaySize = _a$displaySize === void 0 ? 'default' : _a$displaySize,\n      props = __rest(_a, [\"children\", \"className\", 'aria-label', \"headingLevel\", \"asDefinitionList\", \"isBordered\", \"displaySize\"]);\n\n  var AccordionList = asDefinitionList ? 'dl' : 'div';\n  return React.createElement(AccordionList, Object.assign({\n    className: css(styles.accordion, isBordered && styles.modifiers.bordered, displaySize === 'large' && styles.modifiers.displayLg, className),\n    \"aria-label\": ariaLabel\n  }, props), React.createElement(AccordionContext.Provider, {\n    value: {\n      ContentContainer: asDefinitionList ? 'dd' : 'div',\n      ToggleContainer: asDefinitionList ? 'dt' : headingLevel\n    }\n  }, children));\n};\nAccordion.displayName = 'Accordion';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,6DAAnB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AAmBA,OAAO,IAAMC,SAAS,GAA4C,SAArDA,SAAqD,CAACC,EAAD,EAS7C;oBAFIA,GANvBC;MAAAA,oCAAW;qBAMYD,GALvBE;MAAAA,sCAAY;qBAKWF,GAJvB;MAAcG,sCAAY;wBAIHH,GAHvBI;MAAAA,4CAAe;4BAGQJ,GAFvBK;MAAAA,oDAAmB;sBAEIL,GADvBM;MAAAA,wCAAa;uBACUN,GAAvBO;MAAAA,0CAAc;MACXC,QAAKC,WARyD,wGAQzD;;EAER,IAAMC,aAAa,GAAQL,gBAAgB,GAAG,IAAH,GAAU,KAArD;EACA,OACEV,oBAACe,aAAD,EAAcC;IACZT,SAAS,EAAEN,GAAG,CACZC,MAAM,CAACe,SADK,EAEZN,UAAU,IAAIT,MAAM,CAACgB,SAAP,CAAiBC,QAFnB,EAGZP,WAAW,KAAK,OAAhB,IAA2BV,MAAM,CAACgB,SAAP,CAAiBE,SAHhC,EAIZb,SAJY,CADF;IAMX,cACWC;EAPA,GAQRK,KARQ,CAAd,EAUEb,oBAACG,gBAAgB,CAACkB,QAAlB,EAA0B;IACxBC,KAAK,EAAE;MACLC,gBAAgB,EAAEb,gBAAgB,GAAG,IAAH,GAAU,KADvC;MAELc,eAAe,EAAEd,gBAAgB,GAAG,IAAH,GAAUD;IAFtC;EADiB,CAA1B,EAMGH,QANH,CAVF,CADF;AAqBD,CAhCM;AAiCPF,SAAS,CAACqB,WAAV,GAAwB,WAAxB","names":["React","css","styles","AccordionContext","Accordion","_a","children","className","ariaLabel","headingLevel","asDefinitionList","isBordered","displaySize","props","__rest","AccordionList","Object","accordion","modifiers","bordered","displayLg","Provider","value","ContentContainer","ToggleContainer","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Accordion/Accordion.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Accordion/accordion';\nimport { AccordionContext } from './AccordionContext';\n\nexport interface AccordionProps extends React.HTMLProps<HTMLDListElement> {\n  /** Content rendered inside the Accordion  */\n  children?: React.ReactNode;\n  /** Additional classes added to the Accordion  */\n  className?: string;\n  /** Adds accessible text to the Accordion */\n  'aria-label'?: string;\n  /** Heading level to use */\n  headingLevel?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n  /** Flag to indicate whether use definition list or div */\n  asDefinitionList?: boolean;\n  /** Flag to indicate the accordion had a border */\n  isBordered?: boolean;\n  /** Display size variant. */\n  displaySize?: 'default' | 'large';\n}\n\nexport const Accordion: React.FunctionComponent<AccordionProps> = ({\n  children = null,\n  className = '',\n  'aria-label': ariaLabel = '',\n  headingLevel = 'h3',\n  asDefinitionList = true,\n  isBordered = false,\n  displaySize = 'default',\n  ...props\n}: AccordionProps) => {\n  const AccordionList: any = asDefinitionList ? 'dl' : 'div';\n  return (\n    <AccordionList\n      className={css(\n        styles.accordion,\n        isBordered && styles.modifiers.bordered,\n        displaySize === 'large' && styles.modifiers.displayLg,\n        className\n      )}\n      aria-label={ariaLabel}\n      {...props}\n    >\n      <AccordionContext.Provider\n        value={{\n          ContentContainer: asDefinitionList ? 'dd' : 'div',\n          ToggleContainer: asDefinitionList ? 'dt' : headingLevel\n        }}\n      >\n        {children}\n      </AccordionContext.Provider>\n    </AccordionList>\n  );\n};\nAccordion.displayName = 'Accordion';\n"]},"metadata":{},"sourceType":"module"}