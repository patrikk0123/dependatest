{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/AlertGroup/alert-group';\nexport const AlertGroupInline = _a => {\n  var {\n    className,\n    children,\n    isToast,\n    isLiveRegion,\n    onOverflowClick,\n    overflowMessage\n  } = _a,\n      rest = __rest(_a, [\"className\", \"children\", \"isToast\", \"isLiveRegion\", \"onOverflowClick\", \"overflowMessage\"]);\n\n  return React.createElement(\"ul\", Object.assign({\n    \"aria-live\": isLiveRegion ? 'polite' : null,\n    \"aria-atomic\": isLiveRegion ? false : null,\n    className: css(styles.alertGroup, className, isToast ? styles.modifiers.toast : '')\n  }, rest), React.Children.toArray(children).map((Alert, index) => React.createElement(\"li\", {\n    key: index\n  }, Alert)), overflowMessage && React.createElement(\"li\", null, React.createElement(\"button\", {\n    onClick: onOverflowClick,\n    className: css(styles.alertGroupOverflowButton)\n  }, overflowMessage)));\n};\nAlertGroupInline.displayName = 'AlertGroupInline';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,gEAAnB;AAGA,OAAO,MAAMC,gBAAgB,GAA8CC,EAAD,IAQpD;MARqD;IACzEC,SADyE;IAEzEC,QAFyE;IAGzEC,OAHyE;IAIzEC,YAJyE;IAKzEC,eALyE;IAMzEC;EANyE,IAM1DN;MACZO,IAAI,cAPkE,0FAOlE;;EACc,OACrBX;IAAA,aACaQ,YAAY,GAAG,QAAH,GAAc,IADvC;IAC2C,eAC5BA,YAAY,GAAG,KAAH,GAAW,IAFtC;IAGEH,SAAS,EAAEJ,GAAG,CAACC,MAAM,CAACU,UAAR,EAAoBP,SAApB,EAA+BE,OAAO,GAAGL,MAAM,CAACW,SAAP,CAAiBC,KAApB,GAA4B,EAAlE;EAHhB,GAIMH,IAJN,GAMGX,KAAK,CAACe,QAAN,CAAeC,OAAf,CAAuBV,QAAvB,EAAiCW,GAAjC,CAAqC,CAACC,KAAD,EAAyBC,KAAzB,KACpCnB;IAAIoB,GAAG,EAAED;EAAT,GAAiBD,KAAjB,CADD,CANH,EASGR,eAAe,IACdV,gCACEA;IAAQqB,OAAO,EAAEZ,eAAjB;IAAkCJ,SAAS,EAAEJ,GAAG,CAACC,MAAM,CAACoB,wBAAR;EAAhD,GACGZ,eADH,CADF,CAVJ,CADqB;AAkBtB,CA1BM;AA2BPP,gBAAgB,CAACoB,WAAjB,GAA+B,kBAA/B","names":["React","css","styles","AlertGroupInline","_a","className","children","isToast","isLiveRegion","onOverflowClick","overflowMessage","rest","alertGroup","modifiers","toast","Children","toArray","map","Alert","index","key","onClick","alertGroupOverflowButton","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/AlertGroup/AlertGroupInline.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/AlertGroup/alert-group';\nimport { AlertGroupProps } from './AlertGroup';\n\nexport const AlertGroupInline: React.FunctionComponent<AlertGroupProps> = ({\n  className,\n  children,\n  isToast,\n  isLiveRegion,\n  onOverflowClick,\n  overflowMessage,\n  ...rest\n}: AlertGroupProps) => (\n  <ul\n    aria-live={isLiveRegion ? 'polite' : null}\n    aria-atomic={isLiveRegion ? false : null}\n    className={css(styles.alertGroup, className, isToast ? styles.modifiers.toast : '')}\n    {...rest}\n  >\n    {React.Children.toArray(children).map((Alert: React.ReactNode, index: number) => (\n      <li key={index}>{Alert}</li>\n    ))}\n    {overflowMessage && (\n      <li>\n        <button onClick={onOverflowClick} className={css(styles.alertGroupOverflowButton)}>\n          {overflowMessage}\n        </button>\n      </li>\n    )}\n  </ul>\n);\nAlertGroupInline.displayName = 'AlertGroupInline';\n"]},"metadata":{},"sourceType":"module"}