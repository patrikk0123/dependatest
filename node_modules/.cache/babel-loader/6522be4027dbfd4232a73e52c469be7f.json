{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/TabContent/tab-content';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps } from '../../helpers';\nimport { TabsContextConsumer } from './TabsContext';\nconst variantStyle = {\n  default: '',\n  light300: styles.modifiers.light_300\n};\n\nconst TabContentBase = _a => {\n  var {\n    id,\n    activeKey,\n    'aria-label': ariaLabel,\n    child,\n    children,\n    className,\n    eventKey,\n    innerRef,\n    ouiaId,\n    ouiaSafe\n  } = _a,\n      props = __rest(_a, [\"id\", \"activeKey\", 'aria-label', \"child\", \"children\", \"className\", \"eventKey\", \"innerRef\", \"ouiaId\", \"ouiaSafe\"]);\n\n  if (children || child) {\n    let labelledBy;\n\n    if (ariaLabel) {\n      labelledBy = null;\n    } else {\n      labelledBy = children ? `pf-tab-${eventKey}-${id}` : `pf-tab-${child.props.eventKey}-${id}`;\n    }\n\n    return React.createElement(TabsContextConsumer, null, _ref => {\n      let {\n        variant\n      } = _ref;\n      return React.createElement(\"section\", Object.assign({\n        ref: innerRef,\n        hidden: children ? null : child.props.eventKey !== activeKey,\n        className: children ? css('pf-c-tab-content', className, variantStyle[variant]) : css('pf-c-tab-content', child.props.className, variantStyle[variant]),\n        id: children ? id : `pf-tab-section-${child.props.eventKey}-${id}`,\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": labelledBy,\n        role: \"tabpanel\",\n        tabIndex: 0\n      }, getOUIAProps('TabContent', ouiaId, ouiaSafe), props), children || child.props.children);\n    });\n  }\n\n  return null;\n};\n\nexport const TabContent = React.forwardRef((props, ref) => React.createElement(TabContentBase, Object.assign({}, props, {\n  innerRef: ref\n})));","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,gEAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,SAASC,YAAT,QAAwC,eAAxC;AACA,SAASC,mBAAT,QAAsD,eAAtD;AAqBA,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,EADU;EAEnBC,QAAQ,EAAEN,MAAM,CAACO,SAAP,CAAiBC;AAFR,CAArB;;AAKA,MAAMC,cAAc,GAA8CC,EAAD,IAY3C;MAZ4C;IAChEC,EADgE;IAEhEC,SAFgE;IAGhE,cAAcC,SAHkD;IAIhEC,KAJgE;IAKhEC,QALgE;IAMhEC,SANgE;IAOhEC,QAPgE;IAQhEC,QARgE;IAShEC,MATgE;IAUhEC;EAVgE,IAUxDV;MACLW,KAAK,cAXwD,iHAWxD;;EAER,IAAIN,QAAQ,IAAID,KAAhB,EAAuB;IACrB,IAAIQ,UAAJ;;IACA,IAAIT,SAAJ,EAAe;MACbS,UAAU,GAAG,IAAb;IACD,CAFD,MAEO;MACLA,UAAU,GAAGP,QAAQ,GAAG,UAAUE,QAAQ,IAAIN,EAAE,EAA3B,GAAgC,UAAUG,KAAK,CAACO,KAAN,CAAYJ,QAAQ,IAAIN,EAAE,EAAzF;IACD;;IAED,OACEZ,oBAACI,mBAAD,EAAoB,IAApB,EACG;MAAA,IAAC;QAAEoB;MAAF,CAAD;MAAA,OACCxB;QACEyB,GAAG,EAAEN,QADP;QAEEO,MAAM,EAAEV,QAAQ,GAAG,IAAH,GAAUD,KAAK,CAACO,KAAN,CAAYJ,QAAZ,KAAyBL,SAFrD;QAGEI,SAAS,EACPD,QAAQ,GACJd,GAAG,CAAC,kBAAD,EAAqBe,SAArB,EAAgCZ,YAAY,CAACmB,OAAD,CAA5C,CADC,GAEJtB,GAAG,CAAC,kBAAD,EAAqBa,KAAK,CAACO,KAAN,CAAYL,SAAjC,EAA4CZ,YAAY,CAACmB,OAAD,CAAxD,CANX;QAQEZ,EAAE,EAAEI,QAAQ,GAAGJ,EAAH,GAAQ,kBAAkBG,KAAK,CAACO,KAAN,CAAYJ,QAAQ,IAAIN,EAAE,EARlE;QAQoE,cACtDE,SATd;QASuB,mBACJS,UAVnB;QAWEI,IAAI,EAAC,UAXP;QAYEC,QAAQ,EAAE;MAZZ,GAaMzB,YAAY,CAAC,YAAD,EAAeiB,MAAf,EAAuBC,QAAvB,CAblB,EAcMC,KAdN,GAgBGN,QAAQ,IAAID,KAAK,CAACO,KAAN,CAAYN,QAhB3B,CADD;IAAA,CADH,CADF;EAwBD;;EACD,OAAO,IAAP;AACD,CA/CD;;AAiDA,OAAO,MAAMa,UAAU,GAAG7B,KAAK,CAAC8B,UAAN,CAAiB,CAACR,KAAD,EAAyBG,GAAzB,KACzCzB,oBAACU,cAAD,EAAeqB,kBAAKT,KAAL,EAAU;EAAEH,QAAQ,EAAEM;AAAZ,CAAV,CAAf,CADwB,CAAnB","names":["React","styles","css","getOUIAProps","TabsContextConsumer","variantStyle","default","light300","modifiers","light_300","TabContentBase","_a","id","activeKey","ariaLabel","child","children","className","eventKey","innerRef","ouiaId","ouiaSafe","props","labelledBy","variant","ref","hidden","role","tabIndex","TabContent","forwardRef","Object"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Tabs/TabContent.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/TabContent/tab-content';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, OUIAProps } from '../../helpers';\nimport { TabsContextConsumer, TabsContextProps } from './TabsContext';\n\nexport interface TabContentProps extends Omit<React.HTMLProps<HTMLElement>, 'ref'>, OUIAProps {\n  /** content rendered inside the tab content area if used outside Tabs component */\n  children?: any;\n  /** Child to show in the content area */\n  child?: React.ReactElement<any>;\n  /** class of tab content area if used outside Tabs component */\n  className?: string;\n  /** Identifies the active Tab  */\n  activeKey?: number | string;\n  /** uniquely identifies the controlling Tab if used outside Tabs component */\n  eventKey?: number | string;\n  /** Callback for the section ref */\n  innerRef?: React.Ref<any>;\n  /** id passed from parent to identify the content section */\n  id: string;\n  /** title of controlling Tab if used outside Tabs component */\n  'aria-label'?: string;\n}\n\nconst variantStyle = {\n  default: '',\n  light300: styles.modifiers.light_300\n};\n\nconst TabContentBase: React.FunctionComponent<TabContentProps> = ({\n  id,\n  activeKey,\n  'aria-label': ariaLabel,\n  child,\n  children,\n  className,\n  eventKey,\n  innerRef,\n  ouiaId,\n  ouiaSafe,\n  ...props\n}: TabContentProps) => {\n  if (children || child) {\n    let labelledBy: string;\n    if (ariaLabel) {\n      labelledBy = null;\n    } else {\n      labelledBy = children ? `pf-tab-${eventKey}-${id}` : `pf-tab-${child.props.eventKey}-${id}`;\n    }\n\n    return (\n      <TabsContextConsumer>\n        {({ variant }: TabsContextProps) => (\n          <section\n            ref={innerRef}\n            hidden={children ? null : child.props.eventKey !== activeKey}\n            className={\n              children\n                ? css('pf-c-tab-content', className, variantStyle[variant])\n                : css('pf-c-tab-content', child.props.className, variantStyle[variant])\n            }\n            id={children ? id : `pf-tab-section-${child.props.eventKey}-${id}`}\n            aria-label={ariaLabel}\n            aria-labelledby={labelledBy}\n            role=\"tabpanel\"\n            tabIndex={0}\n            {...getOUIAProps('TabContent', ouiaId, ouiaSafe)}\n            {...props}\n          >\n            {children || child.props.children}\n          </section>\n        )}\n      </TabsContextConsumer>\n    );\n  }\n  return null;\n};\n\nexport const TabContent = React.forwardRef((props: TabContentProps, ref: React.Ref<HTMLElement>) => (\n  <TabContentBase {...props} innerRef={ref} />\n));\n"]},"metadata":{},"sourceType":"module"}