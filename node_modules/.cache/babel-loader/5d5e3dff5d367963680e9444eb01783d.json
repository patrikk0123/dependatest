{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/DescriptionList/description-list';\nimport { css } from '@patternfly/react-styles';\nexport const DescriptionListTerm = _a => {\n  var {\n    children,\n    className,\n    icon\n  } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"icon\"]);\n\n  return React.createElement(\"dt\", Object.assign({\n    className: css(styles.descriptionListTerm, className)\n  }, props), icon ? React.createElement(\"span\", {\n    className: css(styles.descriptionListTermIcon)\n  }, icon) : null, React.createElement(\"span\", {\n    className: css(styles.descriptionListText)\n  }, children));\n};\nDescriptionListTerm.displayName = 'DescriptionListTerm';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,0EAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AAWA,OAAO,MAAMC,mBAAmB,GAAuDC,EAAD,IAKvD;MALwD;IACrFC,QADqF;IAErFC,SAFqF;IAGrFC;EAHqF,IAGjFH;MACDI,KAAK,cAJ6E,iCAI7E;;EACsB,OAC9BR;IAAIM,SAAS,EAAEJ,GAAG,CAACD,MAAM,CAACQ,mBAAR,EAA6BH,SAA7B;EAAlB,GAA+DE,KAA/D,GACGD,IAAI,GAAGP;IAAMM,SAAS,EAAEJ,GAAG,CAACD,MAAM,CAACS,uBAAR;EAApB,GAAuDH,IAAvD,CAAH,GAAyE,IADhF,EAEEP;IAAMM,SAAS,EAAEJ,GAAG,CAACD,MAAM,CAACU,mBAAR;EAApB,GAAmDN,QAAnD,CAFF,CAD8B;AAK/B,CAVM;AAWPF,mBAAmB,CAACS,WAApB,GAAkC,qBAAlC","names":["React","styles","css","DescriptionListTerm","_a","children","className","icon","props","descriptionListTerm","descriptionListTermIcon","descriptionListText","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/DescriptionList/DescriptionListTerm.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/DescriptionList/description-list';\nimport { css } from '@patternfly/react-styles';\n\nexport interface DescriptionListTermProps extends React.HTMLProps<HTMLElement> {\n  /** Anything that can be rendered inside of list term */\n  children: React.ReactNode;\n  /** Icon that is rendered inside of list term to the left side of the children */\n  icon?: React.ReactNode;\n  /** Additional classes added to the DescriptionListTerm */\n  className?: string;\n}\n\nexport const DescriptionListTerm: React.FunctionComponent<DescriptionListTermProps> = ({\n  children,\n  className,\n  icon,\n  ...props\n}: DescriptionListTermProps) => (\n  <dt className={css(styles.descriptionListTerm, className)} {...props}>\n    {icon ? <span className={css(styles.descriptionListTermIcon)}>{icon}</span> : null}\n    <span className={css(styles.descriptionListText)}>{children}</span>\n  </dt>\n);\nDescriptionListTerm.displayName = 'DescriptionListTerm';\n"]},"metadata":{},"sourceType":"module"}