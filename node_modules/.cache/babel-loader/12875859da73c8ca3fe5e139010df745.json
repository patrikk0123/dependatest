{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button';\nimport PencilAltIcon from '@patternfly/react-icons/dist/esm/icons/pencil-alt-icon';\nimport CheckIcon from '@patternfly/react-icons/dist/esm/icons/check-icon';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport inlineStyles from '@patternfly/react-styles/css/components/InlineEdit/inline-edit';\nimport { css } from '@patternfly/react-styles';\nexport var EditColumn = function EditColumn(_a) {\n  var _a$onClick = _a.onClick,\n      _onClick = _a$onClick === void 0 ? null : _a$onClick,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      editing = _a.editing,\n      valid = _a.valid,\n      saveAriaLabel = _a.saveAriaLabel,\n      cancelAriaLabel = _a.cancelAriaLabel,\n      editAriaLabel = _a.editAriaLabel,\n      props = __rest(_a, [\"onClick\", \"className\", \"editing\", \"valid\", \"saveAriaLabel\", \"cancelAriaLabel\", \"editAriaLabel\"]);\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: css(inlineStyles.inlineEditGroup, inlineStyles.modifiers.iconGroup, 'pf-m-action-group')\n  }, React.createElement(\"div\", {\n    className: css(inlineStyles.inlineEditAction)\n  }, React.createElement(Button, Object.assign({\n    \"aria-label\": saveAriaLabel\n  }, props, {\n    onClick: function onClick(e) {\n      return _onClick(e, 'save');\n    },\n    variant: \"plain\"\n  }), React.createElement(CheckIcon, null))), React.createElement(\"div\", {\n    className: css(inlineStyles.inlineEditAction)\n  }, React.createElement(Button, Object.assign({\n    \"aria-label\": cancelAriaLabel\n  }, props, {\n    onClick: function onClick(e) {\n      return _onClick(e, 'cancel');\n    },\n    variant: \"plain\"\n  }), React.createElement(TimesIcon, null)))), React.createElement(\"div\", {\n    className: css(inlineStyles.inlineEditAction, inlineStyles.modifiers.enableEditable)\n  }, React.createElement(Button, Object.assign({\n    \"aria-label\": editAriaLabel\n  }, props, {\n    onClick: function onClick(e) {\n      return _onClick(e, 'edit');\n    },\n    variant: \"plain\"\n  }), React.createElement(PencilAltIcon, null))));\n};\nEditColumn.displayName = 'EditColumn';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,mDAAvB;AACA,OAAOC,aAAP,MAA0B,wDAA1B;AACA,OAAOC,SAAP,MAAsB,mDAAtB;AACA,OAAOC,SAAP,MAAsB,mDAAtB;AAEA,OAAOC,YAAP,MAAyB,gEAAzB;AACA,SAASC,GAAT,QAAoB,0BAApB;AAaA,OAAO,IAAMC,UAAU,GAA6C,SAAvDA,UAAuD,CAACC,EAAD,EAW9C;mBAFPA,GARbC;MAAAA,mCAAU;qBAQGD,GANbE;MAAAA,sCAAY;MACZC,UAKaH,GALbG;MACAC,QAIaJ,GAJbI;MAEAC,gBAEaL,GAFbK;MACAC,kBACaN,GADbM;MACAC,gBAAaP,GAAbO;MACGC,QAAKC,WAV2D,iGAU3D;;EACa,OACrBjB,oBAACA,KAAK,CAACkB,QAAP,EAAe,IAAf,EACElB;IAAKU,SAAS,EAAEJ,GAAG,CAACD,YAAY,CAACc,eAAd,EAA+Bd,YAAY,CAACe,SAAb,CAAuBC,SAAtD,EAAiE,mBAAjE;EAAnB,GACErB;IAAKU,SAAS,EAAEJ,GAAG,CAACD,YAAY,CAACiB,gBAAd;EAAnB,GACEtB,oBAACC,MAAD,EAAOsB;IAAA,cAAaV;EAAb,GAAgCG,KAAhC,EAAqC;IAAEP,OAAO,EAAE,kBAAC;MAAA,OAAIA,QAAO,CAACe,CAAD,EAAI,MAAJ,CAAX;IAAA,CAAZ;IAAoCC,OAAO,EAAC;EAA5C,CAArC,CAAP,EACEzB,oBAACG,SAAD,EAAU,IAAV,CADF,CADF,CADF,EAMEH;IAAKU,SAAS,EAAEJ,GAAG,CAACD,YAAY,CAACiB,gBAAd;EAAnB,GACEtB,oBAACC,MAAD,EAAOsB;IAAA,cAAaT;EAAb,GAAkCE,KAAlC,EAAuC;IAAEP,OAAO,EAAE,kBAAC;MAAA,OAAIA,QAAO,CAACe,CAAD,EAAI,QAAJ,CAAX;IAAA,CAAZ;IAAsCC,OAAO,EAAC;EAA9C,CAAvC,CAAP,EACEzB,oBAACI,SAAD,EAAU,IAAV,CADF,CADF,CANF,CADF,EAaEJ;IAAKU,SAAS,EAAEJ,GAAG,CAACD,YAAY,CAACiB,gBAAd,EAAgCjB,YAAY,CAACe,SAAb,CAAuBM,cAAvD;EAAnB,GACE1B,oBAACC,MAAD,EAAOsB;IAAA,cAAaR;EAAb,GAAgCC,KAAhC,EAAqC;IAAEP,OAAO,EAAE,kBAAC;MAAA,OAAIA,QAAO,CAACe,CAAD,EAAI,MAAJ,CAAX;IAAA,CAAZ;IAAoCC,OAAO,EAAC;EAA5C,CAArC,CAAP,EACEzB,oBAACE,aAAD,EAAc,IAAd,CADF,CADF,CAbF,CADqB;AAoBtB,CA/BM;AAgCPK,UAAU,CAACoB,WAAX,GAAyB,YAAzB","names":["React","Button","PencilAltIcon","CheckIcon","TimesIcon","inlineStyles","css","EditColumn","_a","onClick","className","editing","valid","saveAriaLabel","cancelAriaLabel","editAriaLabel","props","__rest","Fragment","inlineEditGroup","modifiers","iconGroup","inlineEditAction","Object","e","variant","enableEditable","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-table/src/components/Table/EditColumn.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button';\nimport PencilAltIcon from '@patternfly/react-icons/dist/esm/icons/pencil-alt-icon';\nimport CheckIcon from '@patternfly/react-icons/dist/esm/icons/check-icon';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport { OnRowEdit } from './TableTypes';\nimport inlineStyles from '@patternfly/react-styles/css/components/InlineEdit/inline-edit';\nimport { css } from '@patternfly/react-styles';\n\nexport interface EditColumnProps {\n  name?: string;\n  className?: string;\n  onClick?: OnRowEdit;\n  editing?: boolean;\n  valid?: boolean;\n  saveAriaLabel: string;\n  cancelAriaLabel: string;\n  editAriaLabel: string;\n}\n\nexport const EditColumn: React.FunctionComponent<EditColumnProps> = ({\n  onClick = null,\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  className = '',\n  editing,\n  valid,\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n  saveAriaLabel,\n  cancelAriaLabel,\n  editAriaLabel,\n  ...props\n}: EditColumnProps) => (\n  <React.Fragment>\n    <div className={css(inlineStyles.inlineEditGroup, inlineStyles.modifiers.iconGroup, 'pf-m-action-group')}>\n      <div className={css(inlineStyles.inlineEditAction)}>\n        <Button aria-label={saveAriaLabel} {...props} onClick={e => onClick(e, 'save')} variant=\"plain\">\n          <CheckIcon />\n        </Button>\n      </div>\n      <div className={css(inlineStyles.inlineEditAction)}>\n        <Button aria-label={cancelAriaLabel} {...props} onClick={e => onClick(e, 'cancel')} variant=\"plain\">\n          <TimesIcon />\n        </Button>\n      </div>\n    </div>\n    <div className={css(inlineStyles.inlineEditAction, inlineStyles.modifiers.enableEditable)}>\n      <Button aria-label={editAriaLabel} {...props} onClick={e => onClick(e, 'edit')} variant=\"plain\">\n        <PencilAltIcon />\n      </Button>\n    </div>\n  </React.Fragment>\n);\nEditColumn.displayName = 'EditColumn';\n"]},"metadata":{},"sourceType":"module"}