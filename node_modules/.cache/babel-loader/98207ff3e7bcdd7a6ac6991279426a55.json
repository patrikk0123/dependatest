{"ast":null,"code":"var _jsxFileName = \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/EmptyStates/LoadingStateCard.tsx\";\nimport { useEffect, useState } from 'react';\nimport { StateCard } from './StateCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Spinner = () => /*#__PURE__*/_jsxDEV(\"span\", {\n  className: \"pf-c-spinner\",\n  role: \"progressbar\",\n  \"aria-valuetext\": \"Loading...\",\n  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"pf-c-spinner__clipper\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"pf-c-spinner__lead-ball\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"pf-c-spinner__tail-ball\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n\n/**\n * Loading State component with delayed render. It will be displayed after defined waiting time\n * to prevent flashing user experience when spinner is displayed and almost immediately replaced.\n *\n * @param delayMilliseconds - Waiting time before component gets rendered\n * @param title - Title subject, for example \"Project List\"\n */\nexport const LoadingStateCard = _ref => {\n  let {\n    delayMilliseconds = 750,\n    title\n  } = _ref;\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    const timer = setTimeout(() => setShow(true), delayMilliseconds);\n    return () => clearTimeout(timer);\n  }, [delayMilliseconds]);\n\n  if (show) {\n    return /*#__PURE__*/_jsxDEV(StateCard, {\n      title: `Loading ${title}`,\n      icon: Spinner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n\n  return null;\n};","map":{"version":3,"names":["useEffect","useState","StateCard","Spinner","LoadingStateCard","delayMilliseconds","title","show","setShow","timer","setTimeout","clearTimeout"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/EmptyStates/LoadingStateCard.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { StateCard } from './StateCard';\n\nconst Spinner = () => (\n  <span className=\"pf-c-spinner\" role=\"progressbar\" aria-valuetext=\"Loading...\">\n    <span className=\"pf-c-spinner__clipper\" />\n    <span className=\"pf-c-spinner__lead-ball\" />\n    <span className=\"pf-c-spinner__tail-ball\" />\n  </span>\n);\n\ninterface ILoadingStateCard {\n  delayMilliseconds?: number;\n  title: string;\n}\n\n/**\n * Loading State component with delayed render. It will be displayed after defined waiting time\n * to prevent flashing user experience when spinner is displayed and almost immediately replaced.\n *\n * @param delayMilliseconds - Waiting time before component gets rendered\n * @param title - Title subject, for example \"Project List\"\n */\nexport const LoadingStateCard = ({ delayMilliseconds = 750, title }: ILoadingStateCard) => {\n  const [show, setShow] = useState<boolean>(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setShow(true), delayMilliseconds);\n\n    return () => clearTimeout(timer);\n  }, [delayMilliseconds]);\n\n  if (show) {\n    return <StateCard title={`Loading ${title}`} icon={Spinner}></StateCard>;\n  }\n  return null;\n};\n"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;;;AAEA,MAAMC,OAAO,GAAG,mBACd;EAAM,SAAS,EAAC,cAAhB;EAA+B,IAAI,EAAC,aAApC;EAAkD,kBAAe,YAAjE;EAAA,wBACE;IAAM,SAAS,EAAC;EAAhB;IAAA;IAAA;IAAA;EAAA,QADF,eAEE;IAAM,SAAS,EAAC;EAAhB;IAAA;IAAA;IAAA;EAAA,QAFF,eAGE;IAAM,SAAS,EAAC;EAAhB;IAAA;IAAA;IAAA;EAAA,QAHF;AAAA;EAAA;EAAA;EAAA;AAAA,QADF;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,gBAAgB,GAAG,QAA2D;EAAA,IAA1D;IAAEC,iBAAiB,GAAG,GAAtB;IAA2BC;EAA3B,CAA0D;EACzF,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAU,KAAV,CAAhC;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMS,KAAK,GAAGC,UAAU,CAAC,MAAMF,OAAO,CAAC,IAAD,CAAd,EAAsBH,iBAAtB,CAAxB;IAEA,OAAO,MAAMM,YAAY,CAACF,KAAD,CAAzB;EACD,CAJQ,EAIN,CAACJ,iBAAD,CAJM,CAAT;;EAMA,IAAIE,IAAJ,EAAU;IACR,oBAAO,QAAC,SAAD;MAAW,KAAK,EAAG,WAAUD,KAAM,EAAnC;MAAsC,IAAI,EAAEH;IAA5C;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EACD,OAAO,IAAP;AACD,CAbM"},"metadata":{},"sourceType":"module"}