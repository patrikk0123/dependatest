{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Nav/nav';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport const navContextDefaults = {};\nexport const NavContext = React.createContext(navContextDefaults);\nexport class Nav extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isScrollable: false,\n      ouiaStateId: getDefaultOUIAId(Nav.displayName, this.props.variant),\n      flyoutRef: null\n    };\n  } // Callback from NavItem\n\n\n  onSelect(event, groupId, itemId, to, preventDefault, onClick) {\n    if (preventDefault) {\n      event.preventDefault();\n    }\n\n    this.props.onSelect({\n      groupId,\n      itemId,\n      event,\n      to\n    });\n\n    if (onClick) {\n      onClick(event, itemId, groupId, to);\n    }\n  } // Callback from NavExpandable\n\n\n  onToggle(event, groupId, toggleValue) {\n    this.props.onToggle({\n      event,\n      groupId,\n      isExpanded: toggleValue\n    });\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      'aria-label': ariaLabel,\n      children,\n      className,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onSelect,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onToggle,\n      theme,\n      ouiaId,\n      ouiaSafe,\n      variant\n    } = _a,\n          props = __rest(_a, ['aria-label', \"children\", \"className\", \"onSelect\", \"onToggle\", \"theme\", \"ouiaId\", \"ouiaSafe\", \"variant\"]);\n\n    const isHorizontal = ['horizontal', 'tertiary'].includes(variant);\n    return React.createElement(NavContext.Provider, {\n      value: {\n        onSelect: (event, groupId, itemId, to, preventDefault, onClick) => this.onSelect(event, groupId, itemId, to, preventDefault, onClick),\n        onToggle: (event, groupId, expanded) => this.onToggle(event, groupId, expanded),\n        updateIsScrollable: isScrollable => this.setState({\n          isScrollable\n        }),\n        isHorizontal: ['horizontal', 'tertiary', 'horizontal-subnav'].includes(variant),\n        flyoutRef: this.state.flyoutRef,\n        setFlyoutRef: flyoutRef => this.setState({\n          flyoutRef\n        })\n      }\n    }, React.createElement(\"nav\", Object.assign({\n      className: css(styles.nav, theme === 'light' && styles.modifiers.light, isHorizontal && styles.modifiers.horizontal, variant === 'tertiary' && styles.modifiers.tertiary, variant === 'horizontal-subnav' && styles.modifiers.horizontalSubnav, this.state.isScrollable && styles.modifiers.scrollable, className),\n      \"aria-label\": ariaLabel || (variant === 'tertiary' ? 'Local' : 'Global')\n    }, getOUIAProps(Nav.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), props), children));\n  }\n\n}\nNav.displayName = 'Nav';\nNav.defaultProps = {\n  onSelect: () => undefined,\n  onToggle: () => undefined,\n  theme: 'dark',\n  ouiaSafe: true\n};","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,iDAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,SAASC,YAAT,EAAkCC,gBAAlC,QAA0D,eAA1D;AAyDA,OAAO,MAAMC,kBAAkB,GAAG,EAA3B;AACP,OAAO,MAAMC,UAAU,GAAGN,KAAK,CAACO,aAAN,CAAqCF,kBAArC,CAAnB;AAEP,OAAM,MAAOG,GAAP,SAAmBR,KAAK,CAACS,SAAzB,CAGL;EAHDC;;IAYE,aAAQ;MACNC,YAAY,EAAE,KADR;MAENC,WAAW,EAAER,gBAAgB,CAACI,GAAG,CAACK,WAAL,EAAkB,KAAKC,KAAL,CAAWC,OAA7B,CAFvB;MAGNC,SAAS,EAAE;IAHL,CAAR;EA+FD,CAxGA,CAeC;;;EACAC,QAAQ,CACNC,KADM,EAENC,OAFM,EAGNC,MAHM,EAINC,EAJM,EAKNC,cALM,EAMNC,OANM,EAMwB;IAE9B,IAAID,cAAJ,EAAoB;MAClBJ,KAAK,CAACI,cAAN;IACD;;IAED,KAAKR,KAAL,CAAWG,QAAX,CAAoB;MAAEE,OAAF;MAAWC,MAAX;MAAmBF,KAAnB;MAA0BG;IAA1B,CAApB;;IAEA,IAAIE,OAAJ,EAAa;MACXA,OAAO,CAACL,KAAD,EAAQE,MAAR,EAAgBD,OAAhB,EAAyBE,EAAzB,CAAP;IACD;EACF,CAjCF,CAmCC;;;EACAG,QAAQ,CAACN,KAAD,EAA6CC,OAA7C,EAAuEM,WAAvE,EAA2F;IACjG,KAAKX,KAAL,CAAWU,QAAX,CAAoB;MAClBN,KADkB;MAElBC,OAFkB;MAGlBO,UAAU,EAAED;IAHM,CAApB;EAKD;;EAEDE,MAAM;IACJ,MAAMC,KAaF,KAAKd,KAbT;IAAA,MAAM;MACJ,cAAce,SADV;MAEJC,QAFI;MAGJC,SAHI;MAIJ;MACAd,QALI;MAMJ;MACAO,QAPI;MAQJQ,KARI;MASJC,MATI;MAUJC,QAVI;MAWJnB;IAXI,IAWGa,EAXT;IAAA,MAYKd,KAAK,cAZJ,yGAYI,CAZV;;IAcA,MAAMqB,YAAY,GAAG,CAAC,YAAD,EAAe,UAAf,EAA2BC,QAA3B,CAAoCrB,OAApC,CAArB;IAEA,OACEf,oBAACM,UAAU,CAAC+B,QAAZ,EAAoB;MAClBC,KAAK,EAAE;QACLrB,QAAQ,EAAE,CACRC,KADQ,EAERC,OAFQ,EAGRC,MAHQ,EAIRC,EAJQ,EAKRC,cALQ,EAMRC,OANQ,KAYL,KAAKN,QAAL,CAAcC,KAAd,EAAqBC,OAArB,EAA8BC,MAA9B,EAAsCC,EAAtC,EAA0CC,cAA1C,EAA0DC,OAA1D,CAbA;QAcLC,QAAQ,EAAE,CAACN,KAAD,EAA6CC,OAA7C,EAAuEoB,QAAvE,KACR,KAAKf,QAAL,CAAcN,KAAd,EAAqBC,OAArB,EAA8BoB,QAA9B,CAfG;QAgBLC,kBAAkB,EAAG7B,YAAD,IAA2B,KAAK8B,QAAL,CAAc;UAAE9B;QAAF,CAAd,CAhB1C;QAiBLwB,YAAY,EAAE,CAAC,YAAD,EAAe,UAAf,EAA2B,mBAA3B,EAAgDC,QAAhD,CAAyDrB,OAAzD,CAjBT;QAkBLC,SAAS,EAAE,KAAK0B,KAAL,CAAW1B,SAlBjB;QAmBL2B,YAAY,EAAE3B,SAAS,IAAI,KAAKyB,QAAL,CAAc;UAAEzB;QAAF,CAAd;MAnBtB;IADW,CAApB,EAuBEhB;MACE+B,SAAS,EAAE7B,GAAG,CACZD,MAAM,CAAC2C,GADK,EAEZZ,KAAK,KAAK,OAAV,IAAqB/B,MAAM,CAAC4C,SAAP,CAAiBC,KAF1B,EAGZX,YAAY,IAAIlC,MAAM,CAAC4C,SAAP,CAAiBE,UAHrB,EAIZhC,OAAO,KAAK,UAAZ,IAA0Bd,MAAM,CAAC4C,SAAP,CAAiBG,QAJ/B,EAKZjC,OAAO,KAAK,mBAAZ,IAAmCd,MAAM,CAAC4C,SAAP,CAAiBI,gBALxC,EAMZ,KAAKP,KAAL,CAAW/B,YAAX,IAA2BV,MAAM,CAAC4C,SAAP,CAAiBK,UANhC,EAOZnB,SAPY,CADhB;MASG,cACWF,SAAS,KAAKd,OAAO,KAAK,UAAZ,GAAyB,OAAzB,GAAmC,QAAxC;IAVvB,GAWMZ,YAAY,CAACK,GAAG,CAACK,WAAL,EAAkBoB,MAAM,KAAKkB,SAAX,GAAuBlB,MAAvB,GAAgC,KAAKS,KAAL,CAAW9B,WAA7D,EAA0EsB,QAA1E,CAXlB,EAYMpB,KAZN,GAcGgB,QAdH,CAvBF,CADF;EA0CD;;AAvGF;AACQtB,kBAAc,KAAd;AACAA,mBAAyB;EAC9BS,QAAQ,EAAE,MAAMkC,SADc;EAE9B3B,QAAQ,EAAE,MAAM2B,SAFc;EAG9BnB,KAAK,EAAE,MAHuB;EAI9BE,QAAQ,EAAE;AAJoB,CAAzB","names":["React","styles","css","getOUIAProps","getDefaultOUIAId","navContextDefaults","NavContext","createContext","Nav","Component","constructor","isScrollable","ouiaStateId","displayName","props","variant","flyoutRef","onSelect","event","groupId","itemId","to","preventDefault","onClick","onToggle","toggleValue","isExpanded","render","_a","ariaLabel","children","className","theme","ouiaId","ouiaSafe","isHorizontal","includes","Provider","value","expanded","updateIsScrollable","setState","state","setFlyoutRef","nav","modifiers","light","horizontal","tertiary","horizontalSubnav","scrollable","undefined"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Nav/Nav.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Nav/nav';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId } from '../../helpers';\n\nexport type NavSelectClickHandler = (\n  e: React.FormEvent<HTMLInputElement>,\n  itemId: number | string,\n  groupId: number | string,\n  to: string\n) => void;\n\nexport interface NavProps\n  extends Omit<React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>, 'onSelect'>,\n    OUIAProps {\n  /** Anything that can be rendered inside of the nav */\n  children?: React.ReactNode;\n  /** Additional classes added to the container */\n  className?: string;\n  /** Callback for updating when item selection changes */\n  onSelect?: (selectedItem: {\n    groupId: number | string;\n    itemId: number | string;\n    to: string;\n    event: React.FormEvent<HTMLInputElement>;\n  }) => void;\n  /** Callback for when a list is expanded or collapsed */\n  onToggle?: (toggledItem: {\n    groupId: number | string;\n    isExpanded: boolean;\n    event: React.MouseEvent<HTMLButtonElement>;\n  }) => void;\n  /** Accessibility label */\n  'aria-label'?: string;\n  /** Indicates which theme color to use */\n  theme?: 'dark' | 'light';\n  /** For horizontal navs */\n  variant?: 'default' | 'horizontal' | 'tertiary' | 'horizontal-subnav';\n}\n\nexport interface NavContextProps {\n  onSelect?: (\n    event: React.FormEvent<HTMLInputElement>,\n    groupId: number | string,\n    itemId: number | string,\n    to: string,\n    preventDefault: boolean,\n    onClick: (\n      e: React.FormEvent<HTMLInputElement>,\n      itemId: number | string,\n      groupId: number | string,\n      to: string\n    ) => void\n  ) => void;\n  onToggle?: (event: React.MouseEvent<HTMLButtonElement>, groupId: number | string, expanded: boolean) => void;\n  updateIsScrollable?: (isScrollable: boolean) => void;\n  isHorizontal?: boolean;\n  flyoutRef?: React.Ref<HTMLLIElement>;\n  setFlyoutRef?: (ref: React.Ref<HTMLLIElement>) => void;\n}\nexport const navContextDefaults = {};\nexport const NavContext = React.createContext<NavContextProps>(navContextDefaults);\n\nexport class Nav extends React.Component<\n  NavProps,\n  { isScrollable: boolean; ouiaStateId: string; flyoutRef: React.Ref<HTMLLIElement> | null }\n> {\n  static displayName = 'Nav';\n  static defaultProps: NavProps = {\n    onSelect: () => undefined,\n    onToggle: () => undefined,\n    theme: 'dark',\n    ouiaSafe: true\n  };\n\n  state = {\n    isScrollable: false,\n    ouiaStateId: getDefaultOUIAId(Nav.displayName, this.props.variant),\n    flyoutRef: null as React.Ref<HTMLLIElement>\n  };\n\n  // Callback from NavItem\n  onSelect(\n    event: React.FormEvent<HTMLInputElement>,\n    groupId: number | string,\n    itemId: number | string,\n    to: string,\n    preventDefault: boolean,\n    onClick: NavSelectClickHandler\n  ) {\n    if (preventDefault) {\n      event.preventDefault();\n    }\n\n    this.props.onSelect({ groupId, itemId, event, to });\n\n    if (onClick) {\n      onClick(event, itemId, groupId, to);\n    }\n  }\n\n  // Callback from NavExpandable\n  onToggle(event: React.MouseEvent<HTMLButtonElement>, groupId: number | string, toggleValue: boolean) {\n    this.props.onToggle({\n      event,\n      groupId,\n      isExpanded: toggleValue\n    });\n  }\n\n  render() {\n    const {\n      'aria-label': ariaLabel,\n      children,\n      className,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onSelect,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onToggle,\n      theme,\n      ouiaId,\n      ouiaSafe,\n      variant,\n      ...props\n    } = this.props;\n    const isHorizontal = ['horizontal', 'tertiary'].includes(variant);\n\n    return (\n      <NavContext.Provider\n        value={{\n          onSelect: (\n            event: React.FormEvent<HTMLInputElement>,\n            groupId: number | string,\n            itemId: number | string,\n            to: string,\n            preventDefault: boolean,\n            onClick: (\n              e: React.FormEvent<HTMLInputElement>,\n              itemId: number | string,\n              groupId: number | string,\n              to: string\n            ) => void\n          ) => this.onSelect(event, groupId, itemId, to, preventDefault, onClick),\n          onToggle: (event: React.MouseEvent<HTMLButtonElement>, groupId: number | string, expanded: boolean) =>\n            this.onToggle(event, groupId, expanded),\n          updateIsScrollable: (isScrollable: boolean) => this.setState({ isScrollable }),\n          isHorizontal: ['horizontal', 'tertiary', 'horizontal-subnav'].includes(variant),\n          flyoutRef: this.state.flyoutRef,\n          setFlyoutRef: flyoutRef => this.setState({ flyoutRef })\n        }}\n      >\n        <nav\n          className={css(\n            styles.nav,\n            theme === 'light' && styles.modifiers.light,\n            isHorizontal && styles.modifiers.horizontal,\n            variant === 'tertiary' && styles.modifiers.tertiary,\n            variant === 'horizontal-subnav' && styles.modifiers.horizontalSubnav,\n            this.state.isScrollable && styles.modifiers.scrollable,\n            className\n          )}\n          aria-label={ariaLabel || (variant === 'tertiary' ? 'Local' : 'Global')}\n          {...getOUIAProps(Nav.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n          {...props}\n        >\n          {children}\n        </nav>\n      </NavContext.Provider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}