{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { css } from '@patternfly/react-styles';\nimport { formatBreakpointMods } from '../../helpers/util';\nexport var PageSectionVariants;\n\n(function (PageSectionVariants) {\n  PageSectionVariants[\"default\"] = \"default\";\n  PageSectionVariants[\"light\"] = \"light\";\n  PageSectionVariants[\"dark\"] = \"dark\";\n  PageSectionVariants[\"darker\"] = \"darker\";\n})(PageSectionVariants || (PageSectionVariants = {}));\n\nexport var PageSectionTypes;\n\n(function (PageSectionTypes) {\n  PageSectionTypes[\"default\"] = \"default\";\n  PageSectionTypes[\"nav\"] = \"nav\";\n  PageSectionTypes[\"subNav\"] = \"subnav\";\n  PageSectionTypes[\"breadcrumb\"] = \"breadcrumb\";\n  PageSectionTypes[\"tabs\"] = \"tabs\";\n  PageSectionTypes[\"wizard\"] = \"wizard\";\n})(PageSectionTypes || (PageSectionTypes = {}));\n\nconst variantType = {\n  [PageSectionTypes.default]: styles.pageMainSection,\n  [PageSectionTypes.nav]: styles.pageMainNav,\n  [PageSectionTypes.subNav]: styles.pageMainSubnav,\n  [PageSectionTypes.breadcrumb]: styles.pageMainBreadcrumb,\n  [PageSectionTypes.tabs]: styles.pageMainTabs,\n  [PageSectionTypes.wizard]: styles.pageMainWizard\n};\nconst variantStyle = {\n  [PageSectionVariants.default]: '',\n  [PageSectionVariants.light]: styles.modifiers.light,\n  [PageSectionVariants.dark]: styles.modifiers.dark_200,\n  [PageSectionVariants.darker]: styles.modifiers.dark_100\n};\nexport const PageSection = _a => {\n  var {\n    className = '',\n    children,\n    variant = 'default',\n    type = 'default',\n    padding,\n    isFilled,\n    isWidthLimited = false,\n    isCenterAligned = false,\n    sticky,\n    hasShadowTop = false,\n    hasShadowBottom = false,\n    hasOverflowScroll = false\n  } = _a,\n      props = __rest(_a, [\"className\", \"children\", \"variant\", \"type\", \"padding\", \"isFilled\", \"isWidthLimited\", \"isCenterAligned\", \"sticky\", \"hasShadowTop\", \"hasShadowBottom\", \"hasOverflowScroll\"]);\n\n  return React.createElement(\"section\", Object.assign({}, props, {\n    className: css(variantType[type], formatBreakpointMods(padding, styles), variantStyle[variant], isFilled === false && styles.modifiers.noFill, isFilled === true && styles.modifiers.fill, isWidthLimited && styles.modifiers.limitWidth, isWidthLimited && isCenterAligned && type !== PageSectionTypes.subNav && styles.modifiers.alignCenter, sticky === 'top' && styles.modifiers.stickyTop, sticky === 'bottom' && styles.modifiers.stickyBottom, hasShadowTop && styles.modifiers.shadowTop, hasShadowBottom && styles.modifiers.shadowBottom, hasOverflowScroll && styles.modifiers.overflowScroll, className)\n  }, hasOverflowScroll && {\n    tabIndex: 0\n  }), isWidthLimited && React.createElement(\"div\", {\n    className: css(styles.pageMainBody)\n  }, children), !isWidthLimited && children);\n};\nPageSection.displayName = 'PageSection';","map":{"version":3,"mappings":"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","names":["React","styles","css","formatBreakpointMods","PageSectionVariants","PageSectionTypes","variantType","default","pageMainSection","nav","pageMainNav","subNav","pageMainSubnav","breadcrumb","pageMainBreadcrumb","tabs","pageMainTabs","wizard","pageMainWizard","variantStyle","light","modifiers","dark","dark_200","darker","dark_100","PageSection","_a","className","children","variant","type","padding","isFilled","isWidthLimited","isCenterAligned","sticky","hasShadowTop","hasShadowBottom","hasOverflowScroll","props","noFill","fill","limitWidth","alignCenter","stickyTop","stickyBottom","shadowTop","shadowBottom","overflowScroll","tabIndex","pageMainBody","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Page/PageSection.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { css } from '@patternfly/react-styles';\nimport { formatBreakpointMods } from '../../helpers/util';\n\nexport enum PageSectionVariants {\n  default = 'default',\n  light = 'light',\n  dark = 'dark',\n  darker = 'darker'\n}\n\nexport enum PageSectionTypes {\n  default = 'default',\n  nav = 'nav',\n  subNav = 'subnav',\n  breadcrumb = 'breadcrumb',\n  tabs = 'tabs',\n  wizard = 'wizard'\n}\n\nexport interface PageSectionProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content rendered inside the section */\n  children?: React.ReactNode;\n  /** Additional classes added to the section */\n  className?: string;\n  /** Section background color variant */\n  variant?: 'default' | 'light' | 'dark' | 'darker';\n  /** Section type variant */\n  type?: 'default' | 'nav' | 'subnav' | 'breadcrumb' | 'tabs' | 'wizard';\n  /** Enables the page section to fill the available vertical space */\n  isFilled?: boolean;\n  /** Limits the width of the section */\n  isWidthLimited?: boolean;\n  /** Flag indicating if the section content is center aligned. isWidthLimited must be set for this to work  */\n  isCenterAligned?: boolean;\n  /** Padding at various breakpoints. */\n  padding?: {\n    default?: 'padding' | 'noPadding';\n    sm?: 'padding' | 'noPadding';\n    md?: 'padding' | 'noPadding';\n    lg?: 'padding' | 'noPadding';\n    xl?: 'padding' | 'noPadding';\n    '2xl'?: 'padding' | 'noPadding';\n  };\n  /** Modifier indicating if PageSection is sticky to the top or bottom */\n  sticky?: 'top' | 'bottom';\n  /** Modifier indicating if PageSection should have a shadow at the top */\n  hasShadowTop?: boolean;\n  /** Modifier indicating if PageSection should have a shadow at the bottom */\n  hasShadowBottom?: boolean;\n  /** Flag indicating if the PageSection has a scrolling overflow */\n  hasOverflowScroll?: boolean;\n}\n\nconst variantType = {\n  [PageSectionTypes.default]: styles.pageMainSection,\n  [PageSectionTypes.nav]: styles.pageMainNav,\n  [PageSectionTypes.subNav]: styles.pageMainSubnav,\n  [PageSectionTypes.breadcrumb]: styles.pageMainBreadcrumb,\n  [PageSectionTypes.tabs]: styles.pageMainTabs,\n  [PageSectionTypes.wizard]: styles.pageMainWizard\n};\n\nconst variantStyle = {\n  [PageSectionVariants.default]: '',\n  [PageSectionVariants.light]: styles.modifiers.light,\n  [PageSectionVariants.dark]: styles.modifiers.dark_200,\n  [PageSectionVariants.darker]: styles.modifiers.dark_100\n};\n\nexport const PageSection: React.FunctionComponent<PageSectionProps> = ({\n  className = '',\n  children,\n  variant = 'default',\n  type = 'default',\n  padding,\n  isFilled,\n  isWidthLimited = false,\n  isCenterAligned = false,\n  sticky,\n  hasShadowTop = false,\n  hasShadowBottom = false,\n  hasOverflowScroll = false,\n  ...props\n}: PageSectionProps) => (\n  <section\n    {...props}\n    className={css(\n      variantType[type],\n      formatBreakpointMods(padding, styles),\n      variantStyle[variant],\n      isFilled === false && styles.modifiers.noFill,\n      isFilled === true && styles.modifiers.fill,\n      isWidthLimited && styles.modifiers.limitWidth,\n      isWidthLimited && isCenterAligned && type !== PageSectionTypes.subNav && styles.modifiers.alignCenter,\n      sticky === 'top' && styles.modifiers.stickyTop,\n      sticky === 'bottom' && styles.modifiers.stickyBottom,\n      hasShadowTop && styles.modifiers.shadowTop,\n      hasShadowBottom && styles.modifiers.shadowBottom,\n      hasOverflowScroll && styles.modifiers.overflowScroll,\n      className\n    )}\n    {...(hasOverflowScroll && { tabIndex: 0 })}\n  >\n    {isWidthLimited && <div className={css(styles.pageMainBody)}>{children}</div>}\n    {!isWidthLimited && children}\n  </section>\n);\nPageSection.displayName = 'PageSection';\n"]},"metadata":{},"sourceType":"module"}