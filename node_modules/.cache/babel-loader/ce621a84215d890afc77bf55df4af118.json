{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/layouts/Flex/flex';\nimport * as flexToken from '@patternfly/react-tokens/dist/esm/l_flex_item_Order';\nimport { formatBreakpointMods, setBreakpointCssVars } from '../../helpers/util';\nexport const FlexItem = _a => {\n  var {\n    children = null,\n    className = '',\n    component = 'div',\n    spacer,\n    grow,\n    shrink,\n    flex,\n    alignSelf,\n    align,\n    fullWidth,\n    order,\n    style\n  } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"component\", \"spacer\", \"grow\", \"shrink\", \"flex\", \"alignSelf\", \"align\", \"fullWidth\", \"order\", \"style\"]);\n\n  const Component = component;\n  return React.createElement(Component, Object.assign({}, props, {\n    className: css(formatBreakpointMods(spacer, styles), formatBreakpointMods(grow, styles), formatBreakpointMods(shrink, styles), formatBreakpointMods(flex, styles), formatBreakpointMods(alignSelf, styles), formatBreakpointMods(align, styles), formatBreakpointMods(fullWidth, styles), className),\n    style: style || order ? Object.assign(Object.assign({}, style), setBreakpointCssVars(order, flexToken.l_flex_item_Order.name)) : undefined\n  }), children);\n};\nFlexItem.displayName = 'FlexItem';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,gDAAnB;AACA,OAAO,KAAKC,SAAZ,MAA2B,qDAA3B;AAEA,SAASC,oBAAT,EAA+BC,oBAA/B,QAA2D,oBAA3D;AAwIA,OAAO,MAAMC,QAAQ,GAA4CC,EAAD,IAc5C;MAd6C;IAC/DC,QAAQ,GAAG,IADoD;IAE/DC,SAAS,GAAG,EAFmD;IAG/DC,SAAS,GAAG,KAHmD;IAI/DC,MAJ+D;IAK/DC,IAL+D;IAM/DC,MAN+D;IAO/DC,IAP+D;IAQ/DC,SAR+D;IAS/DC,KAT+D;IAU/DC,SAV+D;IAW/DC,KAX+D;IAY/DC;EAZ+D,IAY1DZ;MACFa,KAAK,cAbuD,+HAavD;;EAER,MAAMC,SAAS,GAAQX,SAAvB;EAEA,OACEV,oBAACqB,SAAD,EAAUC,kBACJF,KADI,EACC;IACTX,SAAS,EAAER,GAAG,CACZG,oBAAoB,CAACO,MAAD,EAAST,MAAT,CADR,EAEZE,oBAAoB,CAACQ,IAAD,EAAOV,MAAP,CAFR,EAGZE,oBAAoB,CAACS,MAAD,EAASX,MAAT,CAHR,EAIZE,oBAAoB,CAACU,IAAD,EAAOZ,MAAP,CAJR,EAKZE,oBAAoB,CAACW,SAAD,EAAYb,MAAZ,CALR,EAMZE,oBAAoB,CAACY,KAAD,EAAQd,MAAR,CANR,EAOZE,oBAAoB,CAACa,SAAD,EAAYf,MAAZ,CAPR,EAQZO,SARY,CADL;IAWTU,KAAK,EACHA,KAAK,IAAID,KAAT,GAAgBI,gCAAMH,KAAN,GAAgBd,oBAAoB,CAACa,KAAD,EAAQf,SAAS,CAACoB,iBAAV,CAA4BC,IAApC,CAApC,CAAhB,GAAkGC;EAZ3F,CADD,CAAV,EAgBGjB,QAhBH,CADF;AAoBD,CArCM;AAsCPF,QAAQ,CAACoB,WAAT,GAAuB,UAAvB","names":["React","css","styles","flexToken","formatBreakpointMods","setBreakpointCssVars","FlexItem","_a","children","className","component","spacer","grow","shrink","flex","alignSelf","align","fullWidth","order","style","props","Component","Object","l_flex_item_Order","name","undefined","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/layouts/Flex/FlexItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/layouts/Flex/flex';\nimport * as flexToken from '@patternfly/react-tokens/dist/esm/l_flex_item_Order';\n\nimport { formatBreakpointMods, setBreakpointCssVars } from '../../helpers/util';\n\nexport interface FlexItemProps extends React.HTMLProps<HTMLDivElement> {\n  /** content rendered inside the Flex layout */\n  children?: React.ReactNode;\n  /** additional classes added to the Flex layout */\n  className?: string;\n  /** Spacers at various breakpoints */\n  spacer?: {\n    default?:\n      | 'spacerNone'\n      | 'spacerXs'\n      | 'spacerSm'\n      | 'spacerMd'\n      | 'spacerLg'\n      | 'spacerXl'\n      | 'spacer2xl'\n      | 'spacer3xl'\n      | 'spacer4xl';\n    sm?:\n      | 'spacerNone'\n      | 'spacerXs'\n      | 'spacerSm'\n      | 'spacerMd'\n      | 'spacerLg'\n      | 'spacerXl'\n      | 'spacer2xl'\n      | 'spacer3xl'\n      | 'spacer4xl';\n    md?:\n      | 'spacerNone'\n      | 'spacerXs'\n      | 'spacerSm'\n      | 'spacerMd'\n      | 'spacerLg'\n      | 'spacerXl'\n      | 'spacer2xl'\n      | 'spacer3xl'\n      | 'spacer4xl';\n    lg?:\n      | 'spacerNone'\n      | 'spacerXs'\n      | 'spacerSm'\n      | 'spacerMd'\n      | 'spacerLg'\n      | 'spacerXl'\n      | 'spacer2xl'\n      | 'spacer3xl'\n      | 'spacer4xl';\n    xl?:\n      | 'spacerNone'\n      | 'spacerXs'\n      | 'spacerSm'\n      | 'spacerMd'\n      | 'spacerLg'\n      | 'spacerXl'\n      | 'spacer2xl'\n      | 'spacer3xl'\n      | 'spacer4xl';\n    '2xl'?:\n      | 'spacerNone'\n      | 'spacerXs'\n      | 'spacerSm'\n      | 'spacerMd'\n      | 'spacerLg'\n      | 'spacerXl'\n      | 'spacer2xl'\n      | 'spacer3xl'\n      | 'spacer4xl';\n  };\n  /** Whether to add flex: grow at various breakpoints */\n  grow?: {\n    default?: 'grow';\n    sm?: 'grow';\n    md?: 'grow';\n    lg?: 'grow';\n    xl?: 'grow';\n    '2xl'?: 'grow';\n  };\n  /** Whether to add flex: shrink at various breakpoints */\n  shrink?: {\n    default?: 'shrink';\n    sm?: 'shrink';\n    md?: 'shrink';\n    lg?: 'shrink';\n    xl?: 'shrink';\n    '2xl'?: 'shrink';\n  };\n  /** Value to add for flex property at various breakpoints */\n  flex?: {\n    default?: 'flexDefault' | 'flexNone' | 'flex_1' | 'flex_2' | 'flex_3' | 'flex_4';\n    sm?: 'flexDefault' | 'flexNone' | 'flex_1' | 'flex_2' | 'flex_3' | 'flex_4';\n    md?: 'flexDefault' | 'flexNone' | 'flex_1' | 'flex_2' | 'flex_3' | 'flex_4';\n    lg?: 'flexDefault' | 'flexNone' | 'flex_1' | 'flex_2' | 'flex_3' | 'flex_4';\n    xl?: 'flexDefault' | 'flexNone' | 'flex_1' | 'flex_2' | 'flex_3' | 'flex_4';\n    '2xl'?: 'flexDefault' | 'flexNone' | 'flex_1' | 'flex_2' | 'flex_3' | 'flex_4';\n  };\n  /** Value to add for align-self property at various breakpoints */\n  alignSelf?: {\n    default?: 'alignSelfFlexStart' | 'alignSelfFlexEnd' | 'alignSelfCenter' | 'alignSelfStretch' | 'alignSelfBaseline';\n    sm?: 'alignSelfFlexStart' | 'alignSelfFlexEnd' | 'alignSelfCenter' | 'alignSelfStretch' | 'alignSelfBaseline';\n    md?: 'alignSelfFlexStart' | 'alignSelfFlexEnd' | 'alignSelfCenter' | 'alignSelfStretch' | 'alignSelfBaseline';\n    lg?: 'alignSelfFlexStart' | 'alignSelfFlexEnd' | 'alignSelfCenter' | 'alignSelfStretch' | 'alignSelfBaseline';\n    xl?: 'alignSelfFlexStart' | 'alignSelfFlexEnd' | 'alignSelfCenter' | 'alignSelfStretch' | 'alignSelfBaseline';\n    '2xl'?: 'alignSelfFlexStart' | 'alignSelfFlexEnd' | 'alignSelfCenter' | 'alignSelfStretch' | 'alignSelfBaseline';\n  };\n  /** Value to use for margin: auto at various breakpoints */\n  align?: {\n    default?: 'alignLeft' | 'alignRight';\n    sm?: 'alignLeft' | 'alignRight';\n    md?: 'alignLeft' | 'alignRight';\n    lg?: 'alignLeft' | 'alignRight';\n    xl?: 'alignLeft' | 'alignRight';\n    '2xl'?: 'alignLeft' | 'alignRight';\n  };\n  /** Whether to set width: 100% at various breakpoints */\n  fullWidth?: {\n    default?: 'fullWidth';\n    sm?: 'fullWidth';\n    md?: 'fullWidth';\n    lg?: 'fullWidth';\n    xl?: 'fullWidth';\n    '2xl'?: 'fullWidth';\n  };\n  /** Modifies the flex layout element order property */\n  order?: {\n    default?: string;\n    md?: string;\n    lg?: string;\n    xl?: string;\n    '2xl'?: string;\n  };\n  /** Sets the base component to render. defaults to div */\n  component?: React.ElementType<any> | React.ComponentType<any>;\n}\n\nexport const FlexItem: React.FunctionComponent<FlexItemProps> = ({\n  children = null,\n  className = '',\n  component = 'div',\n  spacer,\n  grow,\n  shrink,\n  flex,\n  alignSelf,\n  align,\n  fullWidth,\n  order,\n  style,\n  ...props\n}: FlexItemProps) => {\n  const Component: any = component;\n\n  return (\n    <Component\n      {...props}\n      className={css(\n        formatBreakpointMods(spacer, styles),\n        formatBreakpointMods(grow, styles),\n        formatBreakpointMods(shrink, styles),\n        formatBreakpointMods(flex, styles),\n        formatBreakpointMods(alignSelf, styles),\n        formatBreakpointMods(align, styles),\n        formatBreakpointMods(fullWidth, styles),\n        className\n      )}\n      style={\n        style || order ? { ...style, ...setBreakpointCssVars(order, flexToken.l_flex_item_Order.name) } : undefined\n      }\n    >\n      {children}\n    </Component>\n  );\n};\nFlexItem.displayName = 'FlexItem';\n"]},"metadata":{},"sourceType":"module"}