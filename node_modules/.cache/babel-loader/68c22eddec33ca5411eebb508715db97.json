{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DescriptionList/description-list';\nimport { formatBreakpointMods } from '../../helpers';\n\nconst setBreakpointModifiers = (prefix, modifiers) => {\n  const mods = modifiers;\n  return Object.keys(mods || {}).reduce((acc, curr) => curr === 'default' ? Object.assign(Object.assign({}, acc), {\n    [prefix]: mods[curr]\n  }) : Object.assign(Object.assign({}, acc), {\n    [`${prefix}-on-${curr}`]: mods[curr]\n  }), {});\n};\n\nexport const DescriptionList = _a => {\n  var {\n    className = '',\n    children = null,\n    isHorizontal = false,\n    isAutoColumnWidths,\n    isAutoFit,\n    isInlineGrid,\n    isCompact,\n    isFluid,\n    isFillColumns,\n    columnModifier,\n    autoFitMinModifier,\n    horizontalTermWidthModifier,\n    orientation,\n    style\n  } = _a,\n      props = __rest(_a, [\"className\", \"children\", \"isHorizontal\", \"isAutoColumnWidths\", \"isAutoFit\", \"isInlineGrid\", \"isCompact\", \"isFluid\", \"isFillColumns\", \"columnModifier\", \"autoFitMinModifier\", \"horizontalTermWidthModifier\", \"orientation\", \"style\"]);\n\n  if (isAutoFit && autoFitMinModifier) {\n    style = Object.assign(Object.assign({}, style), setBreakpointModifiers('--pf-c-description-list--GridTemplateColumns--min', autoFitMinModifier));\n  }\n\n  if (isHorizontal && horizontalTermWidthModifier) {\n    style = Object.assign(Object.assign({}, style), setBreakpointModifiers('--pf-c-description-list--m-horizontal__term--width', horizontalTermWidthModifier));\n  }\n\n  return React.createElement(\"dl\", Object.assign({\n    className: css(styles.descriptionList, (isHorizontal || isFluid) && styles.modifiers.horizontal, isAutoColumnWidths && styles.modifiers.autoColumnWidths, isAutoFit && styles.modifiers.autoFit, formatBreakpointMods(columnModifier, styles), formatBreakpointMods(orientation, styles), isInlineGrid && styles.modifiers.inlineGrid, isCompact && styles.modifiers.compact, isFluid && styles.modifiers.fluid, isFillColumns && styles.modifiers.fillColumns, className),\n    style: style\n  }, props), children);\n};\nDescriptionList.displayName = 'DescriptionList';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,0EAAnB;AACA,SAASC,oBAAT,QAAqC,eAArC;;AAkEA,MAAMC,sBAAsB,GAAG,CAACC,MAAD,EAAiBC,SAAjB,KAAmD;EAChF,MAAMC,IAAI,GAAGD,SAAb;EACA,OAAOE,MAAM,CAACC,IAAP,CAAYF,IAAI,IAAI,EAApB,EAAwBG,MAAxB,CACL,CAACC,GAAD,EAAMC,IAAN,KACEA,IAAI,KAAK,SAAT,GAAoBJ,gCAAMG,GAAN,GAAS;IAAE,CAACN,MAAD,GAAUE,IAAI,CAACK,IAAD;EAAhB,CAAT,CAApB,GAAuDJ,gCAAMG,GAAN,GAAS;IAAE,CAAC,GAAGN,MAAM,OAAOO,IAAI,EAArB,GAA0BL,IAAI,CAACK,IAAD;EAAhC,CAAT,CAFpD,EAGL,EAHK,CAAP;AAKD,CAPD;;AASA,OAAO,MAAMC,eAAe,GAAmDC,EAAD,IAgBnD;MAhBoD;IAC7EC,SAAS,GAAG,EADiE;IAE7EC,QAAQ,GAAG,IAFkE;IAG7EC,YAAY,GAAG,KAH8D;IAI7EC,kBAJ6E;IAK7EC,SAL6E;IAM7EC,YAN6E;IAO7EC,SAP6E;IAQ7EC,OAR6E;IAS7EC,aAT6E;IAU7EC,cAV6E;IAW7EC,kBAX6E;IAY7EC,2BAZ6E;IAa7EC,WAb6E;IAc7EC;EAd6E,IAcxEd;MACFe,KAAK,cAfqE,oOAerE;;EAER,IAAIV,SAAS,IAAIM,kBAAjB,EAAqC;IACnCG,KAAK,mCACAA,KADA,GAEAxB,sBAAsB,CAAC,mDAAD,EAAsDqB,kBAAtD,CAFtB,CAAL;EAID;;EACD,IAAIR,YAAY,IAAIS,2BAApB,EAAiD;IAC/CE,KAAK,mCACAA,KADA,GAEAxB,sBAAsB,CAAC,oDAAD,EAAuDsB,2BAAvD,CAFtB,CAAL;EAID;;EAED,OACE1B;IACEe,SAAS,EAAEd,GAAG,CACZC,MAAM,CAAC4B,eADK,EAEZ,CAACb,YAAY,IAAIK,OAAjB,KAA6BpB,MAAM,CAACI,SAAP,CAAiByB,UAFlC,EAGZb,kBAAkB,IAAIhB,MAAM,CAACI,SAAP,CAAiB0B,gBAH3B,EAIZb,SAAS,IAAIjB,MAAM,CAACI,SAAP,CAAiB2B,OAJlB,EAKZ9B,oBAAoB,CAACqB,cAAD,EAAiBtB,MAAjB,CALR,EAMZC,oBAAoB,CAACwB,WAAD,EAAczB,MAAd,CANR,EAOZkB,YAAY,IAAIlB,MAAM,CAACI,SAAP,CAAiB4B,UAPrB,EAQZb,SAAS,IAAInB,MAAM,CAACI,SAAP,CAAiB6B,OARlB,EASZb,OAAO,IAAIpB,MAAM,CAACI,SAAP,CAAiB8B,KAThB,EAUZb,aAAa,IAAIrB,MAAM,CAACI,SAAP,CAAiB+B,WAVtB,EAWZtB,SAXY,CADhB;IAcEa,KAAK,EAAEA;EAdT,GAeMC,KAfN,GAiBGb,QAjBH,CADF;AAqBD,CAnDM;AAqDPH,eAAe,CAACyB,WAAhB,GAA8B,iBAA9B","names":["React","css","styles","formatBreakpointMods","setBreakpointModifiers","prefix","modifiers","mods","Object","keys","reduce","acc","curr","DescriptionList","_a","className","children","isHorizontal","isAutoColumnWidths","isAutoFit","isInlineGrid","isCompact","isFluid","isFillColumns","columnModifier","autoFitMinModifier","horizontalTermWidthModifier","orientation","style","props","descriptionList","horizontal","autoColumnWidths","autoFit","inlineGrid","compact","fluid","fillColumns","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/DescriptionList/DescriptionList.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DescriptionList/description-list';\nimport { formatBreakpointMods } from '../../helpers';\n\nexport interface BreakpointModifiers {\n  default?: string;\n  md?: string;\n  lg?: string;\n  xl?: string;\n  '2xl'?: string;\n}\n\nexport interface DescriptionListProps extends Omit<React.HTMLProps<HTMLDListElement>, 'type'> {\n  /** Anything that can be rendered inside of the list */\n  children?: React.ReactNode;\n  /** Additional classes added to the list */\n  className?: string;\n  /** Sets the description list to auto fit. */\n  isAutoFit?: boolean;\n  /** Sets the description list component term and description pair to a horizontal layout. */\n  isHorizontal?: boolean;\n  /** Sets the description list to format automatically. */\n  isAutoColumnWidths?: boolean;\n  /** Modifies the description list display to inline-grid. */\n  isInlineGrid?: boolean;\n  /** Sets the description list to compact styling. */\n  isCompact?: boolean;\n  /** Sets a horizontal description list to have fluid styling. */\n  isFluid?: boolean;\n  /** Sets the the default placement of description list groups to fill from top to bottom. */\n  isFillColumns?: boolean;\n  /** Sets the number of columns on the description list at various breakpoints */\n  columnModifier?: {\n    default?: '1Col' | '2Col' | '3Col';\n    sm?: '1Col' | '2Col' | '3Col';\n    md?: '1Col' | '2Col' | '3Col';\n    lg?: '1Col' | '2Col' | '3Col';\n    xl?: '1Col' | '2Col' | '3Col';\n    '2xl'?: '1Col' | '2Col' | '3Col';\n  };\n  /** Indicates how the menu will align at various breakpoints. */\n  orientation?: {\n    sm?: 'vertical' | 'horizontal';\n    md?: 'vertical' | 'horizontal';\n    lg?: 'vertical' | 'horizontal';\n    xl?: 'vertical' | 'horizontal';\n    '2xl'?: 'vertical' | 'horizontal';\n  };\n  /** Sets the minimum column size for the auto-fit (isAutoFit) layout at various breakpoints. */\n  autoFitMinModifier?: {\n    default?: string;\n    sm?: string;\n    md?: string;\n    lg?: string;\n    xl?: string;\n    '2xl'?: string;\n  };\n  /** Sets the horizontal description list's term column width at various breakpoints. */\n  horizontalTermWidthModifier?: {\n    default?: string;\n    sm?: string;\n    md?: string;\n    lg?: string;\n    xl?: string;\n    '2xl'?: string;\n  };\n}\n\nconst setBreakpointModifiers = (prefix: string, modifiers: BreakpointModifiers) => {\n  const mods = modifiers as Partial<{ [k: string]: string }>;\n  return Object.keys(mods || {}).reduce(\n    (acc, curr) =>\n      curr === 'default' ? { ...acc, [prefix]: mods[curr] } : { ...acc, [`${prefix}-on-${curr}`]: mods[curr] },\n    {}\n  );\n};\n\nexport const DescriptionList: React.FunctionComponent<DescriptionListProps> = ({\n  className = '',\n  children = null,\n  isHorizontal = false,\n  isAutoColumnWidths,\n  isAutoFit,\n  isInlineGrid,\n  isCompact,\n  isFluid,\n  isFillColumns,\n  columnModifier,\n  autoFitMinModifier,\n  horizontalTermWidthModifier,\n  orientation,\n  style,\n  ...props\n}: DescriptionListProps) => {\n  if (isAutoFit && autoFitMinModifier) {\n    style = {\n      ...style,\n      ...setBreakpointModifiers('--pf-c-description-list--GridTemplateColumns--min', autoFitMinModifier)\n    };\n  }\n  if (isHorizontal && horizontalTermWidthModifier) {\n    style = {\n      ...style,\n      ...setBreakpointModifiers('--pf-c-description-list--m-horizontal__term--width', horizontalTermWidthModifier)\n    };\n  }\n\n  return (\n    <dl\n      className={css(\n        styles.descriptionList,\n        (isHorizontal || isFluid) && styles.modifiers.horizontal,\n        isAutoColumnWidths && styles.modifiers.autoColumnWidths,\n        isAutoFit && styles.modifiers.autoFit,\n        formatBreakpointMods(columnModifier, styles),\n        formatBreakpointMods(orientation, styles),\n        isInlineGrid && styles.modifiers.inlineGrid,\n        isCompact && styles.modifiers.compact,\n        isFluid && styles.modifiers.fluid,\n        isFillColumns && styles.modifiers.fillColumns,\n        className\n      )}\n      style={style}\n      {...props}\n    >\n      {children}\n    </dl>\n  );\n};\n\nDescriptionList.displayName = 'DescriptionList';\n"]},"metadata":{},"sourceType":"module"}