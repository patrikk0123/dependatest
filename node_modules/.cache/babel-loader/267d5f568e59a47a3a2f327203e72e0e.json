{"ast":null,"code":"var _jsxFileName = \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/SearchSelect/SearchSelect.tsx\";\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/**\n * Select with data dynamically fetched from backend.\n *\n * @param fetchCallback - function to fetch the data from backend\n * @param attribute - which attribute will be filtered\n * @param delay - delay after which data are fetched when filter input is changed\n * @param pageSize - count of entries fetched\n */\nexport const SearchSelect = _ref => {\n  let {\n    fetchCallback,\n    attribute,\n    onSelect,\n    delay = 200,\n    pageSize = 20\n  } = _ref;\n  const [selectOptions, setSelectOptions] = useState([]);\n  const [defaultData, setDefaultData] = useState([]);\n  const [isSelectOpen, setIsSelectOpen] = useState(false);\n  const [selected, setSelected] = useState();\n  const timeout = useRef();\n  const fetchData = useCallback(function () {\n    let val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let setDefault = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const config = {\n      params: {\n        pageSize\n      }\n    };\n    if (val !== '') config.params.q = `${attribute}=like=\"%${val}%\"`;\n    fetchCallback(config).then(response => {\n      const data = response.data.content.map(obj => {\n        return {\n          value: obj[attribute]\n        };\n      });\n      setSelectOptions(data);\n      if (setDefault) setDefaultData(data);\n      return data;\n    });\n  }, [fetchCallback, attribute, pageSize]);\n  useEffect(() => {\n    fetchData('', true);\n  }, [fetchData]);\n\n  const clearSelection = () => {\n    setSelected(null);\n    setIsSelectOpen(false);\n    setSelectOptions(defaultData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Select, {\n    variant: SelectVariant.typeahead,\n    onToggle: isOpen => {\n      setIsSelectOpen(isOpen);\n    },\n    onSelect: (event, selection, isPlaceholder) => {\n      if (isPlaceholder) clearSelection();else {\n        if (event) {\n          fetchData(selection);\n        }\n\n        setSelected(selection);\n        setIsSelectOpen(false);\n        onSelect(selection);\n      }\n    },\n    onTypeaheadInputChanged: val => {\n      if (val !== '') {\n        clearTimeout(timeout === null || timeout === void 0 ? void 0 : timeout.current);\n        timeout.current = setTimeout(() => fetchData(val), delay);\n      } else {\n        setSelectOptions(defaultData);\n      }\n    },\n    isInputFilterPersisted: true,\n    isInputValuePersisted: true,\n    onClear: clearSelection,\n    onFilter: () => {\n      // filtering is not done here\n      return undefined;\n    },\n    selections: selected,\n    isOpen: isSelectOpen,\n    hasInlineFilter: true,\n    shouldResetOnSelect: false,\n    children: selectOptions.map((option, index) => /*#__PURE__*/_jsxDEV(SelectOption, {\n      value: option.value\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["Select","SelectOption","SelectVariant","React","useCallback","useEffect","useRef","useState","SearchSelect","fetchCallback","attribute","onSelect","delay","pageSize","selectOptions","setSelectOptions","defaultData","setDefaultData","isSelectOpen","setIsSelectOpen","selected","setSelected","timeout","fetchData","val","setDefault","config","params","q","then","response","data","content","map","obj","value","clearSelection","typeahead","isOpen","event","selection","isPlaceholder","clearTimeout","current","setTimeout","undefined","option","index"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/SearchSelect/SearchSelect.tsx"],"sourcesContent":["import { Select, SelectOption, SelectOptionObject, SelectVariant } from '@patternfly/react-core';\nimport { AxiosRequestConfig } from 'axios';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\n\ninterface ISearchSelectProps {\n  fetchCallback: Function;\n  attribute: string;\n  onSelect: Function;\n  delay?: number;\n  pageSize?: number;\n}\n\n/**\n * Select with data dynamically fetched from backend.\n *\n * @param fetchCallback - function to fetch the data from backend\n * @param attribute - which attribute will be filtered\n * @param delay - delay after which data are fetched when filter input is changed\n * @param pageSize - count of entries fetched\n */\nexport const SearchSelect = ({ fetchCallback, attribute, onSelect, delay = 200, pageSize = 20 }: ISearchSelectProps) => {\n  const [selectOptions, setSelectOptions] = useState<SelectOptionObject[]>([]);\n  const [defaultData, setDefaultData] = useState<SelectOptionObject[]>([]);\n  const [isSelectOpen, setIsSelectOpen] = useState<boolean>(false);\n  const [selected, setSelected] = useState<any>();\n  const timeout = useRef<NodeJS.Timeout>();\n\n  const fetchData = useCallback(\n    (val: string = '', setDefault: boolean = false) => {\n      const config: AxiosRequestConfig = { params: { pageSize } };\n      if (val !== '') config.params.q = `${attribute}=like=\"%${val}%\"`;\n      fetchCallback(config).then((response: any) => {\n        const data = response.data.content.map((obj: any) => {\n          return {\n            value: obj[attribute],\n          };\n        });\n        setSelectOptions(data);\n        if (setDefault) setDefaultData(data);\n        return data;\n      });\n    },\n    [fetchCallback, attribute, pageSize]\n  );\n\n  useEffect(() => {\n    fetchData('', true);\n  }, [fetchData]);\n\n  const clearSelection = () => {\n    setSelected(null);\n    setIsSelectOpen(false);\n    setSelectOptions(defaultData);\n  };\n\n  return (\n    <Select\n      variant={SelectVariant.typeahead}\n      onToggle={(isOpen) => {\n        setIsSelectOpen(isOpen);\n      }}\n      onSelect={(event, selection, isPlaceholder) => {\n        if (isPlaceholder) clearSelection();\n        else {\n          if (event) {\n            fetchData(selection as string);\n          }\n          setSelected(selection);\n          setIsSelectOpen(false);\n          onSelect(selection);\n        }\n      }}\n      onTypeaheadInputChanged={(val: string) => {\n        if (val !== '') {\n          clearTimeout(timeout?.current);\n          timeout.current = setTimeout(() => fetchData(val), delay);\n        } else {\n          setSelectOptions(defaultData);\n        }\n      }}\n      isInputFilterPersisted={true}\n      isInputValuePersisted={true}\n      onClear={clearSelection}\n      onFilter={() => {\n        // filtering is not done here\n        return undefined;\n      }}\n      selections={selected}\n      isOpen={isSelectOpen}\n      hasInlineFilter={true}\n      shouldResetOnSelect={false}\n    >\n      {selectOptions.map((option: any, index: any) => (\n        <SelectOption key={index} value={option.value} />\n      ))}\n    </Select>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}