{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Badge/badge';\nexport const Badge = _a => {\n  var {\n    isRead = false,\n    className = '',\n    children = ''\n  } = _a,\n      props = __rest(_a, [\"isRead\", \"className\", \"children\"]);\n\n  return React.createElement(\"span\", Object.assign({}, props, {\n    className: css(styles.badge, isRead ? styles.modifiers.read : styles.modifiers.unread, className)\n  }), children);\n};\nBadge.displayName = 'Badge';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,qDAAnB;AAWA,OAAO,MAAMC,KAAK,GAAyCC,EAAD,IAKzC;MAL0C;IACzDC,MAAM,GAAG,KADgD;IAEzDC,SAAS,GAAG,EAF6C;IAGzDC,QAAQ,GAAG;EAH8C,IAG5CH;MACVI,KAAK,cAJiD,mCAIjD;;EACQ,OAChBR,8CACMQ,KADN,EACW;IACTF,SAAS,EAAEL,GAAG,CAACC,MAAM,CAACO,KAAR,EAAgBJ,MAAM,GAAGH,MAAM,CAACQ,SAAP,CAAiBC,IAApB,GAA2BT,MAAM,CAACQ,SAAP,CAAiBE,MAAlE,EAAkFN,SAAlF;EADL,CADX,GAIGC,QAJH,CADgB;AAOjB,CAZM;AAaPJ,KAAK,CAACU,WAAN,GAAoB,OAApB","names":["React","css","styles","Badge","_a","isRead","className","children","props","badge","modifiers","read","unread","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Badge/Badge.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Badge/badge';\n\nexport interface BadgeProps extends React.HTMLProps<HTMLSpanElement> {\n  /**  Adds styling to the badge to indicate it has been read */\n  isRead?: boolean;\n  /** content rendered inside the Badge */\n  children?: React.ReactNode;\n  /** additional classes added to the Badge */\n  className?: string;\n}\n\nexport const Badge: React.FunctionComponent<BadgeProps> = ({\n  isRead = false,\n  className = '',\n  children = '',\n  ...props\n}: BadgeProps) => (\n  <span\n    {...props}\n    className={css(styles.badge, (isRead ? styles.modifiers.read : styles.modifiers.unread) as any, className)}\n  >\n    {children}\n  </span>\n);\nBadge.displayName = 'Badge';\n"]},"metadata":{},"sourceType":"module"}