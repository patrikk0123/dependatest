{"ast":null,"code":"import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { FindRefWrapper } from './FindRefWrapper';\nimport { usePopper } from './thirdparty/react-popper/usePopper';\nimport { css } from '@patternfly/react-styles';\nimport '@patternfly/react-styles/css/components/Popper/Popper.css';\nconst hash = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\n\nconst getOppositePlacement = placement => placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n\nexport const getOpacityTransition = animationDuration => `opacity ${animationDuration}ms cubic-bezier(.54, 1.5, .38, 1.11)`;\nexport const Popper = _ref => {\n  let {\n    trigger,\n    popper,\n    popperMatchesTriggerWidth = true,\n    direction = 'down',\n    position = 'left',\n    placement,\n    appendTo = () => document.body,\n    zIndex = 9999,\n    isVisible = true,\n    positionModifiers,\n    distance = 0,\n    onMouseEnter,\n    onMouseLeave,\n    onFocus,\n    onBlur,\n    onDocumentClick,\n    onTriggerClick,\n    onTriggerEnter,\n    onPopperClick,\n    onPopperMouseEnter,\n    onPopperMouseLeave,\n    onDocumentKeyDown,\n    enableFlip = true,\n    flipBehavior = 'flip',\n    reference\n  } = _ref;\n  const [triggerElement, setTriggerElement] = React.useState(null);\n  const [refElement, setRefElement] = React.useState(null);\n  const [popperElement, setPopperElement] = React.useState(null);\n  const [ready, setReady] = React.useState(false);\n  const refOrTrigger = refElement || triggerElement;\n  const onDocumentClickCallback = React.useCallback(event => onDocumentClick(event, refOrTrigger, popperElement), [isVisible, triggerElement, refElement, popperElement, onDocumentClick]);\n  React.useEffect(() => {\n    setReady(true);\n  }, []);\n  React.useEffect(() => {\n    if (reference) {\n      if (reference.current) {\n        setRefElement(reference.current);\n      } else if (typeof reference === 'function') {\n        setRefElement(reference());\n      }\n    }\n  }, [reference]);\n\n  const addEventListener = (listener, element, event) => {\n    if (listener && element) {\n      element.addEventListener(event, listener);\n    }\n  };\n\n  const removeEventListener = (listener, element, event) => {\n    if (listener && element) {\n      element.removeEventListener(event, listener);\n    }\n  };\n\n  React.useEffect(() => {\n    addEventListener(onMouseEnter, refOrTrigger, 'mouseenter');\n    addEventListener(onMouseLeave, refOrTrigger, 'mouseleave');\n    addEventListener(onFocus, refOrTrigger, 'focus');\n    addEventListener(onBlur, refOrTrigger, 'blur');\n    addEventListener(onTriggerClick, refOrTrigger, 'click');\n    addEventListener(onTriggerEnter, refOrTrigger, 'keydown');\n    addEventListener(onPopperClick, popperElement, 'click');\n    addEventListener(onPopperMouseEnter, popperElement, 'mouseenter');\n    addEventListener(onPopperMouseLeave, popperElement, 'mouseleave');\n    onDocumentClick && addEventListener(onDocumentClickCallback, document, 'click');\n    addEventListener(onDocumentKeyDown, document, 'keydown'); // Trigger a Popper update when content changes.\n\n    const observer = new MutationObserver(() => {\n      update && update();\n    });\n    popperElement && observer.observe(popperElement, {\n      attributes: true,\n      childList: true,\n      subtree: true\n    });\n    return () => {\n      removeEventListener(onMouseEnter, refOrTrigger, 'mouseenter');\n      removeEventListener(onMouseLeave, refOrTrigger, 'mouseleave');\n      removeEventListener(onFocus, refOrTrigger, 'focus');\n      removeEventListener(onBlur, refOrTrigger, 'blur');\n      removeEventListener(onTriggerClick, refOrTrigger, 'click');\n      removeEventListener(onTriggerEnter, refOrTrigger, 'keydown');\n      removeEventListener(onPopperClick, popperElement, 'click');\n      removeEventListener(onPopperMouseEnter, popperElement, 'mouseenter');\n      removeEventListener(onPopperMouseLeave, popperElement, 'mouseleave');\n      onDocumentClick && removeEventListener(onDocumentClickCallback, document, 'click');\n      removeEventListener(onDocumentKeyDown, document, 'keydown');\n      observer.disconnect();\n    };\n  }, [triggerElement, popperElement, onMouseEnter, onMouseLeave, onFocus, onBlur, onTriggerClick, onTriggerEnter, onPopperClick, onPopperMouseEnter, onPopperMouseLeave, onDocumentClick, onDocumentKeyDown, refElement]);\n\n  const getPlacement = () => {\n    if (placement) {\n      return placement;\n    }\n\n    let convertedPlacement = direction === 'up' ? 'top' : 'bottom';\n\n    if (position !== 'center') {\n      convertedPlacement = `${convertedPlacement}-${position === 'right' ? 'end' : 'start'}`;\n    }\n\n    return convertedPlacement;\n  };\n\n  const getPlacementMemo = React.useMemo(getPlacement, [direction, position, placement]);\n  const getOppositePlacementMemo = React.useMemo(() => getOppositePlacement(getPlacement()), [direction, position, placement]);\n  const sameWidthMod = React.useMemo(() => ({\n    name: 'sameWidth',\n    enabled: popperMatchesTriggerWidth,\n    phase: 'beforeWrite',\n    requires: ['computeStyles'],\n    fn: _ref2 => {\n      let {\n        state\n      } = _ref2;\n      state.styles.popper.width = `${state.rects.reference.width}px`;\n    },\n    effect: _ref3 => {\n      let {\n        state\n      } = _ref3;\n      state.elements.popper.style.width = `${state.elements.reference.offsetWidth}px`;\n      return () => {};\n    }\n  }), [popperMatchesTriggerWidth]);\n  const {\n    styles: popperStyles,\n    attributes,\n    update\n  } = usePopper(refOrTrigger, popperElement, {\n    placement: getPlacementMemo,\n    modifiers: [{\n      name: 'offset',\n      options: {\n        offset: [0, distance]\n      }\n    }, {\n      name: 'preventOverflow',\n      enabled: false\n    }, {\n      // adds attribute [data-popper-reference-hidden] to the popper element which can be used to hide it using CSS\n      name: 'hide',\n      enabled: true\n    }, {\n      name: 'flip',\n      enabled: getPlacementMemo.startsWith('auto') || enableFlip,\n      options: {\n        fallbackPlacements: flipBehavior === 'flip' ? [getOppositePlacementMemo] : flipBehavior\n      }\n    }, sameWidthMod]\n  }); // Returns the CSS modifier class in order to place the Popper's arrow properly\n  // Depends on the position of the Popper relative to the reference element\n\n  const modifierFromPopperPosition = () => {\n    if (attributes && attributes.popper && attributes.popper['data-popper-placement']) {\n      const popperPlacement = attributes.popper['data-popper-placement'];\n      return positionModifiers[popperPlacement];\n    }\n\n    return positionModifiers.top;\n  };\n\n  const menuWithPopper = React.cloneElement(popper, Object.assign({\n    className: css(popper.props && popper.props.className, positionModifiers && modifierFromPopperPosition()),\n    style: Object.assign(Object.assign(Object.assign({}, popper.props && popper.props.style || {}), popperStyles.popper), {\n      zIndex\n    })\n  }, attributes.popper));\n\n  const getTarget = () => {\n    if (typeof appendTo === 'function') {\n      return appendTo();\n    }\n\n    return appendTo;\n  };\n\n  return React.createElement(React.Fragment, null, !reference && trigger && React.createElement(FindRefWrapper, {\n    onFoundRef: foundRef => setTriggerElement(foundRef)\n  }, trigger), ready && isVisible && ReactDOM.createPortal(React.createElement(FindRefWrapper, {\n    onFoundRef: foundRef => setPopperElement(foundRef)\n  }, menuWithPopper), getTarget()));\n};\nPopper.displayName = 'Popper';","map":{"version":3,"mappings":"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","names":["React","ReactDOM","FindRefWrapper","usePopper","css","hash","left","right","bottom","top","getOppositePlacement","placement","replace","matched","getOpacityTransition","animationDuration","Popper","trigger","popper","popperMatchesTriggerWidth","direction","position","appendTo","document","body","zIndex","isVisible","positionModifiers","distance","onMouseEnter","onMouseLeave","onFocus","onBlur","onDocumentClick","onTriggerClick","onTriggerEnter","onPopperClick","onPopperMouseEnter","onPopperMouseLeave","onDocumentKeyDown","enableFlip","flipBehavior","reference","triggerElement","setTriggerElement","useState","refElement","setRefElement","popperElement","setPopperElement","ready","setReady","refOrTrigger","onDocumentClickCallback","useCallback","event","useEffect","current","addEventListener","listener","element","removeEventListener","observer","MutationObserver","update","observe","attributes","childList","subtree","disconnect","getPlacement","convertedPlacement","getPlacementMemo","useMemo","getOppositePlacementMemo","sameWidthMod","name","enabled","phase","requires","fn","state","styles","width","rects","effect","elements","style","offsetWidth","popperStyles","modifiers","options","offset","startsWith","fallbackPlacements","modifierFromPopperPosition","popperPlacement","menuWithPopper","cloneElement","Object","className","props","getTarget","onFoundRef","foundRef","createPortal","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/helpers/Popper/Popper.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { FindRefWrapper } from './FindRefWrapper';\nimport { usePopper } from './thirdparty/react-popper/usePopper';\nimport { Placement, BasePlacement, Modifier } from './thirdparty/popper-core';\nimport { css } from '@patternfly/react-styles';\nimport '@patternfly/react-styles/css/components/Popper/Popper.css';\n\nconst hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n\nconst getOppositePlacement = (placement: Placement): any =>\n  placement.replace(\n    /left|right|bottom|top/g,\n    (matched: string) => hash[matched as 'left' | 'right' | 'bottom' | 'top'] as BasePlacement\n  );\n\n/** @deprecated Please use the menuAppendTo prop directly from within the PF component which uses it. */\nexport interface ToggleMenuBaseProps {\n  /** The container to append the menu to. Defaults to 'inline'\n   * If your menu is being cut off you can append it to an element higher up the DOM tree.\n   * Some examples:\n   * menuAppendTo=\"parent\"\n   * menuAppendTo={() => document.body}\n   * menuAppendTo={document.getElementById('target')}\n   */\n  menuAppendTo?: HTMLElement | (() => HTMLElement) | 'parent' | 'inline';\n}\n\nexport const getOpacityTransition = (animationDuration: number) =>\n  `opacity ${animationDuration}ms cubic-bezier(.54, 1.5, .38, 1.11)`;\n\nexport interface PopperProps {\n  /**\n   * The reference element to which the Popover is relatively placed to.\n   * Use either trigger or reference, not both.\n   */\n  trigger?: React.ReactNode;\n  /**\n   * The reference element to which the Popover is relatively placed to.\n   * Use either trigger or reference, not both.\n   */\n  reference?: HTMLElement | (() => HTMLElement) | React.RefObject<any>;\n  /** The popper (menu/tooltip/popover) element */\n  popper: React.ReactElement;\n  /** True to set the width of the popper element to the trigger element's width */\n  popperMatchesTriggerWidth?: boolean;\n  /** popper direction */\n  direction?: 'up' | 'down';\n  /** popper position */\n  position?: 'right' | 'left' | 'center';\n  /** Instead of direction and position can set the placement of the popper */\n  placement?: Placement;\n  /** The container to append the popper to. Defaults to 'document.body' */\n  appendTo?: HTMLElement | (() => HTMLElement);\n  /** z-index of the popper element */\n  zIndex?: number;\n  /** True to make the popper visible */\n  isVisible?: boolean;\n  /**\n   * Map class names to positions, for example:\n   * {\n   *   top: styles.modifiers.top,\n   *   bottom: styles.modifiers.bottom,\n   *   left: styles.modifiers.left,\n   *   right: styles.modifiers.right\n   * }\n   */\n  positionModifiers?: {\n    top?: string;\n    right?: string;\n    bottom?: string;\n    left?: string;\n    topStart?: string;\n    topEnd?: string;\n    bottomStart?: string;\n    bottomEnd?: string;\n    leftStart?: string;\n    leftEnd?: string;\n    rightStart?: string;\n    rightEnd?: string;\n  };\n  /** Distance of the popper to the trigger */\n  distance?: number;\n  /** Callback function when mouse enters trigger */\n  onMouseEnter?: (event?: MouseEvent) => void;\n  /** Callback function when mouse leaves trigger */\n  onMouseLeave?: (event?: MouseEvent) => void;\n  /** Callback function when trigger is focused */\n  onFocus?: (event?: FocusEvent) => void;\n  /** Callback function when trigger is blurred (focus leaves) */\n  onBlur?: (event?: FocusEvent) => void;\n  /** Callback function when trigger is clicked */\n  onTriggerClick?: (event?: MouseEvent) => void;\n  /** Callback function when Enter key is used on trigger */\n  onTriggerEnter?: (event?: KeyboardEvent) => void;\n  /** Callback function when popper is clicked */\n  onPopperClick?: (event?: MouseEvent) => void;\n  /** Callback function when mouse enters popper content */\n  onPopperMouseEnter?: (event?: MouseEvent) => void;\n  /** Callback function when mouse leaves popper content */\n  onPopperMouseLeave?: (event?: MouseEvent) => void;\n  /** Callback function when document is clicked */\n  onDocumentClick?: (event?: MouseEvent, triggerElement?: HTMLElement, popperElement?: HTMLElement) => void;\n  /** Callback function when keydown event occurs on document */\n  onDocumentKeyDown?: (event?: KeyboardEvent) => void;\n  /** Enable to flip the popper when it reaches the boundary */\n  enableFlip?: boolean;\n  /** The behavior of how the popper flips when it reaches the boundary */\n  flipBehavior?:\n    | 'flip'\n    | (\n        | 'top'\n        | 'bottom'\n        | 'left'\n        | 'right'\n        | 'top-start'\n        | 'top-end'\n        | 'bottom-start'\n        | 'bottom-end'\n        | 'left-start'\n        | 'left-end'\n        | 'right-start'\n        | 'right-end'\n      )[];\n}\n\nexport const Popper: React.FunctionComponent<PopperProps> = ({\n  trigger,\n  popper,\n  popperMatchesTriggerWidth = true,\n  direction = 'down',\n  position = 'left',\n  placement,\n  appendTo = () => document.body,\n  zIndex = 9999,\n  isVisible = true,\n  positionModifiers,\n  distance = 0,\n  onMouseEnter,\n  onMouseLeave,\n  onFocus,\n  onBlur,\n  onDocumentClick,\n  onTriggerClick,\n  onTriggerEnter,\n  onPopperClick,\n  onPopperMouseEnter,\n  onPopperMouseLeave,\n  onDocumentKeyDown,\n  enableFlip = true,\n  flipBehavior = 'flip',\n  reference\n}) => {\n  const [triggerElement, setTriggerElement] = React.useState(null);\n  const [refElement, setRefElement] = React.useState<HTMLElement>(null);\n  const [popperElement, setPopperElement] = React.useState(null);\n  const [ready, setReady] = React.useState(false);\n  const refOrTrigger = refElement || triggerElement;\n  const onDocumentClickCallback = React.useCallback(\n    (event: MouseEvent) => onDocumentClick(event, refOrTrigger, popperElement),\n    [isVisible, triggerElement, refElement, popperElement, onDocumentClick]\n  );\n\n  React.useEffect(() => {\n    setReady(true);\n  }, []);\n  React.useEffect(() => {\n    if (reference) {\n      if ((reference as React.RefObject<any>).current) {\n        setRefElement((reference as React.RefObject<any>).current);\n      } else if (typeof reference === 'function') {\n        setRefElement(reference());\n      }\n    }\n  }, [reference]);\n  const addEventListener = (listener: any, element: Document | HTMLElement, event: string) => {\n    if (listener && element) {\n      element.addEventListener(event, listener);\n    }\n  };\n  const removeEventListener = (listener: any, element: Document | HTMLElement, event: string) => {\n    if (listener && element) {\n      element.removeEventListener(event, listener);\n    }\n  };\n\n  React.useEffect(() => {\n    addEventListener(onMouseEnter, refOrTrigger, 'mouseenter');\n    addEventListener(onMouseLeave, refOrTrigger, 'mouseleave');\n    addEventListener(onFocus, refOrTrigger, 'focus');\n    addEventListener(onBlur, refOrTrigger, 'blur');\n    addEventListener(onTriggerClick, refOrTrigger, 'click');\n    addEventListener(onTriggerEnter, refOrTrigger, 'keydown');\n    addEventListener(onPopperClick, popperElement, 'click');\n    addEventListener(onPopperMouseEnter, popperElement, 'mouseenter');\n    addEventListener(onPopperMouseLeave, popperElement, 'mouseleave');\n    onDocumentClick && addEventListener(onDocumentClickCallback, document, 'click');\n    addEventListener(onDocumentKeyDown, document, 'keydown');\n\n    // Trigger a Popper update when content changes.\n    const observer = new MutationObserver(() => {\n      update && update();\n    });\n    popperElement && observer.observe(popperElement, { attributes: true, childList: true, subtree: true });\n\n    return () => {\n      removeEventListener(onMouseEnter, refOrTrigger, 'mouseenter');\n      removeEventListener(onMouseLeave, refOrTrigger, 'mouseleave');\n      removeEventListener(onFocus, refOrTrigger, 'focus');\n      removeEventListener(onBlur, refOrTrigger, 'blur');\n      removeEventListener(onTriggerClick, refOrTrigger, 'click');\n      removeEventListener(onTriggerEnter, refOrTrigger, 'keydown');\n      removeEventListener(onPopperClick, popperElement, 'click');\n      removeEventListener(onPopperMouseEnter, popperElement, 'mouseenter');\n      removeEventListener(onPopperMouseLeave, popperElement, 'mouseleave');\n      onDocumentClick && removeEventListener(onDocumentClickCallback, document, 'click');\n      removeEventListener(onDocumentKeyDown, document, 'keydown');\n      observer.disconnect();\n    };\n  }, [\n    triggerElement,\n    popperElement,\n    onMouseEnter,\n    onMouseLeave,\n    onFocus,\n    onBlur,\n    onTriggerClick,\n    onTriggerEnter,\n    onPopperClick,\n    onPopperMouseEnter,\n    onPopperMouseLeave,\n    onDocumentClick,\n    onDocumentKeyDown,\n    refElement\n  ]);\n  const getPlacement = () => {\n    if (placement) {\n      return placement;\n    }\n    let convertedPlacement = direction === 'up' ? 'top' : 'bottom';\n    if (position !== 'center') {\n      convertedPlacement = `${convertedPlacement}-${position === 'right' ? 'end' : 'start'}`;\n    }\n    return convertedPlacement as Placement;\n  };\n  const getPlacementMemo = React.useMemo(getPlacement, [direction, position, placement]);\n  const getOppositePlacementMemo = React.useMemo(() => getOppositePlacement(getPlacement()), [\n    direction,\n    position,\n    placement\n  ]);\n  const sameWidthMod: Modifier<'sameWidth', {}> = React.useMemo(\n    () => ({\n      name: 'sameWidth',\n      enabled: popperMatchesTriggerWidth,\n      phase: 'beforeWrite',\n      requires: ['computeStyles'],\n      fn: ({ state }) => {\n        state.styles.popper.width = `${state.rects.reference.width}px`;\n      },\n      effect: ({ state }) => {\n        state.elements.popper.style.width = `${(state.elements.reference as HTMLElement).offsetWidth}px`;\n        return () => {};\n      }\n    }),\n    [popperMatchesTriggerWidth]\n  );\n\n  const { styles: popperStyles, attributes, update } = usePopper(refOrTrigger, popperElement, {\n    placement: getPlacementMemo,\n    modifiers: [\n      {\n        name: 'offset',\n        options: {\n          offset: [0, distance]\n        }\n      },\n      {\n        name: 'preventOverflow',\n        enabled: false\n      },\n      {\n        // adds attribute [data-popper-reference-hidden] to the popper element which can be used to hide it using CSS\n        name: 'hide',\n        enabled: true\n      },\n      {\n        name: 'flip',\n        enabled: getPlacementMemo.startsWith('auto') || enableFlip,\n        options: {\n          fallbackPlacements: flipBehavior === 'flip' ? [getOppositePlacementMemo] : flipBehavior\n        }\n      },\n      sameWidthMod\n    ]\n  });\n\n  // Returns the CSS modifier class in order to place the Popper's arrow properly\n  // Depends on the position of the Popper relative to the reference element\n  const modifierFromPopperPosition = () => {\n    if (attributes && attributes.popper && attributes.popper['data-popper-placement']) {\n      const popperPlacement = attributes.popper['data-popper-placement'] as keyof typeof positionModifiers;\n      return positionModifiers[popperPlacement];\n    }\n    return positionModifiers.top;\n  };\n\n  const menuWithPopper = React.cloneElement(popper, {\n    className: css(popper.props && popper.props.className, positionModifiers && modifierFromPopperPosition()),\n    style: {\n      ...((popper.props && popper.props.style) || {}),\n      ...popperStyles.popper,\n      zIndex\n    },\n    ...attributes.popper\n  });\n\n  const getTarget: () => HTMLElement = () => {\n    if (typeof appendTo === 'function') {\n      return appendTo();\n    }\n    return appendTo;\n  };\n\n  return (\n    <>\n      {!reference && trigger && (\n        <FindRefWrapper onFoundRef={(foundRef: any) => setTriggerElement(foundRef)}>{trigger}</FindRefWrapper>\n      )}\n      {ready &&\n        isVisible &&\n        ReactDOM.createPortal(\n          <FindRefWrapper onFoundRef={(foundRef: any) => setPopperElement(foundRef)}>{menuWithPopper}</FindRefWrapper>,\n          getTarget()\n        )}\n    </>\n  );\n};\nPopper.displayName = 'Popper';\n"]},"metadata":{},"sourceType":"module"}