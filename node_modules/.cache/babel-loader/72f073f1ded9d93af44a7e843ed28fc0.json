{"ast":null,"code":"import _classCallCheck from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { debounce, canUseDOM } from '@patternfly/react-core/dist/esm/helpers/util';\nimport { Tr } from '../TableComposable/Tr';\nexport var RowWrapper = /*#__PURE__*/function (_React$Component) {\n  _inherits(RowWrapper, _React$Component);\n\n  var _super = _createSuper(RowWrapper);\n\n  function RowWrapper(props) {\n    var _this;\n\n    _classCallCheck(this, RowWrapper);\n\n    _this = _super.call(this, props);\n\n    _this.handleScroll = function (event) {\n      if (!_this._unmounted) {\n        _this.props.onScroll(event);\n      }\n    };\n\n    _this.handleResize = function (event) {\n      if (!_this._unmounted) {\n        _this.props.onResize(event);\n      }\n    };\n\n    if (props.onScroll) {\n      _this.handleScroll = debounce(_this.handleScroll, 100);\n    }\n\n    if (props.onResize) {\n      _this.handleResize = debounce(_this.handleResize, 100);\n    }\n\n    return _this;\n  }\n\n  _createClass(RowWrapper, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._unmounted = false;\n\n      if (canUseDOM) {\n        if (this.props.onScroll) {\n          window.addEventListener('scroll', this.handleScroll);\n        }\n\n        if (this.props.onResize) {\n          window.addEventListener('resize', this.handleResize);\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._unmounted = true;\n\n      if (canUseDOM) {\n        if (this.props.onScroll) {\n          window.removeEventListener('scroll', this.handleScroll);\n        }\n\n        if (this.props.onResize) {\n          window.removeEventListener('resize', this.handleResize);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          onScroll = _a.onScroll,\n          onResize = _a.onResize,\n          _a$row = _a.row,\n          isExpanded = _a$row.isExpanded,\n          isEditable = _a$row.isEditable,\n          isHoverable = _a$row.isHoverable,\n          isRowSelected = _a$row.isRowSelected,\n          rowProps = _a.rowProps,\n          trRef = _a.trRef,\n          className = _a.className,\n          ouiaId = _a.ouiaId,\n          props = __rest(_a, [\"onScroll\", \"onResize\", \"row\", \"rowProps\", \"trRef\", \"className\", \"ouiaId\"]);\n\n      return React.createElement(Tr, Object.assign({}, props, {\n        ref: trRef,\n        isExpanded: isExpanded,\n        isEditable: isEditable,\n        className: className,\n        ouiaId: ouiaId,\n        isHoverable: isHoverable,\n        isRowSelected: isRowSelected\n      }));\n    }\n  }]);\n\n  return RowWrapper;\n}(React.Component);\nRowWrapper.displayName = 'RowWrapper';\nRowWrapper.defaultProps = {\n  className: '',\n  row: {\n    isOpen: undefined,\n    isExpanded: undefined,\n    isHeightAuto: undefined,\n    isEditable: undefined\n  },\n  rowProps: null\n};","map":{"version":3,"mappings":"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","names":["React","debounce","canUseDOM","Tr","RowWrapper","props","event","_unmounted","onScroll","onResize","handleScroll","handleResize","window","addEventListener","removeEventListener","_a","row","isExpanded","isEditable","isHoverable","isRowSelected","rowProps","trRef","className","ouiaId","__rest","Object","ref","Component","isOpen","undefined","isHeightAuto"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-table/src/components/Table/RowWrapper.tsx"],"sourcesContent":["import * as React from 'react';\nimport { OUIAProps } from '@patternfly/react-core/dist/esm/helpers/OUIA/ouia';\nimport { debounce, canUseDOM } from '@patternfly/react-core/dist/esm/helpers/util';\nimport { Tr } from '../TableComposable/Tr';\nimport { IRow } from './TableTypes';\n\n// legacy export now, RowWrapperRow can simply be typed as IRow in the future\nexport interface RowWrapperRow {\n  isOpen?: boolean;\n  isExpanded?: boolean;\n  isEditable?: boolean;\n}\n\nexport interface RowWrapperProps extends OUIAProps {\n  trRef?: React.Ref<any> | Function;\n  className?: string;\n  onScroll?: React.UIEventHandler;\n  onResize?: React.UIEventHandler;\n  row?: IRow;\n  rowProps?: {\n    rowIndex: number;\n    rowKey: string;\n  };\n}\n\nexport class RowWrapper extends React.Component<RowWrapperProps> {\n  static displayName = 'RowWrapper';\n  static defaultProps = {\n    className: '' as string,\n    row: {\n      isOpen: undefined as boolean,\n      isExpanded: undefined as boolean,\n      isHeightAuto: undefined as boolean,\n      isEditable: undefined as boolean\n    } as IRow,\n    rowProps: null as any\n  };\n  _unmounted: boolean;\n\n  constructor(props: RowWrapperProps) {\n    super(props);\n\n    if (props.onScroll) {\n      this.handleScroll = debounce(this.handleScroll, 100);\n    }\n    if (props.onResize) {\n      this.handleResize = debounce(this.handleResize, 100);\n    }\n  }\n\n  componentDidMount() {\n    this._unmounted = false;\n\n    if (canUseDOM) {\n      if (this.props.onScroll) {\n        window.addEventListener('scroll', this.handleScroll);\n      }\n      if (this.props.onResize) {\n        window.addEventListener('resize', this.handleResize);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this._unmounted = true;\n\n    if (canUseDOM) {\n      if (this.props.onScroll) {\n        window.removeEventListener('scroll', this.handleScroll);\n      }\n      if (this.props.onResize) {\n        window.removeEventListener('resize', this.handleResize);\n      }\n    }\n  }\n\n  handleScroll = (event: Event): void => {\n    if (!this._unmounted) {\n      this.props.onScroll((event as unknown) as React.UIEvent<Element>);\n    }\n  };\n\n  handleResize = (event: Event) => {\n    if (!this._unmounted) {\n      this.props.onResize((event as unknown) as React.UIEvent<Element>);\n    }\n  };\n\n  render() {\n    const {\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      onScroll,\n      onResize,\n      row: { isExpanded, isEditable, isHoverable, isRowSelected },\n      rowProps,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      trRef,\n      className,\n      ouiaId,\n      ...props\n    } = this.props;\n\n    return (\n      <Tr\n        {...props}\n        ref={trRef as React.Ref<any>}\n        isExpanded={isExpanded}\n        isEditable={isEditable}\n        className={className}\n        ouiaId={ouiaId}\n        isHoverable={isHoverable}\n        isRowSelected={isRowSelected}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}