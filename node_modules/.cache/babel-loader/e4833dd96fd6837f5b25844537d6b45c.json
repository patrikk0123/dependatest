{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { InternalDropdownItem } from './InternalDropdownItem';\nimport { DropdownArrowContext } from './dropdownConstants';\nimport { useOUIAProps } from '../../helpers';\nexport var DropdownItem = function DropdownItem(_a) {\n  var children = _a.children,\n      className = _a.className,\n      _a$component = _a.component,\n      component = _a$component === void 0 ? 'a' : _a$component,\n      _a$isDisabled = _a.isDisabled,\n      isDisabled = _a$isDisabled === void 0 ? false : _a$isDisabled,\n      _a$isAriaDisabled = _a.isAriaDisabled,\n      isAriaDisabled = _a$isAriaDisabled === void 0 ? false : _a$isAriaDisabled,\n      _a$isPlainText = _a.isPlainText,\n      isPlainText = _a$isPlainText === void 0 ? false : _a$isPlainText,\n      _a$isHovered = _a.isHovered,\n      isHovered = _a$isHovered === void 0 ? false : _a$isHovered,\n      href = _a.href,\n      tooltip = _a.tooltip,\n      _a$tooltipProps = _a.tooltipProps,\n      tooltipProps = _a$tooltipProps === void 0 ? {} : _a$tooltipProps,\n      listItemClassName = _a.listItemClassName,\n      onClick = _a.onClick,\n      ref = _a.ref,\n      additionalChild = _a.additionalChild,\n      customChild = _a.customChild,\n      _a$tabIndex = _a.tabIndex,\n      tabIndex = _a$tabIndex === void 0 ? -1 : _a$tabIndex,\n      _a$icon = _a.icon,\n      icon = _a$icon === void 0 ? null : _a$icon,\n      autoFocus = _a.autoFocus,\n      _a$description = _a.description,\n      description = _a$description === void 0 ? null : _a$description,\n      styleChildren = _a.styleChildren,\n      ouiaId = _a.ouiaId,\n      ouiaSafe = _a.ouiaSafe,\n      props = __rest(_a, [\"children\", \"className\", \"component\", \"isDisabled\", \"isAriaDisabled\", \"isPlainText\", \"isHovered\", \"href\", \"tooltip\", \"tooltipProps\", \"listItemClassName\", \"onClick\", \"ref\", \"additionalChild\", \"customChild\", \"tabIndex\", \"icon\", \"autoFocus\", \"description\", \"styleChildren\", \"ouiaId\", \"ouiaSafe\"]);\n\n  var ouiaProps = useOUIAProps(DropdownItem.displayName, ouiaId, ouiaSafe);\n  return React.createElement(DropdownArrowContext.Consumer, null, function (context) {\n    return React.createElement(InternalDropdownItem, Object.assign({\n      context: context,\n      role: \"menuitem\",\n      tabIndex: tabIndex,\n      className: className,\n      component: component,\n      isDisabled: isDisabled,\n      isAriaDisabled: isAriaDisabled,\n      isPlainText: isPlainText,\n      isHovered: isHovered,\n      href: href,\n      tooltip: tooltip,\n      tooltipProps: tooltipProps,\n      listItemClassName: listItemClassName,\n      onClick: onClick,\n      additionalChild: additionalChild,\n      customChild: customChild,\n      icon: icon,\n      autoFocus: autoFocus,\n      styleChildren: styleChildren,\n      description: description\n    }, ouiaProps, props), children);\n  });\n};\nDropdownItem.displayName = 'DropdownItem';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAoCC,oBAApC,QAAgE,wBAAhE;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,SAASC,YAAT,QAAwC,eAAxC;AAgDA,OAAO,IAAMC,YAAY,GAA+C,SAA3DA,YAA2D,CAACC,EAAD,EAyBhD;MAxBtBC,WAsBQD,GAtBRC;MACAC,YAqBQF,GArBRE;qBAqBQF,GApBRG;MAAAA,sCAAY;sBAoBJH,GAnBRI;MAAAA,wCAAa;0BAmBLJ,GAlBRK;MAAAA,gDAAiB;uBAkBTL,GAjBRM;MAAAA,0CAAc;qBAiBNN,GAhBRO;MAAAA,sCAAY;MACZC,OAeQR,GAfRQ;MACAC,UAcQT,GAdRS;wBAcQT,GAbRU;MAAAA,4CAAe;MACfC,oBAYQX,GAZRW;MACAC,UAWQZ,GAXRY;MAEAC,MASQb,GATRa;MACAC,kBAQQd,GARRc;MACAC,cAOQf,GAPRe;oBAOQf,GANRgB;MAAAA,oCAAW,CAAC;gBAMJhB,GALRiB;MAAAA,4BAAO;MACPC,YAIQlB,GAJRkB;uBAIQlB,GAHRmB;MAAAA,0CAAc;MACdC,gBAEQpB,GAFRoB;MACAC,SACQrB,GADRqB;MACAC,WAAQtB,GAARsB;MACGC,QAAKC,WAxB+D,qSAwB/D;;EAER,IAAMC,SAAS,GAAG3B,YAAY,CAACC,YAAY,CAAC2B,WAAd,EAA2BL,MAA3B,EAAmCC,QAAnC,CAA9B;EACA,OACE3B,oBAACE,oBAAoB,CAAC8B,QAAtB,EAA8B,IAA9B,EACG,iBAAO;IAAA,OACNhC,oBAACC,oBAAD,EAAqBgC;MACnBC,OAAO,EAAEA,OADU;MAEnBC,IAAI,EAAC,UAFc;MAGnBd,QAAQ,EAAEA,QAHS;MAInBd,SAAS,EAAEA,SAJQ;MAKnBC,SAAS,EAAEA,SALQ;MAMnBC,UAAU,EAAEA,UANO;MAOnBC,cAAc,EAAEA,cAPG;MAQnBC,WAAW,EAAEA,WARM;MASnBC,SAAS,EAAEA,SATQ;MAUnBC,IAAI,EAAEA,IAVa;MAWnBC,OAAO,EAAEA,OAXU;MAYnBC,YAAY,EAAEA,YAZK;MAanBC,iBAAiB,EAAEA,iBAbA;MAcnBC,OAAO,EAAEA,OAdU;MAenBE,eAAe,EAAEA,eAfE;MAgBnBC,WAAW,EAAEA,WAhBM;MAiBnBE,IAAI,EAAEA,IAjBa;MAkBnBC,SAAS,EAAEA,SAlBQ;MAmBnBE,aAAa,EAAEA,aAnBI;MAoBnBD,WAAW,EAAEA;IApBM,GAqBfM,SArBe,EAsBfF,KAtBe,CAArB,EAwBGtB,QAxBH,CADM;EAAA,CADV,CADF;AAgCD,CA3DM;AA6DPF,YAAY,CAAC2B,WAAb,GAA2B,cAA3B","names":["React","InternalDropdownItem","DropdownArrowContext","useOUIAProps","DropdownItem","_a","children","className","component","isDisabled","isAriaDisabled","isPlainText","isHovered","href","tooltip","tooltipProps","listItemClassName","onClick","ref","additionalChild","customChild","tabIndex","icon","autoFocus","description","styleChildren","ouiaId","ouiaSafe","props","__rest","ouiaProps","displayName","Consumer","Object","context","role"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Dropdown/DropdownItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport { InternalDropdownItemProps, InternalDropdownItem } from './InternalDropdownItem';\nimport { DropdownArrowContext } from './dropdownConstants';\nimport { useOUIAProps, OUIAProps } from '../../helpers';\n\nexport interface DropdownItemProps extends InternalDropdownItemProps, OUIAProps {\n  /** Anything which can be rendered as dropdown item */\n  children?: React.ReactNode;\n  /** Classes applied to root element of dropdown item */\n  className?: string;\n  /** Class to be applied to list item */\n  listItemClassName?: string;\n  /**\n   * A ReactElement to render, or a string to use as the component tag.\n   * Example: component={<Link to=\"/components/alert/\">Alert</Link>}\n   * Example: component=\"button\"\n   * If React.isValidElement(component) the className prop will be injected unless styleChildren=\"false\"\n   */\n  component?: React.ReactNode;\n  /** ID for the component element */\n  componentID?: string;\n  /** Whether to set className on component when React.isValidElement(component) */\n  styleChildren?: boolean;\n  /** Render dropdown item as disabled option */\n  isDisabled?: boolean;\n  /** Render dropdown item as aria-disabled option */\n  isAriaDisabled?: boolean;\n  /** Render dropdown item as non-interactive item */\n  isPlainText?: boolean;\n  /** Forces display of the hover state of the element */\n  isHovered?: boolean;\n  /** Default hyperlink location */\n  href?: string;\n  /** Tooltip to display when hovered over the item */\n  tooltip?: React.ReactNode;\n  /** Additional tooltip props forwarded to the Tooltip component */\n  tooltipProps?: any;\n  /** Additional node to include alongside item within the <li> */\n  additionalChild?: React.ReactNode;\n  /** Custom item rendering that receives the DropdownContext */\n  customChild?: React.ReactNode;\n  /** tabIndex to use, null to unset it */\n  tabIndex?: number | null;\n  /** An image to display within the DropdownItem, appearing before any component children */\n  icon?: React.ReactNode;\n  /** Initial focus on the item when the menu is opened (Note: Only applicable to one of the items) */\n  autoFocus?: boolean;\n  /** A short description of the dropdown item, displayed under the dropdown item content */\n  description?: React.ReactNode;\n}\n\nexport const DropdownItem: React.FunctionComponent<DropdownItemProps> = ({\n  children,\n  className,\n  component = 'a',\n  isDisabled = false,\n  isAriaDisabled = false,\n  isPlainText = false,\n  isHovered = false,\n  href,\n  tooltip,\n  tooltipProps = {},\n  listItemClassName,\n  onClick,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  ref, // Types of Ref are different for React.FunctionComponent vs React.Component\n  additionalChild,\n  customChild,\n  tabIndex = -1,\n  icon = null,\n  autoFocus,\n  description = null,\n  styleChildren,\n  ouiaId,\n  ouiaSafe,\n  ...props\n}: DropdownItemProps) => {\n  const ouiaProps = useOUIAProps(DropdownItem.displayName, ouiaId, ouiaSafe);\n  return (\n    <DropdownArrowContext.Consumer>\n      {context => (\n        <InternalDropdownItem\n          context={context}\n          role=\"menuitem\"\n          tabIndex={tabIndex}\n          className={className}\n          component={component}\n          isDisabled={isDisabled}\n          isAriaDisabled={isAriaDisabled}\n          isPlainText={isPlainText}\n          isHovered={isHovered}\n          href={href}\n          tooltip={tooltip}\n          tooltipProps={tooltipProps}\n          listItemClassName={listItemClassName}\n          onClick={onClick}\n          additionalChild={additionalChild}\n          customChild={customChild}\n          icon={icon}\n          autoFocus={autoFocus}\n          styleChildren={styleChildren}\n          description={description}\n          {...ouiaProps}\n          {...props}\n        >\n          {children}\n        </InternalDropdownItem>\n      )}\n    </DropdownArrowContext.Consumer>\n  );\n};\n\nDropdownItem.displayName = 'DropdownItem';\n"]},"metadata":{},"sourceType":"module"}