{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/OptionsMenu/options-menu';\nimport { DropdownItem } from '../Dropdown';\nimport CheckIcon from '@patternfly/react-icons/dist/esm/icons/check-icon';\nexport const OptionsMenuItem = _a => {\n  var {\n    children = null,\n    isSelected = false,\n    onSelect = () => null,\n    id = '',\n    isDisabled\n  } = _a,\n      props = __rest(_a, [\"children\", \"isSelected\", \"onSelect\", \"id\", \"isDisabled\"]);\n\n  return React.createElement(DropdownItem, Object.assign({\n    id: id,\n    component: \"button\",\n    isDisabled: isDisabled,\n    onClick: event => onSelect(event)\n  }, isDisabled && {\n    'aria-disabled': true\n  }, props), children, isSelected && React.createElement(\"span\", {\n    className: css(styles.optionsMenuMenuItemIcon)\n  }, React.createElement(CheckIcon, {\n    \"aria-hidden\": isSelected\n  })));\n};\nOptionsMenuItem.displayName = 'OptionsMenuItem';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,kEAAnB;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAOC,SAAP,MAAsB,mDAAtB;AAkBA,OAAO,MAAMC,eAAe,GAAmDC,EAAD,IAOnD;MAPoD;IAC7EC,QAAQ,GAAG,IADkE;IAE7EC,UAAU,GAAG,KAFgE;IAG7EC,QAAQ,GAAG,MAAM,IAH4D;IAI7EC,EAAE,GAAG,EAJwE;IAK7EC;EAL6E,IAKnEL;MACPM,KAAK,cANqE,0DAMrE;;EACkB,OAC1BZ,oBAACG,YAAD,EAAaU;IACXH,EAAE,EAAEA,EADO;IAEXI,SAAS,EAAC,QAFC;IAGXH,UAAU,EAAEA,UAHD;IAIXI,OAAO,EAAGC,KAAD,IAAgBP,QAAQ,CAACO,KAAD;EAJtB,GAKNL,UAAU,IAAI;IAAE,iBAAiB;EAAnB,CALR,EAMPC,KANO,CAAb,EAQGL,QARH,EASGC,UAAU,IACTR;IAAMiB,SAAS,EAAEhB,GAAG,CAACC,MAAM,CAACgB,uBAAR;EAApB,GACElB,oBAACI,SAAD,EAAU;IAAA,eAAcI;EAAd,CAAV,CADF,CAVJ,CAD0B;AAgB3B,CAvBM;AAwBPH,eAAe,CAACc,WAAhB,GAA8B,iBAA9B","names":["React","css","styles","DropdownItem","CheckIcon","OptionsMenuItem","_a","children","isSelected","onSelect","id","isDisabled","props","Object","component","onClick","event","className","optionsMenuMenuItemIcon","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/OptionsMenu/OptionsMenuItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/OptionsMenu/options-menu';\nimport { DropdownItem } from '../Dropdown';\nimport CheckIcon from '@patternfly/react-icons/dist/esm/icons/check-icon';\n\nexport interface OptionsMenuItemProps\n  extends Omit<React.HTMLProps<HTMLAnchorElement>, 'onSelect' | 'onClick' | 'onKeyDown' | 'type'> {\n  /** Anything which can be rendered as an options menu item */\n  children?: React.ReactNode;\n  /** Classes applied to root element of an options menu item */\n  className?: string;\n  /** Render options menu item as selected */\n  isSelected?: boolean;\n  /** Render options menu item as disabled option */\n  isDisabled?: boolean;\n  /** Callback for when this options menu item is selected */\n  onSelect?: (event?: React.MouseEvent<HTMLAnchorElement> | React.KeyboardEvent) => void;\n  /** Unique id of this options menu item */\n  id?: string;\n}\n\nexport const OptionsMenuItem: React.FunctionComponent<OptionsMenuItemProps> = ({\n  children = null as React.ReactNode,\n  isSelected = false,\n  onSelect = () => null as any,\n  id = '',\n  isDisabled,\n  ...props\n}: OptionsMenuItemProps) => (\n  <DropdownItem\n    id={id}\n    component=\"button\"\n    isDisabled={isDisabled}\n    onClick={(event: any) => onSelect(event)}\n    {...(isDisabled && { 'aria-disabled': true })}\n    {...props}\n  >\n    {children}\n    {isSelected && (\n      <span className={css(styles.optionsMenuMenuItemIcon)}>\n        <CheckIcon aria-hidden={isSelected} />\n      </span>\n    )}\n  </DropdownItem>\n);\nOptionsMenuItem.displayName = 'OptionsMenuItem';\n"]},"metadata":{},"sourceType":"module"}