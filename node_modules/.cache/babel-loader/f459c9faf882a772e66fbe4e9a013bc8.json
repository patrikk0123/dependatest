{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Radio/radio';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport class Radio extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.props.onChange(event.currentTarget.checked, event);\n    };\n\n    if (!props.label && !props['aria-label']) {\n      // eslint-disable-next-line no-console\n      console.error('Radio:', 'Radio requires an aria-label to be specified');\n    }\n\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(Radio.displayName)\n    };\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      'aria-label': ariaLabel,\n      checked,\n      className,\n      defaultChecked,\n      isLabelWrapped,\n      isLabelBeforeButton,\n      isChecked,\n      isDisabled,\n      isValid,\n      label,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onChange,\n      description,\n      body,\n      ouiaId,\n      ouiaSafe = true\n    } = _a,\n          props = __rest(_a, ['aria-label', \"checked\", \"className\", \"defaultChecked\", \"isLabelWrapped\", \"isLabelBeforeButton\", \"isChecked\", \"isDisabled\", \"isValid\", \"label\", \"onChange\", \"description\", \"body\", \"ouiaId\", \"ouiaSafe\"]);\n\n    if (!props.id) {\n      // eslint-disable-next-line no-console\n      console.error('Radio:', 'id is required to make input accessible');\n    }\n\n    const inputRendered = React.createElement(\"input\", Object.assign({}, props, {\n      className: css(styles.radioInput),\n      type: \"radio\",\n      onChange: this.handleChange,\n      \"aria-invalid\": !isValid,\n      disabled: isDisabled,\n      checked: checked || isChecked\n    }, checked === undefined && {\n      defaultChecked\n    }, !label && {\n      'aria-label': ariaLabel\n    }, getOUIAProps(Radio.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)));\n    let labelRendered = null;\n\n    if (label && isLabelWrapped) {\n      labelRendered = React.createElement(\"span\", {\n        className: css(styles.radioLabel, isDisabled && styles.modifiers.disabled)\n      }, label);\n    } else if (label) {\n      labelRendered = React.createElement(\"label\", {\n        className: css(styles.radioLabel, isDisabled && styles.modifiers.disabled),\n        htmlFor: props.id\n      }, label);\n    }\n\n    const descRender = description ? React.createElement(\"span\", {\n      className: css(styles.radioDescription)\n    }, description) : null;\n    const bodyRender = body ? React.createElement(\"span\", {\n      className: css(styles.radioBody)\n    }, body) : null;\n    const childrenRendered = isLabelBeforeButton ? React.createElement(React.Fragment, null, labelRendered, inputRendered, descRender, bodyRender) : React.createElement(React.Fragment, null, inputRendered, labelRendered, descRender, bodyRender);\n    return isLabelWrapped ? React.createElement(\"label\", {\n      className: css(styles.radio, className),\n      htmlFor: props.id\n    }, childrenRendered) : React.createElement(\"div\", {\n      className: css(styles.radio, !label && styles.modifiers.standalone, className)\n    }, childrenRendered);\n  }\n\n}\nRadio.displayName = 'Radio';\nRadio.defaultProps = {\n  className: '',\n  isDisabled: false,\n  isValid: true,\n  onChange: () => {}\n};","map":{"version":3,"mappings":"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","names":["React","styles","css","getOUIAProps","getDefaultOUIAId","Radio","Component","constructor","props","event","onChange","currentTarget","checked","label","console","error","state","ouiaStateId","displayName","render","_a","ariaLabel","className","defaultChecked","isLabelWrapped","isLabelBeforeButton","isChecked","isDisabled","isValid","description","body","ouiaId","ouiaSafe","id","inputRendered","radioInput","type","handleChange","disabled","undefined","labelRendered","radioLabel","modifiers","htmlFor","descRender","radioDescription","bodyRender","radioBody","childrenRendered","radio","standalone"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Radio/Radio.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Radio/radio';\nimport { css } from '@patternfly/react-styles';\nimport { PickOptional } from '../../helpers/typeUtils';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId } from '../../helpers';\n\nexport interface RadioProps\n  extends Omit<React.HTMLProps<HTMLInputElement>, 'disabled' | 'label' | 'onChange' | 'type'>,\n    OUIAProps {\n  /** Additional classes added to the radio. */\n  className?: string;\n  /** Id of the radio. */\n  id: string;\n  /** Flag to show if the radio label is wrapped on small screen. */\n  isLabelWrapped?: boolean;\n  /** Flag to show if the radio label is shown before the radio button. */\n  isLabelBeforeButton?: boolean;\n  /** Flag to show if the radio is checked. */\n  checked?: boolean;\n  /** Flag to show if the radio is checked. */\n  isChecked?: boolean;\n  /** Flag to show if the radio is disabled. */\n  isDisabled?: boolean;\n  /** Flag to show if the radio selection is valid or invalid. */\n  isValid?: boolean;\n  /** Label text of the radio. */\n  label?: React.ReactNode;\n  /** Name for group of radios */\n  name: string;\n  /** A callback for when the radio selection changes. */\n  onChange?: (checked: boolean, event: React.FormEvent<HTMLInputElement>) => void;\n  /** Aria label for the radio. */\n  'aria-label'?: string;\n  /** Description text of the radio. */\n  description?: React.ReactNode;\n  /** Body of the radio. */\n  body?: React.ReactNode;\n}\n\nexport class Radio extends React.Component<RadioProps, { ouiaStateId: string }> {\n  static displayName = 'Radio';\n  static defaultProps: PickOptional<RadioProps> = {\n    className: '',\n    isDisabled: false,\n    isValid: true,\n    onChange: () => {}\n  };\n\n  constructor(props: RadioProps) {\n    super(props);\n    if (!props.label && !props['aria-label']) {\n      // eslint-disable-next-line no-console\n      console.error('Radio:', 'Radio requires an aria-label to be specified');\n    }\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(Radio.displayName)\n    };\n  }\n\n  handleChange = (event: React.FormEvent<HTMLInputElement>) => {\n    this.props.onChange(event.currentTarget.checked, event);\n  };\n\n  render() {\n    const {\n      'aria-label': ariaLabel,\n      checked,\n      className,\n      defaultChecked,\n      isLabelWrapped,\n      isLabelBeforeButton,\n      isChecked,\n      isDisabled,\n      isValid,\n      label,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onChange,\n      description,\n      body,\n      ouiaId,\n      ouiaSafe = true,\n      ...props\n    } = this.props;\n    if (!props.id) {\n      // eslint-disable-next-line no-console\n      console.error('Radio:', 'id is required to make input accessible');\n    }\n\n    const inputRendered = (\n      <input\n        {...props}\n        className={css(styles.radioInput)}\n        type=\"radio\"\n        onChange={this.handleChange}\n        aria-invalid={!isValid}\n        disabled={isDisabled}\n        checked={checked || isChecked}\n        {...(checked === undefined && { defaultChecked })}\n        {...(!label && { 'aria-label': ariaLabel })}\n        {...getOUIAProps(Radio.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n      />\n    );\n\n    let labelRendered: React.ReactNode = null;\n    if (label && isLabelWrapped) {\n      labelRendered = <span className={css(styles.radioLabel, isDisabled && styles.modifiers.disabled)}>{label}</span>;\n    } else if (label) {\n      labelRendered = (\n        <label className={css(styles.radioLabel, isDisabled && styles.modifiers.disabled)} htmlFor={props.id}>\n          {label}\n        </label>\n      );\n    }\n\n    const descRender = description ? <span className={css(styles.radioDescription)}>{description}</span> : null;\n    const bodyRender = body ? <span className={css(styles.radioBody)}>{body}</span> : null;\n    const childrenRendered = isLabelBeforeButton ? (\n      <>\n        {labelRendered}\n        {inputRendered}\n        {descRender}\n        {bodyRender}\n      </>\n    ) : (\n      <>\n        {inputRendered}\n        {labelRendered}\n        {descRender}\n        {bodyRender}\n      </>\n    );\n\n    return isLabelWrapped ? (\n      <label className={css(styles.radio, className)} htmlFor={props.id}>\n        {childrenRendered}\n      </label>\n    ) : (\n      <div className={css(styles.radio, !label && styles.modifiers.standalone, className)}>{childrenRendered}</div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}