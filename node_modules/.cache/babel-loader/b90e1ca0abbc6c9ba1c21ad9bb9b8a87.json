{"ast":null,"code":"// url regex taken from:\n// https://uibakery.io/regex-library/url\n// eslint-disable-next-line\nvar urlRegex=/^https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)$/;/**\n * URL validation function.\n *\n * Just checks valid URL format. Accepts empty URL.\n *\n * @param url - URL string\n * @returns empty string if valid, error message otherwise\n */export var validateUrl=function validateUrl(url){if(url&&!urlRegex.test(url))return'Invalid URL format';return'';};","map":{"version":3,"names":["urlRegex","validateUrl","url","test"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/utils/formValidationHelpers.ts"],"sourcesContent":["// url regex taken from:\n// https://uibakery.io/regex-library/url\n// eslint-disable-next-line\nconst urlRegex = /^https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)$/;\n\n/**\n * URL validation function.\n *\n * Just checks valid URL format. Accepts empty URL.\n *\n * @param url - URL string\n * @returns empty string if valid, error message otherwise\n */\nexport const validateUrl = (url: string) => {\n  if (url && !urlRegex.test(url)) return 'Invalid URL format';\n  return '';\n};\n"],"mappings":"AAAA;AACA;AACA;AACA,GAAMA,SAAQ,CAAG,6GAAjB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMC,YAAW,CAAG,QAAdA,YAAc,CAACC,GAAD,CAAiB,CAC1C,GAAIA,GAAG,EAAI,CAACF,QAAQ,CAACG,IAAT,CAAcD,GAAd,CAAZ,CAAgC,MAAO,oBAAP,CAChC,MAAO,EAAP,CACD,CAHM"},"metadata":{},"sourceType":"module"}