{"ast":null,"code":"import * as React from 'react';\nexport const DragDropContext = React.createContext({\n  onDrag: _source => true,\n  onDragMove: (_source, _dest) => {},\n  onDrop: (_source, _dest) => false\n});\nexport const DragDrop = _ref => {\n  let {\n    children,\n    onDrag = () => true,\n    onDragMove = () => {},\n    onDrop = () => false\n  } = _ref;\n  return React.createElement(DragDropContext.Provider, {\n    value: {\n      onDrag,\n      onDragMove,\n      onDrop\n    }\n  }, children);\n};\nDragDrop.displayName = 'DragDrop';","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AASA,OAAO,MAAMC,eAAe,GAAGD,KAAK,CAACE,aAAN,CAAoB;EACjDC,MAAM,EAAGC,OAAD,IAAoC,IADK;EAEjDC,UAAU,EAAE,CAACD,OAAD,EAAiCE,KAAjC,KAAkE,CAAG,CAFhC;EAGjDC,MAAM,EAAE,CAACH,OAAD,EAAiCE,KAAjC,KAAmE;AAH1B,CAApB,CAAxB;AAiBP,OAAO,MAAME,QAAQ,GAA2C;EAAA,IAAC;IAC/DC,QAD+D;IAE/DN,MAAM,GAAG,MAAM,IAFgD;IAG/DE,UAAU,GAAG,MAAK,CAAG,CAH0C;IAI/DE,MAAM,GAAG,MAAM;EAJgD,CAAD;EAAA,OAM9DP,oBAACC,eAAe,CAACS,QAAjB,EAAyB;IAACC,KAAK,EAAE;MAAER,MAAF;MAAUE,UAAV;MAAsBE;IAAtB;EAAR,CAAzB,EAAkEE,QAAlE,CAN8D;AAAA,CAAzD;AAQPD,QAAQ,CAACI,WAAT,GAAuB,UAAvB","names":["React","DragDropContext","createContext","onDrag","_source","onDragMove","_dest","onDrop","DragDrop","children","Provider","value","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/DragDrop/DragDrop.tsx"],"sourcesContent":["import * as React from 'react';\n\ninterface DraggableItemPosition {\n  /** Parent droppableId */\n  droppableId: string;\n  /** Index of item in parent Droppable */\n  index: number;\n}\n\nexport const DragDropContext = React.createContext({\n  onDrag: (_source: DraggableItemPosition) => true as boolean,\n  onDragMove: (_source: DraggableItemPosition, _dest?: DraggableItemPosition) => {},\n  onDrop: (_source: DraggableItemPosition, _dest?: DraggableItemPosition) => false as boolean\n});\n\ninterface DragDropProps {\n  /** Potentially Droppable and Draggable children */\n  children?: React.ReactNode;\n  /** Callback for drag event. Return true to allow drag, false to disallow. */\n  onDrag?: (source: DraggableItemPosition) => boolean;\n  /** Callback on mouse move while dragging. */\n  onDragMove?: (source: DraggableItemPosition, dest?: DraggableItemPosition) => void;\n  /** Callback for drop event. Return true to allow drop, false to disallow. */\n  onDrop?: (source: DraggableItemPosition, dest?: DraggableItemPosition) => boolean;\n}\n\nexport const DragDrop: React.FunctionComponent<DragDropProps> = ({\n  children,\n  onDrag = () => true,\n  onDragMove = () => {},\n  onDrop = () => false\n}: DragDropProps) => (\n  <DragDropContext.Provider value={{ onDrag, onDragMove, onDrop }}>{children}</DragDropContext.Provider>\n);\nDragDrop.displayName = 'DragDrop';\n"]},"metadata":{},"sourceType":"module"}