{"ast":null,"code":"import { useMemo } from 'react';\nvar uid = 0;\nvar ouiaPrefix = 'OUIA-Generated-';\nvar ouiaIdByRoute = {};\n/** Get props to conform to OUIA spec\n *\n * For functional components, use the useOUIAProps function instead\n *\n * In class based components, create a state variable ouiaStateId to create a static generated ID:\n * state = {\n *  ouiaStateId: getDefaultOUIAId(Chip.displayName)\n * }\n * This generated ID should remain alive as long as the component is not unmounted.\n *\n * Then add the attributes to the component\n * {...getOUIAProps('OverflowChip', this.props.ouiaId !== undefined ? this.props.ouiaId : this.state.ouiaStateId)}\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {boolean} ouiaSafe false if in animation\n */\n\nexport function getOUIAProps(componentType, id) {\n  var ouiaSafe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return {\n    'data-ouia-component-type': \"PF4/\".concat(componentType),\n    'data-ouia-safe': ouiaSafe,\n    'data-ouia-component-id': id\n  };\n}\n/**\n * Hooks version of the getOUIAProps function that also memoizes the generated ID\n * Can only be used in functional components\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {boolean} ouiaSafe false if in animation\n * @param {string} variant Optional variant to add to the generated ID\n */\n\nexport var useOUIAProps = function useOUIAProps(componentType, id) {\n  var ouiaSafe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var variant = arguments.length > 3 ? arguments[3] : undefined;\n  return {\n    'data-ouia-component-type': \"PF4/\".concat(componentType),\n    'data-ouia-safe': ouiaSafe,\n    'data-ouia-component-id': useOUIAId(componentType, id, variant)\n  };\n};\n/**\n * Returns the ID or the memoized generated ID\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {string} variant Optional variant to add to the generated ID\n */\n\nexport var useOUIAId = function useOUIAId(componentType, id, variant) {\n  if (id !== undefined) {\n    return id;\n  }\n\n  return useMemo(function () {\n    return getDefaultOUIAId(componentType, variant);\n  }, [componentType, variant]);\n};\n/**\n * Returns a generated id based on the URL location\n *\n * @param {string} componentType OUIA component type\n * @param {string} variant Optional variant to add to the generated ID\n */\n\nexport function getDefaultOUIAId(componentType, variant) {\n  /*\n  ouiaIdByRoute = {\n    [route+componentType]: [number]\n  }\n  */\n  try {\n    var key;\n\n    if (typeof window !== 'undefined') {\n      // browser environments\n      key = \"\".concat(window.location.href, \"-\").concat(componentType, \"-\").concat(variant || '');\n    } else {\n      // node/SSR environments\n      key = \"\".concat(componentType, \"-\").concat(variant || '');\n    }\n\n    if (!ouiaIdByRoute[key]) {\n      ouiaIdByRoute[key] = 0;\n    }\n\n    return \"\".concat(ouiaPrefix).concat(componentType, \"-\").concat(variant ? \"\".concat(variant, \"-\") : '').concat(++ouiaIdByRoute[key]);\n  } catch (exception) {\n    return \"\".concat(ouiaPrefix).concat(componentType, \"-\").concat(variant ? \"\".concat(variant, \"-\") : '').concat(++uid);\n  }\n}","map":{"version":3,"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AAYA,IAAIC,GAAG,GAAG,CAAV;AACA,IAAMC,UAAU,GAAG,iBAAnB;AACA,IAAMC,aAAa,GAAQ,EAA3B;AAEA;;;;;;;;;;;;;;;;;;AAiBA,OAAM,SAAUC,YAAV,CAAuBC,aAAvB,EAA8CC,EAA9C,EAAkF;EAAA,IAAxBC,QAAwB,uEAAJ,IAAI;EACtF,OAAO;IACL,0CAAmCF,aAAnC,CADK;IAEL,kBAAkBE,QAFb;IAGL,0BAA0BD;EAHrB,CAAP;AAKD;AAED;;;;;;;;;;AASA,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACH,aAAD,EAAwBC,EAAxB;EAAA,IAAqCC,QAArC,uEAAyD,IAAzD;EAAA,IAA+DE,OAA/D;EAAA,OAAqF;IAC/G,0CAAmCJ,aAAnC,CAD+G;IAE/G,kBAAkBE,QAF6F;IAG/G,0BAA0BG,SAAS,CAACL,aAAD,EAAgBC,EAAhB,EAAoBG,OAApB;EAH4E,CAArF;AAAA,CAArB;AAMP;;;;;;;;AAOA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACL,aAAD,EAAwBC,EAAxB,EAAqCG,OAArC,EAAyD;EAChF,IAAIH,EAAE,KAAKK,SAAX,EAAsB;IACpB,OAAOL,EAAP;EACD;;EACD,OAAON,OAAO,CAAC;IAAA,OAAMY,gBAAgB,CAACP,aAAD,EAAgBI,OAAhB,CAAtB;EAAA,CAAD,EAAiD,CAACJ,aAAD,EAAgBI,OAAhB,CAAjD,CAAd;AACD,CALM;AAOP;;;;;;;AAMA,OAAM,SAAUG,gBAAV,CAA2BP,aAA3B,EAAkDI,OAAlD,EAAkE;EACtE;;;;;EAKA,IAAI;IACF,IAAII,GAAJ;;IACA,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;MACjC;MACAD,GAAG,aAAMC,MAAM,CAACC,QAAP,CAAgBC,IAAtB,cAA8BX,aAA9B,cAA+CI,OAAO,IAAI,EAA1D,CAAH;IACD,CAHD,MAGO;MACL;MACAI,GAAG,aAAMR,aAAN,cAAuBI,OAAO,IAAI,EAAlC,CAAH;IACD;;IACD,IAAI,CAACN,aAAa,CAACU,GAAD,CAAlB,EAAyB;MACvBV,aAAa,CAACU,GAAD,CAAb,GAAqB,CAArB;IACD;;IACD,iBAAUX,UAAV,SAAuBG,aAAvB,cAAwCI,OAAO,aAAMA,OAAN,SAAmB,EAAlE,SAAuE,EAAEN,aAAa,CAACU,GAAD,CAAtF;EACD,CAbD,CAaE,OAAOI,SAAP,EAAkB;IAClB,iBAAUf,UAAV,SAAuBG,aAAvB,cAAwCI,OAAO,aAAMA,OAAN,SAAmB,EAAlE,SAAuE,EAAER,GAAzE;EACD;AACF","names":["useMemo","uid","ouiaPrefix","ouiaIdByRoute","getOUIAProps","componentType","id","ouiaSafe","useOUIAProps","variant","useOUIAId","undefined","getDefaultOUIAId","key","window","location","href","exception"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/helpers/OUIA/ouia.ts"],"sourcesContent":["import { useMemo } from 'react';\n\ntype OuiaId = number | string;\n\n// https://ouia.readthedocs.io/en/latest/README.html#ouia-component\nexport interface OUIAProps {\n  // If there is only one instance of the component on the page at once, it is OPTIONAL\n  ouiaId?: OuiaId;\n  // False if in animation\n  ouiaSafe?: boolean;\n}\n\nlet uid = 0;\nconst ouiaPrefix = 'OUIA-Generated-';\nconst ouiaIdByRoute: any = {};\n\n/** Get props to conform to OUIA spec\n *\n * For functional components, use the useOUIAProps function instead\n *\n * In class based components, create a state variable ouiaStateId to create a static generated ID:\n * state = {\n *  ouiaStateId: getDefaultOUIAId(Chip.displayName)\n * }\n * This generated ID should remain alive as long as the component is not unmounted.\n *\n * Then add the attributes to the component\n * {...getOUIAProps('OverflowChip', this.props.ouiaId !== undefined ? this.props.ouiaId : this.state.ouiaStateId)}\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {boolean} ouiaSafe false if in animation\n */\nexport function getOUIAProps(componentType: string, id: OuiaId, ouiaSafe: boolean = true) {\n  return {\n    'data-ouia-component-type': `PF4/${componentType}`,\n    'data-ouia-safe': ouiaSafe,\n    'data-ouia-component-id': id\n  };\n}\n\n/**\n * Hooks version of the getOUIAProps function that also memoizes the generated ID\n * Can only be used in functional components\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {boolean} ouiaSafe false if in animation\n * @param {string} variant Optional variant to add to the generated ID\n */\nexport const useOUIAProps = (componentType: string, id?: OuiaId, ouiaSafe: boolean = true, variant?: string) => ({\n  'data-ouia-component-type': `PF4/${componentType}`,\n  'data-ouia-safe': ouiaSafe,\n  'data-ouia-component-id': useOUIAId(componentType, id, variant)\n});\n\n/**\n * Returns the ID or the memoized generated ID\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {string} variant Optional variant to add to the generated ID\n */\nexport const useOUIAId = (componentType: string, id?: OuiaId, variant?: string) => {\n  if (id !== undefined) {\n    return id;\n  }\n  return useMemo(() => getDefaultOUIAId(componentType, variant), [componentType, variant]);\n};\n\n/**\n * Returns a generated id based on the URL location\n *\n * @param {string} componentType OUIA component type\n * @param {string} variant Optional variant to add to the generated ID\n */\nexport function getDefaultOUIAId(componentType: string, variant?: string) {\n  /*\n  ouiaIdByRoute = {\n    [route+componentType]: [number]\n  }\n  */\n  try {\n    let key;\n    if (typeof window !== 'undefined') {\n      // browser environments\n      key = `${window.location.href}-${componentType}-${variant || ''}`;\n    } else {\n      // node/SSR environments\n      key = `${componentType}-${variant || ''}`;\n    }\n    if (!ouiaIdByRoute[key]) {\n      ouiaIdByRoute[key] = 0;\n    }\n    return `${ouiaPrefix}${componentType}-${variant ? `${variant}-` : ''}${++ouiaIdByRoute[key]}`;\n  } catch (exception) {\n    return `${ouiaPrefix}${componentType}-${variant ? `${variant}-` : ''}${++uid}`;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}