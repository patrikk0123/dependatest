{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core/dist/esm/components/Tooltip/Tooltip';\nimport { Bullseye, EmptyState } from '@patternfly/react-core';\nimport { Td } from '../TableComposable/Td';\nexport const BodyCell = _a => {\n  var {\n    'data-label': dataLabel = '',\n    className = '',\n    colSpan,\n    component = 'td',\n    isVisible,\n    parentId,\n    textCenter = false,\n    tooltip: tooltipProp = '',\n    onMouseEnter: onMouseEnterProp = () => {},\n    children,\n\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    errorText,\n    isValid,\n    isOpen,\n    ariaControls,\n    editableValue,\n    editableSelectProps,\n    options,\n    isSelectOpen,\n    value,\n    name\n  } = _a,\n\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n  props = __rest(_a, ['data-label', \"className\", \"colSpan\", \"component\", \"isVisible\", \"parentId\", \"textCenter\", \"tooltip\", \"onMouseEnter\", \"children\", \"errorText\", \"isValid\", \"isOpen\", \"ariaControls\", \"editableValue\", \"editableSelectProps\", \"options\", \"isSelectOpen\", \"value\", \"name\"]);\n\n  const [tooltip, setTooltip] = React.useState('');\n\n  const onMouseEnter = event => {\n    if (event.target.offsetWidth < event.target.scrollWidth) {\n      if (tooltipProp) {\n        setTooltip(tooltipProp);\n      } else if (typeof children === 'string') {\n        setTooltip(children);\n      }\n    } else {\n      setTooltip('');\n    }\n\n    onMouseEnterProp(event);\n  };\n\n  let isEmptyStateCell = false;\n\n  if (children) {\n    isEmptyStateCell = children.type === Bullseye && children.props.children && children.props.children.type === EmptyState || children.type === EmptyState;\n  }\n\n  const cell = React.createElement(Td, Object.assign({\n    className: className,\n    component: component,\n    dataLabel: dataLabel && parentId == null && !isEmptyStateCell ? dataLabel : null,\n    onMouseEnter: onMouseEnter,\n    textCenter: textCenter,\n    colSpan: colSpan\n  }, props), children);\n  const bodyCell = tooltip !== '' ? React.createElement(Tooltip, {\n    content: tooltip,\n    isVisible: true\n  }, cell) : cell;\n  return parentId !== undefined && colSpan === undefined || !isVisible ? null : bodyCell;\n};\nBodyCell.displayName = 'BodyCell';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,4DAAxB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAkD,wBAAlD;AACA,SAASC,EAAT,QAAmB,uBAAnB;AAwBA,OAAO,MAAMC,QAAQ,GAA4CC,EAAD,IAwB5C;MAxB6C;IAC/D,cAAcC,SAAS,GAAG,EADqC;IAE/DC,SAAS,GAAG,EAFmD;IAG/DC,OAH+D;IAI/DC,SAAS,GAAG,IAJmD;IAK/DC,SAL+D;IAM/DC,QAN+D;IAO/DC,UAAU,GAAG,KAPkD;IAQ/DC,OAAO,EAAEC,WAAW,GAAG,EARwC;IAS/DC,YAAY,EAAEC,gBAAgB,GAAG,MAAK,CAAG,CATsB;IAU/DC,QAV+D;;IAW/D;IACAC,SAZ+D;IAa/DC,OAb+D;IAc/DC,MAd+D;IAe/DC,YAf+D;IAgB/DC,aAhB+D;IAiB/DC,mBAjB+D;IAkB/DC,OAlB+D;IAmB/DC,YAnB+D;IAoB/DC,KApB+D;IAqB/DC;EArB+D,IAqB3DtB;;EACJ;EACGuB,KAAK,cAvBuD,uQAuBvD;;EAER,MAAM,CAACf,OAAD,EAAUgB,UAAV,IAAwB9B,KAAK,CAAC+B,QAAN,CAAe,EAAf,CAA9B;;EACA,MAAMf,YAAY,GAAIgB,KAAD,IAAe;IAClC,IAAIA,KAAK,CAACC,MAAN,CAAaC,WAAb,GAA2BF,KAAK,CAACC,MAAN,CAAaE,WAA5C,EAAyD;MACvD,IAAIpB,WAAJ,EAAiB;QACfe,UAAU,CAACf,WAAD,CAAV;MACD,CAFD,MAEO,IAAI,OAAOG,QAAP,KAAoB,QAAxB,EAAkC;QACvCY,UAAU,CAACZ,QAAD,CAAV;MACD;IACF,CAND,MAMO;MACLY,UAAU,CAAC,EAAD,CAAV;IACD;;IACDb,gBAAgB,CAACe,KAAD,CAAhB;EACD,CAXD;;EAaA,IAAII,gBAAgB,GAAG,KAAvB;;EACA,IAAIlB,QAAJ,EAAc;IACZkB,gBAAgB,GACZlB,QAA+B,CAACmB,IAAhC,KAAyCnC,QAAzC,IACCgB,QAA+B,CAACW,KAAhC,CAAsCX,QADvC,IAECA,QAA+B,CAACW,KAAhC,CAAsCX,QAAtC,CAA+CmB,IAA/C,KAAwDlC,UAF3D,IAGCe,QAA+B,CAACmB,IAAhC,KAAyClC,UAJ5C;EAKD;;EAED,MAAMmC,IAAI,GACRtC,oBAACI,EAAD,EAAGmC;IACD/B,SAAS,EAAEA,SADV;IAEDE,SAAS,EAAEA,SAFV;IAGDH,SAAS,EAAEA,SAAS,IAAIK,QAAQ,IAAI,IAAzB,IAAiC,CAACwB,gBAAlC,GAAqD7B,SAArD,GAAiE,IAH3E;IAIDS,YAAY,EAAEA,YAJb;IAKDH,UAAU,EAAEA,UALX;IAMDJ,OAAO,EAAEA;EANR,GAOGoB,KAPH,CAAH,EASGX,QATH,CADF;EAcA,MAAMsB,QAAQ,GACZ1B,OAAO,KAAK,EAAZ,GACEd,oBAACC,OAAD,EAAQ;IAACwC,OAAO,EAAE3B,OAAV;IAAmBH,SAAS;EAA5B,CAAR,EACG2B,IADH,CADF,GAKEA,IANJ;EASA,OAAQ1B,QAAQ,KAAK8B,SAAb,IAA0BjC,OAAO,KAAKiC,SAAvC,IAAqD,CAAC/B,SAAtD,GAAkE,IAAlE,GAAyE6B,QAAhF;AACD,CAxEM;AAyEPnC,QAAQ,CAACsC,WAAT,GAAuB,UAAvB","names":["React","Tooltip","Bullseye","EmptyState","Td","BodyCell","_a","dataLabel","className","colSpan","component","isVisible","parentId","textCenter","tooltip","tooltipProp","onMouseEnter","onMouseEnterProp","children","errorText","isValid","isOpen","ariaControls","editableValue","editableSelectProps","options","isSelectOpen","value","name","props","setTooltip","useState","event","target","offsetWidth","scrollWidth","isEmptyStateCell","type","cell","Object","bodyCell","content","undefined","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-table/src/components/Table/BodyCell.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Tooltip } from '@patternfly/react-core/dist/esm/components/Tooltip/Tooltip';\nimport { Bullseye, EmptyState, SelectProps } from '@patternfly/react-core';\nimport { Td } from '../TableComposable/Td';\n\nexport interface BodyCellProps {\n  'data-label'?: string;\n  className?: string;\n  colSpan?: number;\n  component?: React.ReactNode;\n  errorText?: string;\n  isVisible?: boolean;\n  parentId?: number;\n  textCenter?: boolean;\n  isOpen?: boolean;\n  ariaControls?: string;\n  editableValue?: any;\n  editableSelectProps?: SelectProps;\n  options?: React.ReactElement[];\n  isSelectOpen?: boolean;\n  value?: any;\n  isValid?: boolean;\n  name?: string;\n  tooltip?: string;\n  onMouseEnter?: (event: any) => void;\n  children: React.ReactNode;\n}\nexport const BodyCell: React.FunctionComponent<BodyCellProps> = ({\n  'data-label': dataLabel = '',\n  className = '',\n  colSpan,\n  component = 'td',\n  isVisible,\n  parentId,\n  textCenter = false,\n  tooltip: tooltipProp = '',\n  onMouseEnter: onMouseEnterProp = () => {},\n  children,\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  errorText,\n  isValid,\n  isOpen,\n  ariaControls,\n  editableValue,\n  editableSelectProps,\n  options,\n  isSelectOpen,\n  value,\n  name,\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n  ...props\n}: BodyCellProps) => {\n  const [tooltip, setTooltip] = React.useState('');\n  const onMouseEnter = (event: any) => {\n    if (event.target.offsetWidth < event.target.scrollWidth) {\n      if (tooltipProp) {\n        setTooltip(tooltipProp);\n      } else if (typeof children === 'string') {\n        setTooltip(children);\n      }\n    } else {\n      setTooltip('');\n    }\n    onMouseEnterProp(event);\n  };\n\n  let isEmptyStateCell = false;\n  if (children) {\n    isEmptyStateCell =\n      ((children as React.ReactElement).type === Bullseye &&\n        (children as React.ReactElement).props.children &&\n        (children as React.ReactElement).props.children.type === EmptyState) ||\n      (children as React.ReactElement).type === EmptyState;\n  }\n\n  const cell = (\n    <Td\n      className={className}\n      component={component}\n      dataLabel={dataLabel && parentId == null && !isEmptyStateCell ? dataLabel : null}\n      onMouseEnter={onMouseEnter}\n      textCenter={textCenter}\n      colSpan={colSpan}\n      {...props}\n    >\n      {children}\n    </Td>\n  );\n\n  const bodyCell =\n    tooltip !== '' ? (\n      <Tooltip content={tooltip} isVisible>\n        {cell}\n      </Tooltip>\n    ) : (\n      cell\n    );\n\n  return (parentId !== undefined && colSpan === undefined) || !isVisible ? null : bodyCell;\n};\nBodyCell.displayName = 'BodyCell';\n"]},"metadata":{},"sourceType":"module"}