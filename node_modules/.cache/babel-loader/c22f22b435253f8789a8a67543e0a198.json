{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/NotificationDrawer/notification-drawer';\nexport const NotificationDrawerListItem = _a => {\n  var {\n    children = null,\n    className = '',\n    isHoverable = true,\n    isRead = false,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onClick = event => undefined,\n    tabIndex = 0,\n    variant = 'default'\n  } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"isHoverable\", \"isRead\", \"onClick\", \"tabIndex\", \"variant\"]);\n\n  const onKeyDown = event => {\n    // Accessibility function. Click on the list item when pressing Enter or Space on it.\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.target.click();\n    }\n  };\n\n  return React.createElement(\"li\", Object.assign({}, props, {\n    className: css(styles.notificationDrawerListItem, isHoverable && styles.modifiers.hoverable, styles.modifiers[variant], isRead && styles.modifiers.read, className),\n    tabIndex: tabIndex,\n    onClick: e => onClick(e),\n    onKeyDown: onKeyDown\n  }), children);\n};\nNotificationDrawerListItem.displayName = 'NotificationDrawerListItem';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,gFAAnB;AAmBA,OAAO,MAAMC,0BAA0B,GAA8DC,EAAD,IAU9D;MAV+D;IACnGC,QAAQ,GAAG,IADwF;IAEnGC,SAAS,GAAG,EAFuF;IAGnGC,WAAW,GAAG,IAHqF;IAInGC,MAAM,GAAG,KAJ0F;IAKnG;IACAC,OAAO,GAAIC,KAAD,IAA6BC,SAN4D;IAOnGC,QAAQ,GAAG,CAPwF;IAQnGC,OAAO,GAAG;EARyF,IAQhFT;MAChBU,KAAK,cAT2F,oFAS3F;;EAER,MAAMC,SAAS,GAAIL,KAAD,IAA+B;IAC/C;IACA,IAAIA,KAAK,CAACM,GAAN,KAAc,OAAd,IAAyBN,KAAK,CAACM,GAAN,KAAc,GAA3C,EAAgD;MAC7CN,KAAK,CAACO,MAAN,CAA6BC,KAA7B;IACF;EACF,CALD;;EAMA,OACElB,4CACMc,KADN,EACW;IACTR,SAAS,EAAEL,GAAG,CACZC,MAAM,CAACiB,0BADK,EAEZZ,WAAW,IAAIL,MAAM,CAACkB,SAAP,CAAiBC,SAFpB,EAGZnB,MAAM,CAACkB,SAAP,CAAiBP,OAAjB,CAHY,EAIZL,MAAM,IAAIN,MAAM,CAACkB,SAAP,CAAiBE,IAJf,EAKZhB,SALY,CADL;IAQTM,QAAQ,EAAEA,QARD;IASTH,OAAO,EAAEc,CAAC,IAAId,OAAO,CAACc,CAAD,CATZ;IAUTR,SAAS,EAAEA;EAVF,CADX,GAaGV,QAbH,CADF;AAiBD,CAlCM;AAmCPF,0BAA0B,CAACqB,WAA3B,GAAyC,4BAAzC","names":["React","css","styles","NotificationDrawerListItem","_a","children","className","isHoverable","isRead","onClick","event","undefined","tabIndex","variant","props","onKeyDown","key","target","click","notificationDrawerListItem","modifiers","hoverable","read","e","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/NotificationDrawer/NotificationDrawerListItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/NotificationDrawer/notification-drawer';\n\nexport interface NotificationDrawerListItemProps extends React.HTMLProps<HTMLLIElement> {\n  /**  Content rendered inside the list item */\n  children?: React.ReactNode;\n  /**  Additional classes added to the list item */\n  className?: string;\n  /**  Modifies the list item to include hover styles on :hover */\n  isHoverable?: boolean;\n  /**  Adds styling to the list item to indicate it has been read */\n  isRead?: boolean;\n  /**  Callback for when a list item is clicked */\n  onClick?: (event: any) => void;\n  /**  Tab index for the list item */\n  tabIndex?: number;\n  /**  Variant indicates the severity level */\n  variant?: 'default' | 'success' | 'danger' | 'warning' | 'info';\n}\n\nexport const NotificationDrawerListItem: React.FunctionComponent<NotificationDrawerListItemProps> = ({\n  children = null,\n  className = '',\n  isHoverable = true,\n  isRead = false,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onClick = (event: React.MouseEvent) => undefined as any,\n  tabIndex = 0,\n  variant = 'default',\n  ...props\n}: NotificationDrawerListItemProps) => {\n  const onKeyDown = (event: React.KeyboardEvent) => {\n    // Accessibility function. Click on the list item when pressing Enter or Space on it.\n    if (event.key === 'Enter' || event.key === ' ') {\n      (event.target as HTMLElement).click();\n    }\n  };\n  return (\n    <li\n      {...props}\n      className={css(\n        styles.notificationDrawerListItem,\n        isHoverable && styles.modifiers.hoverable,\n        styles.modifiers[variant],\n        isRead && styles.modifiers.read,\n        className\n      )}\n      tabIndex={tabIndex}\n      onClick={e => onClick(e)}\n      onKeyDown={onKeyDown}\n    >\n      {children}\n    </li>\n  );\n};\nNotificationDrawerListItem.displayName = 'NotificationDrawerListItem';\n"]},"metadata":{},"sourceType":"module"}