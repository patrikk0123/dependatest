{"ast":null,"code":"import _toConsumableArray from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport scrollStyles from '@patternfly/react-styles/css/components/Table/table-scrollable';\nimport { info } from '../Table/utils/decorators/info';\nimport { sortable, sortableFavorites } from '../Table/utils/decorators/sortable';\nimport { selectable } from '../Table/utils/decorators/selectable';\nimport { collapsible } from '../Table/utils/decorators/collapsible';\nimport { cellWidth } from './../Table/utils/decorators/cellWidth';\nimport { Visibility, classNames } from './../Table/utils/decorators/classNames';\nimport { mergeProps } from '../Table/base/merge-props';\nimport { Tooltip } from '@patternfly/react-core/dist/esm/components/Tooltip/Tooltip';\n\nvar ThBase = function ThBase(_a) {\n  var children = _a.children,\n      className = _a.className,\n      _a$component = _a.component,\n      component = _a$component === void 0 ? 'th' : _a$component,\n      dataLabel = _a.dataLabel,\n      _a$scope = _a.scope,\n      scope = _a$scope === void 0 ? 'col' : _a$scope,\n      _a$textCenter = _a.textCenter,\n      textCenter = _a$textCenter === void 0 ? false : _a$textCenter,\n      _a$sort = _a.sort,\n      sort = _a$sort === void 0 ? null : _a$sort,\n      modifier = _a.modifier,\n      _a$select = _a.select,\n      select = _a$select === void 0 ? null : _a$select,\n      _a$expand = _a.expand,\n      collapse = _a$expand === void 0 ? null : _a$expand,\n      _a$tooltip = _a.tooltip,\n      tooltip = _a$tooltip === void 0 ? '' : _a$tooltip,\n      _a$onMouseEnter = _a.onMouseEnter,\n      onMouseEnterProp = _a$onMouseEnter === void 0 ? function () {} : _a$onMouseEnter,\n      width = _a.width,\n      visibility = _a.visibility,\n      innerRef = _a.innerRef,\n      infoProps = _a.info,\n      _a$isStickyColumn = _a.isStickyColumn,\n      isStickyColumn = _a$isStickyColumn === void 0 ? false : _a$isStickyColumn,\n      _a$hasRightBorder = _a.hasRightBorder,\n      hasRightBorder = _a$hasRightBorder === void 0 ? false : _a$hasRightBorder,\n      _a$stickyMinWidth = _a.stickyMinWidth,\n      stickyMinWidth = _a$stickyMinWidth === void 0 ? '120px' : _a$stickyMinWidth,\n      stickyLeftOffset = _a.stickyLeftOffset,\n      _a$isSubheader = _a.isSubheader,\n      isSubheader = _a$isSubheader === void 0 ? false : _a$isSubheader,\n      props = __rest(_a, [\"children\", \"className\", \"component\", \"dataLabel\", \"scope\", \"textCenter\", \"sort\", \"modifier\", \"select\", \"expand\", \"tooltip\", \"onMouseEnter\", \"width\", \"visibility\", \"innerRef\", \"info\", \"isStickyColumn\", \"hasRightBorder\", \"stickyMinWidth\", \"stickyLeftOffset\", \"isSubheader\"]);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      showTooltip = _React$useState2[0],\n      setShowTooltip = _React$useState2[1];\n\n  var onMouseEnter = function onMouseEnter(event) {\n    if (event.target.offsetWidth < event.target.scrollWidth) {\n      !showTooltip && setShowTooltip(true);\n    } else {\n      showTooltip && setShowTooltip(false);\n    }\n\n    onMouseEnterProp(event);\n  };\n\n  var sortParams = null;\n\n  if (sort) {\n    if (sort.isFavorites) {\n      sortParams = sortableFavorites({\n        onSort: sort === null || sort === void 0 ? void 0 : sort.onSort,\n        columnIndex: sort.columnIndex,\n        sortBy: sort.sortBy\n      })();\n    } else {\n      sortParams = sortable(children, {\n        columnIndex: sort.columnIndex,\n        column: {\n          extraParams: {\n            sortBy: sort.sortBy,\n            onSort: sort === null || sort === void 0 ? void 0 : sort.onSort\n          }\n        }\n      });\n    }\n  }\n\n  var selectParams = select ? selectable(children, {\n    column: {\n      extraParams: {\n        onSelect: select === null || select === void 0 ? void 0 : select.onSelect,\n        selectVariant: 'checkbox',\n        allRowsSelected: select.isSelected,\n        isHeaderSelectDisabled: !!select.isHeaderSelectDisabled\n      }\n    }\n  }) : null;\n  var collapseParams = collapse ? collapsible(children, {\n    column: {\n      extraParams: {\n        onCollapse: collapse === null || collapse === void 0 ? void 0 : collapse.onToggle,\n        allRowsExpanded: !collapse.areAllExpanded,\n        collapseAllAriaLabel: ''\n      }\n    }\n  }) : null;\n  var widthParams = width ? cellWidth(width)() : null;\n  var visibilityParams = visibility ? classNames.apply(void 0, _toConsumableArray(visibility.map(function (vis) {\n    return Visibility[vis];\n  })))() : null;\n  var transformedChildren = (sortParams === null || sortParams === void 0 ? void 0 : sortParams.children) || (selectParams === null || selectParams === void 0 ? void 0 : selectParams.children) || (collapseParams === null || collapseParams === void 0 ? void 0 : collapseParams.children) || children; // info can wrap other transformedChildren\n\n  var infoParams = null;\n\n  if (infoProps) {\n    infoParams = info(infoProps)(transformedChildren);\n    transformedChildren = infoParams.children;\n  }\n\n  var merged = mergeProps(sortParams, selectParams, collapseParams, widthParams, visibilityParams, infoParams);\n\n  var _merged$children = merged.children,\n      mergedChildren = _merged$children === void 0 ? null : _merged$children,\n      _merged$isVisible = merged.isVisible,\n      isVisible = _merged$isVisible === void 0 ? null : _merged$isVisible,\n      _merged$className = merged.className,\n      mergedClassName = _merged$className === void 0 ? '' : _merged$className,\n      _merged$component = merged.component,\n      MergedComponent = _merged$component === void 0 ? component : _merged$component,\n      mergedProps = __rest(merged, [\"children\", \"isVisible\", \"className\", \"component\"]);\n\n  var cell = React.createElement(MergedComponent, Object.assign({\n    \"data-label\": dataLabel,\n    onMouseEnter: tooltip !== null ? onMouseEnter : onMouseEnterProp,\n    scope: component === 'th' && children ? scope : null,\n    ref: innerRef,\n    className: css(className, textCenter && styles.modifiers.center, isSubheader && styles.tableSubhead, isStickyColumn && scrollStyles.tableStickyColumn, hasRightBorder && scrollStyles.modifiers.borderRight, modifier && styles.modifiers[modifier], mergedClassName)\n  }, mergedProps, props, isStickyColumn && {\n    style: Object.assign({\n      '--pf-c-table__sticky-column--MinWidth': stickyMinWidth ? stickyMinWidth : undefined,\n      '--pf-c-table__sticky-column--Left': stickyLeftOffset ? stickyLeftOffset : undefined\n    }, props.style)\n  }), transformedChildren);\n  var canDefault = tooltip === '' ? typeof children === 'string' : true;\n  return tooltip !== null && canDefault && showTooltip ? React.createElement(Tooltip, {\n    content: tooltip || tooltip === '' && children,\n    isVisible: true\n  }, cell) : cell;\n};\n\nexport var Th = React.forwardRef(function (props, ref) {\n  return React.createElement(ThBase, Object.assign({}, props, {\n    innerRef: ref\n  }));\n});\nTh.displayName = 'Th';","map":{"version":3,"mappings":"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","names":["React","css","styles","scrollStyles","info","sortable","sortableFavorites","selectable","collapsible","cellWidth","Visibility","classNames","mergeProps","Tooltip","ThBase","_a","children","className","component","dataLabel","scope","textCenter","sort","modifier","select","expand","collapse","tooltip","onMouseEnter","onMouseEnterProp","width","visibility","innerRef","infoProps","isStickyColumn","hasRightBorder","stickyMinWidth","stickyLeftOffset","isSubheader","props","__rest","useState","showTooltip","setShowTooltip","event","target","offsetWidth","scrollWidth","sortParams","isFavorites","onSort","columnIndex","sortBy","column","extraParams","selectParams","onSelect","selectVariant","allRowsSelected","isSelected","isHeaderSelectDisabled","collapseParams","onCollapse","onToggle","allRowsExpanded","areAllExpanded","collapseAllAriaLabel","widthParams","visibilityParams","map","vis","transformedChildren","infoParams","merged","mergedChildren","isVisible","mergedClassName","MergedComponent","mergedProps","cell","Object","ref","modifiers","center","tableSubhead","tableStickyColumn","borderRight","style","undefined","canDefault","content","Th","forwardRef","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-table/src/components/TableComposable/Th.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport scrollStyles from '@patternfly/react-styles/css/components/Table/table-scrollable';\nimport { info } from '../Table/utils/decorators/info';\nimport { sortable, sortableFavorites } from '../Table/utils/decorators/sortable';\nimport { selectable } from '../Table/utils/decorators/selectable';\nimport { collapsible } from '../Table/utils/decorators/collapsible';\nimport { cellWidth } from './../Table/utils/decorators/cellWidth';\nimport { Visibility, classNames } from './../Table/utils/decorators/classNames';\nimport { ThInfoType, ThSelectType, ThExpandType, ThSortType, formatterValueType } from '../Table/base/types';\nimport { mergeProps } from '../Table/base/merge-props';\nimport { IVisibility } from '../Table/utils/decorators/classNames';\nimport { Tooltip } from '@patternfly/react-core/dist/esm/components/Tooltip/Tooltip';\nimport { BaseCellProps } from './TableComposable';\nimport { IFormatterValueType, IColumn } from '../Table/TableTypes';\n\nexport interface ThProps\n  extends BaseCellProps,\n    Omit<React.HTMLProps<HTMLTableHeaderCellElement>, 'onSelect' | 'width'> {\n  /**\n   * The column header the cell corresponds to. Applicable when this component is used as a direct child to <Tr>.\n   * This attribute replaces table header in mobile viewport. It is rendered by ::before pseudo element.\n   */\n  dataLabel?: string;\n  /** Renders a checkbox select so that all row checkboxes can be selected/deselected */\n  select?: ThSelectType;\n  /** Renders a chevron so that all row chevrons can be expanded/collapsed */\n  expand?: ThExpandType;\n  /** Formats the header so that its column will be sortable */\n  sort?: ThSortType;\n  /**\n   * Tooltip to show on the header cell\n   * Note: If the header cell is truncated and has simple string content, it will already attempt to display the header text\n   * If you want to show a tooltip that differs from the header text, you can set it here\n   * To disable it completely you can set it to null\n   */\n  tooltip?: React.ReactNode;\n  /** Callback on mouse enter */\n  onMouseEnter?: (event: any) => void;\n  /** Adds tooltip/popover info button */\n  info?: ThInfoType;\n  /** Adds scope to the column to associate header cells with data cells*/\n  scope?: string;\n  /** Indicates the header column should be sticky */\n  isStickyColumn?: boolean;\n  /** Adds a border to the right side of the cell */\n  hasRightBorder?: boolean;\n  /** Minimum width for a sticky column */\n  stickyMinWidth?: string;\n  /** Left offset of a sticky column. This will typically be equal to the combined value set by stickyMinWidth of any sticky columns that precede the current sticky column. */\n  stickyLeftOffset?: string;\n  /** Indicates the <th> is part of a subheader of a nested header */\n  isSubheader?: boolean;\n}\n\nconst ThBase: React.FunctionComponent<ThProps> = ({\n  children,\n  className,\n  component = 'th',\n  dataLabel,\n  scope = 'col',\n  textCenter = false,\n  sort = null,\n  modifier,\n  select = null,\n  expand: collapse = null,\n  tooltip = '',\n  onMouseEnter: onMouseEnterProp = () => {},\n  width,\n  visibility,\n  innerRef,\n  info: infoProps,\n  isStickyColumn = false,\n  hasRightBorder = false,\n  stickyMinWidth = '120px',\n  stickyLeftOffset,\n  isSubheader = false,\n  ...props\n}: ThProps) => {\n  const [showTooltip, setShowTooltip] = React.useState(false);\n  const onMouseEnter = (event: any) => {\n    if (event.target.offsetWidth < event.target.scrollWidth) {\n      !showTooltip && setShowTooltip(true);\n    } else {\n      showTooltip && setShowTooltip(false);\n    }\n    onMouseEnterProp(event);\n  };\n  let sortParams = null;\n  if (sort) {\n    if (sort.isFavorites) {\n      sortParams = sortableFavorites({\n        onSort: sort?.onSort,\n        columnIndex: sort.columnIndex,\n        sortBy: sort.sortBy\n      })();\n    } else {\n      sortParams = sortable(children as IFormatterValueType, {\n        columnIndex: sort.columnIndex,\n        column: {\n          extraParams: {\n            sortBy: sort.sortBy,\n            onSort: sort?.onSort\n          }\n        } as IColumn\n      });\n    }\n  }\n  const selectParams = select\n    ? selectable(children as IFormatterValueType, {\n        column: {\n          extraParams: {\n            onSelect: select?.onSelect,\n            selectVariant: 'checkbox',\n            allRowsSelected: select.isSelected,\n            isHeaderSelectDisabled: !!select.isHeaderSelectDisabled\n          }\n        }\n      })\n    : null;\n  const collapseParams = collapse\n    ? collapsible(children as IFormatterValueType, {\n        column: {\n          extraParams: {\n            onCollapse: collapse?.onToggle,\n            allRowsExpanded: !collapse.areAllExpanded,\n            collapseAllAriaLabel: ''\n          }\n        }\n      })\n    : null;\n  const widthParams = width ? cellWidth(width)() : null;\n  const visibilityParams = visibility\n    ? classNames(...visibility.map((vis: keyof IVisibility) => Visibility[vis]))()\n    : null;\n  let transformedChildren = sortParams?.children || selectParams?.children || collapseParams?.children || children;\n  // info can wrap other transformedChildren\n  let infoParams = null;\n  if (infoProps) {\n    infoParams = info(infoProps)(transformedChildren as formatterValueType);\n    transformedChildren = infoParams.children;\n  }\n  const merged = mergeProps(sortParams, selectParams, collapseParams, widthParams, visibilityParams, infoParams);\n  const {\n    // ignore the merged children since we transform them ourselves so we can wrap it with info\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    children: mergedChildren = null,\n    // selectable adds this but we don't want it\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isVisible = null,\n    className: mergedClassName = '',\n    component: MergedComponent = component,\n    ...mergedProps\n  } = merged;\n\n  const cell = (\n    <MergedComponent\n      data-label={dataLabel}\n      onMouseEnter={tooltip !== null ? onMouseEnter : onMouseEnterProp}\n      scope={component === 'th' && children ? scope : null}\n      ref={innerRef}\n      className={css(\n        className,\n        textCenter && styles.modifiers.center,\n        isSubheader && styles.tableSubhead,\n        isStickyColumn && scrollStyles.tableStickyColumn,\n        hasRightBorder && scrollStyles.modifiers.borderRight,\n        modifier && styles.modifiers[modifier as 'breakWord' | 'fitContent' | 'nowrap' | 'truncate' | 'wrap'],\n        mergedClassName\n      )}\n      {...mergedProps}\n      {...props}\n      {...(isStickyColumn && {\n        style: {\n          '--pf-c-table__sticky-column--MinWidth': stickyMinWidth ? stickyMinWidth : undefined,\n          '--pf-c-table__sticky-column--Left': stickyLeftOffset ? stickyLeftOffset : undefined,\n          ...props.style\n        } as React.CSSProperties\n      })}\n    >\n      {transformedChildren}\n    </MergedComponent>\n  );\n\n  const canDefault = tooltip === '' ? typeof children === 'string' : true;\n  return tooltip !== null && canDefault && showTooltip ? (\n    <Tooltip content={tooltip || (tooltip === '' && children)} isVisible>\n      {cell}\n    </Tooltip>\n  ) : (\n    cell\n  );\n};\n\nexport const Th = React.forwardRef((props: ThProps, ref: React.Ref<HTMLTableHeaderCellElement>) => (\n  <ThBase {...props} innerRef={ref} />\n));\nTh.displayName = 'Th';\n"]},"metadata":{},"sourceType":"module"}