{"ast":null,"code":"import _classCallCheck from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nexport var DropdownToggleAction = /*#__PURE__*/function (_React$Component) {\n  _inherits(DropdownToggleAction, _React$Component);\n\n  var _super = _createSuper(DropdownToggleAction);\n\n  function DropdownToggleAction() {\n    _classCallCheck(this, DropdownToggleAction);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DropdownToggleAction, [{\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          id = _a.id,\n          className = _a.className,\n          onClick = _a.onClick,\n          isDisabled = _a.isDisabled,\n          children = _a.children,\n          props = __rest(_a, [\"id\", \"className\", \"onClick\", \"isDisabled\", \"children\"]);\n\n      return React.createElement(\"button\", Object.assign({\n        id: id,\n        className: css(styles.dropdownToggleButton, className),\n        onClick: onClick\n      }, isDisabled && {\n        disabled: true,\n        'aria-disabled': true\n      }, props), children);\n    }\n  }]);\n\n  return DropdownToggleAction;\n}(React.Component);\nDropdownToggleAction.displayName = 'DropdownToggleAction';\nDropdownToggleAction.defaultProps = {\n  className: '',\n  isDisabled: false,\n  onClick: function onClick() {}\n};","map":{"version":3,"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,2DAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AAiBA,WAAaC,oBAAb;EAAA;;EAAA;;EAAA;IAAA;;IAAA;EAAA;;EAAA;IAAA;IAAA,OAQE,kBAAM;MACE,SAA6D,KAAKC,KAAlE;MAAA,IAAEC,EAAF,GAA8CC,EAA9C,CAAED,EAAF;MAAA,IAAME,SAAN,GAA8CD,EAA9C,CAAMC,SAAN;MAAA,IAAiBC,OAAjB,GAA8CF,EAA9C,CAAiBE,OAAjB;MAAA,IAA0BC,UAA1B,GAA8CH,EAA9C,CAA0BG,UAA1B;MAAA,IAAsCC,QAAtC,GAA8CJ,EAA9C,CAAsCI,QAAtC;MAAA,IAAmDN,KAAnD,GAAwDO,WAAxD,wDAAwD,CAAxD;;MAEN,OACEX;QACEK,EAAE,EAAEA,EADN;QAEEE,SAAS,EAAEL,GAAG,CAACD,MAAM,CAACW,oBAAR,EAA8BL,SAA9B,CAFhB;QAGEC,OAAO,EAAEA;MAHX,GAIOC,UAAU,IAAI;QAAEI,QAAQ,EAAE,IAAZ;QAAkB,iBAAiB;MAAnC,CAJrB,EAKMT,KALN,GAOGM,QAPH,CADF;IAWD;EAtBH;;EAAA;AAAA,EAA0CV,KAAK,CAACc,SAAhD;AACSX,mCAAc,sBAAd;AACAA,oCAA0C;EAC/CI,SAAS,EAAE,EADoC;EAE/CE,UAAU,EAAE,KAFmC;EAG/CD,OAAO,EAAE,mBAAK,CAAG;AAH8B,CAA1C","names":["React","styles","css","DropdownToggleAction","props","id","_a","className","onClick","isDisabled","children","__rest","dropdownToggleButton","disabled","Component"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Dropdown/DropdownToggleAction.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\n\nexport interface DropdownToggleActionProps {\n  /** Additional classes added to the DropdownToggleAction */\n  className?: string;\n  /** Flag to show if the action button is disabled */\n  isDisabled?: boolean;\n  /** A callback for when the action button is clicked */\n  onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  /** Element to be rendered inside the <button> */\n  children?: React.ReactNode;\n  /** Id of the action button */\n  id?: string;\n  /** Aria-label of the action button */\n  'aria-label'?: string;\n}\n\nexport class DropdownToggleAction extends React.Component<DropdownToggleActionProps> {\n  static displayName = 'DropdownToggleAction';\n  static defaultProps: DropdownToggleActionProps = {\n    className: '',\n    isDisabled: false,\n    onClick: () => {}\n  };\n\n  render() {\n    const { id, className, onClick, isDisabled, children, ...props } = this.props;\n\n    return (\n      <button\n        id={id}\n        className={css(styles.dropdownToggleButton, className)}\n        onClick={onClick}\n        {...(isDisabled && { disabled: true, 'aria-disabled': true })}\n        {...props}\n      >\n        {children}\n      </button>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}