{"ast":null,"code":"import _toConsumableArray from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\nimport React, { useEffect } from 'react';\nimport { TextInput } from '../TextInput/TextInput';\nimport { Button } from '../Button/Button';\nimport { Select, SelectOption } from '../Select';\nimport ArrowLeftIcon from '@patternfly/react-icons/dist/esm/icons/arrow-left-icon';\nimport ArrowRightIcon from '@patternfly/react-icons/dist/esm/icons/arrow-right-icon';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/CalendarMonth/calendar-month';\nimport { getUniqueId } from '../../helpers/util';\nexport var Weekday;\n\n(function (Weekday) {\n  Weekday[Weekday[\"Sunday\"] = 0] = \"Sunday\";\n  Weekday[Weekday[\"Monday\"] = 1] = \"Monday\";\n  Weekday[Weekday[\"Tuesday\"] = 2] = \"Tuesday\";\n  Weekday[Weekday[\"Wednesday\"] = 3] = \"Wednesday\";\n  Weekday[Weekday[\"Thursday\"] = 4] = \"Thursday\";\n  Weekday[Weekday[\"Friday\"] = 5] = \"Friday\";\n  Weekday[Weekday[\"Saturday\"] = 6] = \"Saturday\";\n})(Weekday || (Weekday = {})); // Must be numeric given current header design\n\n\nvar yearFormat = function yearFormat(date) {\n  return date.getFullYear();\n};\n\nvar buildCalendar = function buildCalendar(year, month, weekStart, validators) {\n  var defaultDate = new Date(year, month);\n  var firstDayOfWeek = new Date(defaultDate);\n  firstDayOfWeek.setDate(firstDayOfWeek.getDate() - firstDayOfWeek.getDay() + weekStart); // We will always show 6 weeks like google calendar\n  // Assume we just want the numbers for now...\n\n  var calendarWeeks = [];\n\n  for (var i = 0; i < 6; i++) {\n    var week = [];\n\n    var _loop = function _loop(j) {\n      var date = new Date(firstDayOfWeek);\n      week.push({\n        date: date,\n        isValid: validators.every(function (validator) {\n          return validator(date);\n        })\n      });\n      firstDayOfWeek.setDate(firstDayOfWeek.getDate() + 1);\n    };\n\n    for (var j = 0; j < 7; j++) {\n      _loop(j);\n    }\n\n    calendarWeeks.push(week);\n  }\n\n  return calendarWeeks;\n};\n\nvar isSameDate = function isSameDate(d1, d2) {\n  return d1.getFullYear() === d2.getFullYear() && d1.getMonth() === d2.getMonth() && d1.getDate() === d2.getDate();\n};\n\nexport var isValidDate = function isValidDate(date) {\n  return Boolean(date && !isNaN(date));\n};\nvar today = new Date();\nexport var CalendarMonth = function CalendarMonth(_a) {\n  var dateProp = _a.date,\n      _a$locale = _a.locale,\n      locale = _a$locale === void 0 ? undefined : _a$locale,\n      _a$monthFormat = _a.monthFormat,\n      monthFormat = _a$monthFormat === void 0 ? function (date) {\n    return date.toLocaleDateString(locale, {\n      month: 'long'\n    });\n  } : _a$monthFormat,\n      _a$weekdayFormat = _a.weekdayFormat,\n      weekdayFormat = _a$weekdayFormat === void 0 ? function (date) {\n    return date.toLocaleDateString(locale, {\n      weekday: 'narrow'\n    });\n  } : _a$weekdayFormat,\n      _a$longWeekdayFormat = _a.longWeekdayFormat,\n      longWeekdayFormat = _a$longWeekdayFormat === void 0 ? function (date) {\n    return date.toLocaleDateString(locale, {\n      weekday: 'long'\n    });\n  } : _a$longWeekdayFormat,\n      _a$dayFormat = _a.dayFormat,\n      dayFormat = _a$dayFormat === void 0 ? function (date) {\n    return date.getDate();\n  } : _a$dayFormat,\n      _a$weekStart = _a.weekStart,\n      weekStart = _a$weekStart === void 0 ? 0 : _a$weekStart,\n      _a$onChange = _a.onChange,\n      onChange = _a$onChange === void 0 ? function () {} : _a$onChange,\n      _a$validators = _a.validators,\n      validators = _a$validators === void 0 ? [function () {\n    return true;\n  }] : _a$validators,\n      className = _a.className,\n      _a$onSelectToggle = _a.onSelectToggle,\n      onSelectToggle = _a$onSelectToggle === void 0 ? function () {} : _a$onSelectToggle,\n      rangeStart = _a.rangeStart,\n      _a$prevMonthAriaLabel = _a.prevMonthAriaLabel,\n      prevMonthAriaLabel = _a$prevMonthAriaLabel === void 0 ? 'Previous month' : _a$prevMonthAriaLabel,\n      _a$nextMonthAriaLabel = _a.nextMonthAriaLabel,\n      nextMonthAriaLabel = _a$nextMonthAriaLabel === void 0 ? 'Next month' : _a$nextMonthAriaLabel,\n      _a$yearInputAriaLabel = _a.yearInputAriaLabel,\n      yearInputAriaLabel = _a$yearInputAriaLabel === void 0 ? 'Select year' : _a$yearInputAriaLabel,\n      cellAriaLabel = _a.cellAriaLabel,\n      props = __rest(_a, [\"date\", \"locale\", \"monthFormat\", \"weekdayFormat\", \"longWeekdayFormat\", \"dayFormat\", \"weekStart\", \"onChange\", \"validators\", \"className\", \"onSelectToggle\", \"rangeStart\", \"prevMonthAriaLabel\", \"nextMonthAriaLabel\", \"yearInputAriaLabel\", \"cellAriaLabel\"]);\n\n  var longMonths = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map(function (monthNum) {\n    return new Date(1990, monthNum);\n  }).map(monthFormat);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isSelectOpen = _React$useState2[0],\n      setIsSelectOpen = _React$useState2[1]; // eslint-disable-next-line prefer-const\n\n\n  var _React$useState3 = React.useState(new Date(dateProp)),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      focusedDate = _React$useState4[0],\n      setFocusedDate = _React$useState4[1];\n\n  if (!isValidDate(focusedDate)) {\n    if (isValidDate(rangeStart)) {\n      focusedDate = rangeStart;\n    } else {\n      focusedDate = today;\n    }\n  }\n\n  var _React$useState5 = React.useState(new Date(focusedDate)),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      hoveredDate = _React$useState6[0],\n      setHoveredDate = _React$useState6[1];\n\n  var focusRef = React.useRef();\n\n  var _React$useState7 = React.useState(getUniqueId('hidden-month-span')),\n      _React$useState8 = _slicedToArray(_React$useState7, 1),\n      hiddenMonthId = _React$useState8[0];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      shouldFocus = _React$useState10[0],\n      setShouldFocus = _React$useState10[1];\n\n  var isValidated = function isValidated(date) {\n    return validators.every(function (validator) {\n      return validator(date);\n    });\n  };\n\n  var focusedDateValidated = isValidated(focusedDate);\n  useEffect(function () {\n    if (!(isValidDate(dateProp) && isSameDate(focusedDate, dateProp))) {\n      setFocusedDate(dateProp);\n    }\n  }, [dateProp]);\n  useEffect(function () {\n    // When using header controls don't move focus\n    if (shouldFocus) {\n      if (focusRef.current && focusedDateValidated) {\n        focusRef.current.focus();\n      }\n    } else {\n      setShouldFocus(true);\n    }\n  }, [focusedDate]);\n\n  var onMonthClick = function onMonthClick(newDate) {\n    setFocusedDate(newDate);\n    setHoveredDate(newDate);\n    setShouldFocus(false);\n  };\n\n  var onKeyDown = function onKeyDown(ev) {\n    var newDate = new Date(focusedDate);\n\n    if (ev.key === 'ArrowUp') {\n      newDate.setDate(newDate.getDate() - 7);\n    } else if (ev.key === 'ArrowRight') {\n      newDate.setDate(newDate.getDate() + 1);\n    } else if (ev.key === 'ArrowDown') {\n      newDate.setDate(newDate.getDate() + 7);\n    } else if (ev.key === 'ArrowLeft') {\n      newDate.setDate(newDate.getDate() - 1);\n    }\n\n    if (newDate.getTime() !== focusedDate.getTime() && isValidated(newDate)) {\n      ev.preventDefault();\n      setFocusedDate(newDate);\n      setHoveredDate(newDate);\n      setShouldFocus(true);\n    }\n  };\n\n  var addMonth = function addMonth(toAdd) {\n    var newDate = new Date(focusedDate);\n    newDate.setMonth(newDate.getMonth() + toAdd);\n    return newDate;\n  };\n\n  var prevMonth = addMonth(-1);\n  var nextMonth = addMonth(1);\n  var focusedYear = focusedDate.getFullYear();\n  var focusedMonth = focusedDate.getMonth();\n  var calendar = React.useMemo(function () {\n    return buildCalendar(focusedYear, focusedMonth, weekStart, validators);\n  }, [focusedYear, focusedMonth, weekStart, validators]);\n\n  if (!focusedDateValidated) {\n    var toFocus = calendar.reduce(function (acc, cur) {\n      return [].concat(_toConsumableArray(acc), _toConsumableArray(cur));\n    }, []).filter(function (_ref) {\n      var date = _ref.date,\n          isValid = _ref.isValid;\n      return isValid && date.getMonth() === focusedMonth;\n    }).map(function (_ref2) {\n      var date = _ref2.date;\n      return {\n        date: date,\n        days: Math.abs(focusedDate.getTime() - date.getTime())\n      };\n    }).sort(function (o1, o2) {\n      return o1.days - o2.days;\n    }).map(function (_ref3) {\n      var date = _ref3.date;\n      return date;\n    })[0];\n\n    if (toFocus) {\n      setFocusedDate(toFocus);\n      setHoveredDate(toFocus);\n    }\n  }\n\n  var isHoveredDateValid = isValidated(hoveredDate);\n  var monthFormatted = monthFormat(focusedDate);\n  var yearFormatted = yearFormat(focusedDate);\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.calendarMonth, className)\n  }, props), React.createElement(\"div\", {\n    className: styles.calendarMonthHeader\n  }, React.createElement(\"div\", {\n    className: css(styles.calendarMonthHeaderNavControl, styles.modifiers.prevMonth)\n  }, React.createElement(Button, {\n    variant: \"plain\",\n    \"aria-label\": prevMonthAriaLabel,\n    onClick: function onClick() {\n      return onMonthClick(prevMonth);\n    }\n  }, React.createElement(ArrowLeftIcon, {\n    \"aria-hidden\": true\n  }))), React.createElement(\"div\", {\n    className: styles.calendarMonthHeaderMonth\n  }, React.createElement(\"span\", {\n    id: hiddenMonthId,\n    hidden: true\n  }, \"Month\"), React.createElement(Select // Max width with \"September\"\n  , {\n    // Max width with \"September\"\n    width: \"140px\",\n    \"aria-labelledby\": hiddenMonthId,\n    isOpen: isSelectOpen,\n    onToggle: function onToggle() {\n      setIsSelectOpen(!isSelectOpen);\n      onSelectToggle(!isSelectOpen);\n    },\n    onSelect: function onSelect(_ev, monthNum) {\n      // When we put CalendarMonth in a Popover we want the Popover's onDocumentClick\n      // to see the SelectOption as a child so it doesn't close the Popover.\n      setTimeout(function () {\n        setIsSelectOpen(false);\n        onSelectToggle(false);\n        var newDate = new Date(focusedDate);\n        newDate.setMonth(Number(monthNum));\n        setFocusedDate(newDate);\n        setHoveredDate(newDate);\n        setShouldFocus(false);\n      }, 0);\n    },\n    variant: \"single\",\n    selections: monthFormatted\n  }, longMonths.map(function (longMonth, index) {\n    return React.createElement(SelectOption, {\n      key: index,\n      value: index,\n      isSelected: longMonth === monthFormatted\n    }, longMonth);\n  }))), React.createElement(\"div\", {\n    className: styles.calendarMonthHeaderYear\n  }, React.createElement(TextInput, {\n    \"aria-label\": yearInputAriaLabel,\n    type: \"number\",\n    value: yearFormatted,\n    onChange: function onChange(year) {\n      var newDate = new Date(focusedDate);\n      newDate.setFullYear(+year);\n      setFocusedDate(newDate);\n      setHoveredDate(newDate);\n      setShouldFocus(false);\n    }\n  })), React.createElement(\"div\", {\n    className: css(styles.calendarMonthHeaderNavControl, styles.modifiers.nextMonth)\n  }, React.createElement(Button, {\n    variant: \"plain\",\n    \"aria-label\": nextMonthAriaLabel,\n    onClick: function onClick() {\n      return onMonthClick(nextMonth);\n    }\n  }, React.createElement(ArrowRightIcon, {\n    \"aria-hidden\": true\n  })))), React.createElement(\"table\", {\n    className: styles.calendarMonthCalendar\n  }, React.createElement(\"thead\", {\n    className: styles.calendarMonthDays\n  }, React.createElement(\"tr\", null, calendar[0].map(function (_ref4, index) {\n    var date = _ref4.date;\n    return React.createElement(\"th\", {\n      key: index,\n      className: styles.calendarMonthDay,\n      scope: \"col\"\n    }, React.createElement(\"span\", {\n      className: \"pf-screen-reader\"\n    }, longWeekdayFormat(date)), React.createElement(\"span\", {\n      \"aria-hidden\": true\n    }, weekdayFormat(date)));\n  }))), React.createElement(\"tbody\", {\n    onKeyDown: onKeyDown\n  }, calendar.map(function (week, index) {\n    return React.createElement(\"tr\", {\n      key: index,\n      className: styles.calendarMonthDatesRow\n    }, week.map(function (_ref5, index) {\n      var date = _ref5.date,\n          isValid = _ref5.isValid;\n      var dayFormatted = dayFormat(date);\n      var isToday = isSameDate(date, today);\n      var isSelected = isValidDate(dateProp) && isSameDate(date, dateProp);\n      var isFocused = isSameDate(date, focusedDate);\n      var isAdjacentMonth = date.getMonth() !== focusedDate.getMonth();\n      var isRangeStart = isValidDate(rangeStart) && isSameDate(date, rangeStart);\n      var isInRange = false;\n      var isRangeEnd = false;\n\n      if (isValidDate(rangeStart) && isValidDate(dateProp)) {\n        isInRange = date > rangeStart && date < dateProp;\n        isRangeEnd = isSameDate(date, dateProp);\n      } else if (isValidDate(rangeStart) && isHoveredDateValid) {\n        if (hoveredDate > rangeStart || isSameDate(hoveredDate, rangeStart)) {\n          isInRange = date > rangeStart && date < hoveredDate;\n          isRangeEnd = isSameDate(date, hoveredDate);\n        } // Don't handle focused dates before start dates for now.\n        // Core would likely need new styles\n\n      }\n\n      return React.createElement(\"td\", {\n        key: index,\n        className: css(styles.calendarMonthDatesCell, isAdjacentMonth && styles.modifiers.adjacentMonth, isToday && styles.modifiers.current, (isSelected || isRangeStart) && styles.modifiers.selected, !isValid && styles.modifiers.disabled, (isInRange || isRangeStart || isRangeEnd) && styles.modifiers.inRange, isRangeStart && styles.modifiers.startRange, isRangeEnd && styles.modifiers.endRange)\n      }, React.createElement(\"button\", Object.assign({\n        className: css(styles.calendarMonthDate, isRangeEnd && styles.modifiers.hover, !isValid && styles.modifiers.disabled),\n        type: \"button\",\n        onClick: function onClick() {\n          return onChange(date);\n        },\n        onMouseOver: function onMouseOver() {\n          return setHoveredDate(date);\n        },\n        tabIndex: isFocused ? 0 : -1,\n        disabled: !isValid,\n        \"aria-label\": cellAriaLabel ? cellAriaLabel(date) : \"\".concat(dayFormatted, \" \").concat(monthFormatted, \" \").concat(yearFormatted)\n      }, isFocused && {\n        ref: focusRef\n      }), dayFormatted));\n    }));\n  }))));\n};","map":{"version":3,"mappings":"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","names":["React","useEffect","TextInput","Button","Select","SelectOption","ArrowLeftIcon","ArrowRightIcon","css","styles","getUniqueId","Weekday","yearFormat","date","getFullYear","buildCalendar","year","month","weekStart","validators","defaultDate","Date","firstDayOfWeek","setDate","getDate","getDay","calendarWeeks","i","week","j","push","isValid","every","validator","isSameDate","d1","d2","getMonth","isValidDate","Boolean","isNaN","today","CalendarMonth","_a","dateProp","locale","undefined","monthFormat","toLocaleDateString","weekdayFormat","weekday","longWeekdayFormat","dayFormat","onChange","className","onSelectToggle","rangeStart","prevMonthAriaLabel","nextMonthAriaLabel","yearInputAriaLabel","cellAriaLabel","props","__rest","longMonths","map","monthNum","useState","isSelectOpen","setIsSelectOpen","focusedDate","setFocusedDate","hoveredDate","setHoveredDate","focusRef","useRef","hiddenMonthId","shouldFocus","setShouldFocus","isValidated","focusedDateValidated","current","focus","onMonthClick","newDate","onKeyDown","ev","key","getTime","preventDefault","addMonth","toAdd","setMonth","prevMonth","nextMonth","focusedYear","focusedMonth","calendar","useMemo","toFocus","reduce","acc","cur","filter","days","Math","abs","sort","o1","o2","isHoveredDateValid","monthFormatted","yearFormatted","calendarMonth","calendarMonthHeader","calendarMonthHeaderNavControl","modifiers","variant","onClick","calendarMonthHeaderMonth","id","hidden","width","isOpen","onToggle","onSelect","_ev","setTimeout","Number","selections","longMonth","index","value","isSelected","calendarMonthHeaderYear","type","setFullYear","calendarMonthCalendar","calendarMonthDays","calendarMonthDay","scope","calendarMonthDatesRow","dayFormatted","isToday","isFocused","isAdjacentMonth","isRangeStart","isInRange","isRangeEnd","calendarMonthDatesCell","adjacentMonth","selected","disabled","inRange","startRange","endRange","calendarMonthDate","hover","onMouseOver","tabIndex","ref"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/CalendarMonth/CalendarMonth.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { TextInput } from '../TextInput/TextInput';\nimport { Button } from '../Button/Button';\nimport { Select, SelectOption } from '../Select';\nimport ArrowLeftIcon from '@patternfly/react-icons/dist/esm/icons/arrow-left-icon';\nimport ArrowRightIcon from '@patternfly/react-icons/dist/esm/icons/arrow-right-icon';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/CalendarMonth/calendar-month';\nimport { getUniqueId } from '../../helpers/util';\n\nexport enum Weekday {\n  Sunday = 0,\n  Monday,\n  Tuesday,\n  Wednesday,\n  Thursday,\n  Friday,\n  Saturday\n}\n\nexport interface CalendarFormat {\n  /** How to format months in Select */\n  monthFormat?: (date: Date) => React.ReactNode;\n  /** How to format week days in header */\n  weekdayFormat?: (date: Date) => React.ReactNode;\n  /** How to format days in header for screen readers */\n  longWeekdayFormat?: (date: Date) => React.ReactNode;\n  /** How to format days in buttons in table cells */\n  dayFormat?: (date: Date) => React.ReactNode;\n  /** If using the default formatters which locale to use. Undefined defaults to current locale. See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#Locale_identification_and_negotiation */\n  locale?: string;\n  /** Day of week that starts the week. 0 is Sunday, 6 is Saturday. */\n  weekStart?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | Weekday;\n  /** Which date to start range styles from */\n  rangeStart?: Date;\n  /** Aria-label for the previous month button */\n  prevMonthAriaLabel?: string;\n  /** Aria-label for the next month button */\n  nextMonthAriaLabel?: string;\n  /** Aria-label for the year input */\n  yearInputAriaLabel?: string;\n  /** Aria-label for the date cells */\n  cellAriaLabel?: (date: Date) => string;\n}\n\nexport interface CalendarProps extends CalendarFormat, Omit<React.HTMLProps<HTMLDivElement>, 'onChange'> {\n  /** Month/year to base other dates around */\n  date?: Date;\n  /** Callback when date is selected */\n  onChange?: (date: Date) => void;\n  /** Functions that returns if a date is valid and selectable */\n  validators?: ((date: Date) => boolean)[];\n  /** Classname to add to outer div */\n  className?: string;\n  /** @hide Internal prop to allow pressing escape in select menu to not close popover */\n  onSelectToggle?: (open: boolean) => void;\n}\n\n// Must be numeric given current header design\nconst yearFormat = (date: Date) => date.getFullYear();\n\nconst buildCalendar = (year: number, month: number, weekStart: number, validators: ((date: Date) => boolean)[]) => {\n  const defaultDate = new Date(year, month);\n  const firstDayOfWeek = new Date(defaultDate);\n  firstDayOfWeek.setDate(firstDayOfWeek.getDate() - firstDayOfWeek.getDay() + weekStart);\n  // We will always show 6 weeks like google calendar\n  // Assume we just want the numbers for now...\n  const calendarWeeks = [];\n  for (let i = 0; i < 6; i++) {\n    const week = [];\n    for (let j = 0; j < 7; j++) {\n      const date = new Date(firstDayOfWeek);\n      week.push({\n        date,\n        isValid: validators.every(validator => validator(date))\n      });\n      firstDayOfWeek.setDate(firstDayOfWeek.getDate() + 1);\n    }\n    calendarWeeks.push(week);\n  }\n\n  return calendarWeeks;\n};\n\nconst isSameDate = (d1: Date, d2: Date) =>\n  d1.getFullYear() === d2.getFullYear() && d1.getMonth() === d2.getMonth() && d1.getDate() === d2.getDate();\n\nexport const isValidDate = (date: Date) => Boolean(date && !isNaN(date as any));\n\nconst today = new Date();\n\nexport const CalendarMonth = ({\n  date: dateProp,\n  locale = undefined,\n  monthFormat = date => date.toLocaleDateString(locale, { month: 'long' }),\n  weekdayFormat = date => date.toLocaleDateString(locale, { weekday: 'narrow' }),\n  longWeekdayFormat = date => date.toLocaleDateString(locale, { weekday: 'long' }),\n  dayFormat = date => date.getDate(),\n  weekStart = 0, // Use the American Sunday as a default\n  onChange = () => {},\n  validators = [() => true],\n  className,\n  onSelectToggle = () => {},\n  rangeStart,\n  prevMonthAriaLabel = 'Previous month',\n  nextMonthAriaLabel = 'Next month',\n  yearInputAriaLabel = 'Select year',\n  cellAriaLabel,\n  ...props\n}: CalendarProps) => {\n  const longMonths = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map(monthNum => new Date(1990, monthNum)).map(monthFormat);\n  const [isSelectOpen, setIsSelectOpen] = React.useState(false);\n  // eslint-disable-next-line prefer-const\n  let [focusedDate, setFocusedDate] = React.useState(new Date(dateProp));\n  if (!isValidDate(focusedDate)) {\n    if (isValidDate(rangeStart)) {\n      focusedDate = rangeStart;\n    } else {\n      focusedDate = today;\n    }\n  }\n  const [hoveredDate, setHoveredDate] = React.useState(new Date(focusedDate));\n  const focusRef = React.useRef<HTMLButtonElement>();\n  const [hiddenMonthId] = React.useState(getUniqueId('hidden-month-span'));\n  const [shouldFocus, setShouldFocus] = React.useState(false);\n\n  const isValidated = (date: Date) => validators.every(validator => validator(date));\n  const focusedDateValidated = isValidated(focusedDate);\n  useEffect(() => {\n    if (!(isValidDate(dateProp) && isSameDate(focusedDate, dateProp))) {\n      setFocusedDate(dateProp);\n    }\n  }, [dateProp]);\n\n  useEffect(() => {\n    // When using header controls don't move focus\n    if (shouldFocus) {\n      if (focusRef.current && focusedDateValidated) {\n        focusRef.current.focus();\n      }\n    } else {\n      setShouldFocus(true);\n    }\n  }, [focusedDate]);\n\n  const onMonthClick = (newDate: Date) => {\n    setFocusedDate(newDate);\n    setHoveredDate(newDate);\n    setShouldFocus(false);\n  };\n\n  const onKeyDown = (ev: React.KeyboardEvent<HTMLTableSectionElement>) => {\n    const newDate = new Date(focusedDate);\n    if (ev.key === 'ArrowUp') {\n      newDate.setDate(newDate.getDate() - 7);\n    } else if (ev.key === 'ArrowRight') {\n      newDate.setDate(newDate.getDate() + 1);\n    } else if (ev.key === 'ArrowDown') {\n      newDate.setDate(newDate.getDate() + 7);\n    } else if (ev.key === 'ArrowLeft') {\n      newDate.setDate(newDate.getDate() - 1);\n    }\n    if (newDate.getTime() !== focusedDate.getTime() && isValidated(newDate)) {\n      ev.preventDefault();\n      setFocusedDate(newDate);\n      setHoveredDate(newDate);\n      setShouldFocus(true);\n    }\n  };\n\n  const addMonth = (toAdd: -1 | 1) => {\n    const newDate = new Date(focusedDate);\n    newDate.setMonth(newDate.getMonth() + toAdd);\n    return newDate;\n  };\n\n  const prevMonth = addMonth(-1);\n  const nextMonth = addMonth(1);\n  const focusedYear = focusedDate.getFullYear();\n  const focusedMonth = focusedDate.getMonth();\n  const calendar = React.useMemo(() => buildCalendar(focusedYear, focusedMonth, weekStart, validators), [\n    focusedYear,\n    focusedMonth,\n    weekStart,\n    validators\n  ]);\n  if (!focusedDateValidated) {\n    const toFocus = calendar\n      .reduce((acc, cur) => [...acc, ...cur], [])\n      .filter(({ date, isValid }) => isValid && date.getMonth() === focusedMonth)\n      .map(({ date }) => ({ date, days: Math.abs(focusedDate.getTime() - date.getTime()) }))\n      .sort((o1, o2) => o1.days - o2.days)\n      .map(({ date }) => date)[0];\n    if (toFocus) {\n      setFocusedDate(toFocus);\n      setHoveredDate(toFocus);\n    }\n  }\n  const isHoveredDateValid = isValidated(hoveredDate);\n  const monthFormatted = monthFormat(focusedDate);\n  const yearFormatted = yearFormat(focusedDate);\n  return (\n    <div className={css(styles.calendarMonth, className)} {...props}>\n      <div className={styles.calendarMonthHeader}>\n        <div className={css(styles.calendarMonthHeaderNavControl, styles.modifiers.prevMonth)}>\n          <Button variant=\"plain\" aria-label={prevMonthAriaLabel} onClick={() => onMonthClick(prevMonth)}>\n            <ArrowLeftIcon aria-hidden={true} />\n          </Button>\n        </div>\n        <div className={styles.calendarMonthHeaderMonth}>\n          <span id={hiddenMonthId} hidden>\n            Month\n          </span>\n          <Select\n            // Max width with \"September\"\n            width=\"140px\"\n            aria-labelledby={hiddenMonthId}\n            isOpen={isSelectOpen}\n            onToggle={() => {\n              setIsSelectOpen(!isSelectOpen);\n              onSelectToggle(!isSelectOpen);\n            }}\n            onSelect={(_ev, monthNum) => {\n              // When we put CalendarMonth in a Popover we want the Popover's onDocumentClick\n              // to see the SelectOption as a child so it doesn't close the Popover.\n              setTimeout(() => {\n                setIsSelectOpen(false);\n                onSelectToggle(false);\n                const newDate = new Date(focusedDate);\n                newDate.setMonth(Number(monthNum as string));\n                setFocusedDate(newDate);\n                setHoveredDate(newDate);\n                setShouldFocus(false);\n              }, 0);\n            }}\n            variant=\"single\"\n            selections={monthFormatted}\n          >\n            {longMonths.map((longMonth, index) => (\n              <SelectOption key={index} value={index} isSelected={longMonth === monthFormatted}>\n                {longMonth}\n              </SelectOption>\n            ))}\n          </Select>\n        </div>\n        <div className={styles.calendarMonthHeaderYear}>\n          <TextInput\n            aria-label={yearInputAriaLabel}\n            type=\"number\"\n            value={yearFormatted}\n            onChange={year => {\n              const newDate = new Date(focusedDate);\n              newDate.setFullYear(+year);\n              setFocusedDate(newDate);\n              setHoveredDate(newDate);\n              setShouldFocus(false);\n            }}\n          />\n        </div>\n        <div className={css(styles.calendarMonthHeaderNavControl, styles.modifiers.nextMonth)}>\n          <Button variant=\"plain\" aria-label={nextMonthAriaLabel} onClick={() => onMonthClick(nextMonth)}>\n            <ArrowRightIcon aria-hidden={true} />\n          </Button>\n        </div>\n      </div>\n      <table className={styles.calendarMonthCalendar}>\n        <thead className={styles.calendarMonthDays}>\n          <tr>\n            {calendar[0].map(({ date }, index) => (\n              <th key={index} className={styles.calendarMonthDay} scope=\"col\">\n                <span className=\"pf-screen-reader\">{longWeekdayFormat(date)}</span>\n                <span aria-hidden>{weekdayFormat(date)}</span>\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody onKeyDown={onKeyDown}>\n          {calendar.map((week, index) => (\n            <tr key={index} className={styles.calendarMonthDatesRow}>\n              {week.map(({ date, isValid }, index) => {\n                const dayFormatted = dayFormat(date);\n                const isToday = isSameDate(date, today);\n                const isSelected = isValidDate(dateProp) && isSameDate(date, dateProp);\n                const isFocused = isSameDate(date, focusedDate);\n                const isAdjacentMonth = date.getMonth() !== focusedDate.getMonth();\n                const isRangeStart = isValidDate(rangeStart) && isSameDate(date, rangeStart);\n                let isInRange = false;\n                let isRangeEnd = false;\n                if (isValidDate(rangeStart) && isValidDate(dateProp)) {\n                  isInRange = date > rangeStart && date < dateProp;\n                  isRangeEnd = isSameDate(date, dateProp);\n                } else if (isValidDate(rangeStart) && isHoveredDateValid) {\n                  if (hoveredDate > rangeStart || isSameDate(hoveredDate, rangeStart)) {\n                    isInRange = date > rangeStart && date < hoveredDate;\n                    isRangeEnd = isSameDate(date, hoveredDate);\n                  }\n                  // Don't handle focused dates before start dates for now.\n                  // Core would likely need new styles\n                }\n\n                return (\n                  <td\n                    key={index}\n                    className={css(\n                      styles.calendarMonthDatesCell,\n                      isAdjacentMonth && styles.modifiers.adjacentMonth,\n                      isToday && styles.modifiers.current,\n                      (isSelected || isRangeStart) && styles.modifiers.selected,\n                      !isValid && styles.modifiers.disabled,\n                      (isInRange || isRangeStart || isRangeEnd) && styles.modifiers.inRange,\n                      isRangeStart && styles.modifiers.startRange,\n                      isRangeEnd && styles.modifiers.endRange\n                    )}\n                  >\n                    <button\n                      className={css(\n                        styles.calendarMonthDate,\n                        isRangeEnd && styles.modifiers.hover,\n                        !isValid && styles.modifiers.disabled\n                      )}\n                      type=\"button\"\n                      onClick={() => onChange(date)}\n                      onMouseOver={() => setHoveredDate(date)}\n                      tabIndex={isFocused ? 0 : -1}\n                      disabled={!isValid}\n                      aria-label={\n                        cellAriaLabel ? cellAriaLabel(date) : `${dayFormatted} ${monthFormatted} ${yearFormatted}`\n                      }\n                      {...(isFocused && { ref: focusRef })}\n                    >\n                      {dayFormatted}\n                    </button>\n                  </td>\n                );\n              })}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}