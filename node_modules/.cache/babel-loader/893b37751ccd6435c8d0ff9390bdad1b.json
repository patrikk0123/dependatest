{"ast":null,"code":"var _jsxFileName = \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/ProductMilestoneReleaseLabel/ProductMilestoneReleaseLabel.tsx\";\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport { isProductMilestone, isProductRelease } from '../../utils/entityRecognition';\nimport styles from './ProductMilestoneReleaseLabel.module.css';\nimport { createDateTime } from '../../utils/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/**\n * Show Product Milestone or Release label with specific text and toolips.\n *\n * @param productMilestoneRelease - ProductMilestone or ProductRelease component to be displayed\n *\n * @param isCurrent - If the ProductMilestone is current one\n */\nexport const ProductMilestoneReleaseLabel = _ref => {\n  let {\n    productMilestoneRelease,\n    isCurrent\n  } = _ref;\n  let tooltipContent;\n  let buttonClassName;\n  let labelType;\n\n  if (isProductMilestone(productMilestoneRelease)) {\n    const productMilestone = productMilestoneRelease;\n    labelType = 'milestone';\n    tooltipContent = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['tooltip-text'],\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Start Date: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), createDateTime({\n        date: productMilestone.startingDate,\n        includeTime: false\n      }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Planned End Date: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), createDateTime({\n        date: productMilestone.plannedEndDate,\n        includeTime: false\n      }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"End Date: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), createDateTime({\n        date: productMilestone.endDate,\n        includeTime: false\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n    buttonClassName = isCurrent ? `${styles['milestone-label']} ${styles['is-current']}` : `${styles['milestone-label']}`;\n  } else if (isProductRelease(productMilestoneRelease)) {\n    labelType = 'release';\n    const productRelease = productMilestoneRelease;\n    tooltipContent = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['toolip-text'],\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Release Date: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), createDateTime({\n        date: productRelease.releaseDate,\n        includeTime: false\n      }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Support Level: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), productRelease.supportLevel]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n    buttonClassName = `${styles['release-label']}`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: styles.label,\n    children: /*#__PURE__*/_jsxDEV(Tooltip, {\n      content: tooltipContent,\n      isContentLeftAligned: true,\n      position: \"auto\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        isSmall: true,\n        className: buttonClassName,\n        component: labelType === 'milestone' ? 'a' : 'span',\n        href: \"#\",\n        children: productMilestoneRelease.version\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["Button","Tooltip","isProductMilestone","isProductRelease","styles","createDateTime","ProductMilestoneReleaseLabel","productMilestoneRelease","isCurrent","tooltipContent","buttonClassName","labelType","productMilestone","date","startingDate","includeTime","plannedEndDate","endDate","productRelease","releaseDate","supportLevel","label","version"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/ProductMilestoneReleaseLabel/ProductMilestoneReleaseLabel.tsx"],"sourcesContent":["import { Button, Tooltip } from '@patternfly/react-core';\nimport { ProductMilestone, ProductRelease } from 'pnc-api-types-ts';\nimport { isProductMilestone, isProductRelease } from '../../utils/entityRecognition';\nimport styles from './ProductMilestoneReleaseLabel.module.css';\n\nimport { createDateTime } from '../../utils/utils';\n\ninterface IProductMilestoneReleaseProp {\n  productMilestoneRelease: ProductMilestone | ProductRelease;\n  isCurrent: boolean;\n}\n\n/**\n * Show Product Milestone or Release label with specific text and toolips.\n *\n * @param productMilestoneRelease - ProductMilestone or ProductRelease component to be displayed\n *\n * @param isCurrent - If the ProductMilestone is current one\n */\nexport const ProductMilestoneReleaseLabel = ({ productMilestoneRelease, isCurrent }: IProductMilestoneReleaseProp) => {\n  let tooltipContent;\n  let buttonClassName;\n  let labelType;\n  if (isProductMilestone(productMilestoneRelease)) {\n    const productMilestone = productMilestoneRelease as ProductMilestone;\n    labelType = 'milestone';\n    tooltipContent = (\n      <div className={styles['tooltip-text']}>\n        <strong>Start Date: </strong>\n        {createDateTime({ date: productMilestone.startingDate!, includeTime: false })}\n        <br />\n        <strong>Planned End Date: </strong>\n        {createDateTime({ date: productMilestone.plannedEndDate!, includeTime: false })}\n        <br />\n        <strong>End Date: </strong>\n        {createDateTime({ date: productMilestone.endDate!, includeTime: false })}\n      </div>\n    );\n    buttonClassName = isCurrent ? `${styles['milestone-label']} ${styles['is-current']}` : `${styles['milestone-label']}`;\n  } else if (isProductRelease(productMilestoneRelease)) {\n    labelType = 'release';\n    const productRelease = productMilestoneRelease as ProductRelease;\n    tooltipContent = (\n      <div className={styles['toolip-text']}>\n        <strong>Release Date: </strong>\n        {createDateTime({ date: productRelease.releaseDate!, includeTime: false })}\n        <br />\n        <strong>Support Level: </strong>\n        {productRelease.supportLevel}\n      </div>\n    );\n    buttonClassName = `${styles['release-label']}`;\n  }\n  return (\n    <span className={styles.label}>\n      <Tooltip content={tooltipContent} isContentLeftAligned={true} position=\"auto\">\n        <Button isSmall={true} className={buttonClassName} component={labelType === 'milestone' ? 'a' : 'span'} href=\"#\">\n          {productMilestoneRelease.version}\n        </Button>\n      </Tooltip>\n    </span>\n  );\n};\n"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,OAAjB,QAAgC,wBAAhC;AAEA,SAASC,kBAAT,EAA6BC,gBAA7B,QAAqD,+BAArD;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,SAASC,cAAT,QAA+B,mBAA/B;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,4BAA4B,GAAG,QAA0E;EAAA,IAAzE;IAAEC,uBAAF;IAA2BC;EAA3B,CAAyE;EACpH,IAAIC,cAAJ;EACA,IAAIC,eAAJ;EACA,IAAIC,SAAJ;;EACA,IAAIT,kBAAkB,CAACK,uBAAD,CAAtB,EAAiD;IAC/C,MAAMK,gBAAgB,GAAGL,uBAAzB;IACAI,SAAS,GAAG,WAAZ;IACAF,cAAc,gBACZ;MAAK,SAAS,EAAEL,MAAM,CAAC,cAAD,CAAtB;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAEGC,cAAc,CAAC;QAAEQ,IAAI,EAAED,gBAAgB,CAACE,YAAzB;QAAwCC,WAAW,EAAE;MAArD,CAAD,CAFjB,eAGE;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,EAKGV,cAAc,CAAC;QAAEQ,IAAI,EAAED,gBAAgB,CAACI,cAAzB;QAA0CD,WAAW,EAAE;MAAvD,CAAD,CALjB,eAME;QAAA;QAAA;QAAA;MAAA,QANF,eAOE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPF,EAQGV,cAAc,CAAC;QAAEQ,IAAI,EAAED,gBAAgB,CAACK,OAAzB;QAAmCF,WAAW,EAAE;MAAhD,CAAD,CARjB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;IAYAL,eAAe,GAAGF,SAAS,GAAI,GAAEJ,MAAM,CAAC,iBAAD,CAAoB,IAAGA,MAAM,CAAC,YAAD,CAAe,EAAxD,GAA6D,GAAEA,MAAM,CAAC,iBAAD,CAAoB,EAApH;EACD,CAhBD,MAgBO,IAAID,gBAAgB,CAACI,uBAAD,CAApB,EAA+C;IACpDI,SAAS,GAAG,SAAZ;IACA,MAAMO,cAAc,GAAGX,uBAAvB;IACAE,cAAc,gBACZ;MAAK,SAAS,EAAEL,MAAM,CAAC,aAAD,CAAtB;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAEGC,cAAc,CAAC;QAAEQ,IAAI,EAAEK,cAAc,CAACC,WAAvB;QAAqCJ,WAAW,EAAE;MAAlD,CAAD,CAFjB,eAGE;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,EAKGG,cAAc,CAACE,YALlB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;IASAV,eAAe,GAAI,GAAEN,MAAM,CAAC,eAAD,CAAkB,EAA7C;EACD;;EACD,oBACE;IAAM,SAAS,EAAEA,MAAM,CAACiB,KAAxB;IAAA,uBACE,QAAC,OAAD;MAAS,OAAO,EAAEZ,cAAlB;MAAkC,oBAAoB,EAAE,IAAxD;MAA8D,QAAQ,EAAC,MAAvE;MAAA,uBACE,QAAC,MAAD;QAAQ,OAAO,EAAE,IAAjB;QAAuB,SAAS,EAAEC,eAAlC;QAAmD,SAAS,EAAEC,SAAS,KAAK,WAAd,GAA4B,GAA5B,GAAkC,MAAhG;QAAwG,IAAI,EAAC,GAA7G;QAAA,UACGJ,uBAAuB,CAACe;MAD3B;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CA3CM"},"metadata":{},"sourceType":"module"}