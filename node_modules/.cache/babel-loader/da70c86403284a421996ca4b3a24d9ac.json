{"ast":null,"code":"import * as React from 'react';\nimport { HeaderCellInfoWrapper } from '../../HeaderCellInfoWrapper';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nexport var info = function info(_ref) {\n  var tooltip = _ref.tooltip,\n      tooltipProps = _ref.tooltipProps,\n      popover = _ref.popover,\n      popoverProps = _ref.popoverProps,\n      className = _ref.className,\n      ariaLabel = _ref.ariaLabel;\n\n  var infoObj = function infoObj(value) {\n    return {\n      className: styles.modifiers.help,\n      children: tooltip ? React.createElement(HeaderCellInfoWrapper, {\n        variant: \"tooltip\",\n        info: tooltip,\n        tooltipProps: tooltipProps,\n        ariaLabel: ariaLabel,\n        className: className\n      }, value) : React.createElement(HeaderCellInfoWrapper, {\n        variant: \"popover\",\n        info: popover,\n        popoverProps: popoverProps,\n        ariaLabel: ariaLabel,\n        className: className\n      }, value)\n    };\n  };\n\n  return infoObj;\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,qBAAT,QAAsC,6BAAtC;AAEA,OAAOC,MAAP,MAAmB,qDAAnB;AAEA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAuF;EAAA,IAApFC,OAAoF,QAApFA,OAAoF;EAAA,IAA3EC,YAA2E,QAA3EA,YAA2E;EAAA,IAA7DC,OAA6D,QAA7DA,OAA6D;EAAA,IAApDC,YAAoD,QAApDA,YAAoD;EAAA,IAAtCC,SAAsC,QAAtCA,SAAsC;EAAA,IAA3BC,SAA2B,QAA3BA,SAA2B;;EACzG,IAAMC,OAAO,GAAe,SAAtBA,OAAsB,CAACC,KAAD;IAAA,OAAiC;MAC3DH,SAAS,EAAEN,MAAM,CAACU,SAAP,CAAiBC,IAD+B;MAE3DC,QAAQ,EAAEV,OAAO,GACfJ,oBAACC,qBAAD,EAAsB;QACpBc,OAAO,EAAC,SADY;QAEpBZ,IAAI,EAAEC,OAFc;QAGpBC,YAAY,EAAEA,YAHM;QAIpBI,SAAS,EAAEA,SAJS;QAKpBD,SAAS,EAAEA;MALS,CAAtB,EAOGG,KAPH,CADe,GAWfX,oBAACC,qBAAD,EAAsB;QACpBc,OAAO,EAAC,SADY;QAEpBZ,IAAI,EAAEG,OAFc;QAGpBC,YAAY,EAAEA,YAHM;QAIpBE,SAAS,EAAEA,SAJS;QAKpBD,SAAS,EAAEA;MALS,CAAtB,EAOGG,KAPH;IAbyD,CAAjC;EAAA,CAA5B;;EAyBA,OAAOD,OAAP;AACD,CA3BM","names":["React","HeaderCellInfoWrapper","styles","info","tooltip","tooltipProps","popover","popoverProps","className","ariaLabel","infoObj","value","modifiers","help","children","variant"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-table/src/components/Table/utils/decorators/info.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ThInfoType } from '../../base/types';\nimport { HeaderCellInfoWrapper } from '../../HeaderCellInfoWrapper';\nimport { IFormatterValueType, ITransform } from '../../TableTypes';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\n\nexport const info = ({ tooltip, tooltipProps, popover, popoverProps, className, ariaLabel }: ThInfoType) => {\n  const infoObj: ITransform = (value: IFormatterValueType) => ({\n    className: styles.modifiers.help,\n    children: tooltip ? (\n      <HeaderCellInfoWrapper\n        variant=\"tooltip\"\n        info={tooltip}\n        tooltipProps={tooltipProps}\n        ariaLabel={ariaLabel}\n        className={className}\n      >\n        {value}\n      </HeaderCellInfoWrapper>\n    ) : (\n      <HeaderCellInfoWrapper\n        variant=\"popover\"\n        info={popover}\n        popoverProps={popoverProps}\n        ariaLabel={ariaLabel}\n        className={className}\n      >\n        {value}\n      </HeaderCellInfoWrapper>\n    )\n  });\n\n  return infoObj;\n};\n"]},"metadata":{},"sourceType":"module"}