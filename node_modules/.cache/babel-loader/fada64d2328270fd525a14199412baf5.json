{"ast":null,"code":"import _defineProperty from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tabs/tabs';\nimport { TabButton } from './TabButton';\nimport { TabsContext } from './TabsContext';\nimport { css } from '@patternfly/react-styles';\nimport { Tooltip } from '../Tooltip';\nimport { Button } from '../Button';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\n\nvar TabBase = function TabBase(_a) {\n  var title = _a.title,\n      eventKey = _a.eventKey,\n      tabContentRef = _a.tabContentRef,\n      childId = _a.id,\n      tabContentId = _a.tabContentId,\n      _a$className = _a.className,\n      childClassName = _a$className === void 0 ? '' : _a$className,\n      childOuiaId = _a.ouiaId,\n      isDisabled = _a.isDisabled,\n      isAriaDisabled = _a.isAriaDisabled,\n      _a$inoperableEvents = _a.inoperableEvents,\n      inoperableEvents = _a$inoperableEvents === void 0 ? ['onClick', 'onKeyPress'] : _a$inoperableEvents,\n      href = _a.href,\n      innerRef = _a.innerRef,\n      tooltip = _a.tooltip,\n      closeButtonAriaLabel = _a.closeButtonAriaLabel,\n      _a$isCloseDisabled = _a.isCloseDisabled,\n      isCloseDisabled = _a$isCloseDisabled === void 0 ? false : _a$isCloseDisabled,\n      props = __rest(_a, [\"title\", \"eventKey\", \"tabContentRef\", \"id\", \"tabContentId\", \"className\", \"ouiaId\", \"isDisabled\", \"isAriaDisabled\", \"inoperableEvents\", \"href\", \"innerRef\", \"tooltip\", \"closeButtonAriaLabel\", \"isCloseDisabled\"]);\n\n  var preventedEvents = inoperableEvents.reduce(function (handlers, eventToPrevent) {\n    return Object.assign(Object.assign({}, handlers), _defineProperty({}, eventToPrevent, function (event) {\n      event.preventDefault();\n    }));\n  }, {});\n\n  var _React$useContext = React.useContext(TabsContext),\n      mountOnEnter = _React$useContext.mountOnEnter,\n      localActiveKey = _React$useContext.localActiveKey,\n      unmountOnExit = _React$useContext.unmountOnExit,\n      uniqueId = _React$useContext.uniqueId,\n      handleTabClick = _React$useContext.handleTabClick,\n      handleTabClose = _React$useContext.handleTabClose;\n\n  var ariaControls = tabContentId ? \"\".concat(tabContentId) : \"pf-tab-section-\".concat(eventKey, \"-\").concat(childId || uniqueId);\n\n  if ((mountOnEnter || unmountOnExit) && eventKey !== localActiveKey) {\n    ariaControls = undefined;\n  }\n\n  var isButtonElement = Boolean(!href);\n\n  var getDefaultTabIdx = function getDefaultTabIdx() {\n    if (isDisabled) {\n      return isButtonElement ? null : -1;\n    } else if (isAriaDisabled) {\n      return null;\n    }\n  };\n\n  var tabButton = React.createElement(TabButton, Object.assign({\n    parentInnerRef: innerRef,\n    className: css(styles.tabsLink, isDisabled && href && styles.modifiers.disabled, isAriaDisabled && styles.modifiers.ariaDisabled),\n    disabled: isButtonElement ? isDisabled : null,\n    \"aria-disabled\": isDisabled || isAriaDisabled,\n    tabIndex: getDefaultTabIdx(),\n    onClick: function onClick(event) {\n      return handleTabClick(event, eventKey, tabContentRef);\n    }\n  }, isAriaDisabled ? preventedEvents : null, {\n    id: \"pf-tab-\".concat(eventKey, \"-\").concat(childId || uniqueId),\n    \"aria-controls\": ariaControls,\n    tabContentRef: tabContentRef,\n    ouiaId: childOuiaId,\n    href: href,\n    role: \"tab\",\n    \"aria-selected\": eventKey === localActiveKey\n  }, props), title);\n  return React.createElement(\"li\", {\n    className: css(styles.tabsItem, eventKey === localActiveKey && styles.modifiers.current, handleTabClose && styles.modifiers.action, handleTabClose && (isDisabled || isAriaDisabled) && styles.modifiers.disabled, childClassName),\n    role: \"presentation\"\n  }, tooltip ? React.createElement(Tooltip, Object.assign({}, tooltip.props), tabButton) : tabButton, handleTabClose !== undefined && React.createElement(\"span\", {\n    className: css(styles.tabsItemClose)\n  }, React.createElement(Button, {\n    variant: \"plain\",\n    \"aria-label\": closeButtonAriaLabel || 'Close tab',\n    onClick: function onClick(event) {\n      return handleTabClose(event, eventKey, tabContentRef);\n    },\n    isDisabled: isCloseDisabled\n  }, React.createElement(\"span\", {\n    className: css(styles.tabsItemCloseIcon)\n  }, React.createElement(TimesIcon, null)))));\n};\n\nexport var Tab = React.forwardRef(function (props, ref) {\n  return React.createElement(TabBase, Object.assign({\n    innerRef: ref\n  }, props));\n});\nTab.displayName = 'Tab';","map":{"version":3,"mappings":"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","names":["React","styles","TabButton","TabsContext","css","Tooltip","Button","TimesIcon","TabBase","_a","title","eventKey","tabContentRef","childId","id","tabContentId","className","childClassName","childOuiaId","ouiaId","isDisabled","isAriaDisabled","inoperableEvents","href","innerRef","tooltip","closeButtonAriaLabel","isCloseDisabled","props","__rest","preventedEvents","reduce","handlers","eventToPrevent","Object","event","preventDefault","useContext","mountOnEnter","localActiveKey","unmountOnExit","uniqueId","handleTabClick","handleTabClose","ariaControls","undefined","isButtonElement","Boolean","getDefaultTabIdx","tabButton","parentInnerRef","tabsLink","modifiers","disabled","ariaDisabled","tabIndex","onClick","role","tabsItem","current","action","tabsItemClose","variant","tabsItemCloseIcon","Tab","forwardRef","ref","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Tabs/Tab.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tabs/tabs';\nimport { OUIAProps } from '../../helpers';\nimport { TabButton } from './TabButton';\nimport { TabsContext } from './TabsContext';\nimport { css } from '@patternfly/react-styles';\nimport { Tooltip } from '../Tooltip';\nimport { Button } from '../Button';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\n\nexport interface TabProps extends Omit<React.HTMLProps<HTMLAnchorElement | HTMLButtonElement>, 'title'>, OUIAProps {\n  /** content rendered inside the Tab content area. */\n  children?: React.ReactNode;\n  /** additional classes added to the Tab */\n  className?: string;\n  /** URL associated with the Tab. A Tab with an href will render as an <a> instead of a <button>. A Tab inside a <Tabs component=\"nav\"> should have an href. */\n  href?: string;\n  /** Content rendered in the tab title. Should be <TabTitleText> and/or <TabTitleIcon> for proper styling. */\n  title: React.ReactNode;\n  /** uniquely identifies the tab */\n  eventKey: number | string;\n  /** child id for case in which a TabContent section is defined outside of a Tabs component */\n  tabContentId?: string | number;\n  /** child reference for case in which a TabContent section is defined outside of a Tabs component */\n  tabContentRef?: React.RefObject<any>;\n  /** whether to render the tab or not */\n  isHidden?: boolean;\n  /** Adds disabled styling and disables the button using the disabled html attribute */\n  isDisabled?: boolean;\n  /** Adds disabled styling and communicates that the button is disabled using the aria-disabled html attribute */\n  isAriaDisabled?: boolean;\n  /** Events to prevent when the button is in an aria-disabled state */\n  inoperableEvents?: string[];\n  /** Forwarded ref */\n  innerRef?: React.Ref<any>;\n  /** Optional Tooltip rendered to a Tab. Should be <Tooltip> with appropriate props for proper rendering. */\n  tooltip?: React.ReactElement<any>;\n  /** @beta Aria-label for the close button added by passing the onClose property to Tabs. */\n  closeButtonAriaLabel?: string;\n  /** @beta Flag indicating the close button should be disabled */\n  isCloseDisabled?: boolean;\n}\n\nconst TabBase: React.FunctionComponent<TabProps> = ({\n  title,\n  eventKey,\n  tabContentRef,\n  id: childId,\n  tabContentId,\n  className: childClassName = '',\n  ouiaId: childOuiaId,\n  isDisabled,\n  isAriaDisabled,\n  inoperableEvents = ['onClick', 'onKeyPress'],\n  href,\n  innerRef,\n  tooltip,\n  closeButtonAriaLabel,\n  isCloseDisabled = false,\n  ...props\n}: TabProps) => {\n  const preventedEvents = inoperableEvents.reduce(\n    (handlers, eventToPrevent) => ({\n      ...handlers,\n      [eventToPrevent]: (event: React.SyntheticEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n      }\n    }),\n    {}\n  );\n  const { mountOnEnter, localActiveKey, unmountOnExit, uniqueId, handleTabClick, handleTabClose } = React.useContext(\n    TabsContext\n  );\n  let ariaControls = tabContentId ? `${tabContentId}` : `pf-tab-section-${eventKey}-${childId || uniqueId}`;\n  if ((mountOnEnter || unmountOnExit) && eventKey !== localActiveKey) {\n    ariaControls = undefined;\n  }\n  const isButtonElement = Boolean(!href);\n  const getDefaultTabIdx = () => {\n    if (isDisabled) {\n      return isButtonElement ? null : -1;\n    } else if (isAriaDisabled) {\n      return null;\n    }\n  };\n\n  const tabButton = (\n    <TabButton\n      parentInnerRef={innerRef}\n      className={css(\n        styles.tabsLink,\n        isDisabled && href && styles.modifiers.disabled,\n        isAriaDisabled && styles.modifiers.ariaDisabled\n      )}\n      disabled={isButtonElement ? isDisabled : null}\n      aria-disabled={isDisabled || isAriaDisabled}\n      tabIndex={getDefaultTabIdx()}\n      onClick={(event: any) => handleTabClick(event, eventKey, tabContentRef)}\n      {...(isAriaDisabled ? preventedEvents : null)}\n      id={`pf-tab-${eventKey}-${childId || uniqueId}`}\n      aria-controls={ariaControls}\n      tabContentRef={tabContentRef}\n      ouiaId={childOuiaId}\n      href={href}\n      role=\"tab\"\n      aria-selected={eventKey === localActiveKey}\n      {...props}\n    >\n      {title}\n    </TabButton>\n  );\n\n  return (\n    <li\n      className={css(\n        styles.tabsItem,\n        eventKey === localActiveKey && styles.modifiers.current,\n        handleTabClose && styles.modifiers.action,\n        handleTabClose && (isDisabled || isAriaDisabled) && styles.modifiers.disabled,\n        childClassName\n      )}\n      role=\"presentation\"\n    >\n      {tooltip ? <Tooltip {...tooltip.props}>{tabButton}</Tooltip> : tabButton}\n      {handleTabClose !== undefined && (\n        <span className={css(styles.tabsItemClose)}>\n          <Button\n            variant=\"plain\"\n            aria-label={closeButtonAriaLabel || 'Close tab'}\n            onClick={(event: any) => handleTabClose(event, eventKey, tabContentRef)}\n            isDisabled={isCloseDisabled}\n          >\n            <span className={css(styles.tabsItemCloseIcon)}>\n              <TimesIcon />\n            </span>\n          </Button>\n        </span>\n      )}\n    </li>\n  );\n};\n\nexport const Tab = React.forwardRef((props: TabProps, ref: React.Ref<any>) => <TabBase innerRef={ref} {...props} />);\nTab.displayName = 'Tab';\n"]},"metadata":{},"sourceType":"module"}