{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Button, ButtonVariant } from '../Button';\nimport { AlertContext } from './AlertContext';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Alert/alert';\nexport const AlertToggleExpandButton = _a => {\n  var {\n    'aria-label': ariaLabel,\n    variantLabel,\n    onToggleExpand,\n    isExpanded\n  } = _a,\n      props = __rest(_a, ['aria-label', \"variantLabel\", \"onToggleExpand\", \"isExpanded\"]);\n\n  const {\n    title,\n    variantLabel: alertVariantLabel\n  } = React.useContext(AlertContext);\n  return React.createElement(Button, Object.assign({\n    variant: ButtonVariant.plain,\n    onClick: onToggleExpand,\n    \"aria-expanded\": isExpanded,\n    \"aria-label\": ariaLabel === '' ? `Toggle ${variantLabel || alertVariantLabel} alert: ${title}` : ariaLabel\n  }, props), React.createElement(\"span\", {\n    className: css(styles.alertToggleIcon)\n  }, React.createElement(AngleRightIcon, {\n    \"aria-hidden\": \"true\"\n  })));\n};\nAlertToggleExpandButton.displayName = 'AlertToggleExpandButton';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,EAA8BC,aAA9B,QAAmD,WAAnD;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAOC,cAAP,MAA2B,yDAA3B;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,qDAAnB;AAaA,OAAO,MAAMC,uBAAuB,GAA2DC,EAAD,IAM3D;MAN4D;IAC7F,cAAcC,SAD+E;IAE7FC,YAF6F;IAG7FC,cAH6F;IAI7FC;EAJ6F,IAInFJ;MACPK,KAAK,cALqF,8DAKrF;;EAER,MAAM;IAAEC,KAAF;IAASJ,YAAY,EAAEK;EAAvB,IAA6Cf,KAAK,CAACgB,UAAN,CAAiBb,YAAjB,CAAnD;EACA,OACEH,oBAACC,MAAD,EAAOgB;IACLC,OAAO,EAAEhB,aAAa,CAACiB,KADlB;IAELC,OAAO,EAAET,cAFJ;IAEkB,iBACRC,UAHV;IAGoB,cACbH,SAAS,KAAK,EAAd,GAAmB,UAAUC,YAAY,IAAIK,iBAAiB,WAAWD,KAAK,EAA9E,GAAmFL;EAJ1F,GAKDI,KALC,CAAP,EAOEb;IAAMqB,SAAS,EAAEhB,GAAG,CAACC,MAAM,CAACgB,eAAR;EAApB,GACEtB,oBAACI,cAAD,EAAe;IAAA,eAAa;EAAb,CAAf,CADF,CAPF,CADF;AAaD,CArBM;AAsBPG,uBAAuB,CAACgB,WAAxB,GAAsC,yBAAtC","names":["React","Button","ButtonVariant","AlertContext","AngleRightIcon","css","styles","AlertToggleExpandButton","_a","ariaLabel","variantLabel","onToggleExpand","isExpanded","props","title","alertVariantLabel","useContext","Object","variant","plain","onClick","className","alertToggleIcon","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Alert/AlertToggleExpandButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Button, ButtonProps, ButtonVariant } from '../Button';\nimport { AlertContext } from './AlertContext';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Alert/alert';\n\nexport interface AlertToggleExpandButtonProps extends ButtonProps {\n  /** Aria label for the toggle button */\n  'aria-label'?: string;\n  /** A callback for when the toggle button is clicked */\n  onToggleExpand?: () => void;\n  /** Flag to indicate if the content is expanded */\n  isExpanded?: boolean;\n  /** Variant label for the toggle button */\n  variantLabel?: string;\n}\n\nexport const AlertToggleExpandButton: React.FunctionComponent<AlertToggleExpandButtonProps> = ({\n  'aria-label': ariaLabel,\n  variantLabel,\n  onToggleExpand,\n  isExpanded,\n  ...props\n}: AlertToggleExpandButtonProps) => {\n  const { title, variantLabel: alertVariantLabel } = React.useContext(AlertContext);\n  return (\n    <Button\n      variant={ButtonVariant.plain}\n      onClick={onToggleExpand}\n      aria-expanded={isExpanded}\n      aria-label={ariaLabel === '' ? `Toggle ${variantLabel || alertVariantLabel} alert: ${title}` : ariaLabel}\n      {...props}\n    >\n      <span className={css(styles.alertToggleIcon)}>\n        <AngleRightIcon aria-hidden=\"true\" />\n      </span>\n    </Button>\n  );\n};\nAlertToggleExpandButton.displayName = 'AlertToggleExpandButton';\n"]},"metadata":{},"sourceType":"module"}