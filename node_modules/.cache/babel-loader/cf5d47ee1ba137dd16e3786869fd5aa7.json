{"ast":null,"code":"// all validation functions should return boolean and accept empty string as valid\n// url regex taken from:\n// https://uibakery.io/regex-library/url\n// eslint-disable-next-line\nconst urlRegex = /^https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)$/;\n/**\n * URL validation function.\n *\n * Just checks valid URL format. Accepts empty URL.\n *\n * @param url - URL string\n * @returns true if valid, false otherwise\n */\n\nexport const validateUrl = url => {\n  return !url || urlRegex.test(url);\n};\nexport const minLength = len => {\n  return string => {\n    return string.length >= len;\n  };\n};","map":{"version":3,"names":["urlRegex","validateUrl","url","test","minLength","len","string","length"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/utils/formValidationHelpers.ts"],"sourcesContent":["// all validation functions should return boolean and accept empty string as valid\n\n// url regex taken from:\n// https://uibakery.io/regex-library/url\n// eslint-disable-next-line\nconst urlRegex = /^https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)$/;\n\n/**\n * URL validation function.\n *\n * Just checks valid URL format. Accepts empty URL.\n *\n * @param url - URL string\n * @returns true if valid, false otherwise\n */\nexport const validateUrl = (url: string): boolean => {\n  return !url || urlRegex.test(url);\n};\n\nexport const minLength = (len: number): Function => {\n  return (string: string): boolean => {\n    return string.length >= len;\n  };\n};\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA,MAAMA,QAAQ,GAAG,6GAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAIC,GAAD,IAA0B;EACnD,OAAO,CAACA,GAAD,IAAQF,QAAQ,CAACG,IAAT,CAAcD,GAAd,CAAf;AACD,CAFM;AAIP,OAAO,MAAME,SAAS,GAAIC,GAAD,IAA2B;EAClD,OAAQC,MAAD,IAA6B;IAClC,OAAOA,MAAM,CAACC,MAAP,IAAiBF,GAAxB;EACD,CAFD;AAGD,CAJM"},"metadata":{},"sourceType":"module"}