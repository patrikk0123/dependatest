{"ast":null,"code":"var _jsxFileName = \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/LogViewer/LogViewer.tsx\";\nimport { Toolbar, ToolbarContent, ToolbarItem, Button, Switch } from '@patternfly/react-core';\nimport { LogViewer as LogViewerPF } from '@patternfly/react-log-viewer';\nimport { useEffect, useRef, useState } from 'react';\nimport '../../index.css';\nimport { CaretDownIcon, CaretUpIcon, OutlinedPlayCircleIcon } from '@patternfly/react-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LogViewer = _ref => {\n  let {\n    data,\n    follow\n  } = _ref;\n  const logViewerRef = useRef(); // line count assigned to 'scrollToRow' makes it scroll to bottom properly\n\n  const [isFollowing, setIsFollowing] = useState(follow); // is log viewer paused? (data are still stored, but not rendered)\n\n  const [isPaused, setIsPaused] = useState(true); // data that are actually rendered\n\n  const [renderedData, setRenderedData] = useState(data); // count of rendered lines\n  // is assigned to 'scrolToRow' only if log viewer is paused (so no automatic scrolling happens when paused)\n\n  const [lineCount, setLineCount] = useState(0); // if paused, how many lines were not rendered?\n\n  const [linesBehind, setLinesBehind] = useState(0);\n  useEffect(() => {\n    if (!isPaused && data.length > 0) {\n      var _logViewerRef$current;\n\n      setLineCount(data.length);\n      setRenderedData(data);\n      logViewerRef === null || logViewerRef === void 0 ? void 0 : (_logViewerRef$current = logViewerRef.current) === null || _logViewerRef$current === void 0 ? void 0 : _logViewerRef$current.scrollToBottom();\n    } else if (data.length !== lineCount) {\n      setLinesBehind(data.length - lineCount);\n    } else {\n      setLinesBehind(0);\n    }\n  }, [isPaused, data]);\n  useEffect(() => {\n    if (isFollowing) {\n      setIsPaused(false);\n    }\n  }, [isFollowing, data]);\n\n  const onScroll = _ref2 => {\n    let {\n      scrollOffsetToBottom,\n      scrollDirection,\n      scrollUpdateWasRequested\n    } = _ref2;\n\n    if (!scrollUpdateWasRequested) {\n      if (scrollOffsetToBottom > 0) {\n        setIsPaused(true);\n      } else {\n        setIsPaused(false);\n      }\n    }\n  };\n\n  const FooterButton = () => {\n    const handleClick = () => {\n      setIsPaused(false);\n    };\n\n    return /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClick,\n      isBlock: true,\n      icon: /*#__PURE__*/_jsxDEV(OutlinedPlayCircleIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 51\n      }, this),\n      children: [\"resume \", linesBehind === 0 ? null : `and show ${linesBehind} lines`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-10\",\n    children: /*#__PURE__*/_jsxDEV(LogViewerPF, {\n      innerRef: logViewerRef,\n      scrollToRow: !isPaused || isFollowing ? lineCount : 0,\n      data: renderedData,\n      toolbar: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(ToolbarContent, {\n          children: [/*#__PURE__*/_jsxDEV(ToolbarItem, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                var _logViewerRef$current2;\n\n                logViewerRef === null || logViewerRef === void 0 ? void 0 : (_logViewerRef$current2 = logViewerRef.current) === null || _logViewerRef$current2 === void 0 ? void 0 : _logViewerRef$current2.scrollTo(0, 0);\n                setIsPaused(true);\n              },\n              variant: \"control\",\n              icon: /*#__PURE__*/_jsxDEV(CaretUpIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 25\n              }, this),\n              children: \"Top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ToolbarItem, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                var _logViewerRef$current3;\n\n                logViewerRef === null || logViewerRef === void 0 ? void 0 : (_logViewerRef$current3 = logViewerRef.current) === null || _logViewerRef$current3 === void 0 ? void 0 : _logViewerRef$current3.scrollToBottom();\n                setIsPaused(false);\n              },\n              variant: \"control\",\n              icon: /*#__PURE__*/_jsxDEV(CaretDownIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 25\n              }, this),\n              children: \"Bottom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ToolbarItem, {\n            children: /*#__PURE__*/_jsxDEV(Switch, {\n              label: \"Following\",\n              labelOff: \"Not Following\",\n              isChecked: isFollowing,\n              onChange: checked => {\n                setIsFollowing(checked);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this),\n      footer: isPaused && /*#__PURE__*/_jsxDEV(FooterButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }, this),\n      onScroll: onScroll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["Toolbar","ToolbarContent","ToolbarItem","Button","Switch","LogViewer","LogViewerPF","useEffect","useRef","useState","CaretDownIcon","CaretUpIcon","OutlinedPlayCircleIcon","data","follow","logViewerRef","isFollowing","setIsFollowing","isPaused","setIsPaused","renderedData","setRenderedData","lineCount","setLineCount","linesBehind","setLinesBehind","length","current","scrollToBottom","onScroll","scrollOffsetToBottom","scrollDirection","scrollUpdateWasRequested","FooterButton","handleClick","scrollTo","checked"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/LogViewer/LogViewer.tsx"],"sourcesContent":["import { Toolbar, ToolbarContent, ToolbarItem, Button, Switch } from '@patternfly/react-core';\nimport { LogViewer as LogViewerPF } from '@patternfly/react-log-viewer';\nimport { useEffect, useRef, useState } from 'react';\nimport '../../index.css';\nimport { CaretDownIcon, CaretUpIcon, OutlinedPlayCircleIcon } from '@patternfly/react-icons';\n\ninterface ILogViewerProps {\n  data: string | string[];\n  follow: boolean;\n}\n\nexport const LogViewer = ({ data, follow }: ILogViewerProps) => {\n  const logViewerRef = useRef<any>();\n  // line count assigned to 'scrollToRow' makes it scroll to bottom properly\n  const [isFollowing, setIsFollowing] = useState<boolean>(follow);\n\n  // is log viewer paused? (data are still stored, but not rendered)\n  const [isPaused, setIsPaused] = useState(true);\n  // data that are actually rendered\n  const [renderedData, setRenderedData] = useState(data);\n  // count of rendered lines\n  // is assigned to 'scrolToRow' only if log viewer is paused (so no automatic scrolling happens when paused)\n  const [lineCount, setLineCount] = useState(0);\n  // if paused, how many lines were not rendered?\n  const [linesBehind, setLinesBehind] = useState(0);\n\n  useEffect(() => {\n    if (!isPaused && data.length > 0) {\n      setLineCount(data.length);\n      setRenderedData(data);\n      logViewerRef?.current?.scrollToBottom();\n    } else if (data.length !== lineCount) {\n      setLinesBehind(data.length - lineCount);\n    } else {\n      setLinesBehind(0);\n    }\n  }, [isPaused, data]);\n\n  useEffect(() => {\n    if (isFollowing) {\n      setIsPaused(false);\n    }\n  }, [isFollowing, data]);\n\n  const onScroll = ({ scrollOffsetToBottom, scrollDirection, scrollUpdateWasRequested }: any) => {\n    if (!scrollUpdateWasRequested) {\n      if (scrollOffsetToBottom > 0) {\n        setIsPaused(true);\n      } else {\n        setIsPaused(false);\n      }\n    }\n  };\n\n  const FooterButton = () => {\n    const handleClick = () => {\n      setIsPaused(false);\n    };\n    return (\n      <Button onClick={handleClick} isBlock icon={<OutlinedPlayCircleIcon />}>\n        resume {linesBehind === 0 ? null : `and show ${linesBehind} lines`}\n      </Button>\n    );\n  };\n\n  return (\n    <div className=\"p-10\">\n      <LogViewerPF\n        innerRef={logViewerRef}\n        scrollToRow={!isPaused || isFollowing ? lineCount : 0}\n        data={renderedData}\n        toolbar={\n          <Toolbar>\n            <ToolbarContent>\n              <ToolbarItem>\n                <Button\n                  onClick={() => {\n                    logViewerRef?.current?.scrollTo(0, 0);\n                    setIsPaused(true);\n                  }}\n                  variant=\"control\"\n                  icon={<CaretUpIcon />}\n                >\n                  Top\n                </Button>\n              </ToolbarItem>\n              <ToolbarItem>\n                <Button\n                  onClick={() => {\n                    logViewerRef?.current?.scrollToBottom();\n                    setIsPaused(false);\n                  }}\n                  variant=\"control\"\n                  icon={<CaretDownIcon />}\n                >\n                  Bottom\n                </Button>\n              </ToolbarItem>\n              <ToolbarItem>\n                <Switch\n                  label=\"Following\"\n                  labelOff=\"Not Following\"\n                  isChecked={isFollowing}\n                  onChange={(checked) => {\n                    setIsFollowing(checked);\n                  }}\n                />\n              </ToolbarItem>\n            </ToolbarContent>\n          </Toolbar>\n        }\n        footer={isPaused && <FooterButton />}\n        onScroll={onScroll}\n      />\n    </div>\n  );\n};\n"],"mappings":";AAAA,SAASA,OAAT,EAAkBC,cAAlB,EAAkCC,WAAlC,EAA+CC,MAA/C,EAAuDC,MAAvD,QAAqE,wBAArE;AACA,SAASC,SAAS,IAAIC,WAAtB,QAAyC,8BAAzC;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAO,iBAAP;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,sBAArC,QAAmE,yBAAnE;;AAOA,OAAO,MAAMP,SAAS,GAAG,QAAuC;EAAA,IAAtC;IAAEQ,IAAF;IAAQC;EAAR,CAAsC;EAC9D,MAAMC,YAAY,GAAGP,MAAM,EAA3B,CAD8D,CAE9D;;EACA,MAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAUK,MAAV,CAA9C,CAH8D,CAK9D;;EACA,MAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAxC,CAN8D,CAO9D;;EACA,MAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAACI,IAAD,CAAhD,CAR8D,CAS9D;EACA;;EACA,MAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,CAAD,CAA1C,CAX8D,CAY9D;;EACA,MAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,CAAD,CAA9C;EAEAF,SAAS,CAAC,MAAM;IACd,IAAI,CAACW,QAAD,IAAaL,IAAI,CAACa,MAAL,GAAc,CAA/B,EAAkC;MAAA;;MAChCH,YAAY,CAACV,IAAI,CAACa,MAAN,CAAZ;MACAL,eAAe,CAACR,IAAD,CAAf;MACAE,YAAY,SAAZ,IAAAA,YAAY,WAAZ,qCAAAA,YAAY,CAAEY,OAAd,gFAAuBC,cAAvB;IACD,CAJD,MAIO,IAAIf,IAAI,CAACa,MAAL,KAAgBJ,SAApB,EAA+B;MACpCG,cAAc,CAACZ,IAAI,CAACa,MAAL,GAAcJ,SAAf,CAAd;IACD,CAFM,MAEA;MACLG,cAAc,CAAC,CAAD,CAAd;IACD;EACF,CAVQ,EAUN,CAACP,QAAD,EAAWL,IAAX,CAVM,CAAT;EAYAN,SAAS,CAAC,MAAM;IACd,IAAIS,WAAJ,EAAiB;MACfG,WAAW,CAAC,KAAD,CAAX;IACD;EACF,CAJQ,EAIN,CAACH,WAAD,EAAcH,IAAd,CAJM,CAAT;;EAMA,MAAMgB,QAAQ,GAAG,SAA8E;IAAA,IAA7E;MAAEC,oBAAF;MAAwBC,eAAxB;MAAyCC;IAAzC,CAA6E;;IAC7F,IAAI,CAACA,wBAAL,EAA+B;MAC7B,IAAIF,oBAAoB,GAAG,CAA3B,EAA8B;QAC5BX,WAAW,CAAC,IAAD,CAAX;MACD,CAFD,MAEO;QACLA,WAAW,CAAC,KAAD,CAAX;MACD;IACF;EACF,CARD;;EAUA,MAAMc,YAAY,GAAG,MAAM;IACzB,MAAMC,WAAW,GAAG,MAAM;MACxBf,WAAW,CAAC,KAAD,CAAX;IACD,CAFD;;IAGA,oBACE,QAAC,MAAD;MAAQ,OAAO,EAAEe,WAAjB;MAA8B,OAAO,MAArC;MAAsC,IAAI,eAAE,QAAC,sBAAD;QAAA;QAAA;QAAA;MAAA,QAA5C;MAAA,sBACUV,WAAW,KAAK,CAAhB,GAAoB,IAApB,GAA4B,YAAWA,WAAY,QAD7D;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAKD,CATD;;EAWA,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,uBACE,QAAC,WAAD;MACE,QAAQ,EAAET,YADZ;MAEE,WAAW,EAAE,CAACG,QAAD,IAAaF,WAAb,GAA2BM,SAA3B,GAAuC,CAFtD;MAGE,IAAI,EAAEF,YAHR;MAIE,OAAO,eACL,QAAC,OAAD;QAAA,uBACE,QAAC,cAAD;UAAA,wBACE,QAAC,WAAD;YAAA,uBACE,QAAC,MAAD;cACE,OAAO,EAAE,MAAM;gBAAA;;gBACbL,YAAY,SAAZ,IAAAA,YAAY,WAAZ,sCAAAA,YAAY,CAAEY,OAAd,kFAAuBQ,QAAvB,CAAgC,CAAhC,EAAmC,CAAnC;gBACAhB,WAAW,CAAC,IAAD,CAAX;cACD,CAJH;cAKE,OAAO,EAAC,SALV;cAME,IAAI,eAAE,QAAC,WAAD;gBAAA;gBAAA;gBAAA;cAAA,QANR;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADF,eAaE,QAAC,WAAD;YAAA,uBACE,QAAC,MAAD;cACE,OAAO,EAAE,MAAM;gBAAA;;gBACbJ,YAAY,SAAZ,IAAAA,YAAY,WAAZ,sCAAAA,YAAY,CAAEY,OAAd,kFAAuBC,cAAvB;gBACAT,WAAW,CAAC,KAAD,CAAX;cACD,CAJH;cAKE,OAAO,EAAC,SALV;cAME,IAAI,eAAE,QAAC,aAAD;gBAAA;gBAAA;gBAAA;cAAA,QANR;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QAbF,eAyBE,QAAC,WAAD;YAAA,uBACE,QAAC,MAAD;cACE,KAAK,EAAC,WADR;cAEE,QAAQ,EAAC,eAFX;cAGE,SAAS,EAAEH,WAHb;cAIE,QAAQ,EAAGoB,OAAD,IAAa;gBACrBnB,cAAc,CAACmB,OAAD,CAAd;cACD;YANH;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QAzBF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QALJ;MA4CE,MAAM,EAAElB,QAAQ,iBAAI,QAAC,YAAD;QAAA;QAAA;QAAA;MAAA,QA5CtB;MA6CE,QAAQ,EAAEW;IA7CZ;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAmDD,CAzGM"},"metadata":{},"sourceType":"module"}