{"ast":null,"code":"import _objectSpread from\"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useRef,useState,useCallback}from'react';import Chart from'chart.js/auto';import{calculateBuildName}from'../BuildName/BuildName';import{Select,SelectOption,Popover,SelectVariant}from'@patternfly/react-core';import{InfoCircleIcon}from'@patternfly/react-icons';import{buildService}from'../../services/buildService';import styles from'./BuildMetrics.module.css';import{useDataContainer}from'../../containers/DataContainer/useDataContainer';import{DataContainer}from'../../containers/DataContainer/DataContainer';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var BUILDS_DISPLAY_LIMIT=20;var BUILDS_DISPLAY_LIMIT_EXAMPLE=5;var metricsTooltipList;var lineChart;var barChart;/**\n * Generate time title according to the metricValue.\n *\n *\n * @param {number | string} metricValue - Metric value coming from the REST API\n */var generateTimeTitle=function generateTimeTitle(metricValueData){// Chart.js converts null values to NaN string\nvar metricValue;if(metricValueData===null||metricValueData==='NaN'){return'Not Available';}else{metricValue=metricValueData;}var SECOND_MS=1000;var MINUTE_MS=60*SECOND_MS;var HOUR_MS=60*MINUTE_MS;var DAYS_MS=24*HOUR_MS;var time={milliseconds:metricValue%SECOND_MS,seconds:Math.floor(metricValue/SECOND_MS%60),minutes:Math.floor(metricValue/MINUTE_MS%60),hours:Math.floor(metricValue/HOUR_MS%24),days:Math.floor(metricValue/DAYS_MS)};// days\nif(metricValue>=DAYS_MS){return time.days+'d '+(time.hours?time.hours+'h':'');}// hours\nif(metricValue>=HOUR_MS){return time.hours+'h '+(time.minutes?time.minutes+'m':'');}// minutes\nif(metricValue>=MINUTE_MS){return time.minutes+'m '+(time.seconds?time.seconds+'s':'');}// seconds\nif(metricValue>=SECOND_MS){return time.seconds+(time.milliseconds?'.'+time.milliseconds+' s':' s');}// ms\nreturn time.milliseconds+' ms';};/**\n * Return color and label for each metric.\n *\n * Colors are based on patternfly.org/v3/styles/color-palette/\n *\n * @param {string} metricName - Metric name coming from the REST API\n */var adaptMetric=function adaptMetric(metricName){switch(metricName){// purple\ncase'WAITING_FOR_DEPENDENCIES':return{color:'#a18fff',label:'Waiting',description:'Waiting for dependencies'};// light-green\ncase'ENQUEUED':return{color:'#c8eb79',label:'Enqueued',description:'Waiting to be started, the metric ends with the BPM process being started from PNC Orchestrator'};// cyan\ncase'SCM_CLONE':return{color:'#7dbdc3',label:'SCM Clone',description:'Cloning / Syncing from Gerrit'};// orange\ncase'ALIGNMENT_ADJUST':return{color:'#f7bd7f',label:'Alignment',description:'Alignment only'};// blue\ncase'BUILD_ENV_SETTING_UP':return{color:'#7cdbf3',label:'Starting Environment',description:'Requesting to start new Build Environment in OpenShift'};case'REPO_SETTING_UP':return{color:'#00b9e4',label:'Artifact Repos Setup',description:'Creating per build artifact repositories in Indy'};case'BUILD_SETTING_UP':return{color:'#008bad',label:'Building',description:'Uploading the build script, running the build, downloading the results (logs)'};// black\ncase'COLLECTING_RESULTS_FROM_BUILD_DRIVER':return{color:'black',label:'Collecting Results From Build Driver',description:'',skip:true};// light purple\ncase'SEALING_REPOSITORY_MANAGER_RESULTS':return{color:'#c7bfff',label:'Sealing',description:'Sealing artifact repository in Indy'};// purple\ncase'COLLECTING_RESULTS_FROM_REPOSITORY_MANAGER':return{color:'#703fec',label:'Promotion',description:'Downloading the list of built artifact and dependencies from Indy, promoting them to shared repository in Indy'};// green\ncase'FINALIZING_BUILD':return{color:'#3f9c35',label:'Finalizing',description:'Completing all other build execution tasks, destroying build environments, invoking the BPM'};// gray\ncase'OTHER':return{color:'silver',label:'Other',description:'Other tasks from the time when the build was submitted to the time when the build ends'};default:console.warn('adaptMetric: Unknown metric name: \"'+metricName+'\"',metricName);return{color:'gray',label:metricName,description:'Unknown metric'};}};var navigationOptions=[{id:1,name:'1st'},{id:2,name:'2nd'},{id:3,name:'3rd'},{id:5,name:'5th'},{id:10,name:'10th'}];var getNavigationIdByName=function getNavigationIdByName(name){var _navigationOptions$fi;return(_navigationOptions$fi=navigationOptions.find(function(option){return option.name===name;}))===null||_navigationOptions$fi===void 0?void 0:_navigationOptions$fi.id;};var generateBuildTitle=function generateBuildTitle(buildName){return'#'+buildName;};/**\n * Load Build Metrics for specified builds.\n *\n * @param {Object[]} builds - List of Builds.\n */var transferBuildsToBuildId=function transferBuildsToBuildId(builds){if(builds){return builds.map(function(build){return build.id.toString();});}};var MetricsPopoverContent=function MetricsPopoverContent(metricsTooltipList){return/*#__PURE__*/_jsxs(\"div\",{children:[\"Each metric consists of several subtasks:\",metricsTooltipList.map(function(metricsTooltip){return/*#__PURE__*/_jsxs(\"dl\",{className:styles['pnc-popover-paragraph'],children:[/*#__PURE__*/_jsx(\"dt\",{children:/*#__PURE__*/_jsx(\"b\",{children:metricsTooltip.label})}),/*#__PURE__*/_jsx(\"dd\",{children:metricsTooltip.description})]},metricsTooltip.label);})]});};var BuildMetricsCanvas=function BuildMetricsCanvas(_ref){var buildMetrics=_ref.buildMetrics,chartType=_ref.chartType,componentId=_ref.componentId;var isCanvasInit=useRef(true);var chartRef=/*#__PURE__*/React.createRef();useEffect(function(){var lineChartConfig={type:'line',data:{datasets:[]},options:{}};var barChartConfig={type:'bar',data:{datasets:[]},options:{}};var updateChartConfig=function updateChartConfig(){// Chart is pointing to single instance of chartConfig declared on the Controller level and providing later updates based on it's changes.\nvar adaptedMetric;var buildIds=buildMetrics.builds.map(function(build){return build.id.toString();});// skip specific metrics\nvar filteredData=buildMetrics.buildMetricsData?buildMetrics.buildMetricsData.filter(function(item){return!adaptMetric(item.name).skip;}):[];var buildMetricsData={labels:buildMetrics.builds.map(function(build){return calculateBuildName(build);}),datasets:filteredData};// sum individual metrics for given build\nvar buildMetricsSum=new Array(buildIds.length).fill(0);for(var m=0;m<buildMetricsData.datasets.length;m++){for(var n=0;n<buildMetricsData.datasets[m].data.length;n++){buildMetricsSum[n]+=buildMetricsData.datasets[m].data[n];}}// compute Other metric\nvar metricOthersData=[];for(var k=0;k<buildMetrics.builds.length;k++){var submitTime=new Date(buildMetrics.builds[k].submitTime);var endTime=new Date(buildMetrics.builds[k].endTime);var metricOther=endTime.getTime()-submitTime.getTime()-buildMetricsSum[k];metricOthersData.push(metricOther>0?metricOther:0);}var otherData=buildMetricsData.datasets.find(function(data){return data.name==='OTHER';});if(otherData){otherData.data=metricOthersData;}else{buildMetricsData.datasets.push({name:'OTHER',data:metricOthersData});}// generate tooltip content\nmetricsTooltipList=buildMetricsData.datasets.map(function(item){adaptedMetric=adaptMetric(item.name);return{label:adaptedMetric.label,description:adaptedMetric.description};});if(chartType==='line'){for(var i=0;i<buildMetricsData.datasets.length;i++){adaptedMetric=adaptMetric(buildMetricsData.datasets[i].name);Object.assign(buildMetricsData.datasets[i],{label:adaptedMetric.label,fill:false,// lines\nborderColor:adaptedMetric.color,borderWidth:4,// points\npointBackgroundColor:adaptedMetric.color,pointBorderColor:'white',pointBorderWidth:1.5,pointRadius:4});}lineChartConfig.options={maintainAspectRatio:false,elements:{line:{tension:0.5}},animation:{duration:0// disable animation\n},scales:{y:{type:'logarithmic',title:{display:true,text:'Logarithmic scale'},ticks:{maxTicksLimit:8,callback:generateTimeTitle}}}};}else if(chartType==='horizontalBar'){for(var j=0;j<buildMetricsData.datasets.length;j++){adaptedMetric=adaptMetric(buildMetricsData.datasets[j].name);Object.assign(buildMetricsData.datasets[j],{label:adaptedMetric.label,backgroundColor:adaptedMetric.color});}barChartConfig.options={indexAxis:'y',plugins:{tooltip:{position:'nearest'}},animation:{duration:0// disable animation\n},scales:{x:{min:0,position:'bottom',ticks:{maxTicksLimit:30,callback:generateTimeTitle},stacked:true,title:{display:true,text:'Linear scale'}},y:{reverse:false,stacked:true}}};}else{console.warn('Unsupported chart type: '+chartType);}var isSingleBuild=buildMetricsData.datasets[0].data.length===1;var commonChartConfig={layout:{padding:{top:20,bottom:20}},maintainAspectRatio:false,tooltips:{callbacks:{title:function title(tooltipItems){return generateBuildTitle(tooltipItems[0].label);},label:function label(tooltipItem,data){var label=data.datasets[tooltipItem.datasetIndex].label||'';if(label){label+=': '+generateTimeTitle(tooltipItem.value);}if(tooltipItem.value!=='NaN'&&tooltipItem.value>1000){label+='  ('+tooltipItem.value+' ms)';}return label;}}}};var commonChartPlugins=[{id:'',beforeInit:function beforeInit(chart){chart.legend.afterFit=function(){chart.height=chart.height+25;};}}];lineChartConfig.data=buildMetricsData;barChartConfig.data=buildMetricsData;// increase space between legend and chart\nvar heightTmp=0;var MIN_HEIGHT=290;var MIN_HEIGHT_SINGLE_BUILD=400;if(chartType==='horizontalBar'){Object.assign(barChartConfig.options,commonChartConfig);barChartConfig.plugins=commonChartPlugins;heightTmp=buildMetricsData.datasets[0].data.length*30;chartRef.current.parentElement.style.height=(heightTmp<MIN_HEIGHT?isSingleBuild?MIN_HEIGHT_SINGLE_BUILD:MIN_HEIGHT:heightTmp)+'px';if(isSingleBuild){barChartConfig.options.layout.padding=50;}}else{Object.assign(lineChartConfig.options,commonChartConfig);lineChartConfig.plugins=commonChartPlugins;chartRef.current.parentElement.style.height='300px';}};updateChartConfig();if(chartType==='line'&&lineChart){lineChart.config.data=lineChartConfig.data;lineChart.config.options=lineChartConfig.options;lineChart.update();}else if(chartType==='horizontalBar'&&barChart){barChart.config.data=barChartConfig.data;barChart.config.options=barChartConfig.options;barChart.update();}if(isCanvasInit.current){if(chartType==='line'){var _chartRef$current;var lineCtx=(_chartRef$current=chartRef.current)===null||_chartRef$current===void 0?void 0:_chartRef$current.getContext('2d');if(!lineCtx){throw new Error('Chart.JS: Failed to get 2D context');}lineChart=new Chart(lineCtx,lineChartConfig);}else if(chartType==='horizontalBar'){var _chartRef$current2;var barCtx=(_chartRef$current2=chartRef.current)===null||_chartRef$current2===void 0?void 0:_chartRef$current2.getContext('2d');if(!barCtx){throw new Error('Chart.JS: Failed to get 2D context');}barChart=new Chart(barCtx,barChartConfig);}isCanvasInit.current=false;}},[chartRef,chartType,buildMetrics.buildMetricsData,buildMetrics.builds]);return/*#__PURE__*/_jsx(\"canvas\",{id:componentId,ref:chartRef});};/**\n * The component representing Build Metric charts.\n *\n * @param {Object[]} builds - List of Builds.\n * @param {string} chartType - Possible values: line, horizontalBar\n * @param {string} componentId - Unique component id.\n *\n * @example\n * ```tsx\n * <BuildMetrics builds={buildList} chartType=\"line\" componentId=\"BUILD_CONFIG_METRICS\"></BuildMetrics>\n * ```\n *\n */export var BuildMetrics=function BuildMetrics(_ref2){var builds=_ref2.builds,chartType=_ref2.chartType,componentId=_ref2.componentId;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];var _useState3=useState('1st'),_useState4=_slicedToArray(_useState3,2),selected=_useState4[0],setSelected=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),buildMetrics=_useState6[0],setBuildMetrics=_useState6[1];var dataContainer=useDataContainer(useCallback(function(_ref3){var serviceData=_ref3.serviceData,requestConfig=_ref3.requestConfig;return buildService.getBuildMetrics(transferBuildsToBuildId(serviceData),requestConfig);},[]));var dataContainerRefresh=dataContainer.refresh;var navigationSelectOptions=navigationOptions.map(function(option){return/*#__PURE__*/_jsx(SelectOption,{value:option.name},option.id);});useEffect(function(){/**\n     * Filter array using Nth and max parameters.\n     *\n     * @param {array} array - Full array to be filtered.\n     * @param {number} nth - Returned array will contain only every Nth item.\n     * @param {number} max [20] - Returned array max size.\n     */var filterBuilds=function filterBuilds(array,nth){var max=arguments.length>2&&arguments[2]!==undefined?arguments[2]:BUILDS_DISPLAY_LIMIT;var result=[];for(var i=0;i<array.length;i=i+nth){result.push(array[i]);}return result.slice(0,max);};/* Load data according to the current filter */var currentFilteredBuilds=filterBuilds(builds,getNavigationIdByName(selected));dataContainerRefresh({serviceData:currentFilteredBuilds,requestConfig:{}}).then(function(res){setBuildMetrics({builds:currentFilteredBuilds,buildMetricsData:res.data});});},[builds,selected,dataContainerRefresh]);var onToggle=function onToggle(){setIsOpen(!isOpen);};var onSelect=function onSelect(event,value){setSelected(value);setIsOpen(false);};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(DataContainer,_objectSpread(_objectSpread({},dataContainer),{},{title:\"Build Metrics\",children:/*#__PURE__*/_jsxs(\"div\",{className:styles['pnc-build-metrics'],children:[/*#__PURE__*/_jsxs(\"div\",{className:styles['pnc-build-metrics-body'],children:[/*#__PURE__*/_jsx(\"div\",{className:styles['pnc-build-metrics-help'],children:/*#__PURE__*/_jsx(\"small\",{children:\"Select specific metric in the chart legend to filter it out:\"})}),metricsTooltipList&&/*#__PURE__*/ // Popover seems to cause warning: findDOMNode is deprecated in StrictMode\n_jsx(Popover,{\"aria-label\":\"Basic popover\",bodyContent:MetricsPopoverContent(metricsTooltipList),showClose:false,enableFlip:false,position:\"left-start\",children:/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(styles['pnc-build-metrics-help'],\" \").concat(styles['pnc-build-metrics-help--right']),children:/*#__PURE__*/_jsxs(\"small\",{children:[\"Metrics Descriptions \\xA0\",/*#__PURE__*/_jsx(\"span\",{className:styles['pnc-build-metric-info-icon'],children:/*#__PURE__*/_jsx(InfoCircleIcon,{})})]})})}),/*#__PURE__*/_jsx(\"div\",{className:styles['canvas-wrapper'],children:buildMetrics&&buildMetrics.builds&&buildMetrics.buildMetricsData&&/*#__PURE__*/_jsx(BuildMetricsCanvas,{buildMetrics:buildMetrics,chartType:chartType,componentId:componentId})})]}),/*#__PURE__*/_jsxs(\"form\",{className:styles['pnc-build-metric-navigation'],children:[/*#__PURE__*/_jsx(\"div\",{className:\"pull-left\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"pull-right\",\"ng-if\":\"$ctrl.builds.length > 1\",children:[\"Display every\\xA0\",/*#__PURE__*/_jsx(Select,{width:100,variant:SelectVariant.single,onToggle:onToggle,onSelect:onSelect,selections:selected,isOpen:isOpen,\"aria-labelledby\":\"\".concat(componentId,\"-select\"),children:navigationSelectOptions}),\"\\xA0build\",/*#__PURE__*/_jsx(Popover,{\"aria-label\":\"Basic popover\",bodyContent:\"Always a maximum of \".concat(BUILDS_DISPLAY_LIMIT,\" builds will be displayed if they are available, eg. if every \").concat(BUILDS_DISPLAY_LIMIT_EXAMPLE,\"th build is displayed, \").concat(BUILDS_DISPLAY_LIMIT,\" builds will cover last \").concat(BUILDS_DISPLAY_LIMIT*BUILDS_DISPLAY_LIMIT_EXAMPLE,\" builds.\"),showClose:false,children:/*#__PURE__*/_jsxs(\"small\",{children:[\"\\xA0\",/*#__PURE__*/_jsx(\"span\",{className:styles['pnc-build-metric-info-icon'],children:/*#__PURE__*/_jsx(InfoCircleIcon,{})})]})})]})]})]})}))});};","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","Chart","calculateBuildName","Select","SelectOption","Popover","SelectVariant","InfoCircleIcon","buildService","styles","useDataContainer","DataContainer","BUILDS_DISPLAY_LIMIT","BUILDS_DISPLAY_LIMIT_EXAMPLE","metricsTooltipList","lineChart","barChart","generateTimeTitle","metricValueData","metricValue","SECOND_MS","MINUTE_MS","HOUR_MS","DAYS_MS","time","milliseconds","seconds","Math","floor","minutes","hours","days","adaptMetric","metricName","color","label","description","skip","console","warn","navigationOptions","id","name","getNavigationIdByName","find","option","generateBuildTitle","buildName","transferBuildsToBuildId","builds","map","build","toString","MetricsPopoverContent","metricsTooltip","BuildMetricsCanvas","buildMetrics","chartType","componentId","isCanvasInit","chartRef","createRef","lineChartConfig","type","data","datasets","options","barChartConfig","updateChartConfig","adaptedMetric","buildIds","filteredData","buildMetricsData","filter","item","labels","buildMetricsSum","Array","length","fill","m","n","metricOthersData","k","submitTime","Date","endTime","metricOther","getTime","push","otherData","i","Object","assign","borderColor","borderWidth","pointBackgroundColor","pointBorderColor","pointBorderWidth","pointRadius","maintainAspectRatio","elements","line","tension","animation","duration","scales","y","title","display","text","ticks","maxTicksLimit","callback","j","backgroundColor","indexAxis","plugins","tooltip","position","x","min","stacked","reverse","isSingleBuild","commonChartConfig","layout","padding","top","bottom","tooltips","callbacks","tooltipItems","tooltipItem","datasetIndex","value","commonChartPlugins","beforeInit","chart","legend","afterFit","height","heightTmp","MIN_HEIGHT","MIN_HEIGHT_SINGLE_BUILD","current","parentElement","style","config","update","lineCtx","getContext","Error","barCtx","BuildMetrics","isOpen","setIsOpen","selected","setSelected","setBuildMetrics","dataContainer","serviceData","requestConfig","getBuildMetrics","dataContainerRefresh","refresh","navigationSelectOptions","filterBuilds","array","nth","max","result","slice","currentFilteredBuilds","then","res","onToggle","onSelect","event","single"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/BuildMetrics/BuildMetrics.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport Chart, { ChartConfiguration } from 'chart.js/auto';\nimport { calculateBuildName } from '../BuildName/BuildName';\nimport { Select, SelectOption, Popover, SelectVariant } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nimport { Build } from 'pnc-api-types-ts';\nimport { buildService } from '../../services/buildService';\nimport styles from './BuildMetrics.module.css';\nimport { IService, useDataContainer } from '../../containers/DataContainer/useDataContainer';\nimport { DataContainer } from '../../containers/DataContainer/DataContainer';\nimport { AxiosResponse } from 'axios';\n\ninterface IBuildMetricsProps {\n  builds: Array<Build>;\n  chartType: string;\n  componentId: string;\n}\n\ninterface IBuildMetrics {\n  builds: Array<Build>;\n  buildMetricsData: Array<IBuildMetricsData>;\n}\n\ninterface IBuildMetricsCanvasProps {\n  buildMetrics: IBuildMetrics;\n  chartType: string;\n  componentId: string;\n}\n\ninterface IBuildMetricsData {\n  name: string;\n  data: Array<number>;\n}\n\ninterface IMetricsTooltip {\n  label: string;\n  description: string;\n}\n\nconst BUILDS_DISPLAY_LIMIT = 20;\nconst BUILDS_DISPLAY_LIMIT_EXAMPLE = 5;\nlet metricsTooltipList: Array<IMetricsTooltip>;\nlet lineChart: Chart;\nlet barChart: Chart;\n\n/**\n * Generate time title according to the metricValue.\n *\n *\n * @param {number | string} metricValue - Metric value coming from the REST API\n */\nconst generateTimeTitle = (metricValueData: number | string) => {\n  // Chart.js converts null values to NaN string\n  let metricValue: number;\n  if (metricValueData === null || metricValueData === 'NaN') {\n    return 'Not Available';\n  } else {\n    metricValue = metricValueData as number;\n  }\n\n  const SECOND_MS = 1000;\n  const MINUTE_MS = 60 * SECOND_MS;\n  const HOUR_MS = 60 * MINUTE_MS;\n  const DAYS_MS = 24 * HOUR_MS;\n\n  const time = {\n    milliseconds: metricValue % SECOND_MS,\n    seconds: Math.floor((metricValue / SECOND_MS) % 60),\n    minutes: Math.floor((metricValue / MINUTE_MS) % 60),\n    hours: Math.floor((metricValue / HOUR_MS) % 24),\n    days: Math.floor(metricValue / DAYS_MS),\n  };\n\n  // days\n  if (metricValue >= DAYS_MS) {\n    return time.days + 'd ' + (time.hours ? time.hours + 'h' : '');\n  }\n  // hours\n  if (metricValue >= HOUR_MS) {\n    return time.hours + 'h ' + (time.minutes ? time.minutes + 'm' : '');\n  }\n  // minutes\n  if (metricValue >= MINUTE_MS) {\n    return time.minutes + 'm ' + (time.seconds ? time.seconds + 's' : '');\n  }\n  // seconds\n  if (metricValue >= SECOND_MS) {\n    return time.seconds + (time.milliseconds ? '.' + time.milliseconds + ' s' : ' s');\n  }\n  // ms\n  return time.milliseconds + ' ms';\n};\n\n/**\n * Return color and label for each metric.\n *\n * Colors are based on patternfly.org/v3/styles/color-palette/\n *\n * @param {string} metricName - Metric name coming from the REST API\n */\nconst adaptMetric = (metricName: string) => {\n  switch (metricName) {\n    // purple\n    case 'WAITING_FOR_DEPENDENCIES':\n      return {\n        color: '#a18fff',\n        label: 'Waiting',\n        description: 'Waiting for dependencies',\n      };\n\n    // light-green\n    case 'ENQUEUED':\n      return {\n        color: '#c8eb79',\n        label: 'Enqueued',\n        description: 'Waiting to be started, the metric ends with the BPM process being started from PNC Orchestrator',\n      };\n\n    // cyan\n    case 'SCM_CLONE':\n      return {\n        color: '#7dbdc3',\n        label: 'SCM Clone',\n        description: 'Cloning / Syncing from Gerrit',\n      };\n\n    // orange\n    case 'ALIGNMENT_ADJUST':\n      return {\n        color: '#f7bd7f',\n        label: 'Alignment',\n        description: 'Alignment only',\n      };\n\n    // blue\n    case 'BUILD_ENV_SETTING_UP':\n      return {\n        color: '#7cdbf3',\n        label: 'Starting Environment',\n        description: 'Requesting to start new Build Environment in OpenShift',\n      };\n    case 'REPO_SETTING_UP':\n      return {\n        color: '#00b9e4',\n        label: 'Artifact Repos Setup',\n        description: 'Creating per build artifact repositories in Indy',\n      };\n    case 'BUILD_SETTING_UP':\n      return {\n        color: '#008bad',\n        label: 'Building',\n        description: 'Uploading the build script, running the build, downloading the results (logs)',\n      };\n\n    // black\n    case 'COLLECTING_RESULTS_FROM_BUILD_DRIVER':\n      return {\n        color: 'black',\n        label: 'Collecting Results From Build Driver',\n        description: '',\n        skip: true,\n      };\n\n    // light purple\n    case 'SEALING_REPOSITORY_MANAGER_RESULTS':\n      return {\n        color: '#c7bfff',\n        label: 'Sealing',\n        description: 'Sealing artifact repository in Indy',\n      };\n\n    // purple\n    case 'COLLECTING_RESULTS_FROM_REPOSITORY_MANAGER':\n      return {\n        color: '#703fec',\n        label: 'Promotion',\n        description:\n          'Downloading the list of built artifact and dependencies from Indy, promoting them to shared repository in Indy',\n      };\n\n    // green\n    case 'FINALIZING_BUILD':\n      return {\n        color: '#3f9c35',\n        label: 'Finalizing',\n        description: 'Completing all other build execution tasks, destroying build environments, invoking the BPM',\n      };\n\n    // gray\n    case 'OTHER':\n      return {\n        color: 'silver',\n        label: 'Other',\n        description: 'Other tasks from the time when the build was submitted to the time when the build ends',\n      };\n\n    default:\n      console.warn('adaptMetric: Unknown metric name: \"' + metricName + '\"', metricName);\n      return {\n        color: 'gray',\n        label: metricName,\n        description: 'Unknown metric',\n      };\n  }\n};\n\nconst navigationOptions = [\n  { id: 1, name: '1st' },\n  { id: 2, name: '2nd' },\n  { id: 3, name: '3rd' },\n  { id: 5, name: '5th' },\n  { id: 10, name: '10th' },\n];\n\nconst getNavigationIdByName = (name: string) => navigationOptions.find((option) => option.name === name)?.id!;\n\nconst generateBuildTitle = (buildName: string) => '#' + buildName;\n\n/**\n * Load Build Metrics for specified builds.\n *\n * @param {Object[]} builds - List of Builds.\n */\nconst transferBuildsToBuildId = (builds?: Array<Build>) => {\n  if (builds) {\n    return builds.map((build) => {\n      return build.id.toString();\n    });\n  }\n};\n\nconst MetricsPopoverContent = (metricsTooltipList: Array<IMetricsTooltip>) => {\n  return (\n    <div>\n      Each metric consists of several subtasks:\n      {metricsTooltipList.map((metricsTooltip) => {\n        return (\n          <dl className={styles['pnc-popover-paragraph']} key={metricsTooltip.label}>\n            <dt>\n              <b>{metricsTooltip.label}</b>\n            </dt>\n            <dd>{metricsTooltip.description}</dd>\n          </dl>\n        );\n      })}\n    </div>\n  );\n};\n\nconst BuildMetricsCanvas = ({ buildMetrics, chartType, componentId }: IBuildMetricsCanvasProps) => {\n  const isCanvasInit = useRef<boolean>(true);\n  const chartRef: React.RefObject<HTMLCanvasElement> = React.createRef();\n\n  useEffect(() => {\n    const lineChartConfig: ChartConfiguration = { type: 'line', data: { datasets: [] }, options: {} };\n    const barChartConfig: ChartConfiguration = { type: 'bar', data: { datasets: [] }, options: {} };\n    const updateChartConfig = () => {\n      // Chart is pointing to single instance of chartConfig declared on the Controller level and providing later updates based on it's changes.\n      let adaptedMetric;\n      const buildIds = buildMetrics.builds.map((build) => build.id.toString());\n\n      // skip specific metrics\n      const filteredData = buildMetrics.buildMetricsData\n        ? buildMetrics.buildMetricsData.filter((item) => !adaptMetric(item.name).skip)\n        : [];\n\n      const buildMetricsData = {\n        labels: buildMetrics.builds.map((build) => calculateBuildName(build)),\n        datasets: filteredData,\n      };\n\n      // sum individual metrics for given build\n      const buildMetricsSum = new Array(buildIds.length).fill(0);\n\n      for (let m = 0; m < buildMetricsData.datasets.length; m++) {\n        for (let n = 0; n < buildMetricsData.datasets[m].data.length; n++) {\n          buildMetricsSum[n] += buildMetricsData.datasets[m].data[n];\n        }\n      }\n\n      // compute Other metric\n      const metricOthersData = [];\n\n      for (let k = 0; k < buildMetrics.builds.length; k++) {\n        const submitTime = new Date(buildMetrics.builds[k].submitTime!);\n        const endTime = new Date(buildMetrics.builds[k].endTime!);\n        const metricOther = endTime.getTime() - submitTime.getTime() - buildMetricsSum[k];\n        metricOthersData.push(metricOther > 0 ? metricOther : 0);\n      }\n\n      const otherData = buildMetricsData.datasets.find((data) => data.name === 'OTHER');\n      if (otherData) {\n        otherData.data = metricOthersData;\n      } else {\n        buildMetricsData.datasets.push({\n          name: 'OTHER',\n          data: metricOthersData,\n        });\n      }\n      // generate tooltip content\n      metricsTooltipList = buildMetricsData.datasets.map((item) => {\n        adaptedMetric = adaptMetric(item.name);\n        return {\n          label: adaptedMetric.label,\n          description: adaptedMetric.description,\n        };\n      });\n\n      if (chartType === 'line') {\n        for (let i = 0; i < buildMetricsData.datasets.length; i++) {\n          adaptedMetric = adaptMetric(buildMetricsData.datasets[i].name);\n\n          Object.assign(buildMetricsData.datasets[i], {\n            label: adaptedMetric.label,\n            fill: false,\n\n            // lines\n            borderColor: adaptedMetric.color,\n            borderWidth: 4,\n\n            // points\n            pointBackgroundColor: adaptedMetric.color,\n            pointBorderColor: 'white',\n            pointBorderWidth: 1.5,\n            pointRadius: 4,\n          });\n        }\n        lineChartConfig.options = {\n          maintainAspectRatio: false,\n          elements: {\n            line: {\n              tension: 0.5,\n            },\n          },\n          animation: {\n            duration: 0, // disable animation\n          },\n          scales: {\n            y: {\n              type: 'logarithmic',\n              title: {\n                display: true,\n                text: 'Logarithmic scale',\n              },\n              ticks: {\n                maxTicksLimit: 8,\n                callback: generateTimeTitle,\n              },\n            },\n          },\n        };\n      } else if (chartType === 'horizontalBar') {\n        for (let j = 0; j < buildMetricsData.datasets.length; j++) {\n          adaptedMetric = adaptMetric(buildMetricsData.datasets[j].name);\n          Object.assign(buildMetricsData.datasets[j], {\n            label: adaptedMetric.label,\n            backgroundColor: adaptedMetric.color,\n          });\n        }\n\n        barChartConfig.options = {\n          indexAxis: 'y' as const,\n          plugins: {\n            tooltip: {\n              position: 'nearest',\n            },\n          },\n          animation: {\n            duration: 0, // disable animation\n          },\n          scales: {\n            x: {\n              min: 0,\n              position: 'bottom',\n              ticks: {\n                maxTicksLimit: 30,\n                callback: generateTimeTitle,\n              },\n              stacked: true,\n              title: {\n                display: true,\n                text: 'Linear scale',\n              },\n            },\n            y: {\n              reverse: false,\n              stacked: true,\n            },\n          },\n        };\n      } else {\n        console.warn('Unsupported chart type: ' + chartType);\n      }\n\n      const isSingleBuild = buildMetricsData.datasets[0].data.length === 1;\n\n      const commonChartConfig = {\n        layout: {\n          padding: {\n            top: 20,\n            bottom: 20,\n          },\n        },\n        maintainAspectRatio: false,\n        tooltips: {\n          callbacks: {\n            title: (tooltipItems: Array<any>) => generateBuildTitle(tooltipItems[0].label),\n            label: (tooltipItem: any, data: any) => {\n              let label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n              if (label) {\n                label += ': ' + generateTimeTitle(tooltipItem.value);\n              }\n              if (tooltipItem.value !== 'NaN' && tooltipItem.value > 1000) {\n                label += '  (' + tooltipItem.value + ' ms)';\n              }\n              return label;\n            },\n          },\n        },\n      };\n      const commonChartPlugins = [\n        {\n          id: '',\n          beforeInit: (chart: any) => {\n            chart.legend.afterFit = () => {\n              chart.height = chart.height + 25;\n            };\n          },\n        },\n      ];\n      lineChartConfig.data = buildMetricsData;\n      barChartConfig.data = buildMetricsData;\n\n      // increase space between legend and chart\n      let heightTmp = 0;\n      const MIN_HEIGHT = 290;\n      const MIN_HEIGHT_SINGLE_BUILD = 400;\n\n      if (chartType === 'horizontalBar') {\n        Object.assign(barChartConfig.options!, commonChartConfig);\n        barChartConfig.plugins = commonChartPlugins;\n        heightTmp = buildMetricsData.datasets[0].data.length * 30;\n        chartRef.current!.parentElement!.style.height =\n          (heightTmp < MIN_HEIGHT ? (isSingleBuild ? MIN_HEIGHT_SINGLE_BUILD : MIN_HEIGHT) : heightTmp) + 'px';\n        if (isSingleBuild) {\n          barChartConfig.options!.layout!.padding = 50;\n        }\n      } else {\n        Object.assign(lineChartConfig.options!, commonChartConfig);\n        lineChartConfig.plugins = commonChartPlugins;\n        chartRef.current!.parentElement!.style.height = '300px';\n      }\n    };\n    updateChartConfig();\n    if (chartType === 'line' && lineChart) {\n      lineChart.config.data = lineChartConfig.data;\n      lineChart.config.options = lineChartConfig.options;\n      lineChart.update();\n    } else if (chartType === 'horizontalBar' && barChart) {\n      barChart.config.data = barChartConfig.data;\n      barChart.config.options = barChartConfig.options;\n      barChart.update();\n    }\n    if (isCanvasInit.current) {\n      if (chartType === 'line') {\n        const lineCtx = chartRef.current?.getContext('2d');\n        if (!lineCtx) {\n          throw new Error('Chart.JS: Failed to get 2D context');\n        }\n        lineChart = new Chart(lineCtx, lineChartConfig);\n      } else if (chartType === 'horizontalBar') {\n        const barCtx = chartRef.current?.getContext('2d');\n        if (!barCtx) {\n          throw new Error('Chart.JS: Failed to get 2D context');\n        }\n        barChart = new Chart(barCtx, barChartConfig);\n      }\n      isCanvasInit.current = false;\n    }\n  }, [chartRef, chartType, buildMetrics.buildMetricsData, buildMetrics.builds]);\n  return <canvas id={componentId} ref={chartRef} />;\n};\n\n/**\n * The component representing Build Metric charts.\n *\n * @param {Object[]} builds - List of Builds.\n * @param {string} chartType - Possible values: line, horizontalBar\n * @param {string} componentId - Unique component id.\n *\n * @example\n * ```tsx\n * <BuildMetrics builds={buildList} chartType=\"line\" componentId=\"BUILD_CONFIG_METRICS\"></BuildMetrics>\n * ```\n *\n */\nexport const BuildMetrics = ({ builds, chartType, componentId }: IBuildMetricsProps) => {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const [selected, setSelected] = useState<string>('1st');\n  const [buildMetrics, setBuildMetrics] = useState<IBuildMetrics>();\n  const dataContainer = useDataContainer(\n    useCallback(({ serviceData, requestConfig }: IService<Array<Build>>) => {\n      return buildService.getBuildMetrics(transferBuildsToBuildId(serviceData), requestConfig);\n    }, [])\n  );\n  const dataContainerRefresh = dataContainer.refresh;\n  const navigationSelectOptions: Array<any> = navigationOptions.map((option) => (\n    <SelectOption key={option.id} value={option.name} />\n  ));\n\n  useEffect(() => {\n    /**\n     * Filter array using Nth and max parameters.\n     *\n     * @param {array} array - Full array to be filtered.\n     * @param {number} nth - Returned array will contain only every Nth item.\n     * @param {number} max [20] - Returned array max size.\n     */\n    const filterBuilds = (array: Array<Build>, nth: number, max: number = BUILDS_DISPLAY_LIMIT) => {\n      const result: Build[] = [];\n      for (let i = 0; i < array.length; i = i + nth) {\n        result.push(array[i]);\n      }\n\n      return result.slice(0, max);\n    };\n    /* Load data according to the current filter */\n    const currentFilteredBuilds: Build[] = filterBuilds(builds, getNavigationIdByName(selected));\n    dataContainerRefresh({ serviceData: currentFilteredBuilds, requestConfig: {} }).then((res: AxiosResponse) => {\n      setBuildMetrics({\n        builds: currentFilteredBuilds,\n        buildMetricsData: res.data,\n      });\n    });\n  }, [builds, selected, dataContainerRefresh]);\n\n  const onToggle = () => {\n    setIsOpen(!isOpen);\n  };\n  const onSelect = (event: any, value: any) => {\n    setSelected(value);\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      <DataContainer {...dataContainer} title=\"Build Metrics\">\n        <div className={styles['pnc-build-metrics']}>\n          <div className={styles['pnc-build-metrics-body']}>\n            <div className={styles['pnc-build-metrics-help']}>\n              <small>Select specific metric in the chart legend to filter it out:</small>\n            </div>\n            {metricsTooltipList && (\n              // Popover seems to cause warning: findDOMNode is deprecated in StrictMode\n              <Popover\n                aria-label=\"Basic popover\"\n                bodyContent={MetricsPopoverContent(metricsTooltipList)}\n                showClose={false}\n                enableFlip={false}\n                position=\"left-start\"\n              >\n                <div className={`${styles['pnc-build-metrics-help']} ${styles['pnc-build-metrics-help--right']}`}>\n                  <small>\n                    Metrics Descriptions &nbsp;\n                    <span className={styles['pnc-build-metric-info-icon']}>\n                      <InfoCircleIcon />\n                    </span>\n                  </small>\n                </div>\n              </Popover>\n            )}\n\n            <div className={styles['canvas-wrapper']}>\n              {buildMetrics && buildMetrics.builds && buildMetrics.buildMetricsData && (\n                <BuildMetricsCanvas\n                  buildMetrics={buildMetrics!}\n                  chartType={chartType}\n                  componentId={componentId}\n                ></BuildMetricsCanvas>\n              )}\n            </div>\n          </div>\n          <form className={styles['pnc-build-metric-navigation']}>\n            <div className=\"pull-left\"></div>\n            <div className=\"pull-right\" ng-if=\"$ctrl.builds.length > 1\">\n              Display every&nbsp;\n              <Select\n                width={100}\n                variant={SelectVariant.single}\n                onToggle={onToggle}\n                onSelect={onSelect}\n                selections={selected}\n                isOpen={isOpen}\n                aria-labelledby={`${componentId}-select`}\n              >\n                {navigationSelectOptions}\n              </Select>\n              &nbsp;build\n              <Popover\n                aria-label=\"Basic popover\"\n                bodyContent={`Always a maximum of ${BUILDS_DISPLAY_LIMIT} builds will be displayed if they are available, eg. if every ${BUILDS_DISPLAY_LIMIT_EXAMPLE}th build is displayed, ${BUILDS_DISPLAY_LIMIT} builds will cover last ${\n                  BUILDS_DISPLAY_LIMIT * BUILDS_DISPLAY_LIMIT_EXAMPLE\n                } builds.`}\n                showClose={false}\n              >\n                <small>\n                  &nbsp;\n                  <span className={styles['pnc-build-metric-info-icon']}>\n                    <InfoCircleIcon />\n                  </span>\n                </small>\n              </Popover>\n            </div>\n          </form>\n        </div>\n      </DataContainer>\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}