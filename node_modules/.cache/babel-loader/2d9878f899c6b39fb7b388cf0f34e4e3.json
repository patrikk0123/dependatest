{"ast":null,"code":"var _jsxFileName = \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/ProjectCreateEditPage/ProjectCreateEditPage.tsx\";\nimport { ActionGroup, Button, Card, CardBody, Flex, FlexItem, Form, FormGroup, FormHelperText, Label, TextArea, TextInput } from '@patternfly/react-core';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { DataContainer } from '../../containers/DataContainer/DataContainer';\nimport { ServiceContainerCreating } from '../../containers/DataContainer/ServiceContainerCreating';\nimport { useDataContainer } from '../../containers/DataContainer/useDataContainer';\nimport { useForm } from '../../containers/useForm';\nimport { useTitle } from '../../containers/useTitle';\nimport { projectService } from '../../services/projectService';\nimport { PageTitles } from '../../utils/PageTitles';\nimport { validateUrl } from '../../utils/formValidationHelpers';\nimport { createSafePatch } from '../../utils/patchHelper';\nimport { PageLayout } from '../PageLayout/PageLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst formConfig = {\n  name: {\n    isRequired: true\n  },\n  description: {},\n  projectUrl: {\n    validators: [{\n      validator: validateUrl,\n      errorMessage: 'Invalid URL format.'\n    }]\n  },\n  issueTrackerUrl: {\n    validators: [{\n      validator: validateUrl,\n      errorMessage: 'Invalid URL format.'\n    }]\n  },\n  engineeringTeam: {},\n  technicalLeader: {}\n};\nexport const ProjectCreateEditPage = _ref => {\n  var _fields$name$errorMes, _fields$projectUrl$er, _fields$issueTrackerU;\n\n  let {\n    editPage = false\n  } = _ref;\n  const flexDirection = {\n    default: 'column'\n  }; // edit page\n\n  const [id, setId] = useState('');\n  const navigate = useNavigate();\n  const urlPathParams = useParams();\n  const [showPatch, setShowPatch] = useState(false);\n  const [originalState, setOriginalState] = useState(); // create page\n\n  const dataContainerCreate = useDataContainer(_ref2 => {\n    let {\n      serviceData\n    } = _ref2;\n    return projectService.createProject(serviceData);\n  }, {\n    initLoadingState: false\n  }); // edit page - get\n\n  const dataContainerCreateEditGet = useDataContainer(useCallback(_ref3 => {\n    let {\n      serviceData\n    } = _ref3;\n    return projectService.getProject(serviceData);\n  }, []));\n  const editRefreshGet = dataContainerCreateEditGet.refresh; // edit page - patch\n\n  const dataContainerCreateEditPatch = useDataContainer(useCallback(_ref4 => {\n    let {\n      serviceData\n    } = _ref4;\n    return projectService.patchProject(id, serviceData, {\n      headers: {\n        'Content-Type': 'application/json-patch+json'\n      }\n    });\n  }, [id]), {\n    initLoadingState: false\n  });\n  const editRefreshPatch = dataContainerCreateEditPatch.refresh;\n  useTitle(editPage ? `Edit | ${PageTitles.projects}` : `Create | ${PageTitles.projects}`);\n\n  const submitCreate = data => {\n    return dataContainerCreate.refresh({\n      serviceData: {\n        name: data.name.value,\n        description: data.description.value,\n        projectUrl: data.projectUrl.value,\n        issueTrackerUrl: data.issueTrackerUrl.value,\n        engineeringTeam: data.engineeringTeam.value,\n        technicalLeader: data.technicalLeader.value\n      }\n    }).then(response => {\n      var _response$data;\n\n      const projectId = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.id;\n\n      if (!projectId) {\n        throw new Error(`Invalid projectId coming from Orch POST response: ${projectId}`);\n      } // temporarily navigate to edit page until detail page is finished\n\n\n      navigate(`/projects/${projectId}/edit`, {\n        replace: true\n      });\n    });\n  };\n\n  const submitUpdate = data => {\n    const transformedData = Object.fromEntries(Object.entries(data).filter(_ref5 => {\n      let [k, v] = _ref5;\n      return v.value !== '';\n    }).map(_ref6 => {\n      let [k, v] = _ref6;\n      return [k, v.value];\n    }));\n    const patch = createSafePatch(originalState, transformedData);\n    console.log(patch);\n    editRefreshPatch({\n      serviceData: patch\n    }).then(response => {\n      setShowPatch(true);\n      setOriginalState(transformedData);\n      console.log(response);\n    }).catch(e => {\n      setShowPatch(true);\n    });\n  };\n\n  const {\n    fields,\n    onChange,\n    reinitialize,\n    onSubmit,\n    isSubmitDisabled\n  } = useForm(formConfig, editPage ? submitUpdate : submitCreate);\n  useEffect(() => {\n    if (editPage) {\n      if (urlPathParams.projectId) {\n        editRefreshGet({\n          serviceData: {\n            id: urlPathParams.projectId\n          }\n        }).then(response => {\n          const project = response.data;\n          setId(project.id);\n          setOriginalState(response.data);\n          reinitialize({\n            name: project.name,\n            description: project.description,\n            projectUrl: project.projectUrl,\n            issueTrackerUrl: project.issueTrackerUrl,\n            engineeringTeam: project.engineeringTeam,\n            technicalLeader: project.technicalLeader\n          });\n        });\n      } else {\n        throw new Error(`Invalid projectId: ${urlPathParams.projectId}`);\n      }\n    }\n  }, [editPage, urlPathParams.projectId, editRefreshGet, reinitialize]);\n\n  const formComponent = /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-70\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: e => {\n            e.preventDefault();\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            isRequired: true,\n            label: \"Name\",\n            fieldId: \"name\",\n            helperText: /*#__PURE__*/_jsxDEV(FormHelperText, {\n              isHidden: fields.name.state !== 'error',\n              isError: true,\n              children: (_fields$name$errorMes = fields.name.errorMessages) === null || _fields$name$errorMes === void 0 ? void 0 : _fields$name$errorMes.join(' ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(TextInput, {\n              isRequired: true,\n              validated: fields.name.state,\n              type: \"text\",\n              id: \"name\",\n              name: \"name\",\n              value: fields.name.value,\n              autoComplete: \"off\",\n              onChange: name => {\n                onChange('name', name);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            label: \"Description\",\n            fieldId: \"description\",\n            children: /*#__PURE__*/_jsxDEV(TextArea, {\n              id: \"description\",\n              name: \"description\",\n              value: fields.description.value,\n              onChange: description => {\n                onChange('description', description);\n              },\n              autoResize: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            label: \"Project URL\",\n            fieldId: \"projectUrl\",\n            helperText: /*#__PURE__*/_jsxDEV(FormHelperText, {\n              isHidden: fields.projectUrl.state !== 'error',\n              isError: true,\n              children: (_fields$projectUrl$er = fields.projectUrl.errorMessages) === null || _fields$projectUrl$er === void 0 ? void 0 : _fields$projectUrl$er.join(' ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(TextInput, {\n              validated: fields.projectUrl.state,\n              type: \"url\",\n              id: \"projectUrl\",\n              name: \"projectUrl\",\n              autoComplete: \"off\",\n              value: fields.projectUrl.value,\n              onChange: url => {\n                onChange('projectUrl', url);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            label: \"Issue Tracker URL\",\n            fieldId: \"issueTrackerUrl\",\n            helperText: /*#__PURE__*/_jsxDEV(FormHelperText, {\n              isHidden: fields.issueTrackerUrl.state !== 'error',\n              isError: true,\n              children: (_fields$issueTrackerU = fields.issueTrackerUrl.errorMessages) === null || _fields$issueTrackerU === void 0 ? void 0 : _fields$issueTrackerU.join(' ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(TextInput, {\n              validated: fields.issueTrackerUrl.state,\n              type: \"url\",\n              id: \"issueTrackerUrl\",\n              name: \"issueTrackerUrl\",\n              autoComplete: \"off\",\n              value: fields.issueTrackerUrl.value,\n              onChange: url => {\n                onChange('issueTrackerUrl', url);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            label: \"Engineering Team\",\n            fieldId: \"engineeringTeam\",\n            children: /*#__PURE__*/_jsxDEV(TextInput, {\n              type: \"text\",\n              id: \"engineeringTeam\",\n              name: \"engineeringTeam\",\n              autoComplete: \"off\",\n              value: fields.engineeringTeam.value,\n              onChange: engineeringTeam => {\n                onChange('engineeringTeam', engineeringTeam);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            label: \"Technical Leader\",\n            fieldId: \"technicalLeader\",\n            children: /*#__PURE__*/_jsxDEV(TextInput, {\n              type: \"text\",\n              id: \"technicalLeader\",\n              name: \"technicalLeader\",\n              autoComplete: \"off\",\n              value: fields.technicalLeader.value,\n              onChange: technicalLeader => {\n                onChange('technicalLeader', technicalLeader);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ActionGroup, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              isDisabled: isSubmitDisabled,\n              onClick: () => {\n                onSubmit();\n              },\n              children: editPage ? 'Update' : 'Create'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(PageLayout, {\n    title: editPage ? 'Update Project' : 'Create Project',\n    description: editPage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"You can update current project attributes below.\"\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"You can create a standalone project like \", /*#__PURE__*/_jsxDEV(Label, {\n        children: \"Hibernate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 54\n      }, this), \" or \", /*#__PURE__*/_jsxDEV(Label, {\n        children: \"JBoss Modules\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 82\n      }, this), \", usually a project represents one SCM repository and one project may contain multiple Build Configs.\"]\n    }, void 0, true),\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      direction: flexDirection,\n      children: /*#__PURE__*/_jsxDEV(FlexItem, {\n        children: editPage ? showPatch ? /*#__PURE__*/_jsxDEV(ServiceContainerCreating, { ...dataContainerCreateEditPatch,\n          title: \"Edit Project\",\n          children: formComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(DataContainer, { ...dataContainerCreateEditGet,\n          title: \"Edit Project\",\n          children: formComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(ServiceContainerCreating, { ...dataContainerCreate,\n          title: \"Create Project\",\n          children: formComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["ActionGroup","Button","Card","CardBody","Flex","FlexItem","Form","FormGroup","FormHelperText","Label","TextArea","TextInput","useCallback","useEffect","useState","useNavigate","useParams","DataContainer","ServiceContainerCreating","useDataContainer","useForm","useTitle","projectService","PageTitles","validateUrl","createSafePatch","PageLayout","formConfig","name","isRequired","description","projectUrl","validators","validator","errorMessage","issueTrackerUrl","engineeringTeam","technicalLeader","ProjectCreateEditPage","editPage","flexDirection","default","id","setId","navigate","urlPathParams","showPatch","setShowPatch","originalState","setOriginalState","dataContainerCreate","serviceData","createProject","initLoadingState","dataContainerCreateEditGet","getProject","editRefreshGet","refresh","dataContainerCreateEditPatch","patchProject","headers","editRefreshPatch","projects","submitCreate","data","value","then","response","projectId","Error","replace","submitUpdate","transformedData","Object","fromEntries","entries","filter","k","v","map","patch","console","log","catch","e","fields","onChange","reinitialize","onSubmit","isSubmitDisabled","project","formComponent","preventDefault","state","errorMessages","join","url"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/ProjectCreateEditPage/ProjectCreateEditPage.tsx"],"sourcesContent":["import {\n  ActionGroup,\n  Button,\n  Card,\n  CardBody,\n  Flex,\n  FlexItem,\n  FlexProps,\n  Form,\n  FormGroup,\n  FormHelperText,\n  Label,\n  TextArea,\n  TextInput,\n} from '@patternfly/react-core';\nimport deepmerge from 'deepmerge';\nimport { traceDeprecation } from 'process';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport { Project } from 'pnc-api-types-ts';\n\nimport { DataContainer } from '../../containers/DataContainer/DataContainer';\nimport { ServiceContainerCreating } from '../../containers/DataContainer/ServiceContainerCreating';\nimport { IService, useDataContainer } from '../../containers/DataContainer/useDataContainer';\nimport { IFields, useForm } from '../../containers/useForm';\nimport { useTitle } from '../../containers/useTitle';\n\nimport { projectService } from '../../services/projectService';\n\nimport { PageTitles } from '../../utils/PageTitles';\nimport { validateUrl } from '../../utils/formValidationHelpers';\nimport { createSafePatch } from '../../utils/patchHelper';\n\nimport { PageLayout } from '../PageLayout/PageLayout';\n\ninterface IProjectCreateEditPageProps {\n  editPage?: boolean;\n}\n\nconst formConfig = {\n  name: {\n    isRequired: true,\n  },\n  description: {},\n  projectUrl: {\n    validators: [{ validator: validateUrl, errorMessage: 'Invalid URL format.' }],\n  },\n  issueTrackerUrl: {\n    validators: [{ validator: validateUrl, errorMessage: 'Invalid URL format.' }],\n  },\n  engineeringTeam: {},\n  technicalLeader: {},\n};\n\nexport const ProjectCreateEditPage = ({ editPage = false }: IProjectCreateEditPageProps) => {\n  const flexDirection: FlexProps['direction'] = { default: 'column' };\n\n  // edit page\n  const [id, setId] = useState<string>('');\n  const navigate = useNavigate();\n  const urlPathParams = useParams();\n\n  const [showPatch, setShowPatch] = useState<boolean>(false);\n\n  const [originalState, setOriginalState] = useState<any>();\n\n  // create page\n  const dataContainerCreate = useDataContainer(\n    ({ serviceData }: IService<Omit<Project, 'id'>>) => projectService.createProject(serviceData!),\n    {\n      initLoadingState: false,\n    }\n  );\n\n  // edit page - get\n  const dataContainerCreateEditGet = useDataContainer(\n    useCallback(({ serviceData }: IService<Project>) => {\n      return projectService.getProject(serviceData!);\n    }, [])\n  );\n  const editRefreshGet = dataContainerCreateEditGet.refresh;\n\n  // edit page - patch\n  const dataContainerCreateEditPatch = useDataContainer(\n    useCallback(\n      ({ serviceData }: IService<any>) => {\n        return projectService.patchProject(id, serviceData!, {\n          headers: {\n            'Content-Type': 'application/json-patch+json',\n          },\n        });\n      },\n      [id]\n    ),\n    {\n      initLoadingState: false,\n    }\n  );\n  const editRefreshPatch = dataContainerCreateEditPatch.refresh;\n\n  useTitle(editPage ? `Edit | ${PageTitles.projects}` : `Create | ${PageTitles.projects}`);\n\n  const submitCreate = (data: IFields) => {\n    return dataContainerCreate\n      .refresh({\n        serviceData: {\n          name: data.name.value,\n          description: data.description.value,\n          projectUrl: data.projectUrl.value,\n          issueTrackerUrl: data.issueTrackerUrl.value,\n          engineeringTeam: data.engineeringTeam.value,\n          technicalLeader: data.technicalLeader.value,\n        },\n      })\n      .then((response: any) => {\n        const projectId = response?.data?.id;\n        if (!projectId) {\n          throw new Error(`Invalid projectId coming from Orch POST response: ${projectId}`);\n        }\n        // temporarily navigate to edit page until detail page is finished\n        navigate(`/projects/${projectId}/edit`, { replace: true });\n      });\n  };\n\n  const submitUpdate = (data: IFields) => {\n    const transformedData = Object.fromEntries(\n      Object.entries(data)\n        .filter(([k, v]) => v.value !== '')\n        .map(([k, v]) => {\n          return [k, v.value];\n        })\n    );\n\n    const patch = createSafePatch(originalState, transformedData);\n    console.log(patch);\n\n    editRefreshPatch({ serviceData: patch })\n      .then((response: any) => {\n        setShowPatch(true);\n        setOriginalState(transformedData);\n        console.log(response);\n      })\n      .catch((e: any) => {\n        setShowPatch(true);\n      });\n  };\n\n  const { fields, onChange, reinitialize, onSubmit, isSubmitDisabled } = useForm(\n    formConfig,\n    editPage ? submitUpdate : submitCreate\n  );\n\n  useEffect(() => {\n    if (editPage) {\n      if (urlPathParams.projectId) {\n        editRefreshGet({ serviceData: { id: urlPathParams.projectId } }).then((response: any) => {\n          const project: Project = response.data;\n\n          setId(project.id);\n          setOriginalState(response.data);\n          reinitialize({\n            name: project.name,\n            description: project.description,\n            projectUrl: project.projectUrl,\n            issueTrackerUrl: project.issueTrackerUrl,\n            engineeringTeam: project.engineeringTeam,\n            technicalLeader: project.technicalLeader,\n          });\n        });\n      } else {\n        throw new Error(`Invalid projectId: ${urlPathParams.projectId}`);\n      }\n    }\n  }, [editPage, urlPathParams.projectId, editRefreshGet, reinitialize]);\n\n  const formComponent = (\n    <Card>\n      <CardBody>\n        <div className=\"w-70\">\n          <Form\n            onSubmit={(e) => {\n              e.preventDefault();\n            }}\n          >\n            <FormGroup\n              isRequired\n              label=\"Name\"\n              fieldId=\"name\"\n              helperText={\n                <FormHelperText isHidden={fields.name.state !== 'error'} isError>\n                  {fields.name.errorMessages?.join(' ')}\n                </FormHelperText>\n              }\n            >\n              <TextInput\n                isRequired\n                validated={fields.name.state}\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                value={fields.name.value}\n                autoComplete=\"off\"\n                onChange={(name) => {\n                  onChange('name', name);\n                }}\n              />\n            </FormGroup>\n            <FormGroup label=\"Description\" fieldId=\"description\">\n              <TextArea\n                id=\"description\"\n                name=\"description\"\n                value={fields.description.value}\n                onChange={(description) => {\n                  onChange('description', description);\n                }}\n                autoResize\n              />\n            </FormGroup>\n            <FormGroup\n              label=\"Project URL\"\n              fieldId=\"projectUrl\"\n              helperText={\n                <FormHelperText isHidden={fields.projectUrl.state !== 'error'} isError>\n                  {fields.projectUrl.errorMessages?.join(' ')}\n                </FormHelperText>\n              }\n            >\n              <TextInput\n                validated={fields.projectUrl.state}\n                type=\"url\"\n                id=\"projectUrl\"\n                name=\"projectUrl\"\n                autoComplete=\"off\"\n                value={fields.projectUrl.value}\n                onChange={(url) => {\n                  onChange('projectUrl', url);\n                }}\n              />\n            </FormGroup>\n            <FormGroup\n              label=\"Issue Tracker URL\"\n              fieldId=\"issueTrackerUrl\"\n              helperText={\n                <FormHelperText isHidden={fields.issueTrackerUrl.state !== 'error'} isError>\n                  {fields.issueTrackerUrl.errorMessages?.join(' ')}\n                </FormHelperText>\n              }\n            >\n              <TextInput\n                validated={fields.issueTrackerUrl.state}\n                type=\"url\"\n                id=\"issueTrackerUrl\"\n                name=\"issueTrackerUrl\"\n                autoComplete=\"off\"\n                value={fields.issueTrackerUrl.value}\n                onChange={(url) => {\n                  onChange('issueTrackerUrl', url);\n                }}\n              />\n            </FormGroup>\n            <FormGroup label=\"Engineering Team\" fieldId=\"engineeringTeam\">\n              <TextInput\n                type=\"text\"\n                id=\"engineeringTeam\"\n                name=\"engineeringTeam\"\n                autoComplete=\"off\"\n                value={fields.engineeringTeam.value}\n                onChange={(engineeringTeam) => {\n                  onChange('engineeringTeam', engineeringTeam);\n                }}\n              />\n            </FormGroup>\n            <FormGroup label=\"Technical Leader\" fieldId=\"technicalLeader\">\n              <TextInput\n                type=\"text\"\n                id=\"technicalLeader\"\n                name=\"technicalLeader\"\n                autoComplete=\"off\"\n                value={fields.technicalLeader.value}\n                onChange={(technicalLeader) => {\n                  onChange('technicalLeader', technicalLeader);\n                }}\n              />\n            </FormGroup>\n            <ActionGroup>\n              <Button\n                variant=\"primary\"\n                isDisabled={isSubmitDisabled}\n                onClick={() => {\n                  onSubmit();\n                }}\n              >\n                {editPage ? 'Update' : 'Create'}\n              </Button>\n            </ActionGroup>\n          </Form>\n        </div>\n      </CardBody>\n    </Card>\n  );\n\n  return (\n    <PageLayout\n      title={editPage ? 'Update Project' : 'Create Project'}\n      description={\n        editPage ? (\n          <>You can update current project attributes below.</>\n        ) : (\n          <>\n            You can create a standalone project like <Label>Hibernate</Label> or <Label>JBoss Modules</Label>, usually a project\n            represents one SCM repository and one project may contain multiple Build Configs.\n          </>\n        )\n      }\n    >\n      <Flex direction={flexDirection}>\n        <FlexItem>\n          {editPage ? (\n            showPatch ? (\n              <ServiceContainerCreating {...dataContainerCreateEditPatch} title=\"Edit Project\">\n                {formComponent}\n              </ServiceContainerCreating>\n            ) : (\n              <DataContainer {...dataContainerCreateEditGet} title=\"Edit Project\">\n                {formComponent}\n              </DataContainer>\n            )\n          ) : (\n            <ServiceContainerCreating {...dataContainerCreate} title=\"Create Project\">\n              {formComponent}\n            </ServiceContainerCreating>\n          )}\n        </FlexItem>\n      </Flex>\n    </PageLayout>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}