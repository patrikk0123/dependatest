{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/AppLauncher/app-launcher';\nimport { DropdownItem } from '../Dropdown';\nimport { ApplicationLauncherContent } from './ApplicationLauncherContent';\nimport { ApplicationLauncherContext } from './ApplicationLauncherContext';\nimport { ApplicationLauncherItemContext } from './ApplicationLauncherItemContext';\nimport StarIcon from '@patternfly/react-icons/dist/esm/icons/star-icon';\nimport { getUniqueId } from '../../helpers/util';\nexport const ApplicationLauncherItem = _a => {\n  var {\n    className = '',\n    id,\n    children,\n    icon = null,\n    isExternal = false,\n    href,\n    tooltip = null,\n    tooltipProps = null,\n    component = 'a',\n    isFavorite = null,\n    ariaIsFavoriteLabel = 'starred',\n    ariaIsNotFavoriteLabel = 'not starred',\n    customChild,\n    enterTriggersArrowDown = false\n  } = _a,\n      props = __rest(_a, [\"className\", \"id\", \"children\", \"icon\", \"isExternal\", \"href\", \"tooltip\", \"tooltipProps\", \"component\", \"isFavorite\", \"ariaIsFavoriteLabel\", \"ariaIsNotFavoriteLabel\", \"customChild\", \"enterTriggersArrowDown\"]);\n\n  return React.createElement(ApplicationLauncherItemContext.Provider, {\n    value: {\n      isExternal,\n      icon\n    }\n  }, React.createElement(ApplicationLauncherContext.Consumer, null, _ref => {\n    let {\n      onFavorite\n    } = _ref;\n    return React.createElement(DropdownItem, Object.assign({\n      id: id,\n      component: component,\n      href: href || null,\n      className: css(isExternal && styles.modifiers.external, isFavorite !== null && styles.modifiers.link, className),\n      listItemClassName: css(onFavorite && styles.appLauncherMenuWrapper, isFavorite && styles.modifiers.favorite),\n      tooltip: tooltip,\n      tooltipProps: tooltipProps\n    }, enterTriggersArrowDown === true && {\n      enterTriggersArrowDown\n    }, customChild && {\n      customChild\n    }, isFavorite !== null && {\n      additionalChild: React.createElement(\"button\", {\n        className: css(styles.appLauncherMenuItem, styles.modifiers.action),\n        \"aria-label\": isFavorite ? ariaIsFavoriteLabel : ariaIsNotFavoriteLabel,\n        onClick: () => {\n          onFavorite((id || getUniqueId('app-launcher-option')).replace('favorite-', ''), isFavorite);\n        }\n      }, React.createElement(StarIcon, null))\n    }, props), children && React.createElement(ApplicationLauncherContent, null, children));\n  }));\n};\nApplicationLauncherItem.displayName = 'ApplicationLauncherItem';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,kEAAnB;AACA,SAASC,YAAT,QAAgD,aAAhD;AACA,SAASC,0BAAT,QAA2C,8BAA3C;AACA,SAASC,0BAAT,QAA2C,8BAA3C;AACA,SAASC,8BAAT,QAA+C,kCAA/C;AACA,OAAOC,QAAP,MAAqB,kDAArB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AA6BA,OAAO,MAAMC,uBAAuB,GAA+EC,EAAD,IAgB3D;MAhB4D;IACjHC,SAAS,GAAG,EADqG;IAEjHC,EAFiH;IAGjHC,QAHiH;IAIjHC,IAAI,GAAG,IAJ0G;IAKjHC,UAAU,GAAG,KALoG;IAMjHC,IANiH;IAOjHC,OAAO,GAAG,IAPuG;IAQjHC,YAAY,GAAG,IARkG;IASjHC,SAAS,GAAG,GATqG;IAUjHC,UAAU,GAAG,IAVoG;IAWjHC,mBAAmB,GAAG,SAX2F;IAYjHC,sBAAsB,GAAG,aAZwF;IAajHC,WAbiH;IAcjHC,sBAAsB,GAAG;EAdwF,IAcnFd;MAC3Be,KAAK,cAfyG,6MAezG;;EAC8C,OACtDzB,oBAACM,8BAA8B,CAACoB,QAAhC,EAAwC;IAACC,KAAK,EAAE;MAAEZ,UAAF;MAAcD;IAAd;EAAR,CAAxC,EACEd,oBAACK,0BAA0B,CAACuB,QAA5B,EAAoC,IAApC,EACG;IAAA,IAAC;MAAEC;IAAF,CAAD;IAAA,OACC7B,oBAACG,YAAD,EAAa2B;MACXlB,EAAE,EAAEA,EADO;MAEXO,SAAS,EAAEA,SAFA;MAGXH,IAAI,EAAEA,IAAI,IAAI,IAHH;MAIXL,SAAS,EAAEV,GAAG,CACZc,UAAU,IAAIb,MAAM,CAAC6B,SAAP,CAAiBC,QADnB,EAEZZ,UAAU,KAAK,IAAf,IAAuBlB,MAAM,CAAC6B,SAAP,CAAiBE,IAF5B,EAGZtB,SAHY,CAJH;MASXuB,iBAAiB,EAAEjC,GAAG,CAAC4B,UAAU,IAAI3B,MAAM,CAACiC,sBAAtB,EAA8Cf,UAAU,IAAIlB,MAAM,CAAC6B,SAAP,CAAiBK,QAA7E,CATX;MAUXnB,OAAO,EAAEA,OAVE;MAWXC,YAAY,EAAEA;IAXH,GAYNM,sBAAsB,KAAK,IAA3B,IAAmC;MAAEA;IAAF,CAZ7B,EAaND,WAAW,IAAI;MAAEA;IAAF,CAbT,EAcNH,UAAU,KAAK,IAAf,IAAuB;MAC1BiB,eAAe,EACbrC;QACEW,SAAS,EAAEV,GAAG,CAACC,MAAM,CAACoC,mBAAR,EAA6BpC,MAAM,CAAC6B,SAAP,CAAiBQ,MAA9C,CADhB;QACqE,cACvDnB,UAAU,GAAGC,mBAAH,GAAyBC,sBAFjD;QAGEkB,OAAO,EAAE,MAAK;UACZX,UAAU,CAAC,CAACjB,EAAE,IAAIJ,WAAW,CAAC,qBAAD,CAAlB,EAA2CiC,OAA3C,CAAmD,WAAnD,EAAgE,EAAhE,CAAD,EAAsErB,UAAtE,CAAV;QACD;MALH,GAOEpB,oBAACO,QAAD,EAAS,IAAT,CAPF;IAFwB,CAdjB,EA2BPkB,KA3BO,CAAb,EA6BGZ,QAAQ,IAAIb,oBAACI,0BAAD,EAA2B,IAA3B,EAA6BS,QAA7B,CA7Bf,CADD;EAAA,CADH,CADF,CADsD;AAsCvD,CAtDM;AAuDPJ,uBAAuB,CAACiC,WAAxB,GAAsC,yBAAtC","names":["React","css","styles","DropdownItem","ApplicationLauncherContent","ApplicationLauncherContext","ApplicationLauncherItemContext","StarIcon","getUniqueId","ApplicationLauncherItem","_a","className","id","children","icon","isExternal","href","tooltip","tooltipProps","component","isFavorite","ariaIsFavoriteLabel","ariaIsNotFavoriteLabel","customChild","enterTriggersArrowDown","props","Provider","value","Consumer","onFavorite","Object","modifiers","external","link","listItemClassName","appLauncherMenuWrapper","favorite","additionalChild","appLauncherMenuItem","action","onClick","replace","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/ApplicationLauncher/ApplicationLauncherItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/AppLauncher/app-launcher';\nimport { DropdownItem, DropdownItemProps } from '../Dropdown';\nimport { ApplicationLauncherContent } from './ApplicationLauncherContent';\nimport { ApplicationLauncherContext } from './ApplicationLauncherContext';\nimport { ApplicationLauncherItemContext } from './ApplicationLauncherItemContext';\nimport StarIcon from '@patternfly/react-icons/dist/esm/icons/star-icon';\nimport { getUniqueId } from '../../helpers/util';\n\nexport interface ApplicationLauncherItemProps {\n  /** Icon rendered before the text */\n  icon?: React.ReactNode;\n  /** If clicking on the item should open the page in a separate window */\n  isExternal?: boolean;\n  /** Tooltip to display when hovered over the item */\n  tooltip?: React.ReactNode;\n  /** Additional tooltip props forwarded to the Tooltip component */\n  tooltipProps?: any;\n  /** A ReactElement to render, or a string to use as the component tag.\n   * Example: component={<Link to=\"/components/alert/\">Alert</Link>}\n   * Example: component=\"button\"\n   */\n  component?: React.ReactNode;\n  /** Flag indicating if the item is favorited */\n  isFavorite?: boolean;\n  /** Aria label text for favoritable button when favorited */\n  ariaIsFavoriteLabel?: string;\n  /** Aria label text for favoritable button when not favorited */\n  ariaIsNotFavoriteLabel?: string;\n  /** ID of the item. Required for tracking favorites. */\n  id?: string;\n  customChild?: React.ReactNode;\n  /** Flag indicating if hitting enter triggers an arrow down key press. Automatically passed to favorites list items. */\n  enterTriggersArrowDown?: boolean;\n}\n\nexport const ApplicationLauncherItem: React.FunctionComponent<ApplicationLauncherItemProps & DropdownItemProps> = ({\n  className = '',\n  id,\n  children,\n  icon = null,\n  isExternal = false,\n  href,\n  tooltip = null,\n  tooltipProps = null,\n  component = 'a',\n  isFavorite = null,\n  ariaIsFavoriteLabel = 'starred',\n  ariaIsNotFavoriteLabel = 'not starred',\n  customChild,\n  enterTriggersArrowDown = false,\n  ...props\n}: ApplicationLauncherItemProps & DropdownItemProps) => (\n  <ApplicationLauncherItemContext.Provider value={{ isExternal, icon }}>\n    <ApplicationLauncherContext.Consumer>\n      {({ onFavorite }) => (\n        <DropdownItem\n          id={id}\n          component={component}\n          href={href || null}\n          className={css(\n            isExternal && styles.modifiers.external,\n            isFavorite !== null && styles.modifiers.link,\n            className\n          )}\n          listItemClassName={css(onFavorite && styles.appLauncherMenuWrapper, isFavorite && styles.modifiers.favorite)}\n          tooltip={tooltip}\n          tooltipProps={tooltipProps}\n          {...(enterTriggersArrowDown === true && { enterTriggersArrowDown })}\n          {...(customChild && { customChild })}\n          {...(isFavorite !== null && {\n            additionalChild: (\n              <button\n                className={css(styles.appLauncherMenuItem, styles.modifiers.action)}\n                aria-label={isFavorite ? ariaIsFavoriteLabel : ariaIsNotFavoriteLabel}\n                onClick={() => {\n                  onFavorite((id || getUniqueId('app-launcher-option')).replace('favorite-', ''), isFavorite);\n                }}\n              >\n                <StarIcon />\n              </button>\n            )\n          })}\n          {...props}\n        >\n          {children && <ApplicationLauncherContent>{children}</ApplicationLauncherContent>}\n        </DropdownItem>\n      )}\n    </ApplicationLauncherContext.Consumer>\n  </ApplicationLauncherItemContext.Provider>\n);\nApplicationLauncherItem.displayName = 'ApplicationLauncherItem';\n"]},"metadata":{},"sourceType":"module"}