{"ast":null,"code":"import _objectSpread from\"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";/**\n * Generic function for using unified date.\n *\n * Long version additionally also includes the time.\n *\n * @param date - Date (or string representing a date) to display\n * @param includeDate - Whether the date should be displayed, defaults to true\n * @param includeTime - Whether the time should be displayed, defaults to true\n */export var createDateTime=function createDateTime(_ref){var date=_ref.date,_ref$includeDate=_ref.includeDate,includeDate=_ref$includeDate===void 0?true:_ref$includeDate,_ref$includeTime=_ref.includeTime,includeTime=_ref$includeTime===void 0?true:_ref$includeTime;return new Intl.DateTimeFormat('en-US',_objectSpread(_objectSpread({},includeDate&&{dateStyle:'medium'}),includeTime&&{timeStyle:'medium'})).format(typeof date==='string'?new Date(date):date);};/**\n * Copies a object, sets all keys to same value and returns it.\n *\n * @param originalObj - Object to copy.\n * @param value - Value to set all keys of a copy to.\n * @returns copied object with keys set to same value\n */export var copyAndSetValues=function copyAndSetValues(originalObj,value){var copiedObj=_objectSpread({},originalObj);Object.keys(copiedObj).forEach(function(key){copiedObj[key]=value;});return copiedObj;};","map":{"version":3,"names":["createDateTime","date","includeDate","includeTime","Intl","DateTimeFormat","dateStyle","timeStyle","format","Date","copyAndSetValues","originalObj","value","copiedObj","Object","keys","forEach","key"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/utils/utils.ts"],"sourcesContent":["/**\n * Generic function for using unified date.\n *\n * Long version additionally also includes the time.\n *\n * @param date - Date (or string representing a date) to display\n * @param includeDate - Whether the date should be displayed, defaults to true\n * @param includeTime - Whether the time should be displayed, defaults to true\n */\n\ninterface ICreateDateTimeObject {\n  date: Date | string;\n  includeDate?: boolean;\n  includeTime?: boolean;\n}\n\nexport const createDateTime = ({ date, includeDate = true, includeTime = true }: ICreateDateTimeObject): string =>\n  new Intl.DateTimeFormat('en-US', {\n    ...(includeDate && { dateStyle: 'medium' }),\n    ...(includeTime && { timeStyle: 'medium' }),\n  }).format(typeof date === 'string' ? new Date(date) : date);\n\n/**\n * Copies a object, sets all keys to same value and returns it.\n *\n * @param originalObj - Object to copy.\n * @param value - Value to set all keys of a copy to.\n * @returns copied object with keys set to same value\n */\nexport const copyAndSetValues = (originalObj: any, value: any) => {\n  const copiedObj = { ...originalObj };\n  Object.keys(copiedObj).forEach((key) => {\n    copiedObj[key] = value;\n  });\n\n  return copiedObj;\n};\n"],"mappings":"oIAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAQA,MAAO,IAAMA,eAAc,CAAG,QAAjBA,eAAiB,UAAGC,KAAH,MAAGA,IAAH,uBAASC,WAAT,CAASA,WAAT,2BAAuB,IAAvB,wCAA6BC,WAA7B,CAA6BA,WAA7B,2BAA2C,IAA3C,wBAC5B,IAAIC,KAAI,CAACC,cAAT,CAAwB,OAAxB,gCACMH,WAAW,EAAI,CAAEI,SAAS,CAAE,QAAb,CADrB,EAEMH,WAAW,EAAI,CAAEI,SAAS,CAAE,QAAb,CAFrB,GAGGC,MAHH,CAGU,MAAOP,KAAP,GAAgB,QAAhB,CAA2B,GAAIQ,KAAJ,CAASR,IAAT,CAA3B,CAA4CA,IAHtD,CAD4B,EAAvB,CAMP;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMS,iBAAgB,CAAG,QAAnBA,iBAAmB,CAACC,WAAD,CAAmBC,KAAnB,CAAkC,CAChE,GAAMC,UAAS,kBAAQF,WAAR,CAAf,CACAG,MAAM,CAACC,IAAP,CAAYF,SAAZ,EAAuBG,OAAvB,CAA+B,SAACC,GAAD,CAAS,CACtCJ,SAAS,CAACI,GAAD,CAAT,CAAiBL,KAAjB,CACD,CAFD,EAIA,MAAOC,UAAP,CACD,CAPM"},"metadata":{},"sourceType":"module"}