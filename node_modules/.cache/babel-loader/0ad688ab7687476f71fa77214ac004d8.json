{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/InputGroup/input-group';\nimport { css } from '@patternfly/react-styles';\nimport { FormSelect } from '../FormSelect';\nimport { TextArea } from '../TextArea';\nimport { TextInput } from '../TextInput';\nexport const InputGroup = _a => {\n  var {\n    className = '',\n    children,\n    innerRef\n  } = _a,\n      props = __rest(_a, [\"className\", \"children\", \"innerRef\"]);\n\n  const formCtrls = [FormSelect, TextArea, TextInput].map(comp => comp.displayName);\n  const idItem = React.Children.toArray(children).find(child => !formCtrls.includes(child.type.displayName) && child.props.id);\n  const inputGroupRef = innerRef || React.useRef(null);\n  return React.createElement(\"div\", Object.assign({\n    ref: inputGroupRef,\n    className: css(styles.inputGroup, className)\n  }, props), idItem ? React.Children.map(children, child => formCtrls.includes(child.type.displayName) ? React.cloneElement(child, {\n    'aria-describedby': idItem.props.id\n  }) : child) : children);\n};\nInputGroup.displayName = 'InputGroup';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,gEAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,SAAT,QAA0B,cAA1B;AAWA,OAAO,MAAMC,UAAU,GAA8CC,EAAD,IAK9C;MAL+C;IACnEC,SAAS,GAAG,EADuD;IAEnEC,QAFmE;IAGnEC;EAHmE,IAG3DH;MACLI,KAAK,cAJ2D,qCAI3D;;EAER,MAAMC,SAAS,GAAG,CAACT,UAAD,EAAaC,QAAb,EAAuBC,SAAvB,EAAkCQ,GAAlC,CAAsCC,IAAI,IAAIA,IAAI,CAACC,WAAnD,CAAlB;EACA,MAAMC,MAAM,GAAGhB,KAAK,CAACiB,QAAN,CAAeC,OAAf,CAAuBT,QAAvB,EAAiCU,IAAjC,CACZC,KAAD,IAAgB,CAACR,SAAS,CAACS,QAAV,CAAmBD,KAAK,CAACE,IAAN,CAAWP,WAA9B,CAAD,IAA+CK,KAAK,CAACT,KAAN,CAAYY,EAD9D,CAAf;EAIA,MAAMC,aAAa,GAAGd,QAAQ,IAAIV,KAAK,CAACyB,MAAN,CAAa,IAAb,CAAlC;EAEA,OACEzB;IAAK0B,GAAG,EAAEF,aAAV;IAAyBhB,SAAS,EAAEN,GAAG,CAACD,MAAM,CAAC0B,UAAR,EAAoBnB,SAApB;EAAvC,GAA2EG,KAA3E,GACGK,MAAM,GACHhB,KAAK,CAACiB,QAAN,CAAeJ,GAAf,CAAmBJ,QAAnB,EAA8BW,KAAD,IAC3BR,SAAS,CAACS,QAAV,CAAmBD,KAAK,CAACE,IAAN,CAAWP,WAA9B,IACIf,KAAK,CAAC4B,YAAN,CAAmBR,KAAnB,EAA0B;IAAE,oBAAoBJ,MAAM,CAACL,KAAP,CAAaY;EAAnC,CAA1B,CADJ,GAEIH,KAHN,CADG,GAMHX,QAPN,CADF;AAWD,CAxBM;AAyBPH,UAAU,CAACS,WAAX,GAAyB,YAAzB","names":["React","styles","css","FormSelect","TextArea","TextInput","InputGroup","_a","className","children","innerRef","props","formCtrls","map","comp","displayName","idItem","Children","toArray","find","child","includes","type","id","inputGroupRef","useRef","ref","inputGroup","cloneElement"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/InputGroup/InputGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/InputGroup/input-group';\nimport { css } from '@patternfly/react-styles';\nimport { FormSelect } from '../FormSelect';\nimport { TextArea } from '../TextArea';\nimport { TextInput } from '../TextInput';\n\nexport interface InputGroupProps extends React.HTMLProps<HTMLDivElement> {\n  /** Additional classes added to the input group. */\n  className?: string;\n  /** Content rendered inside the input group. */\n  children: React.ReactNode;\n  /** @hide A reference object to attach to the input box */\n  innerRef?: React.RefObject<any>;\n}\n\nexport const InputGroup: React.FunctionComponent<InputGroupProps> = ({\n  className = '',\n  children,\n  innerRef,\n  ...props\n}: InputGroupProps) => {\n  const formCtrls = [FormSelect, TextArea, TextInput].map(comp => comp.displayName);\n  const idItem = React.Children.toArray(children).find(\n    (child: any) => !formCtrls.includes(child.type.displayName) && child.props.id\n  ) as React.ReactElement<{ id: string }>;\n\n  const inputGroupRef = innerRef || React.useRef(null);\n\n  return (\n    <div ref={inputGroupRef} className={css(styles.inputGroup, className)} {...props}>\n      {idItem\n        ? React.Children.map(children, (child: any) =>\n            formCtrls.includes(child.type.displayName)\n              ? React.cloneElement(child, { 'aria-describedby': idItem.props.id })\n              : child\n          )\n        : children}\n    </div>\n  );\n};\nInputGroup.displayName = 'InputGroup';\n"]},"metadata":{},"sourceType":"module"}