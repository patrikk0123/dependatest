{"ast":null,"code":"import { useCallback, useEffect, useRef, useState } from 'react';\nexport const useDataBuffer = () => {\n  const [data, setData] = useState([]);\n  const [buffer, setBuffer] = useState([]);\n  const [currentLineCount, setCurrentLineCount] = useState(1);\n  const savedTimer = useRef(); // useEffect(() => {\n  //   savedTimer.current = setInterval(() => {\n  //     setCurrentLineCount(data.length);\n  //   }, 1500);\n  //   return () => {\n  //     clearInterval(savedTimer.current);\n  //   };\n  // }, [data.length]);\n\n  useEffect(() => {\n    setTimeout(() => {});\n  }, [data.length]);\n  useEffect(() => {\n    // setBuffer(data);\n    console.log(currentLineCount);\n  }, [currentLineCount]);\n  const addLines = useCallback(lines => {\n    setData([...data, ...lines]);\n  }, [data]);\n  return {\n    buffer,\n    addLines\n  };\n};","map":{"version":3,"names":["useCallback","useEffect","useRef","useState","useDataBuffer","data","setData","buffer","setBuffer","currentLineCount","setCurrentLineCount","savedTimer","setTimeout","length","console","log","addLines","lines"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/containers/useDataBuffer.ts"],"sourcesContent":["import { MutableRefObject, useCallback, useEffect, useRef, useState } from 'react';\n\nexport const useDataBuffer = () => {\n  const [data, setData] = useState<any>([]);\n  const [buffer, setBuffer] = useState<any>([]);\n  const [currentLineCount, setCurrentLineCount] = useState<number>(1);\n  const savedTimer: MutableRefObject<NodeJS.Timer | undefined> = useRef();\n\n  // useEffect(() => {\n  //   savedTimer.current = setInterval(() => {\n  //     setCurrentLineCount(data.length);\n  //   }, 1500);\n  //   return () => {\n  //     clearInterval(savedTimer.current);\n  //   };\n  // }, [data.length]);\n\n  useEffect(() => {\n    setTimeout(() => {});\n  }, [data.length]);\n\n  useEffect(() => {\n    // setBuffer(data);\n    console.log(currentLineCount);\n  }, [currentLineCount]);\n\n  const addLines = useCallback(\n    (lines: string[]) => {\n      setData([...data, ...lines]);\n    },\n    [data]\n  );\n\n  return { buffer, addLines };\n};\n"],"mappings":"AAAA,SAA2BA,WAA3B,EAAwCC,SAAxC,EAAmDC,MAAnD,EAA2DC,QAA3D,QAA2E,OAA3E;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;EACjC,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAM,EAAN,CAAhC;EACA,MAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAM,EAAN,CAApC;EACA,MAAM,CAACM,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAS,CAAT,CAAxD;EACA,MAAMQ,UAAsD,GAAGT,MAAM,EAArE,CAJiC,CAMjC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAD,SAAS,CAAC,MAAM;IACdW,UAAU,CAAC,MAAM,CAAE,CAAT,CAAV;EACD,CAFQ,EAEN,CAACP,IAAI,CAACQ,MAAN,CAFM,CAAT;EAIAZ,SAAS,CAAC,MAAM;IACd;IACAa,OAAO,CAACC,GAAR,CAAYN,gBAAZ;EACD,CAHQ,EAGN,CAACA,gBAAD,CAHM,CAAT;EAKA,MAAMO,QAAQ,GAAGhB,WAAW,CACzBiB,KAAD,IAAqB;IACnBX,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU,GAAGY,KAAb,CAAD,CAAP;EACD,CAHyB,EAI1B,CAACZ,IAAD,CAJ0B,CAA5B;EAOA,OAAO;IAAEE,MAAF;IAAUS;EAAV,CAAP;AACD,CAhCM"},"metadata":{},"sourceType":"module"}