{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport styles from '@patternfly/react-styles/css/components/Breadcrumb/breadcrumb';\nimport { css } from '@patternfly/react-styles';\nexport const BreadcrumbItem = _a => {\n  var {\n    children = null,\n    className: classNameProp = '',\n    to = undefined,\n    isActive = false,\n    isDropdown = false,\n    showDivider,\n    target = undefined,\n    component = 'a',\n    render = undefined\n  } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"to\", \"isActive\", \"isDropdown\", \"showDivider\", \"target\", \"component\", \"render\"]);\n\n  const Component = component;\n  const ariaCurrent = isActive ? 'page' : undefined;\n  const className = css(styles.breadcrumbLink, isActive && styles.modifiers.current);\n  return React.createElement(\"li\", Object.assign({}, props, {\n    className: css(styles.breadcrumbItem, classNameProp)\n  }), showDivider && React.createElement(\"span\", {\n    className: styles.breadcrumbItemDivider\n  }, React.createElement(AngleRightIcon, null)), component === 'button' && React.createElement(\"button\", {\n    className: className,\n    \"aria-current\": ariaCurrent,\n    type: \"button\"\n  }, children), isDropdown && React.createElement(\"span\", {\n    className: css(styles.breadcrumbDropdown)\n  }, children), render && render({\n    className,\n    ariaCurrent\n  }), to && !render && React.createElement(Component, {\n    href: to,\n    target: target,\n    className: className,\n    \"aria-current\": ariaCurrent\n  }, children), !to && component !== 'button' && !isDropdown && children);\n};\nBreadcrumbItem.displayName = 'BreadcrumbItem';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,cAAP,MAA2B,yDAA3B;AACA,OAAOC,MAAP,MAAmB,+DAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AA4BA,OAAO,MAAMC,cAAc,GAAkDC,EAAD,IAWlD;MAXmD;IAC3EC,QAAQ,GAAG,IADgE;IAE3EC,SAAS,EAAEC,aAAa,GAAG,EAFgD;IAG3EC,EAAE,GAAGC,SAHsE;IAI3EC,QAAQ,GAAG,KAJgE;IAK3EC,UAAU,GAAG,KAL8D;IAM3EC,WAN2E;IAO3EC,MAAM,GAAGJ,SAPkE;IAQ3EK,SAAS,GAAG,GAR+D;IAS3EC,MAAM,GAAGN;EATkE,IASzDL;MACfY,KAAK,cAVmE,yGAUnE;;EAER,MAAMC,SAAS,GAAGH,SAAlB;EACA,MAAMI,WAAW,GAAGR,QAAQ,GAAG,MAAH,GAAYD,SAAxC;EACA,MAAMH,SAAS,GAAGJ,GAAG,CAACD,MAAM,CAACkB,cAAR,EAAwBT,QAAQ,IAAIT,MAAM,CAACmB,SAAP,CAAiBC,OAArD,CAArB;EACA,OACEtB,4CAAQiB,KAAR,EAAa;IAAEV,SAAS,EAAEJ,GAAG,CAACD,MAAM,CAACqB,cAAR,EAAwBf,aAAxB;EAAhB,CAAb,GACGK,WAAW,IACVb;IAAMO,SAAS,EAAEL,MAAM,CAACsB;EAAxB,GACExB,oBAACC,cAAD,EAAe,IAAf,CADF,CAFJ,EAMGc,SAAS,KAAK,QAAd,IACCf;IAAQO,SAAS,EAAEA,SAAnB;IAA4B,gBAAgBY,WAA5C;IAAyDM,IAAI,EAAC;EAA9D,GACGnB,QADH,CAPJ,EAWGM,UAAU,IAAIZ;IAAMO,SAAS,EAAEJ,GAAG,CAACD,MAAM,CAACwB,kBAAR;EAApB,GAAkDpB,QAAlD,CAXjB,EAYGU,MAAM,IAAIA,MAAM,CAAC;IAAET,SAAF;IAAaY;EAAb,CAAD,CAZnB,EAaGV,EAAE,IAAI,CAACO,MAAP,IACChB,oBAACkB,SAAD,EAAU;IAACS,IAAI,EAAElB,EAAP;IAAWK,MAAM,EAAEA,MAAnB;IAA2BP,SAAS,EAAEA,SAAtC;IAA+C,gBAAgBY;EAA/D,CAAV,EACGb,QADH,CAdJ,EAkBG,CAACG,EAAD,IAAOM,SAAS,KAAK,QAArB,IAAiC,CAACH,UAAlC,IAAgDN,QAlBnD,CADF;AAsBD,CArCM;AAsCPF,cAAc,CAACwB,WAAf,GAA6B,gBAA7B","names":["React","AngleRightIcon","styles","css","BreadcrumbItem","_a","children","className","classNameProp","to","undefined","isActive","isDropdown","showDivider","target","component","render","props","Component","ariaCurrent","breadcrumbLink","modifiers","current","breadcrumbItem","breadcrumbItemDivider","type","breadcrumbDropdown","href","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Breadcrumb/BreadcrumbItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport styles from '@patternfly/react-styles/css/components/Breadcrumb/breadcrumb';\nimport { css } from '@patternfly/react-styles';\n\nexport interface BreadcrumbItemRenderArgs {\n  className: string;\n  ariaCurrent: 'page' | undefined;\n}\n\nexport interface BreadcrumbItemProps extends React.HTMLProps<HTMLLIElement> {\n  /** Content rendered inside the breadcrumb item. */\n  children?: React.ReactNode;\n  /** Additional classes added to the breadcrumb item. */\n  className?: string;\n  /** HREF for breadcrumb link. */\n  to?: string;\n  /** Flag indicating whether the item is active. */\n  isActive?: boolean;\n  /** Flag indicating whether the item contains a dropdown. */\n  isDropdown?: boolean;\n  /** Internal prop set by Breadcrumb on all but the first crumb */\n  showDivider?: boolean;\n  /** Target for breadcrumb link. */\n  target?: string;\n  /** Sets the base component to render. Defaults to <a> */\n  component?: React.ElementType;\n  /** A render function to render the component inside the breadcrumb item. */\n  render?: (props: BreadcrumbItemRenderArgs) => React.ReactNode;\n}\n\nexport const BreadcrumbItem: React.FunctionComponent<BreadcrumbItemProps> = ({\n  children = null,\n  className: classNameProp = '',\n  to = undefined,\n  isActive = false,\n  isDropdown = false,\n  showDivider,\n  target = undefined,\n  component = 'a',\n  render = undefined,\n  ...props\n}: BreadcrumbItemProps) => {\n  const Component = component;\n  const ariaCurrent = isActive ? 'page' : undefined;\n  const className = css(styles.breadcrumbLink, isActive && styles.modifiers.current);\n  return (\n    <li {...props} className={css(styles.breadcrumbItem, classNameProp)}>\n      {showDivider && (\n        <span className={styles.breadcrumbItemDivider}>\n          <AngleRightIcon />\n        </span>\n      )}\n      {component === 'button' && (\n        <button className={className} aria-current={ariaCurrent} type=\"button\">\n          {children}\n        </button>\n      )}\n      {isDropdown && <span className={css(styles.breadcrumbDropdown)}>{children}</span>}\n      {render && render({ className, ariaCurrent })}\n      {to && !render && (\n        <Component href={to} target={target} className={className} aria-current={ariaCurrent}>\n          {children}\n        </Component>\n      )}\n      {!to && component !== 'button' && !isDropdown && children}\n    </li>\n  );\n};\nBreadcrumbItem.displayName = 'BreadcrumbItem';\n"]},"metadata":{},"sourceType":"module"}