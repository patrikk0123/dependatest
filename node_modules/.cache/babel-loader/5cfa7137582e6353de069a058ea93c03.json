{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list';\nimport { formatBreakpointMods } from '../../helpers/util';\nexport const DataListAction = _a => {\n  var {\n    children,\n    className,\n    visibility,\n\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    id,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    isPlainButtonAction\n  } = _a,\n\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n  props = __rest(_a, [\"children\", \"className\", \"visibility\", \"id\", 'aria-label', 'aria-labelledby', \"isPlainButtonAction\"]);\n\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.dataListItemAction, formatBreakpointMods(visibility, styles), className)\n  }, props), isPlainButtonAction ? React.createElement(\"div\", {\n    className: css(styles.dataListAction)\n  }, children) : children);\n};\nDataListAction.displayName = 'DataListAction';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,4DAAnB;AACA,SAASC,oBAAT,QAAqC,oBAArC;AA0BA,OAAO,MAAMC,cAAc,GAAkDC,EAAD,IAWlD;MAXmD;IAC3EC,QAD2E;IAE3EC,SAF2E;IAG3EC,UAH2E;;IAI3E;IACAC,EAL2E;IAM3E,cAAcC,SAN6D;IAO3E,mBAAmBC,cAPwD;IAQ3EC;EAR2E,IAQxDP;;EACnB;EACGQ,KAAK,cAVmE,qGAUnE;;EACiB,OACzBb;IAAKO,SAAS,EAAEN,GAAG,CAACC,MAAM,CAACY,kBAAR,EAA4BX,oBAAoB,CAACK,UAAD,EAAaN,MAAb,CAAhD,EAAsEK,SAAtE;EAAnB,GAAyGM,KAAzG,GACGD,mBAAmB,GAAGZ;IAAKO,SAAS,EAAEN,GAAG,CAACC,MAAM,CAACa,cAAR;EAAnB,GAA6CT,QAA7C,CAAH,GAAkEA,QADxF,CADyB;AAI1B,CAfM;AAgBPF,cAAc,CAACY,WAAf,GAA6B,gBAA7B","names":["React","css","styles","formatBreakpointMods","DataListAction","_a","children","className","visibility","id","ariaLabel","ariaLabelledBy","isPlainButtonAction","props","dataListItemAction","dataListAction","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/DataList/DataListAction.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list';\nimport { formatBreakpointMods } from '../../helpers/util';\n\nexport interface DataListActionProps extends Omit<React.HTMLProps<HTMLDivElement>, 'children'> {\n  /** Content rendered as DataList Action  (e.g <Button> or <Dropdown>) */\n  children: React.ReactNode;\n  /** Additional classes added to the DataList Action */\n  className?: string;\n  /** Identify the DataList toggle number */\n  id: string;\n  /** Adds accessible text to the DataList Action */\n  'aria-labelledby': string;\n  /** Adds accessible text to the DataList Action */\n  'aria-label': string;\n  /** What breakpoints to hide/show the data list action */\n  visibility?: {\n    default?: 'hidden' | 'visible';\n    sm?: 'hidden' | 'visible';\n    md?: 'hidden' | 'visible';\n    lg?: 'hidden' | 'visible';\n    xl?: 'hidden' | 'visible';\n    '2xl'?: 'hidden' | 'visible';\n  };\n  /** Flag to indicate that the action is a plain button (e.g. kebab dropdown toggle) so that styling is applied to align the button */\n  isPlainButtonAction?: boolean;\n}\n\nexport const DataListAction: React.FunctionComponent<DataListActionProps> = ({\n  children,\n  className,\n  visibility,\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  id,\n  'aria-label': ariaLabel,\n  'aria-labelledby': ariaLabelledBy,\n  isPlainButtonAction,\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n  ...props\n}: DataListActionProps) => (\n  <div className={css(styles.dataListItemAction, formatBreakpointMods(visibility, styles), className)} {...props}>\n    {isPlainButtonAction ? <div className={css(styles.dataListAction)}>{children}</div> : children}\n  </div>\n);\nDataListAction.displayName = 'DataListAction';\n"]},"metadata":{},"sourceType":"module"}