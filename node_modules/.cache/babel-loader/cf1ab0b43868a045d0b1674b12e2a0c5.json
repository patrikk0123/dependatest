{"ast":null,"code":"import _classCallCheck from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { ToggleTemplate } from './ToggleTemplate';\nimport styles from '@patternfly/react-styles/css/components/Pagination/pagination';\nimport { css } from '@patternfly/react-styles';\nimport { fillTemplate } from '../../helpers';\nimport { Navigation } from './Navigation';\nimport { PaginationOptionsMenu } from './PaginationOptionsMenu';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nimport widthChars from '@patternfly/react-tokens/dist/esm/c_pagination__nav_page_select_c_form_control_width_chars';\nexport var PaginationVariant;\n\n(function (PaginationVariant) {\n  PaginationVariant[\"top\"] = \"top\";\n  PaginationVariant[\"bottom\"] = \"bottom\";\n})(PaginationVariant || (PaginationVariant = {}));\n\nvar defaultPerPageOptions = [{\n  title: '10',\n  value: 10\n}, {\n  title: '20',\n  value: 20\n}, {\n  title: '50',\n  value: 50\n}, {\n  title: '100',\n  value: 100\n}];\n\nvar handleInputWidth = function handleInputWidth(lastPage, node) {\n  if (!node) {\n    return;\n  }\n\n  var len = String(lastPage).length;\n\n  if (len >= 3) {\n    node.style.setProperty(widthChars.name, \"\".concat(len));\n  } else {\n    node.style.setProperty(widthChars.name, '2');\n  }\n};\n\nvar paginationId = 0;\nexport var Pagination = /*#__PURE__*/function (_React$Component) {\n  _inherits(Pagination, _React$Component);\n\n  var _super = _createSuper(Pagination);\n\n  function Pagination() {\n    var _this;\n\n    _classCallCheck(this, Pagination);\n\n    _this = _super.apply(this, arguments);\n    _this.paginationRef = React.createRef();\n    _this.state = {\n      ouiaStateId: getDefaultOUIAId(Pagination.displayName, _this.props.variant)\n    };\n    return _this;\n  }\n\n  _createClass(Pagination, [{\n    key: \"getLastPage\",\n    value: function getLastPage() {\n      var _this$props = this.props,\n          itemCount = _this$props.itemCount,\n          perPage = _this$props.perPage,\n          page = _this$props.page; // when itemCount is not known let's set lastPage as page+1 as we don't know the total count\n\n      return itemCount || itemCount === 0 ? Math.ceil(itemCount / perPage) || 0 : page + 1;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var node = this.paginationRef.current;\n      handleInputWidth(this.getLastPage(), node);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var node = this.paginationRef.current;\n\n      if (prevProps.perPage !== this.props.perPage || prevProps.itemCount !== this.props.itemCount) {\n        handleInputWidth(this.getLastPage(), node);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          children = _a.children,\n          className = _a.className,\n          variant = _a.variant,\n          isDisabled = _a.isDisabled,\n          isCompact = _a.isCompact,\n          isStatic = _a.isStatic,\n          isSticky = _a.isSticky,\n          perPage = _a.perPage,\n          titles = _a.titles,\n          firstPage = _a.firstPage,\n          propPage = _a.page,\n          offset = _a.offset,\n          defaultToFullPage = _a.defaultToFullPage,\n          itemCount = _a.itemCount,\n          itemsStart = _a.itemsStart,\n          itemsEnd = _a.itemsEnd,\n          perPageOptions = _a.perPageOptions,\n          dropDirectionProp = _a.dropDirection,\n          widgetId = _a.widgetId,\n          toggleTemplate = _a.toggleTemplate,\n          onSetPage = _a.onSetPage,\n          onPerPageSelect = _a.onPerPageSelect,\n          onFirstClick = _a.onFirstClick,\n          onPreviousClick = _a.onPreviousClick,\n          onNextClick = _a.onNextClick,\n          onPageInput = _a.onPageInput,\n          onLastClick = _a.onLastClick,\n          ouiaId = _a.ouiaId,\n          ouiaSafe = _a.ouiaSafe,\n          perPageComponent = _a.perPageComponent,\n          props = __rest(_a, [\"children\", \"className\", \"variant\", \"isDisabled\", \"isCompact\", \"isStatic\", \"isSticky\", \"perPage\", \"titles\", \"firstPage\", \"page\", \"offset\", \"defaultToFullPage\", \"itemCount\", \"itemsStart\", \"itemsEnd\", \"perPageOptions\", \"dropDirection\", \"widgetId\", \"toggleTemplate\", \"onSetPage\", \"onPerPageSelect\", \"onFirstClick\", \"onPreviousClick\", \"onNextClick\", \"onPageInput\", \"onLastClick\", \"ouiaId\", \"ouiaSafe\", \"perPageComponent\"]);\n\n      var dropDirection = dropDirectionProp || (variant === 'bottom' && !isStatic ? 'up' : 'down');\n      var page = propPage;\n\n      if (!page && offset) {\n        page = Math.ceil(offset / perPage);\n      }\n\n      if (page === 0 && !itemCount) {\n        page = 1;\n      }\n\n      var lastPage = this.getLastPage();\n      var firstIndex = (page - 1) * perPage + 1;\n      var lastIndex = page * perPage;\n\n      if (itemCount || itemCount === 0) {\n        firstIndex = itemCount <= 0 ? 0 : (page - 1) * perPage + 1;\n\n        if (page < firstPage && itemCount > 0) {\n          page = firstPage;\n        } else if (page > lastPage) {\n          page = lastPage;\n        }\n\n        if (itemCount >= 0) {\n          lastIndex = page === lastPage || itemCount === 0 ? itemCount : page * perPage;\n        }\n      }\n\n      var toggleTemplateProps = {\n        firstIndex: firstIndex,\n        lastIndex: lastIndex,\n        itemCount: itemCount,\n        itemsTitle: titles.items,\n        ofWord: titles.ofWord\n      };\n      return React.createElement(\"div\", Object.assign({\n        ref: this.paginationRef,\n        className: css(styles.pagination, variant === PaginationVariant.bottom && styles.modifiers.bottom, isCompact && styles.modifiers.compact, isStatic && styles.modifiers.static, isSticky && styles.modifiers.sticky, className),\n        id: \"\".concat(widgetId, \"-\").concat(paginationId++)\n      }, getOUIAProps(Pagination.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), props), variant === PaginationVariant.top && React.createElement(\"div\", {\n        className: css(styles.paginationTotalItems)\n      }, toggleTemplate && typeof toggleTemplate === 'string' && fillTemplate(toggleTemplate, toggleTemplateProps), toggleTemplate && typeof toggleTemplate !== 'string' && toggleTemplate(toggleTemplateProps), !toggleTemplate && React.createElement(ToggleTemplate, {\n        firstIndex: firstIndex,\n        lastIndex: lastIndex,\n        itemCount: itemCount,\n        itemsTitle: titles.items,\n        ofWord: titles.ofWord\n      })), React.createElement(PaginationOptionsMenu, {\n        itemsPerPageTitle: titles.itemsPerPage,\n        perPageSuffix: titles.perPageSuffix,\n        itemsTitle: isCompact ? '' : titles.items,\n        optionsToggle: titles.optionsToggle,\n        perPageOptions: perPageOptions,\n        firstIndex: itemsStart !== null ? itemsStart : firstIndex,\n        lastIndex: itemsEnd !== null ? itemsEnd : lastIndex,\n        ofWord: titles.ofWord,\n        defaultToFullPage: defaultToFullPage,\n        itemCount: itemCount,\n        page: page,\n        perPage: perPage,\n        lastPage: lastPage,\n        onPerPageSelect: onPerPageSelect,\n        dropDirection: dropDirection,\n        widgetId: widgetId,\n        toggleTemplate: toggleTemplate,\n        isDisabled: isDisabled,\n        perPageComponent: perPageComponent\n      }), React.createElement(Navigation, {\n        pagesTitle: titles.page,\n        pagesTitlePlural: titles.pages,\n        toLastPage: titles.toLastPage,\n        toPreviousPage: titles.toPreviousPage,\n        toNextPage: titles.toNextPage,\n        toFirstPage: titles.toFirstPage,\n        currPage: titles.currPage,\n        paginationTitle: titles.paginationTitle,\n        ofWord: titles.ofWord,\n        page: itemCount && itemCount <= 0 ? 0 : page,\n        perPage: perPage,\n        itemCount: itemCount,\n        firstPage: itemsStart !== null ? itemsStart : 1,\n        lastPage: lastPage,\n        onSetPage: onSetPage,\n        onFirstClick: onFirstClick,\n        onPreviousClick: onPreviousClick,\n        onNextClick: onNextClick,\n        onLastClick: onLastClick,\n        onPageInput: onPageInput,\n        isDisabled: isDisabled,\n        isCompact: isCompact\n      }), children);\n    }\n  }]);\n\n  return Pagination;\n}(React.Component);\nPagination.displayName = 'Pagination';\nPagination.defaultProps = {\n  children: null,\n  className: '',\n  variant: PaginationVariant.top,\n  isDisabled: false,\n  isCompact: false,\n  isSticky: false,\n  perPage: defaultPerPageOptions[0].value,\n  titles: {\n    items: '',\n    page: '',\n    pages: '',\n    itemsPerPage: 'Items per page',\n    perPageSuffix: 'per page',\n    toFirstPage: 'Go to first page',\n    toPreviousPage: 'Go to previous page',\n    toLastPage: 'Go to last page',\n    toNextPage: 'Go to next page',\n    optionsToggle: '',\n    currPage: 'Current page',\n    paginationTitle: 'Pagination',\n    ofWord: 'of'\n  },\n  firstPage: 1,\n  page: 0,\n  offset: 0,\n  defaultToFullPage: false,\n  itemsStart: null,\n  itemsEnd: null,\n  perPageOptions: defaultPerPageOptions,\n  widgetId: 'pagination-options-menu',\n  onSetPage: function onSetPage() {\n    return undefined;\n  },\n  onPerPageSelect: function onPerPageSelect() {\n    return undefined;\n  },\n  onFirstClick: function onFirstClick() {\n    return undefined;\n  },\n  onPreviousClick: function onPreviousClick() {\n    return undefined;\n  },\n  onNextClick: function onNextClick() {\n    return undefined;\n  },\n  onPageInput: function onPageInput() {\n    return undefined;\n  },\n  onLastClick: function onLastClick() {\n    return undefined;\n  },\n  ouiaSafe: true,\n  perPageComponent: 'div'\n};","map":{"version":3,"mappings":"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","names":["React","ToggleTemplate","styles","css","fillTemplate","Navigation","PaginationOptionsMenu","getOUIAProps","getDefaultOUIAId","widthChars","PaginationVariant","defaultPerPageOptions","title","value","handleInputWidth","lastPage","node","len","String","length","style","setProperty","name","paginationId","Pagination","createRef","ouiaStateId","displayName","props","variant","itemCount","perPage","page","Math","ceil","paginationRef","current","getLastPage","prevProps","children","_a","className","isDisabled","isCompact","isStatic","isSticky","titles","firstPage","propPage","offset","defaultToFullPage","itemsStart","itemsEnd","perPageOptions","dropDirectionProp","dropDirection","widgetId","toggleTemplate","onSetPage","onPerPageSelect","onFirstClick","onPreviousClick","onNextClick","onPageInput","onLastClick","ouiaId","ouiaSafe","perPageComponent","__rest","firstIndex","lastIndex","toggleTemplateProps","itemsTitle","items","ofWord","ref","pagination","bottom","modifiers","compact","static","sticky","id","undefined","state","top","paginationTotalItems","itemsPerPageTitle","itemsPerPage","perPageSuffix","optionsToggle","pagesTitle","pagesTitlePlural","pages","toLastPage","toPreviousPage","toNextPage","toFirstPage","currPage","paginationTitle","Component"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Pagination/Pagination.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ToggleTemplate, ToggleTemplateProps } from './ToggleTemplate';\nimport styles from '@patternfly/react-styles/css/components/Pagination/pagination';\nimport { css } from '@patternfly/react-styles';\n\nimport { fillTemplate } from '../../helpers';\nimport { Navigation } from './Navigation';\nimport { PaginationOptionsMenu } from './PaginationOptionsMenu';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId } from '../../helpers';\nimport widthChars from '@patternfly/react-tokens/dist/esm/c_pagination__nav_page_select_c_form_control_width_chars';\nimport { PickOptional } from '../../helpers';\n\nexport enum PaginationVariant {\n  top = 'top',\n  bottom = 'bottom'\n}\n\nconst defaultPerPageOptions = [\n  {\n    title: '10',\n    value: 10\n  },\n  {\n    title: '20',\n    value: 20\n  },\n  {\n    title: '50',\n    value: 50\n  },\n  {\n    title: '100',\n    value: 100\n  }\n];\n\nexport interface PerPageOptions {\n  /** option title */\n  title?: string;\n  /** option value */\n  value?: number;\n}\n\nexport interface PaginationTitles {\n  /** The title of a page displayed beside the page number */\n  page?: string;\n  /** The title of a page displayed beside the page number (plural form) */\n  pages?: string;\n  /** The type or title of the items being paginated */\n  items?: string;\n  /** The title of the pagination options menu */\n  itemsPerPage?: string;\n  /** The suffix to be displayed after each option on the options menu dropdown */\n  perPageSuffix?: string;\n  /** Accessible label for the button which moves to the first page */\n  toFirstPage?: string;\n  /** Accessible label for the button which moves to the previous page */\n  toPreviousPage?: string;\n  /** Accessible label for the button which moves to the last page */\n  toLastPage?: string;\n  /** Accessible label for the button which moves to the next page */\n  toNextPage?: string;\n  /** Accessible label for the options toggle */\n  optionsToggle?: string;\n  /** Accessible label for the input displaying the current page */\n  currPage?: string;\n  /** Accessible label for the pagination component */\n  paginationTitle?: string;\n  /** Accessible label for the English word \"of\" */\n  ofWord?: string;\n}\n\nexport type OnSetPage = (\n  _evt: React.MouseEvent | React.KeyboardEvent | MouseEvent,\n  newPage: number,\n  perPage?: number,\n  startIdx?: number,\n  endIdx?: number\n) => void;\n\nexport type OnPerPageSelect = (\n  _evt: React.MouseEvent | React.KeyboardEvent | MouseEvent,\n  newPerPage: number,\n  newPage: number,\n  startIdx?: number,\n  endIdx?: number\n) => void;\n\nexport interface PaginationProps extends React.HTMLProps<HTMLDivElement>, OUIAProps {\n  /** What should be rendered inside */\n  children?: React.ReactNode;\n  /** Additional classes for the container. */\n  className?: string;\n  /** Total number of items. */\n  itemCount?: number;\n  /** Position where pagination is rendered. */\n  variant?: 'top' | 'bottom' | PaginationVariant;\n  /** Flag indicating if pagination is disabled */\n  isDisabled?: boolean;\n  /** Flag indicating if pagination is compact */\n  isCompact?: boolean;\n  /** Flag indicating if pagination should not be sticky on mobile */\n  isStatic?: boolean;\n  /** Flag indicating if pagination should stick to its position (based on variant) */\n  isSticky?: boolean;\n  /** Number of items per page. */\n  perPage?: number;\n  /** Array of the number of items per page  options. */\n  perPageOptions?: PerPageOptions[];\n  /** Indicate whether to show last full page of results when user selects perPage value greater than remaining rows */\n  defaultToFullPage?: boolean;\n  /** Page we start at. */\n  firstPage?: number;\n  /** Current page number. */\n  page?: number;\n  /** Start index of rows to display, used in place of providing page */\n  offset?: number;\n  /** First index of items on current page. */\n  itemsStart?: number;\n  /** Last index of items on current page. */\n  itemsEnd?: number;\n  /** ID to ideintify widget on page. */\n  widgetId?: string;\n  /** Direction of dropdown context menu. */\n  dropDirection?: 'up' | 'down';\n  /** Object with titles to display in pagination. */\n  titles?: PaginationTitles;\n  /** This will be shown in pagination toggle span. You can use firstIndex, lastIndex, itemCount, itemsTitle, ofWord props. */\n  toggleTemplate?: ((props: ToggleTemplateProps) => React.ReactElement) | string;\n  /** Function called when user sets page. */\n  onSetPage?: OnSetPage;\n  /** Function called when user clicks on navigate to first page. */\n  onFirstClick?: (event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void;\n  /** Function called when user clicks on navigate to previous page. */\n  onPreviousClick?: (event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void;\n  /** Function called when user clicks on navigate to next page. */\n  onNextClick?: (event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void;\n  /** Function called when user clicks on navigate to last page. */\n  onLastClick?: (event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void;\n  /** Function called when user inputs page number. */\n  onPageInput?: (event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void;\n  /** Function called when user selects number of items per page. */\n  onPerPageSelect?: OnPerPageSelect;\n  /** Component to be used for wrapping the toggle contents. Use 'button' when you want\n   * all of the toggle text to be clickable.\n   */\n  perPageComponent?: 'div' | 'button';\n}\n\nconst handleInputWidth = (lastPage: number, node: HTMLDivElement) => {\n  if (!node) {\n    return;\n  }\n  const len = String(lastPage).length;\n  if (len >= 3) {\n    node.style.setProperty(widthChars.name, `${len}`);\n  } else {\n    node.style.setProperty(widthChars.name, '2');\n  }\n};\n\nlet paginationId = 0;\nexport class Pagination extends React.Component<PaginationProps, { ouiaStateId: string }> {\n  static displayName = 'Pagination';\n  paginationRef = React.createRef<HTMLDivElement>();\n  static defaultProps: PickOptional<PaginationProps> = {\n    children: null,\n    className: '',\n    variant: PaginationVariant.top,\n    isDisabled: false,\n    isCompact: false,\n    isSticky: false,\n    perPage: defaultPerPageOptions[0].value,\n    titles: {\n      items: '',\n      page: '',\n      pages: '',\n      itemsPerPage: 'Items per page',\n      perPageSuffix: 'per page',\n      toFirstPage: 'Go to first page',\n      toPreviousPage: 'Go to previous page',\n      toLastPage: 'Go to last page',\n      toNextPage: 'Go to next page',\n      optionsToggle: '',\n      currPage: 'Current page',\n      paginationTitle: 'Pagination',\n      ofWord: 'of'\n    },\n    firstPage: 1,\n    page: 0,\n    offset: 0,\n    defaultToFullPage: false,\n    itemsStart: null,\n    itemsEnd: null,\n    perPageOptions: defaultPerPageOptions,\n    widgetId: 'pagination-options-menu',\n    onSetPage: () => undefined,\n    onPerPageSelect: () => undefined,\n    onFirstClick: () => undefined,\n    onPreviousClick: () => undefined,\n    onNextClick: () => undefined,\n    onPageInput: () => undefined,\n    onLastClick: () => undefined,\n    ouiaSafe: true,\n    perPageComponent: 'div'\n  };\n\n  state = {\n    ouiaStateId: getDefaultOUIAId(Pagination.displayName, this.props.variant)\n  };\n\n  getLastPage() {\n    const { itemCount, perPage, page } = this.props;\n    // when itemCount is not known let's set lastPage as page+1 as we don't know the total count\n    return itemCount || itemCount === 0 ? Math.ceil(itemCount / perPage) || 0 : page + 1;\n  }\n\n  componentDidMount() {\n    const node = this.paginationRef.current;\n    handleInputWidth(this.getLastPage(), node);\n  }\n\n  componentDidUpdate(prevProps: PaginationProps & OUIAProps) {\n    const node = this.paginationRef.current;\n    if (prevProps.perPage !== this.props.perPage || prevProps.itemCount !== this.props.itemCount) {\n      handleInputWidth(this.getLastPage(), node);\n    }\n  }\n  render() {\n    const {\n      children,\n      className,\n      variant,\n      isDisabled,\n      isCompact,\n      isStatic,\n      isSticky,\n      perPage,\n      titles,\n      firstPage,\n      page: propPage,\n      offset,\n      defaultToFullPage,\n      itemCount,\n      itemsStart,\n      itemsEnd,\n      perPageOptions,\n      dropDirection: dropDirectionProp,\n      widgetId,\n      toggleTemplate,\n      onSetPage,\n      onPerPageSelect,\n      onFirstClick,\n      onPreviousClick,\n      onNextClick,\n      onPageInput,\n      onLastClick,\n      ouiaId,\n      ouiaSafe,\n      perPageComponent,\n      ...props\n    } = this.props;\n    const dropDirection = dropDirectionProp || (variant === 'bottom' && !isStatic ? 'up' : 'down');\n\n    let page = propPage;\n    if (!page && offset) {\n      page = Math.ceil(offset / perPage);\n    }\n    if (page === 0 && !itemCount) {\n      page = 1;\n    }\n\n    const lastPage = this.getLastPage();\n    let firstIndex = (page - 1) * perPage + 1;\n    let lastIndex = page * perPage;\n\n    if (itemCount || itemCount === 0) {\n      firstIndex = itemCount <= 0 ? 0 : (page - 1) * perPage + 1;\n\n      if (page < firstPage && itemCount > 0) {\n        page = firstPage;\n      } else if (page > lastPage) {\n        page = lastPage;\n      }\n\n      if (itemCount >= 0) {\n        lastIndex = page === lastPage || itemCount === 0 ? itemCount : page * perPage;\n      }\n    }\n\n    const toggleTemplateProps = { firstIndex, lastIndex, itemCount, itemsTitle: titles.items, ofWord: titles.ofWord };\n\n    return (\n      <div\n        ref={this.paginationRef}\n        className={css(\n          styles.pagination,\n          variant === PaginationVariant.bottom && styles.modifiers.bottom,\n          isCompact && styles.modifiers.compact,\n          isStatic && styles.modifiers.static,\n          isSticky && styles.modifiers.sticky,\n          className\n        )}\n        id={`${widgetId}-${paginationId++}`}\n        {...getOUIAProps(Pagination.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n        {...props}\n      >\n        {variant === PaginationVariant.top && (\n          <div className={css(styles.paginationTotalItems)}>\n            {toggleTemplate && typeof toggleTemplate === 'string' && fillTemplate(toggleTemplate, toggleTemplateProps)}\n            {toggleTemplate &&\n              typeof toggleTemplate !== 'string' &&\n              (toggleTemplate as (props: ToggleTemplateProps) => React.ReactElement)(toggleTemplateProps)}\n            {!toggleTemplate && (\n              <ToggleTemplate\n                firstIndex={firstIndex}\n                lastIndex={lastIndex}\n                itemCount={itemCount}\n                itemsTitle={titles.items}\n                ofWord={titles.ofWord}\n              />\n            )}\n          </div>\n        )}\n        <PaginationOptionsMenu\n          itemsPerPageTitle={titles.itemsPerPage}\n          perPageSuffix={titles.perPageSuffix}\n          itemsTitle={isCompact ? '' : titles.items}\n          optionsToggle={titles.optionsToggle}\n          perPageOptions={perPageOptions}\n          firstIndex={itemsStart !== null ? itemsStart : firstIndex}\n          lastIndex={itemsEnd !== null ? itemsEnd : lastIndex}\n          ofWord={titles.ofWord}\n          defaultToFullPage={defaultToFullPage}\n          itemCount={itemCount}\n          page={page}\n          perPage={perPage}\n          lastPage={lastPage}\n          onPerPageSelect={onPerPageSelect}\n          dropDirection={dropDirection}\n          widgetId={widgetId}\n          toggleTemplate={toggleTemplate}\n          isDisabled={isDisabled}\n          perPageComponent={perPageComponent}\n        />\n        <Navigation\n          pagesTitle={titles.page}\n          pagesTitlePlural={titles.pages}\n          toLastPage={titles.toLastPage}\n          toPreviousPage={titles.toPreviousPage}\n          toNextPage={titles.toNextPage}\n          toFirstPage={titles.toFirstPage}\n          currPage={titles.currPage}\n          paginationTitle={titles.paginationTitle}\n          ofWord={titles.ofWord}\n          page={itemCount && itemCount <= 0 ? 0 : page}\n          perPage={perPage}\n          itemCount={itemCount}\n          firstPage={itemsStart !== null ? itemsStart : 1}\n          lastPage={lastPage}\n          onSetPage={onSetPage}\n          onFirstClick={onFirstClick}\n          onPreviousClick={onPreviousClick}\n          onNextClick={onNextClick}\n          onLastClick={onLastClick}\n          onPageInput={onPageInput}\n          isDisabled={isDisabled}\n          isCompact={isCompact}\n        />\n        {children}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}