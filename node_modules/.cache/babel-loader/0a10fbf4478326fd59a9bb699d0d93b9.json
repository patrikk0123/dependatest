{"ast":null,"code":"import { useCallback, useEffect, useRef, useState } from 'react';\nexport const useDataBuffer = () => {\n  const [data, setData] = useState([]);\n  const [buffer, setBuffer] = useState([]);\n  const [currentLineCount, setCurrentLineCount] = useState(1);\n  const savedTimer = useRef();\n  useEffect(() => {\n    savedTimer.current = setInterval(() => {\n      setCurrentLineCount(data => data.length);\n    }, 1500);\n    return () => {\n      clearInterval(savedTimer.current);\n    };\n  }, []);\n  useEffect(() => {\n    console.log(currentLineCount);\n\n    if (currentLineCount > initLogData.length) {\n      clearInterval(savedTimer.current);\n    } else {\n      // setLogData(initLogData.slice(0, currentLineCount));\n      addLines(initLogData.slice(currentLineCount - 3, currentLineCount));\n    }\n  }, [currentLineCount]);\n  const addLines = useCallback(lines => {\n    setData([...data, ...lines]);\n  }, [data]);\n  return {\n    buffer,\n    addLines\n  };\n};","map":{"version":3,"names":["useCallback","useEffect","useRef","useState","useDataBuffer","data","setData","buffer","setBuffer","currentLineCount","setCurrentLineCount","savedTimer","current","setInterval","length","clearInterval","console","log","initLogData","addLines","slice","lines"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/containers/useDataBuffer.ts"],"sourcesContent":["import { MutableRefObject, useCallback, useEffect, useRef, useState } from 'react';\n\nexport const useDataBuffer = () => {\n  const [data, setData] = useState<any>([]);\n  const [buffer, setBuffer] = useState<any>([]);\n  const [currentLineCount, setCurrentLineCount] = useState<number>(1);\n  const savedTimer: MutableRefObject<NodeJS.Timer | undefined> = useRef();\n\n  useEffect(() => {\n    savedTimer.current = setInterval(() => {\n      setCurrentLineCount((data: any) => data.length);\n    }, 1500);\n    return () => {\n      clearInterval(savedTimer.current);\n    };\n  }, []);\n\n  useEffect(() => {\n    console.log(currentLineCount);\n    if (currentLineCount > initLogData.length) {\n      clearInterval(savedTimer.current);\n    } else {\n      // setLogData(initLogData.slice(0, currentLineCount));\n      addLines(initLogData.slice(currentLineCount - 3, currentLineCount));\n    }\n  }, [currentLineCount]);\n\n  const addLines = useCallback(\n    (lines: string[]) => {\n      setData([...data, ...lines]);\n    },\n    [data]\n  );\n\n  return { buffer, addLines };\n};\n"],"mappings":"AAAA,SAA2BA,WAA3B,EAAwCC,SAAxC,EAAmDC,MAAnD,EAA2DC,QAA3D,QAA2E,OAA3E;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;EACjC,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAM,EAAN,CAAhC;EACA,MAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAM,EAAN,CAApC;EACA,MAAM,CAACM,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAS,CAAT,CAAxD;EACA,MAAMQ,UAAsD,GAAGT,MAAM,EAArE;EAEAD,SAAS,CAAC,MAAM;IACdU,UAAU,CAACC,OAAX,GAAqBC,WAAW,CAAC,MAAM;MACrCH,mBAAmB,CAAEL,IAAD,IAAeA,IAAI,CAACS,MAArB,CAAnB;IACD,CAF+B,EAE7B,IAF6B,CAAhC;IAGA,OAAO,MAAM;MACXC,aAAa,CAACJ,UAAU,CAACC,OAAZ,CAAb;IACD,CAFD;EAGD,CAPQ,EAON,EAPM,CAAT;EASAX,SAAS,CAAC,MAAM;IACde,OAAO,CAACC,GAAR,CAAYR,gBAAZ;;IACA,IAAIA,gBAAgB,GAAGS,WAAW,CAACJ,MAAnC,EAA2C;MACzCC,aAAa,CAACJ,UAAU,CAACC,OAAZ,CAAb;IACD,CAFD,MAEO;MACL;MACAO,QAAQ,CAACD,WAAW,CAACE,KAAZ,CAAkBX,gBAAgB,GAAG,CAArC,EAAwCA,gBAAxC,CAAD,CAAR;IACD;EACF,CARQ,EAQN,CAACA,gBAAD,CARM,CAAT;EAUA,MAAMU,QAAQ,GAAGnB,WAAW,CACzBqB,KAAD,IAAqB;IACnBf,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU,GAAGgB,KAAb,CAAD,CAAP;EACD,CAHyB,EAI1B,CAAChB,IAAD,CAJ0B,CAA5B;EAOA,OAAO;IAAEE,MAAF;IAAUY;EAAV,CAAP;AACD,CAjCM"},"metadata":{},"sourceType":"module"}