{"ast":null,"code":"var _jsxFileName = \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/SearchSelect/SearchSelect.tsx\";\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchSelect = _ref => {\n  let {\n    attribute,\n    callback\n  } = _ref;\n  const [selectOptions, setSelectOptions] = useState([]);\n  const [isSelectOpen, setIsSelectOpen] = useState(false);\n  const [selected, setSelected] = useState();\n  const [loading, setLoading] = useState(false);\n  const timer = useRef();\n  useEffect(() => {\n    setLoading(true);\n    callback({\n      params: {\n        pageSize: 20\n      }\n    }).then(response => {\n      const obj = response.data.content.map(obj => {\n        return {\n          value: obj[attribute]\n        };\n      }).map((option, index) => /*#__PURE__*/_jsxDEV(SelectOption, {\n        value: option.value\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 43\n      }, this));\n      setSelectOptions(obj);\n      setLoading(false);\n    });\n  }, [callback, attribute]);\n\n  const clearSelection = () => {\n    setSelected(null);\n    setIsSelectOpen(false);\n    setLoading(true);\n    callback({\n      params: {\n        pageSize: 20\n      }\n    }).then(response => {\n      const obj = response.data.content.map(obj => {\n        return {\n          value: obj[attribute]\n        };\n      }).map((option, index) => /*#__PURE__*/_jsxDEV(SelectOption, {\n        value: option.value\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 43\n      }, this));\n      setSelectOptions(obj);\n      setLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Select, {\n    variant: SelectVariant.typeahead,\n    onToggle: isOpen => {\n      setIsSelectOpen(isOpen);\n    },\n    onSelect: (event, selection, isPlaceholder) => {\n      if (isPlaceholder) clearSelection();else {\n        setSelected(selection);\n        setIsSelectOpen(false);\n      }\n    },\n    onTypeaheadInputChanged: val => {\n      clearTimeout(timer === null || timer === void 0 ? void 0 : timer.current);\n      timer.current = setTimeout(() => {\n        setLoading(true);\n        callback({\n          params: {\n            pageSize: 20,\n            q: `${attribute}=like=\"%${val}%\"`\n          }\n        }).then(response => {\n          setSelectOptions(response.data.content.map(obj => {\n            return {\n              value: obj[attribute]\n            };\n          }).map((option, index) => /*#__PURE__*/_jsxDEV(SelectOption, {\n            value: option.value\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 51\n          }, this)));\n          setLoading(false);\n        });\n      }, 200);\n    },\n    isInputFilterPersisted: true,\n    isInputValuePersisted: true,\n    onClear: clearSelection,\n    onFilter: () => {\n      return selectOptions;\n    },\n    selections: selected,\n    isOpen: isSelectOpen,\n    hasInlineFilter: true,\n    children: selectOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["Select","SelectOption","SelectVariant","useEffect","useRef","useState","SearchSelect","attribute","callback","selectOptions","setSelectOptions","isSelectOpen","setIsSelectOpen","selected","setSelected","loading","setLoading","timer","params","pageSize","then","response","obj","data","content","map","value","option","index","clearSelection","typeahead","isOpen","event","selection","isPlaceholder","val","clearTimeout","current","setTimeout","q"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/SearchSelect/SearchSelect.tsx"],"sourcesContent":["import { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { useEffect, useRef, useState } from 'react';\n\ninterface ISearchSelect {\n  attribute: string;\n  callback: Function;\n}\n\nexport const SearchSelect = ({ attribute, callback }: ISearchSelect) => {\n  const [selectOptions, setSelectOptions] = useState<any>([]);\n  const [isSelectOpen, setIsSelectOpen] = useState<boolean>(false);\n  const [selected, setSelected] = useState<any>();\n  const [loading, setLoading] = useState<boolean>(false);\n  const timer = useRef<any>();\n\n  useEffect(() => {\n    setLoading(true);\n    callback({ params: { pageSize: 20 } }).then((response: any) => {\n      const obj = response.data.content\n        .map((obj: any) => {\n          return {\n            value: obj[attribute],\n          };\n        })\n        .map((option: any, index: any) => <SelectOption key={index} value={option.value} />);\n      setSelectOptions(obj);\n      setLoading(false);\n    });\n  }, [callback, attribute]);\n\n  const clearSelection = () => {\n    setSelected(null);\n    setIsSelectOpen(false);\n    setLoading(true);\n    callback({ params: { pageSize: 20 } }).then((response: any) => {\n      const obj = response.data.content\n        .map((obj: any) => {\n          return {\n            value: obj[attribute],\n          };\n        })\n        .map((option: any, index: any) => <SelectOption key={index} value={option.value} />);\n      setSelectOptions(obj);\n      setLoading(false);\n    });\n  };\n\n  return (\n    <Select\n      variant={SelectVariant.typeahead}\n      onToggle={(isOpen) => {\n        setIsSelectOpen(isOpen);\n      }}\n      onSelect={(event, selection, isPlaceholder) => {\n        if (isPlaceholder) clearSelection();\n        else {\n          setSelected(selection);\n          setIsSelectOpen(false);\n        }\n      }}\n      onTypeaheadInputChanged={(val: string) => {\n        clearTimeout(timer?.current);\n        timer.current = setTimeout(() => {\n          setLoading(true);\n          callback({ params: { pageSize: 20, q: `${attribute}=like=\"%${val}%\"` } }).then((response: any) => {\n            setSelectOptions(\n              response.data.content\n                .map((obj: any) => {\n                  return {\n                    value: obj[attribute],\n                  };\n                })\n                .map((option: any, index: any) => <SelectOption key={index} value={option.value} />)\n            );\n            setLoading(false);\n          });\n        }, 200);\n      }}\n      isInputFilterPersisted={true}\n      isInputValuePersisted={true}\n      onClear={clearSelection}\n      onFilter={() => {\n        return selectOptions;\n      }}\n      selections={selected}\n      isOpen={isSelectOpen}\n      hasInlineFilter={true}\n    >\n      {selectOptions}\n    </Select>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}