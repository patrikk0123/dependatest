{"ast":null,"code":"// Animation frame based implementation of setTimeout.\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\nconst hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';\nconst now = hasNativePerformanceNow ? () => performance.now() : () => Date.now();\nexport function cancelTimeout(timeoutID) {\n  cancelAnimationFrame(timeoutID.id);\n}\nexport function requestTimeout(callback, delay) {\n  const start = now();\n\n  function tick() {\n    if (now() - start >= delay) {\n      callback.call(null);\n    } else {\n      timeoutID.id = requestAnimationFrame(tick);\n    }\n  }\n\n  const timeoutID = {\n    id: requestAnimationFrame(tick)\n  };\n  return timeoutID;\n}","map":{"version":3,"mappings":"AAAA;AACA;AAEA,MAAMA,uBAAuB,GAAG,OAAOC,WAAP,KAAuB,QAAvB,IAAmC,OAAOA,WAAW,CAACC,GAAnB,KAA2B,UAA9F;AAEA,MAAMA,GAAG,GAAGF,uBAAuB,GAAG,MAAMC,WAAW,CAACC,GAAZ,EAAT,GAA6B,MAAMC,IAAI,CAACD,GAAL,EAAtE;AAMA,OAAM,SAAUE,aAAV,CAAwBC,SAAxB,EAA4C;EAChDC,oBAAoB,CAACD,SAAS,CAACE,EAAX,CAApB;AACD;AAED,OAAM,SAAUC,cAAV,CAAyBC,QAAzB,EAA6CC,KAA7C,EAA0D;EAC9D,MAAMC,KAAK,GAAGT,GAAG,EAAjB;;EAEA,SAASU,IAAT,GAAa;IACX,IAAIV,GAAG,KAAKS,KAAR,IAAiBD,KAArB,EAA4B;MAC1BD,QAAQ,CAACI,IAAT,CAAc,IAAd;IACD,CAFD,MAEO;MACLR,SAAS,CAACE,EAAV,GAAeO,qBAAqB,CAACF,IAAD,CAApC;IACD;EACF;;EAED,MAAMP,SAAS,GAAc;IAC3BE,EAAE,EAAEO,qBAAqB,CAACF,IAAD;EADE,CAA7B;EAIA,OAAOP,SAAP;AACD","names":["hasNativePerformanceNow","performance","now","Date","cancelTimeout","timeoutID","cancelAnimationFrame","id","requestTimeout","callback","delay","start","tick","call","requestAnimationFrame"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-log-viewer/src/react-window/timer.ts"],"sourcesContent":["// Animation frame based implementation of setTimeout.\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\n\nconst hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';\n\nconst now = hasNativePerformanceNow ? () => performance.now() : () => Date.now();\n\nexport interface TimeoutID {\n  id: number;\n}\n\nexport function cancelTimeout(timeoutID: TimeoutID) {\n  cancelAnimationFrame(timeoutID.id);\n}\n\nexport function requestTimeout(callback: Function, delay: number): TimeoutID {\n  const start = now();\n\n  function tick() {\n    if (now() - start >= delay) {\n      callback.call(null);\n    } else {\n      timeoutID.id = requestAnimationFrame(tick);\n    }\n  }\n\n  const timeoutID: TimeoutID = {\n    id: requestAnimationFrame(tick)\n  };\n\n  return timeoutID;\n}\n"]},"metadata":{},"sourceType":"module"}