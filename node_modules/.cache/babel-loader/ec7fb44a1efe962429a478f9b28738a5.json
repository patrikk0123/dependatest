{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport { css } from '@patternfly/react-styles';\nimport { MenuContext } from './MenuContext';\nexport const MenuContent = React.forwardRef((props, ref) => {\n  const {\n    getHeight,\n    children,\n    menuHeight,\n    maxMenuHeight\n  } = props,\n        rest = __rest(props, [\"getHeight\", \"children\", \"menuHeight\", \"maxMenuHeight\"]);\n\n  const menuContentRef = React.createRef();\n\n  const refCallback = (el, menuId, onGetMenuHeight) => {\n    if (el) {\n      let clientHeight = el.clientHeight; // if this menu is a submenu, we need to account for the root menu list's padding and root menu content's border.\n\n      let rootMenuList = null;\n      let parentEl = el.closest(`.${styles.menuList}`);\n\n      while (parentEl !== null && parentEl.nodeType === 1) {\n        if (parentEl.classList.contains(styles.menuList)) {\n          rootMenuList = parentEl;\n        }\n\n        parentEl = parentEl.parentElement;\n      }\n\n      if (rootMenuList) {\n        const rootMenuListStyles = getComputedStyle(rootMenuList);\n        const rootMenuListPaddingOffset = parseFloat(rootMenuListStyles.getPropertyValue('padding-top').replace(/px/g, '')) + parseFloat(rootMenuListStyles.getPropertyValue('padding-bottom').replace(/px/g, '')) + parseFloat(getComputedStyle(rootMenuList.parentElement).getPropertyValue('border-bottom-width').replace(/px/g, ''));\n        clientHeight = clientHeight + rootMenuListPaddingOffset;\n      }\n\n      onGetMenuHeight && onGetMenuHeight(menuId, clientHeight);\n      getHeight && getHeight(clientHeight.toString());\n    }\n\n    return ref || menuContentRef;\n  };\n\n  return React.createElement(MenuContext.Consumer, null, _ref => {\n    let {\n      menuId,\n      onGetMenuHeight\n    } = _ref;\n    return React.createElement(\"div\", Object.assign({}, rest, {\n      className: css(styles.menuContent, props.className),\n      ref: el => refCallback(el, menuId, onGetMenuHeight),\n      style: Object.assign(Object.assign({}, menuHeight && {\n        '--pf-c-menu__content--Height': menuHeight\n      }), maxMenuHeight && {\n        '--pf-c-menu__content--MaxHeight': maxMenuHeight\n      })\n    }), children);\n  });\n});\nMenuContent.displayName = 'MenuContent';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,mDAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,SAASC,WAAT,QAA4B,eAA5B;AAeA,OAAO,MAAMC,WAAW,GAAGJ,KAAK,CAACK,UAAN,CAAiB,CAACC,KAAD,EAA0BC,GAA1B,KAA4D;EACtG,MAAM;IAAEC,SAAF;IAAaC,QAAb;IAAuBC,UAAvB;IAAmCC;EAAnC,IAA8DL,KAApE;EAAA,MAA2DM,IAAI,UAAKN,KAAL,EAAzD,wDAAyD,CAA/D;;EACA,MAAMO,cAAc,GAAGb,KAAK,CAACc,SAAN,EAAvB;;EACA,MAAMC,WAAW,GAAG,CAACC,EAAD,EAAkBC,MAAlB,EAAkCC,eAAlC,KAA+F;IACjH,IAAIF,EAAJ,EAAQ;MACN,IAAIG,YAAY,GAAGH,EAAE,CAACG,YAAtB,CADM,CAGN;;MACA,IAAIC,YAAY,GAAG,IAAnB;MACA,IAAIC,QAAQ,GAAGL,EAAE,CAACM,OAAH,CAAW,IAAIrB,MAAM,CAACsB,QAAQ,EAA9B,CAAf;;MACA,OAAOF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,CAACG,QAAT,KAAsB,CAAlD,EAAqD;QACnD,IAAIH,QAAQ,CAACI,SAAT,CAAmBC,QAAnB,CAA4BzB,MAAM,CAACsB,QAAnC,CAAJ,EAAkD;UAChDH,YAAY,GAAGC,QAAf;QACD;;QACDA,QAAQ,GAAGA,QAAQ,CAACM,aAApB;MACD;;MAED,IAAIP,YAAJ,EAAkB;QAChB,MAAMQ,kBAAkB,GAAGC,gBAAgB,CAACT,YAAD,CAA3C;QACA,MAAMU,yBAAyB,GAC7BC,UAAU,CAACH,kBAAkB,CAACI,gBAAnB,CAAoC,aAApC,EAAmDC,OAAnD,CAA2D,KAA3D,EAAkE,EAAlE,CAAD,CAAV,GACAF,UAAU,CAACH,kBAAkB,CAACI,gBAAnB,CAAoC,gBAApC,EAAsDC,OAAtD,CAA8D,KAA9D,EAAqE,EAArE,CAAD,CADV,GAEAF,UAAU,CACRF,gBAAgB,CAACT,YAAY,CAACO,aAAd,CAAhB,CACGK,gBADH,CACoB,qBADpB,EAEGC,OAFH,CAEW,KAFX,EAEkB,EAFlB,CADQ,CAHZ;QAQAd,YAAY,GAAGA,YAAY,GAAGW,yBAA9B;MACD;;MAEDZ,eAAe,IAAIA,eAAe,CAACD,MAAD,EAASE,YAAT,CAAlC;MACAX,SAAS,IAAIA,SAAS,CAACW,YAAY,CAACe,QAAb,EAAD,CAAtB;IACD;;IACD,OAAO3B,GAAG,IAAIM,cAAd;EACD,CA/BD;;EAgCA,OACEb,oBAACG,WAAW,CAACgC,QAAb,EAAqB,IAArB,EACG;IAAA,IAAC;MAAElB,MAAF;MAAUC;IAAV,CAAD;IAAA,OACClB,6CACMY,IADN,EACU;MACRwB,SAAS,EAAElC,GAAG,CAACD,MAAM,CAACoC,WAAR,EAAqB/B,KAAK,CAAC8B,SAA3B,CADN;MAER7B,GAAG,EAAES,EAAE,IAAID,WAAW,CAACC,EAAD,EAAKC,MAAL,EAAaC,eAAb,CAFd;MAGRoB,KAAK,EACHC,gCACM7B,UAAU,IAAI;QAAE,gCAAgCA;MAAlC,CADpB,GAEMC,aAAa,IAAI;QAAE,mCAAmCA;MAArC,CAFvB;IAJM,CADV,GAWGF,QAXH,CADD;EAAA,CADH,CADF;AAmBD,CAtD0B,CAApB;AAuDPL,WAAW,CAACoC,WAAZ,GAA0B,aAA1B","names":["React","styles","css","MenuContext","MenuContent","forwardRef","props","ref","getHeight","children","menuHeight","maxMenuHeight","rest","menuContentRef","createRef","refCallback","el","menuId","onGetMenuHeight","clientHeight","rootMenuList","parentEl","closest","menuList","nodeType","classList","contains","parentElement","rootMenuListStyles","getComputedStyle","rootMenuListPaddingOffset","parseFloat","getPropertyValue","replace","toString","Consumer","className","menuContent","style","Object","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Menu/MenuContent.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport { css } from '@patternfly/react-styles';\nimport { MenuContext } from './MenuContext';\n\nexport interface MenuContentProps extends React.HTMLProps<HTMLElement> {\n  /** Items within group */\n  children?: React.ReactNode;\n  /** Forwarded ref */\n  innerRef?: React.Ref<any>;\n  /** Height of the menu content */\n  menuHeight?: string;\n  /** Maximum height of menu content */\n  maxMenuHeight?: string;\n  /** Callback to return the height of the menu content */\n  getHeight?: (height: string) => void;\n}\n\nexport const MenuContent = React.forwardRef((props: MenuContentProps, ref: React.Ref<HTMLDivElement>) => {\n  const { getHeight, children, menuHeight, maxMenuHeight, ...rest } = props;\n  const menuContentRef = React.createRef<HTMLDivElement>();\n  const refCallback = (el: HTMLElement, menuId: string, onGetMenuHeight: (menuId: string, height: number) => void) => {\n    if (el) {\n      let clientHeight = el.clientHeight;\n\n      // if this menu is a submenu, we need to account for the root menu list's padding and root menu content's border.\n      let rootMenuList = null;\n      let parentEl = el.closest(`.${styles.menuList}`);\n      while (parentEl !== null && parentEl.nodeType === 1) {\n        if (parentEl.classList.contains(styles.menuList)) {\n          rootMenuList = parentEl;\n        }\n        parentEl = parentEl.parentElement;\n      }\n\n      if (rootMenuList) {\n        const rootMenuListStyles = getComputedStyle(rootMenuList);\n        const rootMenuListPaddingOffset =\n          parseFloat(rootMenuListStyles.getPropertyValue('padding-top').replace(/px/g, '')) +\n          parseFloat(rootMenuListStyles.getPropertyValue('padding-bottom').replace(/px/g, '')) +\n          parseFloat(\n            getComputedStyle(rootMenuList.parentElement)\n              .getPropertyValue('border-bottom-width')\n              .replace(/px/g, '')\n          );\n        clientHeight = clientHeight + rootMenuListPaddingOffset;\n      }\n\n      onGetMenuHeight && onGetMenuHeight(menuId, clientHeight);\n      getHeight && getHeight(clientHeight.toString());\n    }\n    return ref || menuContentRef;\n  };\n  return (\n    <MenuContext.Consumer>\n      {({ menuId, onGetMenuHeight }) => (\n        <div\n          {...rest}\n          className={css(styles.menuContent, props.className)}\n          ref={el => refCallback(el, menuId, onGetMenuHeight)}\n          style={\n            {\n              ...(menuHeight && { '--pf-c-menu__content--Height': menuHeight }),\n              ...(maxMenuHeight && { '--pf-c-menu__content--MaxHeight': maxMenuHeight })\n            } as React.CSSProperties\n          }\n        >\n          {children}\n        </div>\n      )}\n    </MenuContext.Consumer>\n  );\n});\nMenuContent.displayName = 'MenuContent';\n"]},"metadata":{},"sourceType":"module"}