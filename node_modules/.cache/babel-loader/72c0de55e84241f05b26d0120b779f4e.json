{"ast":null,"code":"import _defineProperty from\"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _slicedToArray from\"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Button,Chip,ChipGroup,InputGroup,Select,SelectOption,SelectVariant,TextInput}from'@patternfly/react-core';import{useEffect,useState}from'react';import{useLocation,useNavigate}from'react-router-dom';import{constructCustomFilterParam}from'../../utils/customParamHelper';import{addQParamItem,parseQParamDeep,removeQParamItem}from'../../utils/qParamHelper';import{getComponentQueryParamValue,updateQueryParamsInURL}from'../../utils/queryParamsHelper';import styles from'./Filtering.module.css';/**\n * All Query params except:\n *  - pagination\n *  - sorting\n *\n * Typically Q params and other custom params.\n *\n * @example\n * {\n *   status: ['REJECTED', 'FAILED']\n *   buildConfigName: ['%customA%']\n * }\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";/**\n * @example\n  const filterOptions: IFilterOptions = {\n    filterAttributes: {\n      name: {\n        id: 'name',\n        title: 'Name',\n        placeholder: 'string | !string | s?ring | st*ng',\n        operator: '=like=',\n      },\n      description: {\n        id: 'description',\n        title: 'Description',\n        operator: '=like=',\n      },\n      customb: {\n        id: 'customb',\n        title: 'Custom Param',\n        isCustomParam: true,\n        operator: '=like=',\n      },\n      status: {\n        id: 'status',\n        title: 'Status',\n        filterValues: ['SUCCESS', 'REJECTED', 'FAILED'],\n        operator: '==',\n      },\n    },\n  };\n */export var Filtering=function Filtering(_ref){var _filterAttribute$filt;var filterOptions=_ref.filterOptions,componentId=_ref.componentId;var location=useLocation();var navigate=useNavigate();/**\n   * FILTER ATTRIBUTE\n   */ // first key\nvar defaultAttributeKey=Object.keys(filterOptions.filterAttributes)[0];var _useState=useState(filterOptions.filterAttributes[defaultAttributeKey]),_useState2=_slicedToArray(_useState,2),filterAttribute=_useState2[0],setFilterAttribute=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isFilterAttributeOpen=_useState4[0],setIsFilterAttributeOpen=_useState4[1];/**\n   * FILTER VALUE\n   */var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),filterValue=_useState6[0],setFilterValue=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isFilterValueOpen=_useState8[0],setIsFilterValueOpen=_useState8[1];/**\n   * APPLIED FILTERS\n   */var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),appliedFilters=_useState10[0],setAppliedFilters=_useState10[1];/**\n   * Generate user friendly chip title representing applied filter (Q param or custom filter param).\n   */var generateChipTitle=function generateChipTitle(filterAttribute,filterValue){if(filterAttribute.operator==='=like='){var isNegated=false;// !\"%abc%\" -> \"%abc%\" when negated\nif(filterValue.startsWith('!')){filterValue=filterValue.substring(1);isNegated=true;}// %abc% -> abc (custom param is not wrapped by \" characters)\nif(filterAttribute.isCustomParam){filterValue=filterValue.substring(1,filterValue.length-1);}// \"%abc%\" -> abc\nelse{filterValue=filterValue.substring(2,filterValue.length-2);}// abc -> !abc when negated\nreturn(isNegated?'!':'')+filterValue;}return filterValue;};/**\n   * Add filter by updating URL.\n   */var addFilter=function addFilter(filterAttribute,filterValue){// custom query param (not Q param)\nif(filterAttribute.isCustomParam){var adjustedFilterValue=constructCustomFilterParam(filterAttribute,filterValue);updateQueryParamsInURL(_defineProperty({},filterAttribute.id,adjustedFilterValue),componentId,location,navigate);}// Q param\nelse{var currentQParam=getComponentQueryParamValue(location.search,'q',componentId)||'';var q=addQParamItem(filterAttribute.id,filterValue,filterAttribute.operator,currentQParam);/**\n       * Update Query Params only if some new meaningful q param is returned.\n       */if(q){// update Q param and reset pageIndex\nupdateQueryParamsInURL({q:q,pageIndex:1},componentId,location,navigate);}}};/**\n   * Remove filter by updating URL.\n   */var removeFilter=function removeFilter(filterAttributeKey,filterValue){if(filterOptions.filterAttributes[filterAttributeKey].isCustomParam){updateQueryParamsInURL(_defineProperty({},filterAttributeKey,''),componentId,location,navigate);}else{var currentQParam=getComponentQueryParamValue(location.search,'q',componentId)||'';var q=removeQParamItem(filterAttributeKey,filterValue,filterOptions.filterAttributes[filterAttributeKey].operator,currentQParam);updateQueryParamsInURL({q:q},componentId,location,navigate);}};/**\n   * Reset all filtering parameters to empty '' string and update Query Params in URL, they will be removed if empty.\n   *\n   * Non filtering parameters (like pagination and sorting) are untouched.\n   */var removeAllFilters=function removeAllFilters(){// reset q parameter\nvar zeroedFilteringParameters={q:''};// reset all custom filtering parameters\nfor(var _i=0,_Object$entries=Object.entries(filterOptions.filterAttributes);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),_key=_Object$entries$_i[0],value=_Object$entries$_i[1];if(value.isCustomParam){zeroedFilteringParameters[_key]='';}}updateQueryParamsInURL(zeroedFilteringParameters,componentId,location,navigate);};/**\n   * Synchronize filters from URL to appliedFilters react hook.\n   */useEffect(function(){var currentQParam=getComponentQueryParamValue(location.search,'q',componentId)||'';var appliedFilters=parseQParamDeep(currentQParam);for(var _i2=0,_Object$entries2=Object.entries(filterOptions.filterAttributes);_i2<_Object$entries2.length;_i2++){var _Object$entries2$_i=_slicedToArray(_Object$entries2[_i2],2),_key2=_Object$entries2$_i[0],value=_Object$entries2$_i[1];// check filter attributes validity\nif(_key2!==value.id){console.error('filterAttributes: ',filterOptions.filterAttributes);throw new Error(\"filterAttributes have invalid format, object key (\".concat(_key2,\") has to match id field (\").concat(value.id,\")!\"));}if(value.isCustomParam){var customParamValue=getComponentQueryParamValue(location.search,_key2,componentId);if(customParamValue){appliedFilters[_key2]=[customParamValue];}}}setAppliedFilters(appliedFilters);},[location.search,location,componentId,navigate,filterOptions.filterAttributes]);// primary: history.location.search\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(InputGroup,{children:[/*#__PURE__*/_jsx(Select,{width:\"170px\",variant:SelectVariant.single,onToggle:function onToggle(isOpen){setIsFilterAttributeOpen(isOpen);},onSelect:function onSelect(event,selection,isPlaceholder){if(!isPlaceholder){setFilterAttribute(selection);setIsFilterAttributeOpen(false);}},selections:filterAttribute,isOpen:isFilterAttributeOpen,children:Object.keys(filterOptions.filterAttributes).map(function(filterAttributeKey){var filterAttribute=filterOptions.filterAttributes[filterAttributeKey];// use 'title' attribute as default\nfilterAttribute.toString=function(){return filterAttribute.title;};return/*#__PURE__*/_jsx(SelectOption,{value:filterAttribute},filterAttribute.id);})}),(_filterAttribute$filt=filterAttribute.filterValues)!==null&&_filterAttribute$filt!==void 0&&_filterAttribute$filt.length?/*#__PURE__*/_jsx(Select,{className:styles['form-input'],variant:SelectVariant.single,onToggle:function onToggle(isOpen){setIsFilterValueOpen(isOpen);},onSelect:function onSelect(event,selection,isPlaceholder){addFilter(filterAttribute,selection);setIsFilterValueOpen(false);},isOpen:isFilterValueOpen,children:filterAttribute.filterValues.map(function(filterValue){return/*#__PURE__*/_jsx(SelectOption,{value:filterValue},filterValue);})}):/*#__PURE__*/_jsx(TextInput,{className:styles['form-input'],type:\"text\",id:\"filter-text\",placeholder:filterAttribute.placeholder||\"Filter by \".concat(filterAttribute),onChange:function onChange(value){setFilterValue(value);},onKeyPress:function onKeyPress(event){if(event.key==='Enter'&&filterValue&&filterValue.trim().length>0){addFilter(filterAttribute,filterValue);}}})]}),/*#__PURE__*/_jsx(\"div\",{className:styles['applied-filters'],children:appliedFilters&&/*#__PURE__*/_jsxs(_Fragment,{children:[Object.keys(appliedFilters).map(function(filterAttributeKey){return/*#__PURE__*/_jsx(ChipGroup,{className:styles['chip-group'],categoryName:filterOptions.filterAttributes[filterAttributeKey].title,children:appliedFilters[filterAttributeKey].map(function(filterValueItem){return/*#__PURE__*/_jsx(Chip,{onClick:function onClick(){removeFilter(filterAttributeKey,filterValueItem);},children:generateChipTitle(filterOptions.filterAttributes[filterAttributeKey],filterValueItem)},filterValueItem);})},filterAttributeKey);}),Object.keys(appliedFilters).length!==0&&/*#__PURE__*/_jsx(Button,{onClick:function onClick(){removeAllFilters();},variant:\"link\",children:\"Clear all filters\"})]})})]});};","map":{"version":3,"names":["Button","Chip","ChipGroup","InputGroup","Select","SelectOption","SelectVariant","TextInput","useEffect","useState","useLocation","useNavigate","constructCustomFilterParam","addQParamItem","parseQParamDeep","removeQParamItem","getComponentQueryParamValue","updateQueryParamsInURL","styles","Filtering","filterOptions","componentId","location","navigate","defaultAttributeKey","Object","keys","filterAttributes","filterAttribute","setFilterAttribute","isFilterAttributeOpen","setIsFilterAttributeOpen","filterValue","setFilterValue","isFilterValueOpen","setIsFilterValueOpen","appliedFilters","setAppliedFilters","generateChipTitle","operator","isNegated","startsWith","substring","isCustomParam","length","addFilter","adjustedFilterValue","id","currentQParam","search","q","pageIndex","removeFilter","filterAttributeKey","removeAllFilters","zeroedFilteringParameters","entries","key","value","console","error","Error","customParamValue","single","isOpen","event","selection","isPlaceholder","map","toString","title","filterValues","placeholder","trim","filterValueItem"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/Filtering/Filtering.tsx"],"sourcesContent":["import { Button, Chip, ChipGroup, InputGroup, Select, SelectOption, SelectVariant, TextInput } from '@patternfly/react-core';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { constructCustomFilterParam } from '../../utils/customParamHelper';\nimport { addQParamItem, IQParamOperators, parseQParamDeep, removeQParamItem } from '../../utils/qParamHelper';\nimport { getComponentQueryParamValue, updateQueryParamsInURL } from '../../utils/queryParamsHelper';\nimport styles from './Filtering.module.css';\n\n/**\n * All Query params except:\n *  - pagination\n *  - sorting\n *\n * Typically Q params and other custom params.\n *\n * @example\n * {\n *   status: ['REJECTED', 'FAILED']\n *   buildConfigName: ['%customA%']\n * }\n */\nexport interface IAppliedFilters {\n  [key: string]: string[];\n}\n\n/**\n * Not all possible combinations are valid.\n *\n * @example\n * {\n *   id: 'name',\n *   title: 'Name',\n *   placeholder: 'string | !string | s?ring | st*ng',\n *   operator: '=like='\n * }\n *\n * @example\n * {\n *   id: 'status',\n *   title: 'Status',\n *   filterValues: ['SUCCESS', 'REJECTED', 'FAILED'],\n *   operator: '=='\n * }\n *\n * @example\n * {\n *   id: 'customParam',\n *   title: 'Custom Param',\n *   isCustomParam: true,\n *   operator: '=like='\n * }\n */\nexport interface IFilterAttribute {\n  /**\n   * ID has to match object key {@link IFilterObject}, there is automatic checker throwing errors if they don't match.\n   */\n  id: string;\n  /**\n   * Title will be displayed to the user.\n   */\n  title: string;\n  /**\n   * Placeholder when text input is displayed.\n   */\n  placeholder?: string;\n  /**\n   * Select instead of text input will be displayed.\n   */\n  filterValues?: string[];\n  /**\n   * Additional operators (see IQParamOperators):\n   *  - '=like=' valid only when filterValues are not defined ('=notlike=' is determined automatically when filter value starts with ! character)\n   *  - '==' valid only when filterValues are defined\n   *  - '!=' valid only when filterValues are defined\n   */\n  operator: IQParamOperators;\n  /**\n   * When true, custom id based Query Param (not Q) will be used.\n   */\n  isCustomParam?: boolean;\n}\n\n/**\n * @example\n * {\n *   name: {IFilterAttribute},\n *   status: {IFilterAttribute},\n *   customParam: {IFilterAttribute}\n * }\n */\ninterface IFilterObject {\n  [key: string]: IFilterAttribute;\n}\n\nexport interface IFilterOptions {\n  filterAttributes: IFilterObject;\n}\n\ninterface IFilteringProps {\n  filterOptions: IFilterOptions;\n  componentId: string;\n}\n\n/**\n * @example\n  const filterOptions: IFilterOptions = {\n    filterAttributes: {\n      name: {\n        id: 'name',\n        title: 'Name',\n        placeholder: 'string | !string | s?ring | st*ng',\n        operator: '=like=',\n      },\n      description: {\n        id: 'description',\n        title: 'Description',\n        operator: '=like=',\n      },\n      customb: {\n        id: 'customb',\n        title: 'Custom Param',\n        isCustomParam: true,\n        operator: '=like=',\n      },\n      status: {\n        id: 'status',\n        title: 'Status',\n        filterValues: ['SUCCESS', 'REJECTED', 'FAILED'],\n        operator: '==',\n      },\n    },\n  };\n */\nexport const Filtering = ({ filterOptions, componentId }: IFilteringProps) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  /**\n   * FILTER ATTRIBUTE\n   */\n\n  // first key\n  const defaultAttributeKey = Object.keys(filterOptions.filterAttributes)[0];\n\n  const [filterAttribute, setFilterAttribute] = useState<IFilterAttribute>(filterOptions.filterAttributes[defaultAttributeKey]);\n  const [isFilterAttributeOpen, setIsFilterAttributeOpen] = useState<boolean>(false);\n\n  /**\n   * FILTER VALUE\n   */\n  const [filterValue, setFilterValue] = useState<string>('');\n  const [isFilterValueOpen, setIsFilterValueOpen] = useState<boolean>(false);\n\n  /**\n   * APPLIED FILTERS\n   */\n  const [appliedFilters, setAppliedFilters] = useState<IAppliedFilters>();\n\n  /**\n   * Generate user friendly chip title representing applied filter (Q param or custom filter param).\n   */\n  const generateChipTitle = (filterAttribute: IFilterAttribute, filterValue: string): string => {\n    if (filterAttribute.operator === '=like=') {\n      let isNegated = false;\n\n      // !\"%abc%\" -> \"%abc%\" when negated\n      if (filterValue.startsWith('!')) {\n        filterValue = filterValue.substring(1);\n        isNegated = true;\n      }\n\n      // %abc% -> abc (custom param is not wrapped by \" characters)\n      if (filterAttribute.isCustomParam) {\n        filterValue = filterValue.substring(1, filterValue.length - 1);\n      }\n      // \"%abc%\" -> abc\n      else {\n        filterValue = filterValue.substring(2, filterValue.length - 2);\n      }\n\n      // abc -> !abc when negated\n      return (isNegated ? '!' : '') + filterValue;\n    }\n    return filterValue;\n  };\n\n  /**\n   * Add filter by updating URL.\n   */\n  const addFilter = (filterAttribute: IFilterAttribute, filterValue: string) => {\n    // custom query param (not Q param)\n    if (filterAttribute.isCustomParam) {\n      const adjustedFilterValue = constructCustomFilterParam(filterAttribute, filterValue);\n      updateQueryParamsInURL({ [filterAttribute.id]: adjustedFilterValue }, componentId, location, navigate);\n    }\n\n    // Q param\n    else {\n      const currentQParam = getComponentQueryParamValue(location.search, 'q', componentId) || '';\n      const q = addQParamItem(filterAttribute.id, filterValue, filterAttribute.operator, currentQParam);\n\n      /**\n       * Update Query Params only if some new meaningful q param is returned.\n       */\n      if (q) {\n        // update Q param and reset pageIndex\n        updateQueryParamsInURL({ q, pageIndex: 1 }, componentId, location, navigate);\n      }\n    }\n  };\n\n  /**\n   * Remove filter by updating URL.\n   */\n  const removeFilter = (filterAttributeKey: string, filterValue: string) => {\n    if (filterOptions.filterAttributes[filterAttributeKey].isCustomParam) {\n      updateQueryParamsInURL({ [filterAttributeKey]: '' }, componentId, location, navigate);\n    } else {\n      const currentQParam = getComponentQueryParamValue(location.search, 'q', componentId) || '';\n      const q = removeQParamItem(\n        filterAttributeKey,\n        filterValue,\n        filterOptions.filterAttributes[filterAttributeKey].operator,\n        currentQParam\n      );\n      updateQueryParamsInURL({ q }, componentId, location, navigate);\n    }\n  };\n\n  /**\n   * Reset all filtering parameters to empty '' string and update Query Params in URL, they will be removed if empty.\n   *\n   * Non filtering parameters (like pagination and sorting) are untouched.\n   */\n  const removeAllFilters = () => {\n    // reset q parameter\n    const zeroedFilteringParameters: { [key: string]: string } = { q: '' };\n\n    // reset all custom filtering parameters\n    for (const [key, value] of Object.entries(filterOptions.filterAttributes)) {\n      if (value.isCustomParam) {\n        zeroedFilteringParameters[key] = '';\n      }\n    }\n\n    updateQueryParamsInURL(zeroedFilteringParameters, componentId, location, navigate);\n  };\n\n  /**\n   * Synchronize filters from URL to appliedFilters react hook.\n   */\n  useEffect(() => {\n    const currentQParam = getComponentQueryParamValue(location.search, 'q', componentId) || '';\n    const appliedFilters: IAppliedFilters = parseQParamDeep(currentQParam);\n\n    for (const [key, value] of Object.entries(filterOptions.filterAttributes)) {\n      // check filter attributes validity\n      if (key !== value.id) {\n        console.error('filterAttributes: ', filterOptions.filterAttributes);\n        throw new Error(`filterAttributes have invalid format, object key (${key}) has to match id field (${value.id})!`);\n      }\n\n      if (value.isCustomParam) {\n        const customParamValue = getComponentQueryParamValue(location.search, key, componentId);\n        if (customParamValue) {\n          appliedFilters[key] = [customParamValue];\n        }\n      }\n    }\n\n    setAppliedFilters(appliedFilters);\n  }, [location.search, location, componentId, navigate, filterOptions.filterAttributes]); // primary: history.location.search\n\n  return (\n    <>\n      {/* FILTER INPUTS */}\n      <InputGroup>\n        {/* filter attribute */}\n        <Select\n          width=\"170px\"\n          variant={SelectVariant.single}\n          onToggle={(isOpen) => {\n            setIsFilterAttributeOpen(isOpen);\n          }}\n          onSelect={(event, selection, isPlaceholder) => {\n            if (!isPlaceholder) {\n              setFilterAttribute(selection as IFilterAttribute);\n              setIsFilterAttributeOpen(false);\n            }\n          }}\n          selections={filterAttribute}\n          isOpen={isFilterAttributeOpen}\n        >\n          {Object.keys(filterOptions.filterAttributes).map((filterAttributeKey: string) => {\n            const filterAttribute = filterOptions.filterAttributes[filterAttributeKey];\n            // use 'title' attribute as default\n            filterAttribute.toString = () => {\n              return filterAttribute.title;\n            };\n\n            return <SelectOption key={filterAttribute.id} value={filterAttribute} />;\n          })}\n        </Select>\n\n        {/* filter value */}\n        {filterAttribute.filterValues?.length ? (\n          <Select\n            className={styles['form-input']}\n            variant={SelectVariant.single}\n            onToggle={(isOpen) => {\n              setIsFilterValueOpen(isOpen);\n            }}\n            onSelect={(event, selection, isPlaceholder) => {\n              addFilter(filterAttribute, selection as string);\n              setIsFilterValueOpen(false);\n            }}\n            isOpen={isFilterValueOpen}\n          >\n            {filterAttribute.filterValues.map((filterValue: string) => {\n              return <SelectOption key={filterValue} value={filterValue} />;\n            })}\n          </Select>\n        ) : (\n          <TextInput\n            className={styles['form-input']}\n            type=\"text\"\n            id=\"filter-text\"\n            placeholder={filterAttribute.placeholder || `Filter by ${filterAttribute}`}\n            onChange={(value) => {\n              setFilterValue(value);\n            }}\n            onKeyPress={(event) => {\n              if (event.key === 'Enter' && filterValue && filterValue.trim().length > 0) {\n                addFilter(filterAttribute, filterValue);\n              }\n            }}\n          />\n        )}\n      </InputGroup>\n\n      {/* APPLIED FILTERS */}\n      <div className={styles['applied-filters']}>\n        {appliedFilters && (\n          <>\n            {/* FILTER CHIPS */}\n            {Object.keys(appliedFilters).map((filterAttributeKey) => (\n              <ChipGroup\n                className={styles['chip-group']}\n                key={filterAttributeKey}\n                categoryName={filterOptions.filterAttributes[filterAttributeKey].title}\n              >\n                {appliedFilters[filterAttributeKey].map((filterValueItem) => (\n                  <Chip\n                    key={filterValueItem}\n                    onClick={() => {\n                      removeFilter(filterAttributeKey, filterValueItem);\n                    }}\n                  >\n                    {generateChipTitle(filterOptions.filterAttributes[filterAttributeKey], filterValueItem)}\n                  </Chip>\n                ))}\n              </ChipGroup>\n            ))}\n\n            {/* CLEAR ALL */}\n            {Object.keys(appliedFilters).length !== 0 && (\n              <Button\n                onClick={() => {\n                  removeAllFilters();\n                }}\n                variant=\"link\"\n              >\n                Clear all filters\n              </Button>\n            )}\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}