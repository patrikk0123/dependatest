{"ast":null,"code":"/** This Component can be used to wrap a functional component in order to generate a random ID\n * Example of how to use this component\n *\n * const Component = ({id}: {id: string}) => (\n *  <GenerateId>{randomId => (\n *     <div id={id || randomId}>\n *       div with random ID\n *     </div>\n *   )}\n *  </GenerateId>\n *  );\n */\nimport * as React from 'react';\nlet currentId = 0;\nexport class GenerateId extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.id = `${this.props.prefix}${currentId++}`;\n  }\n\n  render() {\n    return this.props.children(this.id);\n  }\n\n}\nGenerateId.displayName = 'GenerateId';\nGenerateId.defaultProps = {\n  prefix: 'pf-random-id-'\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;AAaA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,IAAIC,SAAS,GAAG,CAAhB;AASA,OAAM,MAAOC,UAAP,SAA0BF,KAAK,CAACG,SAAhC,CAA8D;EAApEC;;IAKE,UAAK,GAAG,KAAKC,KAAL,CAAWC,MAAM,GAAGL,SAAS,EAAE,EAAvC;EAKD;;EAHCM,MAAM;IACJ,OAAO,KAAKF,KAAL,CAAWG,QAAX,CAAoB,KAAKC,EAAzB,CAAP;EACD;;AATiE;AAC3DP,yBAAc,YAAd;AACAA,0BAAe;EACpBI,MAAM,EAAE;AADY,CAAf","names":["React","currentId","GenerateId","Component","constructor","props","prefix","render","children","id"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/helpers/GenerateId/GenerateId.ts"],"sourcesContent":["/** This Component can be used to wrap a functional component in order to generate a random ID\n * Example of how to use this component\n *\n * const Component = ({id}: {id: string}) => (\n *  <GenerateId>{randomId => (\n *     <div id={id || randomId}>\n *       div with random ID\n *     </div>\n *   )}\n *  </GenerateId>\n *  );\n */\n\nimport * as React from 'react';\n\nlet currentId = 0;\n\ninterface GenerateIdProps {\n  /** String to prefix the random id with */\n  prefix?: string;\n  /** Component to be rendered with the generated id */\n  children(id: string): React.ReactNode;\n}\n\nexport class GenerateId extends React.Component<GenerateIdProps, {}> {\n  static displayName = 'GenerateId';\n  static defaultProps = {\n    prefix: 'pf-random-id-'\n  };\n  id = `${this.props.prefix}${currentId++}`;\n\n  render() {\n    return this.props.children(this.id);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}