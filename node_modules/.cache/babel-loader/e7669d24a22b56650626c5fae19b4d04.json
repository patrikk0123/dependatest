{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\n\nconst TbodyBase = _a => {\n  var {\n    children,\n    className,\n    isExpanded,\n    innerRef,\n    isEvenStriped = false,\n    isOddStriped = false\n  } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"isExpanded\", \"innerRef\", \"isEvenStriped\", \"isOddStriped\"]);\n\n  return React.createElement(\"tbody\", Object.assign({\n    role: \"rowgroup\",\n    className: css(className, isExpanded && styles.modifiers.expanded, isOddStriped && styles.modifiers.striped, isEvenStriped && styles.modifiers.stripedEven),\n    ref: innerRef\n  }, props), children);\n};\n\nexport const Tbody = React.forwardRef((props, ref) => React.createElement(TbodyBase, Object.assign({}, props, {\n  innerRef: ref\n})));\nTbody.displayName = 'Tbody';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,qDAAnB;;AAiBA,MAAMC,SAAS,GAAyCC,EAAD,IAQtC;MARuC;IACtDC,QADsD;IAEtDC,SAFsD;IAGtDC,UAHsD;IAItDC,QAJsD;IAKtDC,aAAa,GAAG,KALsC;IAMtDC,YAAY,GAAG;EANuC,IAMlCN;MACjBO,KAAK,cAP8C,oFAO9C;;EACQ,OAChBX;IACEY,IAAI,EAAC,UADP;IAEEN,SAAS,EAAEL,GAAG,CACZK,SADY,EAEZC,UAAU,IAAIL,MAAM,CAACW,SAAP,CAAiBC,QAFnB,EAGZJ,YAAY,IAAIR,MAAM,CAACW,SAAP,CAAiBE,OAHrB,EAIZN,aAAa,IAAIP,MAAM,CAACW,SAAP,CAAiBG,WAJtB,CAFhB;IAQEC,GAAG,EAAET;EARP,GASMG,KATN,GAWGN,QAXH,CADgB;AAcjB,CAtBD;;AAwBA,OAAO,MAAMa,KAAK,GAAGlB,KAAK,CAACmB,UAAN,CAAiB,CAACR,KAAD,EAAoBM,GAApB,KACpCjB,oBAACG,SAAD,EAAUiB,kBAAKT,KAAL,EAAU;EAAEH,QAAQ,EAAES;AAAZ,CAAV,CAAV,CADmB,CAAd;AAGPC,KAAK,CAACG,WAAN,GAAoB,OAApB","names":["React","css","styles","TbodyBase","_a","children","className","isExpanded","innerRef","isEvenStriped","isOddStriped","props","role","modifiers","expanded","striped","stripedEven","ref","Tbody","forwardRef","Object","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-table/src/components/TableComposable/Tbody.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\n\nexport interface TbodyProps extends React.HTMLProps<HTMLTableSectionElement> {\n  /** Content rendered inside the <tbody> row group */\n  children?: React.ReactNode;\n  /** Additional classes added to the <tbody> element  */\n  className?: string;\n  /** Modifies the body to allow for expandable rows */\n  isExpanded?: boolean;\n  /** Forwarded ref */\n  innerRef?: React.Ref<any>;\n  /** Flag indicating the <tbody> contains oddly striped rows. */\n  isOddStriped?: boolean;\n  /** Flag indicating the <tbody> contains evenly striped rows. */\n  isEvenStriped?: boolean;\n}\n\nconst TbodyBase: React.FunctionComponent<TbodyProps> = ({\n  children,\n  className,\n  isExpanded,\n  innerRef,\n  isEvenStriped = false,\n  isOddStriped = false,\n  ...props\n}: TbodyProps) => (\n  <tbody\n    role=\"rowgroup\"\n    className={css(\n      className,\n      isExpanded && styles.modifiers.expanded,\n      isOddStriped && styles.modifiers.striped,\n      isEvenStriped && styles.modifiers.stripedEven\n    )}\n    ref={innerRef}\n    {...props}\n  >\n    {children}\n  </tbody>\n);\n\nexport const Tbody = React.forwardRef((props: TbodyProps, ref: React.Ref<HTMLTableSectionElement>) => (\n  <TbodyBase {...props} innerRef={ref} />\n));\nTbody.displayName = 'Tbody';\n"]},"metadata":{},"sourceType":"module"}