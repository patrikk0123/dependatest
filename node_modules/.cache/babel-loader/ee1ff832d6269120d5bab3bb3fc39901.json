{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Form/form';\nimport { css } from '@patternfly/react-styles';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { Button } from '../Button';\nexport var FormFieldGroupToggle = function FormFieldGroupToggle(_a) {\n  var className = _a.className,\n      onToggle = _a.onToggle,\n      isExpanded = _a.isExpanded,\n      ariaLabel = _a['aria-label'],\n      ariaLabelledby = _a['aria-labelledby'],\n      toggleId = _a.toggleId,\n      props = __rest(_a, [\"className\", \"onToggle\", \"isExpanded\", 'aria-label', 'aria-labelledby', \"toggleId\"]);\n\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.formFieldGroupToggle, className)\n  }, props), React.createElement(\"div\", {\n    className: css(styles.formFieldGroupToggleButton)\n  }, React.createElement(Button, {\n    variant: \"plain\",\n    \"aria-label\": ariaLabel,\n    onClick: onToggle,\n    \"aria-expanded\": isExpanded,\n    \"aria-labelledby\": ariaLabelledby,\n    id: toggleId\n  }, React.createElement(\"span\", {\n    className: css(styles.formFieldGroupToggleIcon)\n  }, React.createElement(AngleRightIcon, {\n    \"aria-hidden\": \"true\"\n  })))));\n};\nFormFieldGroupToggle.displayName = 'FormFieldGroupToggle';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,mDAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,cAAP,MAA2B,yDAA3B;AACA,SAASC,MAAT,QAAuB,WAAvB;AAiBA,OAAO,IAAMC,oBAAoB,GAAuD,SAA3EA,oBAA2E,CAACC,EAAD,EAQxD;MAP9BC,YAKQD,GALRC;MACAC,WAIQF,GAJRE;MACAC,aAGQH,GAHRG;MACcC,YAENJ,GAFR;MACmBK,iBACXL,GADR;MACAM,WAAQN,GAARM;MACGC,QAAKC,WAP+E,oFAO/E;;EACuB,OAC/Bd;IAAKO,SAAS,EAAEL,GAAG,CAACD,MAAM,CAACc,oBAAR,EAA8BR,SAA9B;EAAnB,GAAiEM,KAAjE,GACEb;IAAKO,SAAS,EAAEL,GAAG,CAACD,MAAM,CAACe,0BAAR;EAAnB,GACEhB,oBAACI,MAAD,EAAO;IACLa,OAAO,EAAC,OADH;IACU,cACHP,SAFP;IAGLQ,OAAO,EAAEV,QAHJ;IAGY,iBACFC,UAJV;IAIoB,mBACRE,cALZ;IAMLQ,EAAE,EAAEP;EANC,CAAP,EAQEZ;IAAMO,SAAS,EAAEL,GAAG,CAACD,MAAM,CAACmB,wBAAR;EAApB,GACEpB,oBAACG,cAAD,EAAe;IAAA,eAAa;EAAb,CAAf,CADF,CARF,CADF,CADF,CAD+B;AAiBhC,CAzBM;AA0BPE,oBAAoB,CAACgB,WAArB,GAAmC,sBAAnC","names":["React","styles","css","AngleRightIcon","Button","FormFieldGroupToggle","_a","className","onToggle","isExpanded","ariaLabel","ariaLabelledby","toggleId","props","__rest","formFieldGroupToggle","formFieldGroupToggleButton","variant","onClick","id","formFieldGroupToggleIcon","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Form/FormFieldGroupToggle.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Form/form';\nimport { css } from '@patternfly/react-styles';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { Button } from '../Button';\n\nexport interface FormFieldGroupToggleProps extends React.HTMLProps<HTMLDivElement> {\n  /** Additional classes added to the section */\n  className?: string;\n  /** Callback for onClick */\n  onToggle: () => void;\n  /** Flag indicating if the toggle is expanded */\n  isExpanded: boolean;\n  /** Aria label of the toggle button */\n  'aria-label'?: string;\n  /** Sets the aria-labelledby attribute on the toggle button element */\n  'aria-labelledby'?: string;\n  /** The id applied to the toggle button */\n  toggleId?: string;\n}\n\nexport const FormFieldGroupToggle: React.FunctionComponent<FormFieldGroupToggleProps> = ({\n  className,\n  onToggle,\n  isExpanded,\n  'aria-label': ariaLabel,\n  'aria-labelledby': ariaLabelledby,\n  toggleId,\n  ...props\n}: FormFieldGroupToggleProps) => (\n  <div className={css(styles.formFieldGroupToggle, className)} {...props}>\n    <div className={css(styles.formFieldGroupToggleButton)}>\n      <Button\n        variant=\"plain\"\n        aria-label={ariaLabel}\n        onClick={onToggle}\n        aria-expanded={isExpanded}\n        aria-labelledby={ariaLabelledby}\n        id={toggleId}\n      >\n        <span className={css(styles.formFieldGroupToggleIcon)}>\n          <AngleRightIcon aria-hidden=\"true\" />\n        </span>\n      </Button>\n    </div>\n  </div>\n);\nFormFieldGroupToggle.displayName = 'FormFieldGroupToggle';\n"]},"metadata":{},"sourceType":"module"}