{"ast":null,"code":"import _classCallCheck from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Check/check';\nimport { css } from '@patternfly/react-styles';\nimport { getDefaultOUIAId, getOUIAProps } from '../../helpers'; // tslint:disable-next-line:no-empty\n\nvar defaultOnChange = function defaultOnChange() {};\n\nexport var Checkbox = /*#__PURE__*/function (_React$Component) {\n  _inherits(Checkbox, _React$Component);\n\n  var _super = _createSuper(Checkbox);\n\n  function Checkbox(props) {\n    var _this;\n\n    _classCallCheck(this, Checkbox);\n\n    _this = _super.call(this, props);\n\n    _this.handleChange = function (event) {\n      _this.props.onChange(event.currentTarget.checked, event);\n    };\n\n    _this.state = {\n      ouiaStateId: getDefaultOUIAId(Checkbox.displayName)\n    };\n    return _this;\n  }\n\n  _createClass(Checkbox, [{\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          ariaLabel = _a['aria-label'],\n          className = _a.className,\n          onChange = _a.onChange,\n          isValid = _a.isValid,\n          isDisabled = _a.isDisabled,\n          isChecked = _a.isChecked,\n          label = _a.label,\n          checked = _a.checked,\n          defaultChecked = _a.defaultChecked,\n          description = _a.description,\n          body = _a.body,\n          ouiaId = _a.ouiaId,\n          ouiaSafe = _a.ouiaSafe,\n          Component = _a.component,\n          props = __rest(_a, ['aria-label', \"className\", \"onChange\", \"isValid\", \"isDisabled\", \"isChecked\", \"label\", \"checked\", \"defaultChecked\", \"description\", \"body\", \"ouiaId\", \"ouiaSafe\", \"component\"]);\n\n      if (!props.id) {\n        // eslint-disable-next-line no-console\n        console.error('Checkbox:', 'id is required to make input accessible');\n      }\n\n      var checkedProps = {};\n\n      if ([true, false].includes(checked) || isChecked === true) {\n        checkedProps.checked = checked || isChecked;\n      }\n\n      if (onChange !== defaultOnChange) {\n        checkedProps.checked = isChecked;\n      }\n\n      if ([false, true].includes(defaultChecked)) {\n        checkedProps.defaultChecked = defaultChecked;\n      }\n\n      checkedProps.checked = checkedProps.checked === null ? false : checkedProps.checked;\n      return React.createElement(Component, {\n        className: css(styles.check, !label && styles.modifiers.standalone, className)\n      }, React.createElement(\"input\", Object.assign({}, props, {\n        className: css(styles.checkInput),\n        type: \"checkbox\",\n        onChange: this.handleChange,\n        \"aria-invalid\": !isValid,\n        \"aria-label\": ariaLabel,\n        disabled: isDisabled,\n        ref: function ref(elem) {\n          return elem && (elem.indeterminate = isChecked === null);\n        }\n      }, checkedProps, getOUIAProps(Checkbox.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe))), label && React.createElement(\"label\", {\n        className: css(styles.checkLabel, isDisabled && styles.modifiers.disabled),\n        htmlFor: props.id\n      }, label), description && React.createElement(\"span\", {\n        className: css(styles.checkDescription)\n      }, description), body && React.createElement(\"span\", {\n        className: css(styles.checkBody)\n      }, body));\n    }\n  }]);\n\n  return Checkbox;\n}(React.Component);\nCheckbox.displayName = 'Checkbox';\nCheckbox.defaultProps = {\n  className: '',\n  isValid: true,\n  isDisabled: false,\n  isChecked: false,\n  onChange: defaultOnChange,\n  ouiaSafe: true,\n  component: 'div'\n};","map":{"version":3,"mappings":"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","names":["React","styles","css","getDefaultOUIAId","getOUIAProps","defaultOnChange","Checkbox","props","event","onChange","currentTarget","checked","state","ouiaStateId","displayName","ariaLabel","_a","className","isValid","isDisabled","isChecked","label","defaultChecked","description","body","ouiaId","ouiaSafe","Component","component","__rest","id","console","error","checkedProps","includes","check","modifiers","standalone","checkInput","type","handleChange","disabled","ref","elem","indeterminate","undefined","checkLabel","htmlFor","checkDescription","checkBody"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Checkbox/Checkbox.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Check/check';\nimport { css } from '@patternfly/react-styles';\nimport { PickOptional } from '../../helpers/typeUtils';\nimport { getDefaultOUIAId, getOUIAProps, OUIAProps } from '../../helpers';\n\nexport interface CheckboxProps\n  extends Omit<React.HTMLProps<HTMLInputElement>, 'type' | 'onChange' | 'disabled' | 'label'>,\n    OUIAProps {\n  /** Additional classes added to the Checkbox. */\n  className?: string;\n  /** Flag to show if the Checkbox selection is valid or invalid. */\n  isValid?: boolean;\n  /** Flag to show if the Checkbox is disabled. */\n  isDisabled?: boolean;\n  /** Flag to show if the Checkbox is checked. If null, the checkbox will be indeterminate (partially checked). */\n  isChecked?: boolean | null;\n  checked?: boolean;\n  /** A callback for when the Checkbox selection changes. */\n  onChange?: (checked: boolean, event: React.FormEvent<HTMLInputElement>) => void;\n  /** Label text of the checkbox. */\n  label?: React.ReactNode;\n  /** Id of the checkbox. */\n  id: string;\n  /** Aria-label of the checkbox. */\n  'aria-label'?: string;\n  /** Description text of the checkbox. */\n  description?: React.ReactNode;\n  /** Body text of the checkbox */\n  body?: React.ReactNode;\n  /** Sets the input wrapper component to render. Defaults to <div> */\n  component?: React.ElementType;\n}\n\n// tslint:disable-next-line:no-empty\nconst defaultOnChange = () => {};\n\ninterface CheckboxState {\n  ouiaStateId: string;\n}\n\nexport class Checkbox extends React.Component<CheckboxProps, CheckboxState> {\n  static displayName = 'Checkbox';\n  static defaultProps: PickOptional<CheckboxProps> = {\n    className: '',\n    isValid: true,\n    isDisabled: false,\n    isChecked: false,\n    onChange: defaultOnChange,\n    ouiaSafe: true,\n    component: 'div'\n  };\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(Checkbox.displayName)\n    };\n  }\n\n  private handleChange = (event: React.FormEvent<HTMLInputElement>): void => {\n    this.props.onChange(event.currentTarget.checked, event);\n  };\n\n  render() {\n    const {\n      'aria-label': ariaLabel,\n      className,\n      onChange,\n      isValid,\n      isDisabled,\n      isChecked,\n      label,\n      checked,\n      defaultChecked,\n      description,\n      body,\n      ouiaId,\n      ouiaSafe,\n      component: Component,\n      ...props\n    } = this.props;\n    if (!props.id) {\n      // eslint-disable-next-line no-console\n      console.error('Checkbox:', 'id is required to make input accessible');\n    }\n    const checkedProps: { checked?: boolean; defaultChecked?: boolean } = {};\n    if ([true, false].includes(checked) || isChecked === true) {\n      checkedProps.checked = checked || isChecked;\n    }\n    if (onChange !== defaultOnChange) {\n      checkedProps.checked = isChecked;\n    }\n    if ([false, true].includes(defaultChecked)) {\n      checkedProps.defaultChecked = defaultChecked;\n    }\n\n    checkedProps.checked = checkedProps.checked === null ? false : checkedProps.checked;\n    return (\n      <Component className={css(styles.check, !label && styles.modifiers.standalone, className)}>\n        <input\n          {...props}\n          className={css(styles.checkInput)}\n          type=\"checkbox\"\n          onChange={this.handleChange}\n          aria-invalid={!isValid}\n          aria-label={ariaLabel}\n          disabled={isDisabled}\n          ref={elem => elem && (elem.indeterminate = isChecked === null)}\n          {...checkedProps}\n          {...getOUIAProps(Checkbox.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n        />\n        {label && (\n          <label className={css(styles.checkLabel, isDisabled && styles.modifiers.disabled)} htmlFor={props.id}>\n            {label}\n          </label>\n        )}\n        {description && <span className={css(styles.checkDescription)}>{description}</span>}\n        {body && <span className={css(styles.checkBody)}>{body}</span>}\n      </Component>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}