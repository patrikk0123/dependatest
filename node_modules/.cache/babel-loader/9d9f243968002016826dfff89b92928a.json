{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/layouts/Split/split';\nimport { css } from '@patternfly/react-styles';\nexport const Split = _a => {\n  var {\n    hasGutter = false,\n    isWrappable = false,\n    className = '',\n    children = null,\n    component = 'div'\n  } = _a,\n      props = __rest(_a, [\"hasGutter\", \"isWrappable\", \"className\", \"children\", \"component\"]);\n\n  const Component = component;\n  return React.createElement(Component, Object.assign({}, props, {\n    className: css(styles.split, hasGutter && styles.modifiers.gutter, isWrappable && styles.modifiers.wrap, className)\n  }), children);\n};\nSplit.displayName = 'Split';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,kDAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AAeA,OAAO,MAAMC,KAAK,GAAyCC,EAAD,IAOzC;MAP0C;IACzDC,SAAS,GAAG,KAD6C;IAEzDC,WAAW,GAAG,KAF2C;IAGzDC,SAAS,GAAG,EAH6C;IAIzDC,QAAQ,GAAG,IAJ8C;IAKzDC,SAAS,GAAG;EAL6C,IAKxCL;MACdM,KAAK,cANiD,kEAMjD;;EAER,MAAMC,SAAS,GAAGF,SAAlB;EACA,OACET,oBAACW,SAAD,EAAUC,kBACJF,KADI,EACC;IACTH,SAAS,EAAEL,GAAG,CACZD,MAAM,CAACY,KADK,EAEZR,SAAS,IAAIJ,MAAM,CAACa,SAAP,CAAiBC,MAFlB,EAGZT,WAAW,IAAIL,MAAM,CAACa,SAAP,CAAiBE,IAHpB,EAIZT,SAJY;EADL,CADD,CAAV,EASGC,QATH,CADF;AAaD,CAtBM;AAuBPL,KAAK,CAACc,WAAN,GAAoB,OAApB","names":["React","styles","css","Split","_a","hasGutter","isWrappable","className","children","component","props","Component","Object","split","modifiers","gutter","wrap","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/layouts/Split/Split.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/layouts/Split/split';\nimport { css } from '@patternfly/react-styles';\n\nexport interface SplitProps extends React.HTMLProps<HTMLDivElement> {\n  /** Adds space between children. */\n  hasGutter?: boolean;\n  /** Allows children to wrap */\n  isWrappable?: boolean;\n  /** content rendered inside the Split layout */\n  children?: React.ReactNode;\n  /** additional classes added to the Split layout */\n  className?: string;\n  /** Sets the base component to render. defaults to div */\n  component?: React.ReactNode;\n}\n\nexport const Split: React.FunctionComponent<SplitProps> = ({\n  hasGutter = false,\n  isWrappable = false,\n  className = '',\n  children = null,\n  component = 'div',\n  ...props\n}: SplitProps) => {\n  const Component = component as any;\n  return (\n    <Component\n      {...props}\n      className={css(\n        styles.split,\n        hasGutter && styles.modifiers.gutter,\n        isWrappable && styles.modifiers.wrap,\n        className\n      )}\n    >\n      {children}\n    </Component>\n  );\n};\nSplit.displayName = 'Split';\n"]},"metadata":{},"sourceType":"module"}