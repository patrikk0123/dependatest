{"ast":null,"code":"import _classCallCheck from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport buttonStyles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\nimport CaretDownIcon from '@patternfly/react-icons/dist/esm/icons/caret-down-icon';\nimport { SelectVariant, SelectFooterTabbableItems } from './selectConstants';\nimport { findTabbableElements } from '../../helpers/util';\nimport { KeyTypes } from '../../helpers/constants';\nexport var SelectToggle = /*#__PURE__*/function (_React$Component) {\n  _inherits(SelectToggle, _React$Component);\n\n  var _super = _createSuper(SelectToggle);\n\n  function SelectToggle(props) {\n    var _this;\n\n    _classCallCheck(this, SelectToggle);\n\n    _this = _super.call(this, props);\n\n    _this.onDocClick = function (event) {\n      var _this$props = _this.props,\n          parentRef = _this$props.parentRef,\n          menuRef = _this$props.menuRef,\n          footerRef = _this$props.footerRef,\n          isOpen = _this$props.isOpen,\n          onToggle = _this$props.onToggle,\n          onClose = _this$props.onClose;\n      var clickedOnToggle = parentRef && parentRef.current && parentRef.current.contains(event.target);\n      var clickedWithinMenu = menuRef && menuRef.current && menuRef.current.contains && menuRef.current.contains(event.target);\n      var clickedWithinFooter = footerRef && footerRef.current && footerRef.current.contains && footerRef.current.contains(event.target);\n\n      if (isOpen && !(clickedOnToggle || clickedWithinMenu || clickedWithinFooter)) {\n        onToggle(false, event);\n        onClose();\n      }\n    };\n\n    _this.handleGlobalKeys = function (event) {\n      var _this$props2 = _this.props,\n          parentRef = _this$props2.parentRef,\n          menuRef = _this$props2.menuRef,\n          hasFooter = _this$props2.hasFooter,\n          footerRef = _this$props2.footerRef,\n          isOpen = _this$props2.isOpen,\n          variant = _this$props2.variant,\n          onToggle = _this$props2.onToggle,\n          onClose = _this$props2.onClose,\n          moveFocusToLastMenuItem = _this$props2.moveFocusToLastMenuItem;\n      var escFromToggle = parentRef && parentRef.current && parentRef.current.contains(event.target);\n      var escFromWithinMenu = menuRef && menuRef.current && menuRef.current.contains && menuRef.current.contains(event.target);\n\n      if (isOpen && event.key === KeyTypes.Tab && (variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti)) {\n        _this.props.handleTypeaheadKeys('tab', event.shiftKey);\n\n        event.preventDefault();\n        return;\n      }\n\n      if (isOpen && event.key === KeyTypes.Tab && hasFooter) {\n        var tabbableItems = findTabbableElements(footerRef, SelectFooterTabbableItems); // If no tabbable item in footer close select\n\n        if (tabbableItems.length <= 0) {\n          onToggle(false, event);\n          onClose();\n\n          _this.toggle.current.focus();\n\n          return;\n        } else {\n          // if current element is not in footer, tab to first tabbable element in footer, or close if shift clicked\n          var currentElementIndex = tabbableItems.findIndex(function (item) {\n            return item === document.activeElement;\n          });\n\n          if (currentElementIndex === -1) {\n            if (event.shiftKey) {\n              if (variant !== 'checkbox') {\n                // only close non checkbox variation on shift clicked\n                onToggle(false, event);\n                onClose();\n\n                _this.toggle.current.focus();\n              }\n            } else {\n              // tab to footer\n              tabbableItems[0].focus();\n              return;\n            }\n          } // Current element is in footer.\n\n\n          if (event.shiftKey) {\n            // Move focus back to menu if current tab index is 0\n            if (currentElementIndex === 0) {\n              moveFocusToLastMenuItem();\n              event.preventDefault();\n            }\n\n            return;\n          } // Tab to next element in footer or close if there are none\n\n\n          if (currentElementIndex + 1 < tabbableItems.length) {\n            tabbableItems[currentElementIndex + 1].focus();\n          } else {\n            // no more footer items close menu\n            onToggle(false, event);\n            onClose();\n\n            _this.toggle.current.focus();\n          }\n\n          event.preventDefault();\n          return;\n        }\n      }\n\n      if (isOpen && (event.key === KeyTypes.Escape || event.key === KeyTypes.Tab) && (escFromToggle || escFromWithinMenu)) {\n        onToggle(false, event);\n        onClose();\n\n        _this.toggle.current.focus();\n      }\n    };\n\n    _this.onKeyDown = function (event) {\n      var _this$props3 = _this.props,\n          isOpen = _this$props3.isOpen,\n          onToggle = _this$props3.onToggle,\n          variant = _this$props3.variant,\n          onClose = _this$props3.onClose,\n          onEnter = _this$props3.onEnter,\n          handleTypeaheadKeys = _this$props3.handleTypeaheadKeys;\n\n      if (variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti) {\n        if (event.key === KeyTypes.ArrowDown || event.key === KeyTypes.ArrowUp) {\n          handleTypeaheadKeys(event.key === KeyTypes.ArrowDown && 'down' || event.key === KeyTypes.ArrowUp && 'up');\n          event.preventDefault();\n        } else if (event.key === KeyTypes.Enter) {\n          if (isOpen) {\n            handleTypeaheadKeys('enter');\n          } else {\n            onToggle(!isOpen, event);\n          }\n        }\n      }\n\n      if (variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti || event.key === KeyTypes.Tab && !isOpen || event.key !== KeyTypes.Enter && event.key !== KeyTypes.Space) {\n        return;\n      }\n\n      event.preventDefault();\n\n      if ((event.key === KeyTypes.Tab || event.key === KeyTypes.Enter || event.key === KeyTypes.Space) && isOpen) {\n        onToggle(!isOpen, event);\n        onClose();\n\n        _this.toggle.current.focus();\n      } else if ((event.key === KeyTypes.Enter || event.key === KeyTypes.Space) && !isOpen) {\n        onToggle(!isOpen, event);\n        onEnter();\n      }\n    };\n\n    var variant = props.variant;\n    var isTypeahead = variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti;\n    _this.toggle = isTypeahead ? React.createRef() : React.createRef();\n    return _this;\n  }\n\n  _createClass(SelectToggle, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('click', this.onDocClick, {\n        capture: true\n      });\n      document.addEventListener('touchstart', this.onDocClick);\n      document.addEventListener('keydown', this.handleGlobalKeys);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener('click', this.onDocClick);\n      document.removeEventListener('touchstart', this.onDocClick);\n      document.removeEventListener('keydown', this.handleGlobalKeys);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      var _a = this.props,\n          className = _a.className,\n          children = _a.children,\n          isOpen = _a.isOpen,\n          isActive = _a.isActive,\n          isPlain = _a.isPlain,\n          isDisabled = _a.isDisabled,\n          hasPlaceholderStyle = _a.hasPlaceholderStyle,\n          variant = _a.variant,\n          onToggle = _a.onToggle,\n          onEnter = _a.onEnter,\n          onClose = _a.onClose,\n          onBlur = _a.onBlur,\n          onClickTypeaheadToggleButton = _a.onClickTypeaheadToggleButton,\n          handleTypeaheadKeys = _a.handleTypeaheadKeys,\n          moveFocusToLastMenuItem = _a.moveFocusToLastMenuItem,\n          parentRef = _a.parentRef,\n          menuRef = _a.menuRef,\n          id = _a.id,\n          type = _a.type,\n          hasClearButton = _a.hasClearButton,\n          ariaLabelledBy = _a['aria-labelledby'],\n          ariaLabel = _a['aria-label'],\n          hasFooter = _a.hasFooter,\n          footerRef = _a.footerRef,\n          props = __rest(_a, [\"className\", \"children\", \"isOpen\", \"isActive\", \"isPlain\", \"isDisabled\", \"hasPlaceholderStyle\", \"variant\", \"onToggle\", \"onEnter\", \"onClose\", \"onBlur\", \"onClickTypeaheadToggleButton\", \"handleTypeaheadKeys\", \"moveFocusToLastMenuItem\", \"parentRef\", \"menuRef\", \"id\", \"type\", \"hasClearButton\", 'aria-labelledby', 'aria-label', \"hasFooter\", \"footerRef\"]);\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n      var isTypeahead = variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti || hasClearButton;\n      var toggleProps = {\n        id: id,\n        'aria-labelledby': ariaLabelledBy,\n        'aria-expanded': isOpen,\n        'aria-haspopup': variant !== SelectVariant.checkbox && 'listbox' || null\n      };\n      return React.createElement(React.Fragment, null, !isTypeahead && React.createElement(\"button\", Object.assign({}, props, toggleProps, {\n        ref: this.toggle,\n        type: type,\n        className: css(styles.selectToggle, hasPlaceholderStyle && styles.modifiers.placeholder, isDisabled && styles.modifiers.disabled, isPlain && styles.modifiers.plain, isActive && styles.modifiers.active, className),\n        \"aria-label\": ariaLabel,\n        onBlur: onBlur,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onClick: function onClick(event) {\n          onToggle(!isOpen, event);\n\n          if (isOpen) {\n            onClose();\n          }\n        },\n        onKeyDown: this.onKeyDown,\n        disabled: isDisabled\n      }), children, React.createElement(\"span\", {\n        className: css(styles.selectToggleArrow)\n      }, React.createElement(CaretDownIcon, null))), isTypeahead && React.createElement(\"div\", Object.assign({}, props, {\n        ref: this.toggle,\n        className: css(styles.selectToggle, hasPlaceholderStyle && styles.modifiers.placeholder, isDisabled && styles.modifiers.disabled, isPlain && styles.modifiers.plain, isTypeahead && styles.modifiers.typeahead, className),\n        onBlur: onBlur,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onClick: function onClick(event) {\n          if (!isDisabled) {\n            onToggle(!isOpen, event);\n\n            if (isOpen) {\n              onClose();\n            }\n          }\n        },\n        onKeyDown: this.onKeyDown\n      }), children, React.createElement(\"button\", Object.assign({}, toggleProps, {\n        type: type,\n        className: css(buttonStyles.button, styles.selectToggleButton, styles.modifiers.plain),\n        \"aria-label\": ariaLabel,\n        onClick: function onClick(event) {\n          onToggle(!isOpen, event);\n\n          if (isOpen) {\n            onClose();\n          }\n\n          onClickTypeaheadToggleButton();\n        }\n      }, (variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti) && {\n        tabIndex: -1\n      }, {\n        disabled: isDisabled\n      }), React.createElement(CaretDownIcon, {\n        className: css(styles.selectToggleArrow)\n      }))));\n    }\n  }]);\n\n  return SelectToggle;\n}(React.Component);\nSelectToggle.displayName = 'SelectToggle';\nSelectToggle.defaultProps = {\n  className: '',\n  isOpen: false,\n  isActive: false,\n  isPlain: false,\n  isDisabled: false,\n  hasPlaceholderStyle: false,\n  hasClearButton: false,\n  hasFooter: false,\n  variant: 'single',\n  'aria-labelledby': '',\n  'aria-label': '',\n  type: 'button',\n  onToggle: function onToggle() {},\n  onEnter: function onEnter() {},\n  onClose: function onClose() {},\n  onClickTypeaheadToggleButton: function onClickTypeaheadToggleButton() {}\n};","map":{"version":3,"mappings":"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","names":["React","styles","buttonStyles","css","CaretDownIcon","SelectVariant","SelectFooterTabbableItems","findTabbableElements","KeyTypes","SelectToggle","props","event","parentRef","menuRef","footerRef","isOpen","onToggle","onClose","clickedOnToggle","current","contains","target","clickedWithinMenu","clickedWithinFooter","hasFooter","variant","moveFocusToLastMenuItem","escFromToggle","escFromWithinMenu","key","Tab","typeahead","typeaheadMulti","handleTypeaheadKeys","shiftKey","preventDefault","tabbableItems","length","toggle","focus","currentElementIndex","findIndex","item","document","activeElement","Escape","onEnter","ArrowDown","ArrowUp","Enter","Space","isTypeahead","createRef","addEventListener","onDocClick","capture","handleGlobalKeys","removeEventListener","className","_a","children","isActive","isPlain","isDisabled","hasPlaceholderStyle","onBlur","onClickTypeaheadToggleButton","id","type","hasClearButton","ariaLabelledBy","ariaLabel","__rest","toggleProps","checkbox","Fragment","ref","selectToggle","modifiers","placeholder","disabled","plain","active","onClick","onKeyDown","selectToggleArrow","button","selectToggleButton","tabIndex","Component"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Select/SelectToggle.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport buttonStyles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\nimport CaretDownIcon from '@patternfly/react-icons/dist/esm/icons/caret-down-icon';\nimport { SelectVariant, SelectFooterTabbableItems } from './selectConstants';\nimport { PickOptional } from '../../helpers/typeUtils';\nimport { findTabbableElements } from '../../helpers/util';\nimport { KeyTypes } from '../../helpers/constants';\n\nexport interface SelectToggleProps extends React.HTMLProps<HTMLElement> {\n  /** HTML ID of dropdown toggle */\n  id: string;\n  /** Anything which can be rendered as dropdown toggle */\n  children: React.ReactNode;\n  /** Classes applied to root element of dropdown toggle */\n  className?: string;\n  /** Flag to indicate if select is open */\n  isOpen?: boolean;\n  /** Callback called when toggle is clicked */\n  onToggle?: (isExpanded: boolean, event: React.MouseEvent | React.ChangeEvent | React.KeyboardEvent | Event) => void;\n  /** Callback for toggle open on keyboard entry */\n  onEnter?: () => void;\n  /** Callback for toggle close */\n  onClose?: () => void;\n  /** Callback for toggle blur */\n  onBlur?: (event?: any) => void;\n  /** @hide Internal callback for toggle keyboard navigation */\n  handleTypeaheadKeys?: (position: string, shiftKey?: boolean) => void;\n  /** @hide Internal callback to move focus to last menu item */\n  moveFocusToLastMenuItem?: () => void;\n  /** Element which wraps toggle */\n  parentRef: React.RefObject<HTMLDivElement>;\n  /** The menu element */\n  menuRef?: React.RefObject<HTMLElement>;\n  /** The menu footer element */\n  footerRef?: React.RefObject<HTMLDivElement>;\n  /** Forces active state */\n  isActive?: boolean;\n  /** Display the toggle with no border or background */\n  isPlain?: boolean;\n  /** Flag indicating if select is disabled */\n  isDisabled?: boolean;\n  /** Flag indicating if placeholder styles should be applied */\n  hasPlaceholderStyle?: boolean;\n  /** Type of the toggle button, defaults to 'button' */\n  type?: 'reset' | 'button' | 'submit' | undefined;\n  /** Id of label for the Select aria-labelledby */\n  'aria-labelledby'?: string;\n  /** Label for toggle of select variants */\n  'aria-label'?: string;\n  /** Flag for variant, determines toggle rules and interaction */\n  variant?: 'single' | 'checkbox' | 'typeahead' | 'typeaheadmulti';\n  /** Flag indicating if select toggle has an clear button */\n  hasClearButton?: boolean;\n  /** Flag indicating if select menu has a footer */\n  hasFooter?: boolean;\n  /** @hide Internal callback for handling focus when typeahead toggle button clicked. */\n  onClickTypeaheadToggleButton?: () => void;\n}\n\nexport class SelectToggle extends React.Component<SelectToggleProps> {\n  static displayName = 'SelectToggle';\n  private toggle: React.RefObject<HTMLDivElement> | React.RefObject<HTMLButtonElement>;\n\n  static defaultProps: PickOptional<SelectToggleProps> = {\n    className: '',\n    isOpen: false,\n    isActive: false,\n    isPlain: false,\n    isDisabled: false,\n    hasPlaceholderStyle: false,\n    hasClearButton: false,\n    hasFooter: false,\n    variant: 'single',\n    'aria-labelledby': '',\n    'aria-label': '',\n    type: 'button',\n    onToggle: () => {},\n    onEnter: () => {},\n    onClose: () => {},\n    onClickTypeaheadToggleButton: () => {}\n  };\n\n  constructor(props: SelectToggleProps) {\n    super(props);\n    const { variant } = props;\n    const isTypeahead = variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti;\n    this.toggle = isTypeahead ? React.createRef<HTMLDivElement>() : React.createRef<HTMLButtonElement>();\n  }\n\n  componentDidMount() {\n    document.addEventListener('click', this.onDocClick, { capture: true });\n    document.addEventListener('touchstart', this.onDocClick);\n    document.addEventListener('keydown', this.handleGlobalKeys);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.onDocClick);\n    document.removeEventListener('touchstart', this.onDocClick);\n    document.removeEventListener('keydown', this.handleGlobalKeys);\n  }\n\n  onDocClick = (event: Event) => {\n    const { parentRef, menuRef, footerRef, isOpen, onToggle, onClose } = this.props;\n    const clickedOnToggle = parentRef && parentRef.current && parentRef.current.contains(event.target as Node);\n    const clickedWithinMenu =\n      menuRef && menuRef.current && menuRef.current.contains && menuRef.current.contains(event.target as Node);\n    const clickedWithinFooter =\n      footerRef && footerRef.current && footerRef.current.contains && footerRef.current.contains(event.target as Node);\n\n    if (isOpen && !(clickedOnToggle || clickedWithinMenu || clickedWithinFooter)) {\n      onToggle(false, event);\n      onClose();\n    }\n  };\n\n  handleGlobalKeys = (event: KeyboardEvent) => {\n    const {\n      parentRef,\n      menuRef,\n      hasFooter,\n      footerRef,\n      isOpen,\n      variant,\n      onToggle,\n      onClose,\n      moveFocusToLastMenuItem\n    } = this.props;\n    const escFromToggle = parentRef && parentRef.current && parentRef.current.contains(event.target as Node);\n    const escFromWithinMenu =\n      menuRef && menuRef.current && menuRef.current.contains && menuRef.current.contains(event.target as Node);\n    if (\n      isOpen &&\n      event.key === KeyTypes.Tab &&\n      (variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti)\n    ) {\n      this.props.handleTypeaheadKeys('tab', event.shiftKey);\n      event.preventDefault();\n      return;\n    }\n\n    if (isOpen && event.key === KeyTypes.Tab && hasFooter) {\n      const tabbableItems = findTabbableElements(footerRef, SelectFooterTabbableItems);\n\n      // If no tabbable item in footer close select\n      if (tabbableItems.length <= 0) {\n        onToggle(false, event);\n        onClose();\n        this.toggle.current.focus();\n        return;\n      } else {\n        // if current element is not in footer, tab to first tabbable element in footer, or close if shift clicked\n        const currentElementIndex = tabbableItems.findIndex((item: any) => item === document.activeElement);\n        if (currentElementIndex === -1) {\n          if (event.shiftKey) {\n            if (variant !== 'checkbox') {\n              // only close non checkbox variation on shift clicked\n              onToggle(false, event);\n              onClose();\n              this.toggle.current.focus();\n            }\n          } else {\n            // tab to footer\n            tabbableItems[0].focus();\n            return;\n          }\n        }\n        // Current element is in footer.\n        if (event.shiftKey) {\n          // Move focus back to menu if current tab index is 0\n          if (currentElementIndex === 0) {\n            moveFocusToLastMenuItem();\n            event.preventDefault();\n          }\n          return;\n        }\n        // Tab to next element in footer or close if there are none\n        if (currentElementIndex + 1 < tabbableItems.length) {\n          tabbableItems[currentElementIndex + 1].focus();\n        } else {\n          // no more footer items close menu\n          onToggle(false, event);\n          onClose();\n          this.toggle.current.focus();\n        }\n        event.preventDefault();\n        return;\n      }\n    }\n\n    if (\n      isOpen &&\n      (event.key === KeyTypes.Escape || event.key === KeyTypes.Tab) &&\n      (escFromToggle || escFromWithinMenu)\n    ) {\n      onToggle(false, event);\n      onClose();\n      this.toggle.current.focus();\n    }\n  };\n\n  onKeyDown = (event: React.KeyboardEvent) => {\n    const { isOpen, onToggle, variant, onClose, onEnter, handleTypeaheadKeys } = this.props;\n\n    if (variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti) {\n      if (event.key === KeyTypes.ArrowDown || event.key === KeyTypes.ArrowUp) {\n        handleTypeaheadKeys((event.key === KeyTypes.ArrowDown && 'down') || (event.key === KeyTypes.ArrowUp && 'up'));\n        event.preventDefault();\n      } else if (event.key === KeyTypes.Enter) {\n        if (isOpen) {\n          handleTypeaheadKeys('enter');\n        } else {\n          onToggle(!isOpen, event);\n        }\n      }\n    }\n\n    if (\n      variant === SelectVariant.typeahead ||\n      variant === SelectVariant.typeaheadMulti ||\n      (event.key === KeyTypes.Tab && !isOpen) ||\n      (event.key !== KeyTypes.Enter && event.key !== KeyTypes.Space)\n    ) {\n      return;\n    }\n    event.preventDefault();\n    if ((event.key === KeyTypes.Tab || event.key === KeyTypes.Enter || event.key === KeyTypes.Space) && isOpen) {\n      onToggle(!isOpen, event);\n      onClose();\n      this.toggle.current.focus();\n    } else if ((event.key === KeyTypes.Enter || event.key === KeyTypes.Space) && !isOpen) {\n      onToggle(!isOpen, event);\n      onEnter();\n    }\n  };\n\n  render() {\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    const {\n      className,\n      children,\n      isOpen,\n      isActive,\n      isPlain,\n      isDisabled,\n      hasPlaceholderStyle,\n      variant,\n      onToggle,\n      onEnter,\n      onClose,\n      onBlur,\n      onClickTypeaheadToggleButton,\n      handleTypeaheadKeys,\n      moveFocusToLastMenuItem,\n      parentRef,\n      menuRef,\n      id,\n      type,\n      hasClearButton,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-label': ariaLabel,\n      hasFooter,\n      footerRef,\n      ...props\n    } = this.props;\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    const isTypeahead =\n      variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti || hasClearButton;\n    const toggleProps: {\n      id: string;\n      'aria-labelledby': string;\n      'aria-expanded': boolean;\n      'aria-haspopup': 'listbox' | null;\n    } = {\n      id,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-expanded': isOpen,\n      'aria-haspopup': (variant !== SelectVariant.checkbox && 'listbox') || null\n    };\n    return (\n      <React.Fragment>\n        {!isTypeahead && (\n          <button\n            {...props}\n            {...toggleProps}\n            ref={this.toggle as React.RefObject<HTMLButtonElement>}\n            type={type}\n            className={css(\n              styles.selectToggle,\n              hasPlaceholderStyle && styles.modifiers.placeholder,\n              isDisabled && styles.modifiers.disabled,\n              isPlain && styles.modifiers.plain,\n              isActive && styles.modifiers.active,\n              className\n            )}\n            aria-label={ariaLabel}\n            onBlur={onBlur}\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            onClick={event => {\n              onToggle(!isOpen, event);\n              if (isOpen) {\n                onClose();\n              }\n            }}\n            onKeyDown={this.onKeyDown}\n            disabled={isDisabled}\n          >\n            {children}\n            <span className={css(styles.selectToggleArrow)}>\n              <CaretDownIcon />\n            </span>\n          </button>\n        )}\n        {isTypeahead && (\n          <div\n            {...props}\n            ref={this.toggle as React.RefObject<HTMLDivElement>}\n            className={css(\n              styles.selectToggle,\n              hasPlaceholderStyle && styles.modifiers.placeholder,\n              isDisabled && styles.modifiers.disabled,\n              isPlain && styles.modifiers.plain,\n              isTypeahead && styles.modifiers.typeahead,\n              className\n            )}\n            onBlur={onBlur}\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            onClick={event => {\n              if (!isDisabled) {\n                onToggle(!isOpen, event);\n                if (isOpen) {\n                  onClose();\n                }\n              }\n            }}\n            onKeyDown={this.onKeyDown}\n          >\n            {children}\n            <button\n              {...toggleProps}\n              type={type}\n              className={css(buttonStyles.button, styles.selectToggleButton, styles.modifiers.plain)}\n              aria-label={ariaLabel}\n              onClick={event => {\n                onToggle(!isOpen, event);\n                if (isOpen) {\n                  onClose();\n                }\n                onClickTypeaheadToggleButton();\n              }}\n              {...((variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti) && {\n                tabIndex: -1\n              })}\n              disabled={isDisabled}\n            >\n              <CaretDownIcon className={css(styles.selectToggleArrow)} />\n            </button>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}