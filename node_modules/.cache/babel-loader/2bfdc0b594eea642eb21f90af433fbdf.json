{"ast":null,"code":"var _jsxFileName = \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/BuildName/BuildName.tsx\";\nimport { Link } from 'react-router-dom';\nimport { isBuild, isGroupBuild } from '../../utils/entityRecognition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const calculateBuildName = build => {\n  if (isGroupBuild(build)) {\n    return '#' + build.id;\n  }\n\n  if (isBuild(build)) {\n    const buildItem = build;\n\n    if (buildItem.submitTime) {\n      const dateObject = new Date(buildItem.submitTime);\n      return ['#', dateObject.getUTCFullYear(), String(dateObject.getUTCMonth() + 1).padStart(2, '0'), String(dateObject.getUTCDate()).padStart(2, '0'), '-', String(dateObject.getUTCHours()).padStart(2, '0'), String(dateObject.getUTCMinutes()).padStart(2, '0')].join('');\n    }\n  }\n\n  throw new Error('Invalid build: ' + build.id);\n};\n\nconst ConfigAppendix = _ref => {\n  let {\n    build,\n    includeConfigLink\n  } = _ref;\n  const configName = (isBuild(build) ? build.buildConfigRevision : build.groupConfig).name;\n  const configLink = 'TODO'; // TODO: FORMAT LINKS HERE\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" of \", includeConfigLink ? /*#__PURE__*/_jsxDEV(Link, {\n      to: configLink,\n      children: configName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 37\n    }, this) : configName]\n  }, void 0, true);\n};\n\n/**\n * Represents a component for displaying the name of a build/groupBuild.\n * There are two versions: short (default) and long.\n *\n * Long version additionally also includes the name of the build config.\n * Both \"short\" and \"long\" versions can also contain links to the actual build/config.\n *\n * @param build - Build or GroupBuild\n * @param long - Whether the component should be of the long version\n * @param includeBuildLink - Whether the build name should be a link to the build page\n * @param includeConfigLink - Whether the build config (in the long version) should be a link to the build config page\n */\nexport const BuildName = _ref2 => {\n  let {\n    build,\n    long,\n    includeBuildLink,\n    includeConfigLink\n  } = _ref2;\n  const name = calculateBuildName(build);\n  const buildLink = 'TODO'; // TODO: FORMAT LINKS HERE\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [includeBuildLink ? /*#__PURE__*/_jsxDEV(Link, {\n      to: buildLink,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 27\n    }, this) : name, long && /*#__PURE__*/_jsxDEV(ConfigAppendix, {\n      includeConfigLink: includeConfigLink,\n      build: build\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["Link","isBuild","isGroupBuild","calculateBuildName","build","id","buildItem","submitTime","dateObject","Date","getUTCFullYear","String","getUTCMonth","padStart","getUTCDate","getUTCHours","getUTCMinutes","join","Error","ConfigAppendix","includeConfigLink","configName","buildConfigRevision","groupConfig","name","configLink","BuildName","long","includeBuildLink","buildLink"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/BuildName/BuildName.tsx"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nimport { Build, GroupBuild } from 'pnc-api-types-ts';\n\nimport { isBuild, isGroupBuild } from '../../utils/entityRecognition';\n\nexport const calculateBuildName = (build: Build | GroupBuild) => {\n  if (isGroupBuild(build)) {\n    return '#' + build.id;\n  }\n  if (isBuild(build)) {\n    const buildItem = build as Build;\n    if (buildItem.submitTime) {\n      const dateObject = new Date(buildItem.submitTime);\n      return [\n        '#',\n        dateObject.getUTCFullYear(),\n        String(dateObject.getUTCMonth() + 1).padStart(2, '0'),\n        String(dateObject.getUTCDate()).padStart(2, '0'),\n        '-',\n        String(dateObject.getUTCHours()).padStart(2, '0'),\n        String(dateObject.getUTCMinutes()).padStart(2, '0'),\n      ].join('');\n    }\n  }\n  throw new Error('Invalid build: ' + build.id);\n};\n\ninterface IConfigAppendix {\n  build: Build | GroupBuild;\n  includeConfigLink?: boolean;\n}\n\nconst ConfigAppendix = ({ build, includeConfigLink }: IConfigAppendix) => {\n  const configName = (isBuild(build) ? (build as Build).buildConfigRevision : (build as GroupBuild).groupConfig)!.name;\n  const configLink = 'TODO'; // TODO: FORMAT LINKS HERE\n  return <> of {includeConfigLink ? <Link to={configLink}>{configName}</Link> : configName}</>;\n};\n\ninterface IBuildName {\n  build: Build | GroupBuild;\n  long?: boolean;\n  includeBuildLink?: boolean;\n  includeConfigLink?: boolean;\n}\n\n/**\n * Represents a component for displaying the name of a build/groupBuild.\n * There are two versions: short (default) and long.\n *\n * Long version additionally also includes the name of the build config.\n * Both \"short\" and \"long\" versions can also contain links to the actual build/config.\n *\n * @param build - Build or GroupBuild\n * @param long - Whether the component should be of the long version\n * @param includeBuildLink - Whether the build name should be a link to the build page\n * @param includeConfigLink - Whether the build config (in the long version) should be a link to the build config page\n */\nexport const BuildName = ({ build, long, includeBuildLink, includeConfigLink }: IBuildName) => {\n  const name = calculateBuildName(build);\n  const buildLink = 'TODO'; // TODO: FORMAT LINKS HERE\n  return (\n    <span>\n      {includeBuildLink ? <Link to={buildLink}>{name}</Link> : name}\n      {long && <ConfigAppendix includeConfigLink={includeConfigLink} build={build} />}\n    </span>\n  );\n};\n"],"mappings":";AAAA,SAASA,IAAT,QAAqB,kBAArB;AAIA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,+BAAtC;;;AAEA,OAAO,MAAMC,kBAAkB,GAAIC,KAAD,IAA+B;EAC/D,IAAIF,YAAY,CAACE,KAAD,CAAhB,EAAyB;IACvB,OAAO,MAAMA,KAAK,CAACC,EAAnB;EACD;;EACD,IAAIJ,OAAO,CAACG,KAAD,CAAX,EAAoB;IAClB,MAAME,SAAS,GAAGF,KAAlB;;IACA,IAAIE,SAAS,CAACC,UAAd,EAA0B;MACxB,MAAMC,UAAU,GAAG,IAAIC,IAAJ,CAASH,SAAS,CAACC,UAAnB,CAAnB;MACA,OAAO,CACL,GADK,EAELC,UAAU,CAACE,cAAX,EAFK,EAGLC,MAAM,CAACH,UAAU,CAACI,WAAX,KAA2B,CAA5B,CAAN,CAAqCC,QAArC,CAA8C,CAA9C,EAAiD,GAAjD,CAHK,EAILF,MAAM,CAACH,UAAU,CAACM,UAAX,EAAD,CAAN,CAAgCD,QAAhC,CAAyC,CAAzC,EAA4C,GAA5C,CAJK,EAKL,GALK,EAMLF,MAAM,CAACH,UAAU,CAACO,WAAX,EAAD,CAAN,CAAiCF,QAAjC,CAA0C,CAA1C,EAA6C,GAA7C,CANK,EAOLF,MAAM,CAACH,UAAU,CAACQ,aAAX,EAAD,CAAN,CAAmCH,QAAnC,CAA4C,CAA5C,EAA+C,GAA/C,CAPK,EAQLI,IARK,CAQA,EARA,CAAP;IASD;EACF;;EACD,MAAM,IAAIC,KAAJ,CAAU,oBAAoBd,KAAK,CAACC,EAApC,CAAN;AACD,CApBM;;AA2BP,MAAMc,cAAc,GAAG,QAAmD;EAAA,IAAlD;IAAEf,KAAF;IAASgB;EAAT,CAAkD;EACxE,MAAMC,UAAU,GAAG,CAACpB,OAAO,CAACG,KAAD,CAAP,GAAkBA,KAAD,CAAiBkB,mBAAlC,GAAyDlB,KAAD,CAAsBmB,WAA/E,EAA6FC,IAAhH;EACA,MAAMC,UAAU,GAAG,MAAnB,CAFwE,CAE7C;;EAC3B,oBAAO;IAAA,mBAAOL,iBAAiB,gBAAG,QAAC,IAAD;MAAM,EAAE,EAAEK,UAAV;MAAA,UAAuBJ;IAAvB;MAAA;MAAA;MAAA;IAAA,QAAH,GAA+CA,UAAvE;EAAA,gBAAP;AACD,CAJD;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMK,SAAS,GAAG,SAAsE;EAAA,IAArE;IAAEtB,KAAF;IAASuB,IAAT;IAAeC,gBAAf;IAAiCR;EAAjC,CAAqE;EAC7F,MAAMI,IAAI,GAAGrB,kBAAkB,CAACC,KAAD,CAA/B;EACA,MAAMyB,SAAS,GAAG,MAAlB,CAF6F,CAEnE;;EAC1B,oBACE;IAAA,WACGD,gBAAgB,gBAAG,QAAC,IAAD;MAAM,EAAE,EAAEC,SAAV;MAAA,UAAsBL;IAAtB;MAAA;MAAA;MAAA;IAAA,QAAH,GAAwCA,IAD3D,EAEGG,IAAI,iBAAI,QAAC,cAAD;MAAgB,iBAAiB,EAAEP,iBAAnC;MAAsD,KAAK,EAAEhB;IAA7D;MAAA;MAAA;MAAA;IAAA,QAFX;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CATM"},"metadata":{},"sourceType":"module"}