{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Pagination/pagination';\nimport { css } from '@patternfly/react-styles';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-left-icon';\nimport AngleDoubleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-double-left-icon';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport AngleDoubleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-double-right-icon';\nimport { Button, ButtonVariant } from '../Button';\nimport { pluralize } from '../../helpers';\nimport { KEY_CODES } from '../../helpers/constants';\nexport class Navigation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewPage = (_evt, newPage) => {\n      const {\n        perPage,\n        onSetPage\n      } = this.props;\n      const startIdx = (newPage - 1) * perPage;\n      const endIdx = newPage * perPage;\n      return onSetPage(_evt, newPage, perPage, startIdx, endIdx);\n    };\n\n    this.state = {\n      userInputPage: this.props.page\n    };\n  }\n\n  static parseInteger(input, lastPage) {\n    // eslint-disable-next-line radix\n    let inputPage = Number.parseInt(input, 10);\n\n    if (!Number.isNaN(inputPage)) {\n      inputPage = inputPage > lastPage ? lastPage : inputPage;\n      inputPage = inputPage < 1 ? 1 : inputPage;\n    }\n\n    return inputPage;\n  }\n\n  onChange(event, lastPage) {\n    const inputPage = Navigation.parseInteger(event.target.value, lastPage);\n    this.setState({\n      userInputPage: Number.isNaN(inputPage) ? event.target.value : inputPage\n    });\n  }\n\n  onKeyDown(event, page, lastPage, onPageInput) {\n    if (event.keyCode === KEY_CODES.ENTER) {\n      const inputPage = Navigation.parseInteger(this.state.userInputPage, lastPage);\n      onPageInput(event, Number.isNaN(inputPage) ? page : inputPage);\n      this.handleNewPage(event, Number.isNaN(inputPage) ? page : inputPage);\n    }\n  }\n\n  componentDidUpdate(lastState) {\n    if (this.props.page !== lastState.page && this.props.page <= this.props.lastPage && this.state.userInputPage !== this.props.page) {\n      this.setState({\n        userInputPage: this.props.page\n      });\n    }\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      page,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      perPage,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onSetPage,\n      isDisabled,\n      itemCount,\n      lastPage,\n      firstPage,\n      pagesTitle,\n      pagesTitlePlural,\n      toLastPage,\n      toNextPage,\n      toFirstPage,\n      toPreviousPage,\n      currPage,\n      paginationTitle,\n      ofWord,\n      onNextClick,\n      onPreviousClick,\n      onFirstClick,\n      onLastClick,\n      onPageInput,\n      className,\n      isCompact\n    } = _a,\n          props = __rest(_a, [\"page\", \"perPage\", \"onSetPage\", \"isDisabled\", \"itemCount\", \"lastPage\", \"firstPage\", \"pagesTitle\", \"pagesTitlePlural\", \"toLastPage\", \"toNextPage\", \"toFirstPage\", \"toPreviousPage\", \"currPage\", \"paginationTitle\", \"ofWord\", \"onNextClick\", \"onPreviousClick\", \"onFirstClick\", \"onLastClick\", \"onPageInput\", \"className\", \"isCompact\"]);\n\n    const {\n      userInputPage\n    } = this.state;\n    return React.createElement(\"nav\", Object.assign({\n      className: css(styles.paginationNav, className),\n      \"aria-label\": paginationTitle\n    }, props), !isCompact && React.createElement(\"div\", {\n      className: css(styles.paginationNavControl, styles.modifiers.first)\n    }, React.createElement(Button, {\n      variant: ButtonVariant.plain,\n      isDisabled: isDisabled || page === firstPage || page === 0,\n      \"aria-label\": toFirstPage,\n      \"data-action\": \"first\",\n      onClick: event => {\n        onFirstClick(event, 1);\n        this.handleNewPage(event, 1);\n        this.setState({\n          userInputPage: 1\n        });\n      }\n    }, React.createElement(AngleDoubleLeftIcon, null))), React.createElement(\"div\", {\n      className: styles.paginationNavControl\n    }, React.createElement(Button, {\n      variant: ButtonVariant.plain,\n      isDisabled: isDisabled || page === firstPage || page === 0,\n      \"data-action\": \"previous\",\n      onClick: event => {\n        const newPage = page - 1 >= 1 ? page - 1 : 1;\n        onPreviousClick(event, newPage);\n        this.handleNewPage(event, newPage);\n        this.setState({\n          userInputPage: newPage\n        });\n      },\n      \"aria-label\": toPreviousPage\n    }, React.createElement(AngleLeftIcon, null))), !isCompact && React.createElement(\"div\", {\n      className: styles.paginationNavPageSelect\n    }, React.createElement(\"input\", {\n      className: css(styles.formControl),\n      \"aria-label\": currPage,\n      type: \"number\",\n      disabled: isDisabled || itemCount && page === firstPage && page === lastPage && itemCount >= 0 || page === 0,\n      min: lastPage <= 0 && firstPage <= 0 ? 0 : 1,\n      max: lastPage,\n      value: userInputPage,\n      onKeyDown: event => this.onKeyDown(event, page, lastPage, onPageInput),\n      onChange: event => this.onChange(event, lastPage)\n    }), (itemCount || itemCount === 0) && React.createElement(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, ofWord, \" \", pagesTitle ? pluralize(lastPage, pagesTitle, pagesTitlePlural) : lastPage)), React.createElement(\"div\", {\n      className: styles.paginationNavControl\n    }, React.createElement(Button, {\n      variant: ButtonVariant.plain,\n      isDisabled: isDisabled || page === lastPage,\n      \"aria-label\": toNextPage,\n      \"data-action\": \"next\",\n      onClick: event => {\n        const newPage = page + 1 <= lastPage ? page + 1 : lastPage;\n        onNextClick(event, newPage);\n        this.handleNewPage(event, newPage);\n        this.setState({\n          userInputPage: newPage\n        });\n      }\n    }, React.createElement(AngleRightIcon, null))), !isCompact && React.createElement(\"div\", {\n      className: css(styles.paginationNavControl, styles.modifiers.last)\n    }, React.createElement(Button, {\n      variant: ButtonVariant.plain,\n      isDisabled: isDisabled || page === lastPage,\n      \"aria-label\": toLastPage,\n      \"data-action\": \"last\",\n      onClick: event => {\n        onLastClick(event, lastPage);\n        this.handleNewPage(event, lastPage);\n        this.setState({\n          userInputPage: lastPage\n        });\n      }\n    }, React.createElement(AngleDoubleRightIcon, null))));\n  }\n\n}\nNavigation.displayName = 'Navigation';\nNavigation.defaultProps = {\n  className: '',\n  isDisabled: false,\n  isCompact: false,\n  lastPage: 0,\n  firstPage: 0,\n  pagesTitle: '',\n  pagesTitlePlural: '',\n  toLastPage: 'Go to last page',\n  toNextPage: 'Go to next page',\n  toFirstPage: 'Go to first page',\n  toPreviousPage: 'Go to previous page',\n  currPage: 'Current page',\n  paginationTitle: 'Pagination',\n  ofWord: 'of',\n  onNextClick: () => undefined,\n  onPreviousClick: () => undefined,\n  onFirstClick: () => undefined,\n  onLastClick: () => undefined,\n  onPageInput: () => undefined\n};","map":{"version":3,"mappings":"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","names":["React","styles","css","AngleLeftIcon","AngleDoubleLeftIcon","AngleRightIcon","AngleDoubleRightIcon","Button","ButtonVariant","pluralize","KEY_CODES","Navigation","Component","constructor","props","_evt","newPage","perPage","onSetPage","startIdx","endIdx","state","userInputPage","page","parseInteger","input","lastPage","inputPage","Number","parseInt","isNaN","onChange","event","target","value","setState","onKeyDown","onPageInput","keyCode","ENTER","handleNewPage","componentDidUpdate","lastState","render","_a","isDisabled","itemCount","firstPage","pagesTitle","pagesTitlePlural","toLastPage","toNextPage","toFirstPage","toPreviousPage","currPage","paginationTitle","ofWord","onNextClick","onPreviousClick","onFirstClick","onLastClick","className","isCompact","paginationNav","paginationNavControl","modifiers","first","variant","plain","onClick","paginationNavPageSelect","formControl","type","disabled","min","max","last","undefined"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Pagination/Navigation.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Pagination/pagination';\nimport { css } from '@patternfly/react-styles';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-left-icon';\nimport AngleDoubleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-double-left-icon';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport AngleDoubleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-double-right-icon';\nimport { Button, ButtonVariant } from '../Button';\nimport { OnSetPage } from './Pagination';\nimport { pluralize, PickOptional } from '../../helpers';\nimport { KEY_CODES } from '../../helpers/constants';\n\nexport interface NavigationProps extends React.HTMLProps<HTMLElement> {\n  /** Additional classes for the container */\n  className?: string;\n  /** Flag indicating if the pagination is disabled */\n  isDisabled?: boolean;\n  /** Flag indicating if the pagination is compact */\n  isCompact?: boolean;\n  /** Total number of items. */\n  itemCount?: number;\n  /** The number of the last page */\n  lastPage?: number;\n  /** The number of first page where pagination starts */\n  firstPage?: number;\n  /** The title of a page displayed beside the page number */\n  pagesTitle?: string;\n  /** The title of a page displayed beside the page number (the plural form) */\n  pagesTitlePlural?: string;\n  /** Accessible label for the button which moves to the last page */\n  toLastPage?: string;\n  /** Accessible label for the button which moves to the previous page */\n  toPreviousPage?: string;\n  /** Accessible label for the button which moves to the next page */\n  toNextPage?: string;\n  /** Accessible label for the button which moves to the first page */\n  toFirstPage?: string;\n  /** Accessible label for the input displaying the current page */\n  currPage?: string;\n  /** Accessible label for the pagination component */\n  paginationTitle?: string;\n  /** Accessible label for the English word \"of\" */\n  ofWord?: string;\n  /** The number of the current page */\n  page: React.ReactText;\n  /** Number of items per page. */\n  perPage?: number;\n  /** Function called when page is changed */\n  onSetPage: OnSetPage;\n  /** Function called when user clicks to navigate to next page */\n  onNextClick?: (event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void;\n  /** Function called when user clicks to navigate to previous page */\n  onPreviousClick?: (event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void;\n  /** Function called when user clicks to navigate to first page */\n  onFirstClick?: (event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void;\n  /** Function called when user clicks to navigate to last page */\n  onLastClick?: (event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void;\n  /** Function called when user inputs page number */\n  onPageInput?: (event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void;\n}\n\nexport interface NavigationState {\n  userInputPage?: React.ReactText;\n}\n\nexport class Navigation extends React.Component<NavigationProps, NavigationState> {\n  static displayName = 'Navigation';\n  constructor(props: NavigationProps) {\n    super(props);\n    this.state = { userInputPage: this.props.page };\n  }\n\n  static defaultProps: PickOptional<NavigationProps> = {\n    className: '',\n    isDisabled: false,\n    isCompact: false,\n    lastPage: 0,\n    firstPage: 0,\n    pagesTitle: '',\n    pagesTitlePlural: '',\n    toLastPage: 'Go to last page',\n    toNextPage: 'Go to next page',\n    toFirstPage: 'Go to first page',\n    toPreviousPage: 'Go to previous page',\n    currPage: 'Current page',\n    paginationTitle: 'Pagination',\n    ofWord: 'of',\n    onNextClick: () => undefined as any,\n    onPreviousClick: () => undefined as any,\n    onFirstClick: () => undefined as any,\n    onLastClick: () => undefined as any,\n    onPageInput: () => undefined as any\n  };\n\n  private static parseInteger(input: React.ReactText, lastPage: number): number {\n    // eslint-disable-next-line radix\n    let inputPage = Number.parseInt(input as string, 10);\n    if (!Number.isNaN(inputPage)) {\n      inputPage = inputPage > lastPage ? lastPage : inputPage;\n      inputPage = inputPage < 1 ? 1 : inputPage;\n    }\n    return inputPage;\n  }\n\n  private onChange(event: React.ChangeEvent<HTMLInputElement>, lastPage: number): void {\n    const inputPage = Navigation.parseInteger(event.target.value, lastPage);\n    this.setState({ userInputPage: Number.isNaN(inputPage as number) ? event.target.value : inputPage });\n  }\n\n  private onKeyDown(\n    event: React.KeyboardEvent<HTMLInputElement>,\n    page: number | string,\n    lastPage: number,\n    onPageInput: (event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void\n  ): void {\n    if (event.keyCode === KEY_CODES.ENTER) {\n      const inputPage = Navigation.parseInteger(this.state.userInputPage, lastPage) as number;\n      onPageInput(event, Number.isNaN(inputPage) ? (page as number) : inputPage);\n      this.handleNewPage(event, Number.isNaN(inputPage) ? (page as number) : inputPage);\n    }\n  }\n\n  handleNewPage = (_evt: React.MouseEvent | React.KeyboardEvent | MouseEvent, newPage: number) => {\n    const { perPage, onSetPage } = this.props;\n    const startIdx = (newPage - 1) * perPage;\n    const endIdx = newPage * perPage;\n    return onSetPage(_evt, newPage, perPage, startIdx, endIdx);\n  };\n\n  componentDidUpdate(lastState: NavigationProps) {\n    if (\n      this.props.page !== lastState.page &&\n      this.props.page <= this.props.lastPage &&\n      this.state.userInputPage !== this.props.page\n    ) {\n      this.setState({ userInputPage: this.props.page });\n    }\n  }\n\n  render() {\n    const {\n      page,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      perPage,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onSetPage,\n      isDisabled,\n      itemCount,\n      lastPage,\n      firstPage,\n      pagesTitle,\n      pagesTitlePlural,\n      toLastPage,\n      toNextPage,\n      toFirstPage,\n      toPreviousPage,\n      currPage,\n      paginationTitle,\n      ofWord,\n      onNextClick,\n      onPreviousClick,\n      onFirstClick,\n      onLastClick,\n      onPageInput,\n      className,\n      isCompact,\n      ...props\n    } = this.props;\n    const { userInputPage } = this.state;\n    return (\n      <nav className={css(styles.paginationNav, className)} aria-label={paginationTitle} {...props}>\n        {!isCompact && (\n          <div className={css(styles.paginationNavControl, styles.modifiers.first)}>\n            <Button\n              variant={ButtonVariant.plain}\n              isDisabled={isDisabled || page === firstPage || page === 0}\n              aria-label={toFirstPage}\n              data-action=\"first\"\n              onClick={event => {\n                onFirstClick(event, 1);\n                this.handleNewPage(event, 1);\n                this.setState({ userInputPage: 1 });\n              }}\n            >\n              <AngleDoubleLeftIcon />\n            </Button>\n          </div>\n        )}\n        <div className={styles.paginationNavControl}>\n          <Button\n            variant={ButtonVariant.plain}\n            isDisabled={isDisabled || page === firstPage || page === 0}\n            data-action=\"previous\"\n            onClick={event => {\n              const newPage = (page as number) - 1 >= 1 ? (page as number) - 1 : 1;\n              onPreviousClick(event, newPage);\n              this.handleNewPage(event, newPage);\n              this.setState({ userInputPage: newPage });\n            }}\n            aria-label={toPreviousPage}\n          >\n            <AngleLeftIcon />\n          </Button>\n        </div>\n        {!isCompact && (\n          <div className={styles.paginationNavPageSelect}>\n            <input\n              className={css(styles.formControl)}\n              aria-label={currPage}\n              type=\"number\"\n              disabled={\n                isDisabled || (itemCount && page === firstPage && page === lastPage && itemCount >= 0) || page === 0\n              }\n              min={lastPage <= 0 && firstPage <= 0 ? 0 : 1}\n              max={lastPage}\n              value={userInputPage}\n              onKeyDown={event => this.onKeyDown(event, page, lastPage, onPageInput)}\n              onChange={event => this.onChange(event, lastPage)}\n            />\n            {(itemCount || itemCount === 0) && (\n              <span aria-hidden=\"true\">\n                {ofWord} {pagesTitle ? pluralize(lastPage, pagesTitle, pagesTitlePlural) : lastPage}\n              </span>\n            )}\n          </div>\n        )}\n        <div className={styles.paginationNavControl}>\n          <Button\n            variant={ButtonVariant.plain}\n            isDisabled={isDisabled || page === lastPage}\n            aria-label={toNextPage}\n            data-action=\"next\"\n            onClick={event => {\n              const newPage = (page as number) + 1 <= lastPage ? (page as number) + 1 : lastPage;\n              onNextClick(event, newPage);\n              this.handleNewPage(event, newPage);\n              this.setState({ userInputPage: newPage });\n            }}\n          >\n            <AngleRightIcon />\n          </Button>\n        </div>\n        {!isCompact && (\n          <div className={css(styles.paginationNavControl, styles.modifiers.last)}>\n            <Button\n              variant={ButtonVariant.plain}\n              isDisabled={isDisabled || page === lastPage}\n              aria-label={toLastPage}\n              data-action=\"last\"\n              onClick={event => {\n                onLastClick(event, lastPage);\n                this.handleNewPage(event, lastPage);\n                this.setState({ userInputPage: lastPage });\n              }}\n            >\n              <AngleDoubleRightIcon />\n            </Button>\n          </div>\n        )}\n      </nav>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}