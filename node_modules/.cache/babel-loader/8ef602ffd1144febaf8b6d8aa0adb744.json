{"ast":null,"code":"import _slicedToArray from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\n/* eslint-disable no-console */\n\nimport * as React from 'react';\nimport { KEY_CODES } from '../../helpers/constants';\nimport styles from '@patternfly/react-styles/css/components/Popover/popover';\nimport { css } from '@patternfly/react-styles';\nimport { PopoverContext } from './PopoverContext';\nimport { PopoverContent } from './PopoverContent';\nimport { PopoverBody } from './PopoverBody';\nimport { PopoverHeader } from './PopoverHeader';\nimport { PopoverFooter } from './PopoverFooter';\nimport { PopoverCloseButton } from './PopoverCloseButton';\nimport { PopoverArrow } from './PopoverArrow';\nimport popoverMaxWidth from '@patternfly/react-tokens/dist/esm/c_popover_MaxWidth';\nimport popoverMinWidth from '@patternfly/react-tokens/dist/esm/c_popover_MinWidth';\nimport { FocusTrap } from '../../helpers';\nimport { Popper, getOpacityTransition } from '../../helpers/Popper/Popper';\nimport { getUniqueId } from '../../helpers/util';\nexport var PopoverPosition;\n\n(function (PopoverPosition) {\n  PopoverPosition[\"auto\"] = \"auto\";\n  PopoverPosition[\"top\"] = \"top\";\n  PopoverPosition[\"bottom\"] = \"bottom\";\n  PopoverPosition[\"left\"] = \"left\";\n  PopoverPosition[\"right\"] = \"right\";\n  PopoverPosition[\"topStart\"] = \"top-start\";\n  PopoverPosition[\"topEnd\"] = \"top-end\";\n  PopoverPosition[\"bottomStart\"] = \"bottom-start\";\n  PopoverPosition[\"bottomEnd\"] = \"bottom-end\";\n  PopoverPosition[\"leftStart\"] = \"left-start\";\n  PopoverPosition[\"leftEnd\"] = \"left-end\";\n  PopoverPosition[\"rightStart\"] = \"right-start\";\n  PopoverPosition[\"rightEnd\"] = \"right-end\";\n})(PopoverPosition || (PopoverPosition = {}));\n\nvar alertStyle = {\n  default: styles.modifiers.default,\n  info: styles.modifiers.info,\n  success: styles.modifiers.success,\n  warning: styles.modifiers.warning,\n  danger: styles.modifiers.danger\n};\nexport var Popover = function Popover(_a) {\n  var children = _a.children,\n      _a$position = _a.position,\n      position = _a$position === void 0 ? 'top' : _a$position,\n      _a$enableFlip = _a.enableFlip,\n      enableFlip = _a$enableFlip === void 0 ? true : _a$enableFlip,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      _a$isVisible = _a.isVisible,\n      isVisible = _a$isVisible === void 0 ? null : _a$isVisible,\n      _a$shouldClose = _a.shouldClose,\n      shouldClose = _a$shouldClose === void 0 ? function () {\n    return null;\n  } : _a$shouldClose,\n      _a$shouldOpen = _a.shouldOpen,\n      shouldOpen = _a$shouldOpen === void 0 ? function () {\n    return null;\n  } : _a$shouldOpen,\n      _a$ariaLabel = _a['aria-label'],\n      ariaLabel = _a$ariaLabel === void 0 ? '' : _a$ariaLabel,\n      bodyContent = _a.bodyContent,\n      _a$headerContent = _a.headerContent,\n      headerContent = _a$headerContent === void 0 ? null : _a$headerContent,\n      _a$headerComponent = _a.headerComponent,\n      headerComponent = _a$headerComponent === void 0 ? 'h6' : _a$headerComponent,\n      _a$headerIcon = _a.headerIcon,\n      headerIcon = _a$headerIcon === void 0 ? null : _a$headerIcon,\n      alertSeverityVariant = _a.alertSeverityVariant,\n      alertSeverityScreenReaderText = _a.alertSeverityScreenReaderText,\n      _a$footerContent = _a.footerContent,\n      footerContent = _a$footerContent === void 0 ? null : _a$footerContent,\n      _a$appendTo = _a.appendTo,\n      appendTo = _a$appendTo === void 0 ? function () {\n    return document.body;\n  } : _a$appendTo,\n      _a$hideOnOutsideClick = _a.hideOnOutsideClick,\n      hideOnOutsideClick = _a$hideOnOutsideClick === void 0 ? true : _a$hideOnOutsideClick,\n      _a$onHide = _a.onHide,\n      onHide = _a$onHide === void 0 ? function () {\n    return null;\n  } : _a$onHide,\n      _a$onHidden = _a.onHidden,\n      onHidden = _a$onHidden === void 0 ? function () {\n    return null;\n  } : _a$onHidden,\n      _a$onShow = _a.onShow,\n      onShow = _a$onShow === void 0 ? function () {\n    return null;\n  } : _a$onShow,\n      _a$onShown = _a.onShown,\n      onShown = _a$onShown === void 0 ? function () {\n    return null;\n  } : _a$onShown,\n      _a$onMount = _a.onMount,\n      onMount = _a$onMount === void 0 ? function () {\n    return null;\n  } : _a$onMount,\n      _a$zIndex = _a.zIndex,\n      zIndex = _a$zIndex === void 0 ? 9999 : _a$zIndex,\n      _a$minWidth = _a.minWidth,\n      minWidth = _a$minWidth === void 0 ? popoverMinWidth && popoverMinWidth.value : _a$minWidth,\n      _a$maxWidth = _a.maxWidth,\n      maxWidth = _a$maxWidth === void 0 ? popoverMaxWidth && popoverMaxWidth.value : _a$maxWidth,\n      _a$closeBtnAriaLabel = _a.closeBtnAriaLabel,\n      closeBtnAriaLabel = _a$closeBtnAriaLabel === void 0 ? 'Close' : _a$closeBtnAriaLabel,\n      _a$showClose = _a.showClose,\n      showClose = _a$showClose === void 0 ? true : _a$showClose,\n      _a$distance = _a.distance,\n      distance = _a$distance === void 0 ? 25 : _a$distance,\n      _a$flipBehavior = _a.flipBehavior,\n      flipBehavior = _a$flipBehavior === void 0 ? ['top', 'right', 'bottom', 'left', 'top', 'right', 'bottom'] : _a$flipBehavior,\n      _a$animationDuration = _a.animationDuration,\n      animationDuration = _a$animationDuration === void 0 ? 300 : _a$animationDuration,\n      id = _a.id,\n      propWithFocusTrap = _a.withFocusTrap,\n      boundary = _a.boundary,\n      tippyProps = _a.tippyProps,\n      reference = _a.reference,\n      _a$hasNoPadding = _a.hasNoPadding,\n      hasNoPadding = _a$hasNoPadding === void 0 ? false : _a$hasNoPadding,\n      _a$hasAutoWidth = _a.hasAutoWidth,\n      hasAutoWidth = _a$hasAutoWidth === void 0 ? false : _a$hasAutoWidth,\n      rest = __rest(_a, [\"children\", \"position\", \"enableFlip\", \"className\", \"isVisible\", \"shouldClose\", \"shouldOpen\", 'aria-label', \"bodyContent\", \"headerContent\", \"headerComponent\", \"headerIcon\", \"alertSeverityVariant\", \"alertSeverityScreenReaderText\", \"footerContent\", \"appendTo\", \"hideOnOutsideClick\", \"onHide\", \"onHidden\", \"onShow\", \"onShown\", \"onMount\", \"zIndex\", \"minWidth\", \"maxWidth\", \"closeBtnAriaLabel\", \"showClose\", \"distance\", \"flipBehavior\", \"animationDuration\", \"id\", \"withFocusTrap\", \"boundary\", \"tippyProps\", \"reference\", \"hasNoPadding\", \"hasAutoWidth\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    boundary !== undefined && console.warn('The Popover boundary prop has been deprecated. If you want to constrain the popper to a specific element use the appendTo prop instead.');\n    tippyProps !== undefined && console.warn('The Popover tippyProps prop has been deprecated and is no longer used.');\n  } // could make this a prop in the future (true | false | 'toggle')\n  // const hideOnClick = true;\n\n\n  var uniqueId = id || getUniqueId();\n  var triggerManually = isVisible !== null;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      opacity = _React$useState4[0],\n      setOpacity = _React$useState4[1];\n\n  var _React$useState5 = React.useState(Boolean(propWithFocusTrap)),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      focusTrapActive = _React$useState6[0],\n      setFocusTrapActive = _React$useState6[1];\n\n  var transitionTimerRef = React.useRef(null);\n  var showTimerRef = React.useRef(null);\n  var hideTimerRef = React.useRef(null);\n  React.useEffect(function () {\n    onMount();\n  }, []);\n  React.useEffect(function () {\n    if (triggerManually) {\n      if (isVisible) {\n        show();\n      } else {\n        hide();\n      }\n    }\n  }, [isVisible, triggerManually]);\n\n  var show = function show(withFocusTrap) {\n    onShow();\n\n    if (transitionTimerRef.current) {\n      clearTimeout(transitionTimerRef.current);\n    }\n\n    if (hideTimerRef.current) {\n      clearTimeout(hideTimerRef.current);\n    }\n\n    showTimerRef.current = setTimeout(function () {\n      setVisible(true);\n      setOpacity(1);\n      propWithFocusTrap !== false && withFocusTrap && setFocusTrapActive(true);\n      onShown();\n    }, 0);\n  };\n\n  var hide = function hide() {\n    onHide();\n\n    if (showTimerRef.current) {\n      clearTimeout(showTimerRef.current);\n    }\n\n    hideTimerRef.current = setTimeout(function () {\n      setVisible(false);\n      setOpacity(0);\n      setFocusTrapActive(false);\n      transitionTimerRef.current = setTimeout(function () {\n        onHidden();\n      }, animationDuration);\n    }, 0);\n  };\n\n  var positionModifiers = {\n    top: styles.modifiers.top,\n    bottom: styles.modifiers.bottom,\n    left: styles.modifiers.left,\n    right: styles.modifiers.right,\n    'top-start': styles.modifiers.topLeft,\n    'top-end': styles.modifiers.topRight,\n    'bottom-start': styles.modifiers.bottomLeft,\n    'bottom-end': styles.modifiers.bottomRight,\n    'left-start': styles.modifiers.leftTop,\n    'left-end': styles.modifiers.leftBottom,\n    'right-start': styles.modifiers.rightTop,\n    'right-end': styles.modifiers.rightBottom\n  };\n  var hasCustomMinWidth = minWidth !== popoverMinWidth.value;\n  var hasCustomMaxWidth = maxWidth !== popoverMaxWidth.value;\n\n  var onDocumentKeyDown = function onDocumentKeyDown(event) {\n    if (event.keyCode === KEY_CODES.ESCAPE_KEY && visible) {\n      if (triggerManually) {\n        shouldClose(null, hide, event);\n      } else {\n        hide();\n      }\n    }\n  };\n\n  var onDocumentClick = function onDocumentClick(event, triggerElement, popperElement) {\n    if (hideOnOutsideClick && visible) {\n      // check if we clicked within the popper, if so don't do anything\n      var isChild = popperElement && popperElement.contains(event.target);\n\n      if (isChild) {\n        // clicked within the popper\n        return;\n      }\n\n      if (triggerManually) {\n        shouldClose(null, hide, event);\n      } else {\n        hide();\n      }\n    }\n  };\n\n  var onTriggerClick = function onTriggerClick(event) {\n    if (triggerManually) {\n      if (visible) {\n        shouldClose(null, hide, event);\n      } else {\n        shouldOpen(show, event);\n      }\n    } else {\n      if (visible) {\n        hide();\n      } else {\n        show(true);\n      }\n    }\n  };\n\n  var onContentMouseDown = function onContentMouseDown() {\n    if (focusTrapActive) {\n      setFocusTrapActive(false);\n    }\n  };\n\n  var closePopover = function closePopover(event) {\n    event.stopPropagation();\n\n    if (triggerManually) {\n      shouldClose(null, hide, event);\n    } else {\n      hide();\n    }\n  };\n\n  var content = React.createElement(FocusTrap, Object.assign({\n    active: focusTrapActive,\n    focusTrapOptions: {\n      returnFocusOnDeactivate: true,\n      clickOutsideDeactivates: true,\n      tabbableOptions: {\n        displayCheck: 'none'\n      },\n      fallbackFocus: function fallbackFocus() {\n        // If the popover's trigger is focused but scrolled out of view,\n        // FocusTrap will throw an error when the Enter button is used on the trigger.\n        // That is because the Popover is hidden when its trigger is out of view.\n        // Provide a fallback in that case.\n        var node = null;\n\n        if (document && document.activeElement) {\n          node = document.activeElement;\n        }\n\n        return node;\n      }\n    },\n    preventScrollOnDeactivate: true,\n    className: css(styles.popover, alertSeverityVariant && alertStyle[alertSeverityVariant], hasNoPadding && styles.modifiers.noPadding, hasAutoWidth && styles.modifiers.widthAuto, className),\n    role: \"dialog\",\n    \"aria-modal\": \"true\",\n    \"aria-label\": headerContent ? undefined : ariaLabel,\n    \"aria-labelledby\": headerContent ? \"popover-\".concat(uniqueId, \"-header\") : undefined,\n    \"aria-describedby\": \"popover-\".concat(uniqueId, \"-body\"),\n    onMouseDown: onContentMouseDown,\n    style: {\n      minWidth: hasCustomMinWidth ? minWidth : null,\n      maxWidth: hasCustomMaxWidth ? maxWidth : null,\n      opacity: opacity,\n      transition: getOpacityTransition(animationDuration)\n    }\n  }, rest), React.createElement(PopoverArrow, null), React.createElement(PopoverContent, null, showClose && React.createElement(PopoverCloseButton, {\n    onClose: closePopover,\n    \"aria-label\": closeBtnAriaLabel\n  }), headerContent && React.createElement(PopoverHeader, {\n    id: \"popover-\".concat(uniqueId, \"-header\"),\n    icon: headerIcon,\n    alertSeverityVariant: alertSeverityVariant,\n    alertSeverityScreenReaderText: alertSeverityScreenReaderText || \"\".concat(alertSeverityVariant, \" alert:\"),\n    titleHeadingLevel: headerComponent\n  }, typeof headerContent === 'function' ? headerContent(hide) : headerContent), React.createElement(PopoverBody, {\n    id: \"popover-\".concat(uniqueId, \"-body\")\n  }, typeof bodyContent === 'function' ? bodyContent(hide) : bodyContent), footerContent && React.createElement(PopoverFooter, {\n    id: \"popover-\".concat(uniqueId, \"-footer\")\n  }, typeof footerContent === 'function' ? footerContent(hide) : footerContent)));\n  return React.createElement(PopoverContext.Provider, {\n    value: {\n      headerComponent: headerComponent\n    }\n  }, React.createElement(Popper, {\n    trigger: children,\n    reference: reference,\n    popper: content,\n    popperMatchesTriggerWidth: false,\n    appendTo: appendTo,\n    isVisible: visible,\n    positionModifiers: positionModifiers,\n    distance: distance,\n    placement: position,\n    onTriggerClick: onTriggerClick,\n    onDocumentClick: onDocumentClick,\n    onDocumentKeyDown: onDocumentKeyDown,\n    enableFlip: enableFlip,\n    zIndex: zIndex,\n    flipBehavior: flipBehavior\n  }));\n};\nPopover.displayName = 'Popover';","map":{"version":3,"mappings":"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","names":["React","KEY_CODES","styles","css","PopoverContext","PopoverContent","PopoverBody","PopoverHeader","PopoverFooter","PopoverCloseButton","PopoverArrow","popoverMaxWidth","popoverMinWidth","FocusTrap","Popper","getOpacityTransition","getUniqueId","PopoverPosition","alertStyle","default","modifiers","info","success","warning","danger","Popover","_a","children","position","enableFlip","className","isVisible","shouldClose","shouldOpen","ariaLabel","bodyContent","headerContent","headerComponent","headerIcon","alertSeverityVariant","alertSeverityScreenReaderText","footerContent","appendTo","document","body","hideOnOutsideClick","onHide","onHidden","onShow","onShown","onMount","zIndex","minWidth","value","maxWidth","closeBtnAriaLabel","showClose","distance","flipBehavior","animationDuration","id","propWithFocusTrap","withFocusTrap","boundary","tippyProps","reference","hasNoPadding","hasAutoWidth","rest","__rest","process","env","NODE_ENV","undefined","console","warn","uniqueId","triggerManually","useState","visible","setVisible","opacity","setOpacity","Boolean","focusTrapActive","setFocusTrapActive","transitionTimerRef","useRef","showTimerRef","hideTimerRef","useEffect","show","hide","current","clearTimeout","setTimeout","positionModifiers","top","bottom","left","right","topLeft","topRight","bottomLeft","bottomRight","leftTop","leftBottom","rightTop","rightBottom","hasCustomMinWidth","hasCustomMaxWidth","onDocumentKeyDown","event","keyCode","ESCAPE_KEY","onDocumentClick","triggerElement","popperElement","isChild","contains","target","onTriggerClick","onContentMouseDown","closePopover","stopPropagation","content","Object","active","focusTrapOptions","returnFocusOnDeactivate","clickOutsideDeactivates","tabbableOptions","displayCheck","fallbackFocus","node","activeElement","preventScrollOnDeactivate","popover","noPadding","widthAuto","role","onMouseDown","style","transition","onClose","icon","titleHeadingLevel","Provider","trigger","popper","popperMatchesTriggerWidth","placement","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Popover/Popover.tsx"],"sourcesContent":["/* eslint-disable no-console */\nimport * as React from 'react';\nimport { KEY_CODES } from '../../helpers/constants';\nimport styles from '@patternfly/react-styles/css/components/Popover/popover';\nimport { css } from '@patternfly/react-styles';\nimport { PopoverContext } from './PopoverContext';\nimport { PopoverContent } from './PopoverContent';\nimport { PopoverBody } from './PopoverBody';\nimport { PopoverHeader } from './PopoverHeader';\nimport { PopoverFooter } from './PopoverFooter';\nimport { PopoverCloseButton } from './PopoverCloseButton';\nimport { PopoverArrow } from './PopoverArrow';\nimport popoverMaxWidth from '@patternfly/react-tokens/dist/esm/c_popover_MaxWidth';\nimport popoverMinWidth from '@patternfly/react-tokens/dist/esm/c_popover_MinWidth';\nimport { ReactElement } from 'react';\nimport { FocusTrap } from '../../helpers';\nimport { Popper, getOpacityTransition } from '../../helpers/Popper/Popper';\nimport { getUniqueId } from '../../helpers/util';\nimport { Instance as TippyInstance, Props as TippyProps } from '../../helpers/Popper/DeprecatedTippyTypes';\n\nexport enum PopoverPosition {\n  auto = 'auto',\n  top = 'top',\n  bottom = 'bottom',\n  left = 'left',\n  right = 'right',\n  topStart = 'top-start',\n  topEnd = 'top-end',\n  bottomStart = 'bottom-start',\n  bottomEnd = 'bottom-end',\n  leftStart = 'left-start',\n  leftEnd = 'left-end',\n  rightStart = 'right-start',\n  rightEnd = 'right-end'\n}\n\nexport interface PopoverProps {\n  /** Accessible label, required when header is not present */\n  'aria-label'?: string;\n  /** The element to append the popover to, defaults to body */\n  appendTo?: HTMLElement | ((ref?: HTMLElement) => HTMLElement);\n  /**\n   * Body content\n   * If you want to close the popover after an action within the bodyContent, you can use the isVisible prop for manual control,\n   * or you can provide a function which will receive a callback as an argument to hide the popover\n   * i.e. bodyContent={hide => <Button onClick={() => hide()}>Close</Button>}\n   */\n  bodyContent: React.ReactNode | ((hide: () => void) => React.ReactNode);\n  /**\n   * The reference element to which the Popover is relatively placed to.\n   * If you cannot wrap the reference with the Popover, you can use the reference prop instead.\n   * Usage: <Popover><Button>Reference</Button></Popover>\n   */\n  children?: ReactElement<any>;\n  /**\n   * The reference element to which the Popover is relatively placed to.\n   * If you can wrap the reference with the Popover, you can use the children prop instead.\n   * Usage: <Popover reference={() => document.getElementById('reference-element')} />\n   */\n  reference?: HTMLElement | (() => HTMLElement) | React.RefObject<any>;\n  /** Popover additional class */\n  className?: string;\n  /** Aria label for the Close button */\n  closeBtnAriaLabel?: string;\n  /** Whether to show the close button */\n  showClose?: boolean;\n  /** Distance of the popover to its target, defaults to 25 */\n  distance?: number;\n  /**\n   * If true, tries to keep the popover in view by flipping it if necessary.\n   * If the position is set to 'auto', this prop is ignored\n   */\n  enableFlip?: boolean;\n  /**\n   * The desired position to flip the popover to if the initial position is not possible.\n   * By setting this prop to 'flip' it attempts to flip the popover to the opposite side if there is no space.\n   * You can also pass an array of positions that determines the flip order. It should contain the initial position\n   * followed by alternative positions if that position is unavailable.\n   * Example: Initial position is 'top'. Button with popover is in the top right corner. 'flipBehavior' is set to\n   * ['top', 'right', 'left']. Since there is no space to the top, it checks if right is available. There's also no\n   * space to the right, so it finally shows the popover on the left.\n   */\n  flipBehavior?:\n    | 'flip'\n    | (\n        | 'top'\n        | 'bottom'\n        | 'left'\n        | 'right'\n        | 'top-start'\n        | 'top-end'\n        | 'bottom-start'\n        | 'bottom-end'\n        | 'left-start'\n        | 'left-end'\n        | 'right-start'\n        | 'right-end'\n      )[];\n  /**\n   * Footer content\n   * If you want to close the popover after an action within the bodyContent, you can use the isVisible prop for manual control,\n   * or you can provide a function which will receive a callback as an argument to hide the popover\n   * i.e. footerContent={hide => <Button onClick={() => hide()}>Close</Button>}\n   */\n  footerContent?: React.ReactNode | ((hide: () => void) => React.ReactNode);\n  /**\n   * Simple header content to be placed within a title.\n   * If you want to close the popover after an action within the bodyContent, you can use the isVisible prop for manual control,\n   * or you can provide a function which will receive a callback as an argument to hide the popover\n   * i.e. headerContent={hide => <Button onClick={() => hide()}>Close</Button>}\n   */\n  headerContent?: React.ReactNode | ((hide: () => void) => React.ReactNode);\n  /** Sets the heading level to use for the popover header. Default is h6. */\n  headerComponent?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n  /** @beta Icon to be displayed in the popover header **/\n  headerIcon?: React.ReactNode;\n  /** @beta Severity variants for an alert popover. This modifies the color of the header to match the severity. */\n  alertSeverityVariant?: 'default' | 'info' | 'warning' | 'success' | 'danger';\n  /** @beta Text announced by screen reader when alert severity variant is set to indicate severity level */\n  alertSeverityScreenReaderText?: string;\n  /** Hides the popover when a click occurs outside (only works if isVisible is not controlled by the user) */\n  hideOnOutsideClick?: boolean;\n  /**\n   * True to show the popover programmatically. Used in conjunction with the shouldClose prop.\n   * By default, the popover child element handles click events automatically. If you want to control this programmatically,\n   * the popover will not auto-close if the Close button is clicked, ESC key is used, or if a click occurs outside the popover.\n   * Instead, the consumer is responsible for closing the popover themselves by adding a callback listener for the shouldClose prop.\n   */\n  isVisible?: boolean;\n  /** Minimum width of the popover (default 6.25rem) */\n  minWidth?: string;\n  /** Maximum width of the popover (default 18.75rem) */\n  maxWidth?: string;\n  /**\n   * Lifecycle function invoked when the popover has fully transitioned out.\n   * Note: The tip argument is no longer passed and has been deprecated.\n   */\n  onHidden?: (tip?: TippyInstance) => void;\n  /**\n   * Lifecycle function invoked when the popover begins to transition out.\n   * Note: The tip argument is no longer passed and has been deprecated.\n   */\n  onHide?: (tip?: TippyInstance) => void;\n  /**\n   * Lifecycle function invoked when the popover has been mounted to the DOM.\n   * Note: The tip argument is no longer passed and has been deprecated.\n   */\n  onMount?: (tip?: TippyInstance) => void;\n  /**\n   * Lifecycle function invoked when the popover begins to transition in.\n   * Note: The tip argument is no longer passed and has been deprecated.\n   */\n  onShow?: (tip?: TippyInstance) => void;\n  /**\n   * Lifecycle function invoked when the popover has fully transitioned in.\n   * Note: The tip argument is no longer passed and has been deprecated.\n   */\n  onShown?: (tip?: TippyInstance) => void;\n  /**\n   * Popover position. Note: With 'enableFlip' set to true,\n   * it will change the position if there is not enough space for the starting position.\n   * The behavior of where it flips to can be controlled through the flipBehavior prop.\n   */\n  position?:\n    | PopoverPosition\n    | 'auto'\n    | 'top'\n    | 'bottom'\n    | 'left'\n    | 'right'\n    | 'top-start'\n    | 'top-end'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'left-start'\n    | 'left-end'\n    | 'right-start'\n    | 'right-end';\n  /**\n   * Callback function that is only invoked when isVisible is also controlled. Called when the popover Close button is\n   * clicked, Enter key was used on it, or the ESC key is used.\n   * Note: The tip argument is no longer passed and has been deprecated.\n   */\n  shouldClose?: (tip?: TippyInstance, hideFunction?: () => void, event?: MouseEvent | KeyboardEvent) => void;\n  /**\n   * Callback function that is only invoked when isVisible is also controlled. Called when the Enter key is\n   * used on the focused trigger\n   */\n  shouldOpen?: (showFunction?: () => void, event?: MouseEvent | KeyboardEvent) => void;\n  /** z-index of the popover */\n  zIndex?: number;\n  /** CSS fade transition animation duration */\n  animationDuration?: number;\n  /** id used as part of the various popover elements (popover-${id}-header/body/footer) */\n  id?: string;\n  /** Whether to trap focus in the popover */\n  withFocusTrap?: boolean;\n  /** Removes fixed-width and allows width to be defined by contents */\n  hasAutoWidth?: boolean;\n  /** Allows content to touch edges of popover container */\n  hasNoPadding?: boolean;\n  /** @deprecated - no longer used. if you want to constrain the popper to a specific element use the appendTo prop instead */\n  boundary?: 'scrollParent' | 'window' | 'viewport' | HTMLElement;\n  /** @deprecated - no longer used */\n  tippyProps?: Partial<TippyProps>;\n}\n\nconst alertStyle = {\n  default: styles.modifiers.default,\n  info: styles.modifiers.info,\n  success: styles.modifiers.success,\n  warning: styles.modifiers.warning,\n  danger: styles.modifiers.danger\n};\n\nexport const Popover: React.FunctionComponent<PopoverProps> = ({\n  children,\n  position = 'top',\n  enableFlip = true,\n  className = '',\n  isVisible = null as boolean,\n  shouldClose = (): void => null,\n  shouldOpen = (): void => null,\n  'aria-label': ariaLabel = '',\n  bodyContent,\n  headerContent = null,\n  headerComponent = 'h6',\n  headerIcon = null,\n  alertSeverityVariant,\n  alertSeverityScreenReaderText,\n  footerContent = null,\n  appendTo = () => document.body,\n  hideOnOutsideClick = true,\n  onHide = (): void => null,\n  onHidden = (): void => null,\n  onShow = (): void => null,\n  onShown = (): void => null,\n  onMount = (): void => null,\n  zIndex = 9999,\n  minWidth = popoverMinWidth && popoverMinWidth.value,\n  maxWidth = popoverMaxWidth && popoverMaxWidth.value,\n  closeBtnAriaLabel = 'Close',\n  showClose = true,\n  distance = 25,\n  // For every initial starting position, there are 3 escape positions\n  flipBehavior = ['top', 'right', 'bottom', 'left', 'top', 'right', 'bottom'],\n  animationDuration = 300,\n  id,\n  withFocusTrap: propWithFocusTrap,\n  boundary,\n  tippyProps,\n  reference,\n  hasNoPadding = false,\n  hasAutoWidth = false,\n  ...rest\n}: PopoverProps) => {\n  if (process.env.NODE_ENV !== 'production') {\n    boundary !== undefined &&\n      console.warn(\n        'The Popover boundary prop has been deprecated. If you want to constrain the popper to a specific element use the appendTo prop instead.'\n      );\n    tippyProps !== undefined && console.warn('The Popover tippyProps prop has been deprecated and is no longer used.');\n  }\n  // could make this a prop in the future (true | false | 'toggle')\n  // const hideOnClick = true;\n  const uniqueId = id || getUniqueId();\n  const triggerManually = isVisible !== null;\n  const [visible, setVisible] = React.useState(false);\n  const [opacity, setOpacity] = React.useState(0);\n  const [focusTrapActive, setFocusTrapActive] = React.useState(Boolean(propWithFocusTrap));\n  const transitionTimerRef = React.useRef(null);\n  const showTimerRef = React.useRef(null);\n  const hideTimerRef = React.useRef(null);\n\n  React.useEffect(() => {\n    onMount();\n  }, []);\n  React.useEffect(() => {\n    if (triggerManually) {\n      if (isVisible) {\n        show();\n      } else {\n        hide();\n      }\n    }\n  }, [isVisible, triggerManually]);\n  const show = (withFocusTrap?: boolean) => {\n    onShow();\n    if (transitionTimerRef.current) {\n      clearTimeout(transitionTimerRef.current);\n    }\n    if (hideTimerRef.current) {\n      clearTimeout(hideTimerRef.current);\n    }\n    showTimerRef.current = setTimeout(() => {\n      setVisible(true);\n      setOpacity(1);\n      propWithFocusTrap !== false && withFocusTrap && setFocusTrapActive(true);\n      onShown();\n    }, 0);\n  };\n  const hide = () => {\n    onHide();\n    if (showTimerRef.current) {\n      clearTimeout(showTimerRef.current);\n    }\n    hideTimerRef.current = setTimeout(() => {\n      setVisible(false);\n      setOpacity(0);\n      setFocusTrapActive(false);\n      transitionTimerRef.current = setTimeout(() => {\n        onHidden();\n      }, animationDuration);\n    }, 0);\n  };\n  const positionModifiers = {\n    top: styles.modifiers.top,\n    bottom: styles.modifiers.bottom,\n    left: styles.modifiers.left,\n    right: styles.modifiers.right,\n    'top-start': styles.modifiers.topLeft,\n    'top-end': styles.modifiers.topRight,\n    'bottom-start': styles.modifiers.bottomLeft,\n    'bottom-end': styles.modifiers.bottomRight,\n    'left-start': styles.modifiers.leftTop,\n    'left-end': styles.modifiers.leftBottom,\n    'right-start': styles.modifiers.rightTop,\n    'right-end': styles.modifiers.rightBottom\n  };\n  const hasCustomMinWidth = minWidth !== popoverMinWidth.value;\n  const hasCustomMaxWidth = maxWidth !== popoverMaxWidth.value;\n  const onDocumentKeyDown = (event: KeyboardEvent) => {\n    if (event.keyCode === KEY_CODES.ESCAPE_KEY && visible) {\n      if (triggerManually) {\n        shouldClose(null, hide, event);\n      } else {\n        hide();\n      }\n    }\n  };\n  const onDocumentClick = (event: MouseEvent, triggerElement: HTMLElement, popperElement: HTMLElement) => {\n    if (hideOnOutsideClick && visible) {\n      // check if we clicked within the popper, if so don't do anything\n      const isChild = popperElement && popperElement.contains(event.target as Node);\n      if (isChild) {\n        // clicked within the popper\n        return;\n      }\n      if (triggerManually) {\n        shouldClose(null, hide, event);\n      } else {\n        hide();\n      }\n    }\n  };\n  const onTriggerClick = (event: MouseEvent) => {\n    if (triggerManually) {\n      if (visible) {\n        shouldClose(null, hide, event);\n      } else {\n        shouldOpen(show, event);\n      }\n    } else {\n      if (visible) {\n        hide();\n      } else {\n        show(true);\n      }\n    }\n  };\n  const onContentMouseDown = () => {\n    if (focusTrapActive) {\n      setFocusTrapActive(false);\n    }\n  };\n  const closePopover = (event: any) => {\n    event.stopPropagation();\n    if (triggerManually) {\n      shouldClose(null, hide, event);\n    } else {\n      hide();\n    }\n  };\n  const content = (\n    <FocusTrap\n      active={focusTrapActive}\n      focusTrapOptions={{\n        returnFocusOnDeactivate: true,\n        clickOutsideDeactivates: true,\n        tabbableOptions: { displayCheck: 'none' },\n        fallbackFocus: () => {\n          // If the popover's trigger is focused but scrolled out of view,\n          // FocusTrap will throw an error when the Enter button is used on the trigger.\n          // That is because the Popover is hidden when its trigger is out of view.\n          // Provide a fallback in that case.\n          let node = null;\n          if (document && document.activeElement) {\n            node = document.activeElement as HTMLElement;\n          }\n          return node;\n        }\n      }}\n      preventScrollOnDeactivate\n      className={css(\n        styles.popover,\n        alertSeverityVariant && alertStyle[alertSeverityVariant],\n        hasNoPadding && styles.modifiers.noPadding,\n        hasAutoWidth && styles.modifiers.widthAuto,\n        className\n      )}\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-label={headerContent ? undefined : ariaLabel}\n      aria-labelledby={headerContent ? `popover-${uniqueId}-header` : undefined}\n      aria-describedby={`popover-${uniqueId}-body`}\n      onMouseDown={onContentMouseDown}\n      style={{\n        minWidth: hasCustomMinWidth ? minWidth : null,\n        maxWidth: hasCustomMaxWidth ? maxWidth : null,\n        opacity,\n        transition: getOpacityTransition(animationDuration)\n      }}\n      {...rest}\n    >\n      <PopoverArrow />\n      <PopoverContent>\n        {showClose && <PopoverCloseButton onClose={closePopover} aria-label={closeBtnAriaLabel} />}\n        {headerContent && (\n          <PopoverHeader\n            id={`popover-${uniqueId}-header`}\n            icon={headerIcon}\n            alertSeverityVariant={alertSeverityVariant}\n            alertSeverityScreenReaderText={alertSeverityScreenReaderText || `${alertSeverityVariant} alert:`}\n            titleHeadingLevel={headerComponent}\n          >\n            {typeof headerContent === 'function' ? headerContent(hide) : headerContent}\n          </PopoverHeader>\n        )}\n        <PopoverBody id={`popover-${uniqueId}-body`}>\n          {typeof bodyContent === 'function' ? bodyContent(hide) : bodyContent}\n        </PopoverBody>\n        {footerContent && (\n          <PopoverFooter id={`popover-${uniqueId}-footer`}>\n            {typeof footerContent === 'function' ? footerContent(hide) : footerContent}\n          </PopoverFooter>\n        )}\n      </PopoverContent>\n    </FocusTrap>\n  );\n\n  return (\n    <PopoverContext.Provider value={{ headerComponent }}>\n      <Popper\n        trigger={children}\n        reference={reference}\n        popper={content}\n        popperMatchesTriggerWidth={false}\n        appendTo={appendTo}\n        isVisible={visible}\n        positionModifiers={positionModifiers}\n        distance={distance}\n        placement={position}\n        onTriggerClick={onTriggerClick}\n        onDocumentClick={onDocumentClick}\n        onDocumentKeyDown={onDocumentKeyDown}\n        enableFlip={enableFlip}\n        zIndex={zIndex}\n        flipBehavior={flipBehavior}\n      />\n    </PopoverContext.Provider>\n  );\n};\nPopover.displayName = 'Popover';\n"]},"metadata":{},"sourceType":"module"}