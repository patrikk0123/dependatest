{"ast":null,"code":"import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Wizard/wizard';\nimport { css } from '@patternfly/react-styles';\nimport { Button } from '../Button';\nimport { Title } from '../Title';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nexport var WizardHeader = function WizardHeader(_ref) {\n  var _ref$onClose = _ref.onClose,\n      onClose = _ref$onClose === void 0 ? function () {\n    return undefined;\n  } : _ref$onClose,\n      title = _ref.title,\n      description = _ref.description,\n      hideClose = _ref.hideClose,\n      closeButtonAriaLabel = _ref.closeButtonAriaLabel,\n      titleId = _ref.titleId,\n      _ref$descriptionCompo = _ref.descriptionComponent,\n      Component = _ref$descriptionCompo === void 0 ? 'p' : _ref$descriptionCompo,\n      descriptionId = _ref.descriptionId;\n  return React.createElement(\"div\", {\n    className: css(styles.wizardHeader)\n  }, !hideClose && React.createElement(Button, {\n    variant: \"plain\",\n    className: css(styles.wizardClose),\n    \"aria-label\": closeButtonAriaLabel,\n    onClick: onClose\n  }, React.createElement(TimesIcon, {\n    \"aria-hidden\": \"true\"\n  })), React.createElement(Title, {\n    headingLevel: \"h2\",\n    size: \"3xl\",\n    className: css(styles.wizardTitle),\n    \"aria-label\": title,\n    id: titleId\n  }, title || React.createElement(React.Fragment, null, \"\\xA0\")), description && React.createElement(Component, {\n    className: css(styles.wizardDescription),\n    id: descriptionId\n  }, description));\n};\nWizardHeader.displayName = 'WizardHeader';","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,uDAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,OAAOC,SAAP,MAAsB,mDAAtB;AAqBA,OAAO,IAAMC,YAAY,GAA+C,SAA3DA,YAA2D;EAAA,wBACtEC,OADsE;EAAA,IACtEA,OADsE,6BAC5D;IAAA,OAAMC,SAAN;EAAA,CAD4D;EAAA,IAEtEC,KAFsE,QAEtEA,KAFsE;EAAA,IAGtEC,WAHsE,QAGtEA,WAHsE;EAAA,IAItEC,SAJsE,QAItEA,SAJsE;EAAA,IAKtEC,oBALsE,QAKtEA,oBALsE;EAAA,IAMtEC,OANsE,QAMtEA,OANsE;EAAA,iCAOtEC,oBAPsE;EAAA,IAOhDC,SAPgD,sCAOpC,GAPoC;EAAA,IAQtEC,aARsE,QAQtEA,aARsE;EAAA,OAUtEhB;IAAKiB,SAAS,EAAEf,GAAG,CAACD,MAAM,CAACiB,YAAR;EAAnB,GACG,CAACP,SAAD,IACCX,oBAACG,MAAD,EAAO;IAACgB,OAAO,EAAC,OAAT;IAAiBF,SAAS,EAAEf,GAAG,CAACD,MAAM,CAACmB,WAAR,CAA/B;IAAmD,cAAcR,oBAAjE;IAAuFS,OAAO,EAAEd;EAAhG,CAAP,EACEP,oBAACK,SAAD,EAAU;IAAA,eAAa;EAAb,CAAV,CADF,CAFJ,EAMEL,oBAACI,KAAD,EAAM;IAACkB,YAAY,EAAC,IAAd;IAAmBC,IAAI,EAAC,KAAxB;IAA8BN,SAAS,EAAEf,GAAG,CAACD,MAAM,CAACuB,WAAR,CAA5C;IAAgE,cAAcf,KAA9E;IAAqFgB,EAAE,EAAEZ;EAAzF,CAAN,EACGJ,KAAK,IAAIT,iDADZ,CANF,EASGU,WAAW,IACVV,oBAACe,SAAD,EAAU;IAACE,SAAS,EAAEf,GAAG,CAACD,MAAM,CAACyB,iBAAR,CAAf;IAA2CD,EAAE,EAAET;EAA/C,CAAV,EACGN,WADH,CAVJ,CAVsE;AAAA,CAAjE;AA0BPJ,YAAY,CAACqB,WAAb,GAA2B,cAA3B","names":["React","styles","css","Button","Title","TimesIcon","WizardHeader","onClose","undefined","title","description","hideClose","closeButtonAriaLabel","titleId","descriptionComponent","Component","descriptionId","className","wizardHeader","variant","wizardClose","onClick","headingLevel","size","wizardTitle","id","wizardDescription","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Wizard/WizardHeader.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Wizard/wizard';\nimport { css } from '@patternfly/react-styles';\nimport { Button } from '../Button';\nimport { Title } from '../Title';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\n\nexport interface WizardHeaderProps {\n  /** Callback function called when the X (Close) button is clicked */\n  onClose?: () => void;\n  /** Title of the wizard */\n  title: string;\n  /** Description of the wizard */\n  description?: React.ReactNode;\n  /** Component type of the description */\n  descriptionComponent?: 'div' | 'p';\n  /** Flag indicating whether the close button should be in the header */\n  hideClose?: boolean;\n  /** Aria-label applied to the X (Close) button */\n  closeButtonAriaLabel?: string;\n  /** id for the title */\n  titleId?: string;\n  /** id for the description */\n  descriptionId?: string;\n}\n\nexport const WizardHeader: React.FunctionComponent<WizardHeaderProps> = ({\n  onClose = () => undefined,\n  title,\n  description,\n  hideClose,\n  closeButtonAriaLabel,\n  titleId,\n  descriptionComponent: Component = 'p',\n  descriptionId\n}: WizardHeaderProps) => (\n  <div className={css(styles.wizardHeader)}>\n    {!hideClose && (\n      <Button variant=\"plain\" className={css(styles.wizardClose)} aria-label={closeButtonAriaLabel} onClick={onClose}>\n        <TimesIcon aria-hidden=\"true\" />\n      </Button>\n    )}\n    <Title headingLevel=\"h2\" size=\"3xl\" className={css(styles.wizardTitle)} aria-label={title} id={titleId}>\n      {title || <>&nbsp;</>}\n    </Title>\n    {description && (\n      <Component className={css(styles.wizardDescription)} id={descriptionId}>\n        {description}\n      </Component>\n    )}\n  </div>\n);\nWizardHeader.displayName = 'WizardHeader';\n"]},"metadata":{},"sourceType":"module"}