{"ast":null,"code":"import _slicedToArray from\"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Pagination as PaginationPF,PaginationVariant}from'@patternfly/react-core';import{useEffect,useState}from'react';import{useLocation,useNavigate}from'react-router-dom';import{getComponentQueryParamsObject,updateQueryParamsInURL}from'../../utils/queryParamsHelper';import'./Pagination.css';import{jsx as _jsx}from\"react/jsx-runtime\";export var Pagination=function Pagination(_ref){var componentId=_ref.componentId,count=_ref.count,_ref$pageSizeDefault=_ref.pageSizeDefault,pageSizeDefault=_ref$pageSizeDefault===void 0?10:_ref$pageSizeDefault;var location=useLocation();var navigate=useNavigate();var _useState=useState(1),_useState2=_slicedToArray(_useState,2),pageIndex=_useState2[0],setPageIndex=_useState2[1];var _useState3=useState(pageSizeDefault),_useState4=_slicedToArray(_useState3,2),pageSize=_useState4[0],setPageSize=_useState4[1];// history.location.search changes are watched to add browser back and forward support\n// Query Params coming from the URL are the single point of truth.\nuseEffect(function(){// add pageIndex or pageSize when it's not available in the URL\nvar componentQueryParamsObject=getComponentQueryParamsObject(location.search,componentId);if(!(componentQueryParamsObject.pageIndex&&componentQueryParamsObject.pageSize)){// replace the current entry on the history stack, otherwise back button would not be working because of the redirection\n// from page without params to page with params\nupdateQueryParamsInURL({pageIndex:1,pageSize:pageSizeDefault},componentId,location,navigate,true);}else{setPageIndex(Number(componentQueryParamsObject.pageIndex));setPageSize(Number(componentQueryParamsObject.pageSize));}},[location.search,location,componentId,pageSizeDefault,navigate]);// primary: history.location.search\n// RENDERING\n// pagination is rendered for the first time\nif(count===undefined){return/*#__PURE__*/_jsx(\"div\",{children:\"pagination initializing...\"});}// pagination was already rendered\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"pagination\",children:/*#__PURE__*/_jsx(PaginationPF,{itemCount:count,perPage:pageSize,page:pageIndex,onSetPage:function onSetPage(_event,pageIndex){updateQueryParamsInURL({pageIndex:pageIndex},componentId,location,navigate);setPageIndex(pageIndex);},onPerPageSelect:function onPerPageSelect(_event,pageSize){var pageIndexDefault=1;updateQueryParamsInURL({pageIndex:pageIndexDefault,pageSize:pageSize},componentId,location,navigate);setPageSize(pageSize);setPageIndex(pageIndexDefault);},variant:PaginationVariant.bottom})});};","map":{"version":3,"names":["Pagination","PaginationPF","PaginationVariant","useEffect","useState","useLocation","useNavigate","getComponentQueryParamsObject","updateQueryParamsInURL","componentId","count","pageSizeDefault","location","navigate","pageIndex","setPageIndex","pageSize","setPageSize","componentQueryParamsObject","search","Number","undefined","_event","pageIndexDefault","bottom"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/Pagination/Pagination.tsx"],"sourcesContent":["import { Pagination as PaginationPF, PaginationVariant } from '@patternfly/react-core';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { getComponentQueryParamsObject, updateQueryParamsInURL } from '../../utils/queryParamsHelper';\nimport './Pagination.css';\n\ninterface IPagination {\n  componentId: string;\n  count: number;\n  pageSizeDefault?: number;\n}\n\nexport const Pagination = ({ componentId, count, pageSizeDefault = 10 }: IPagination) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const [pageIndex, setPageIndex] = useState<number>(1);\n  const [pageSize, setPageSize] = useState<number>(pageSizeDefault);\n\n  // history.location.search changes are watched to add browser back and forward support\n  // Query Params coming from the URL are the single point of truth.\n  useEffect(() => {\n    // add pageIndex or pageSize when it's not available in the URL\n    const componentQueryParamsObject = getComponentQueryParamsObject(location.search, componentId);\n    if (!(componentQueryParamsObject.pageIndex && componentQueryParamsObject.pageSize)) {\n      // replace the current entry on the history stack, otherwise back button would not be working because of the redirection\n      // from page without params to page with params\n      updateQueryParamsInURL({ pageIndex: 1, pageSize: pageSizeDefault }, componentId, location, navigate, true);\n    } else {\n      setPageIndex(Number(componentQueryParamsObject.pageIndex));\n      setPageSize(Number(componentQueryParamsObject.pageSize));\n    }\n  }, [location.search, location, componentId, pageSizeDefault, navigate]); // primary: history.location.search\n\n  // RENDERING\n\n  // pagination is rendered for the first time\n  if (count === undefined) {\n    return <div>pagination initializing...</div>;\n  }\n\n  // pagination was already rendered\n  return (\n    <div className=\"pagination\">\n      <PaginationPF\n        itemCount={count}\n        perPage={pageSize}\n        page={pageIndex}\n        onSetPage={(_event, pageIndex) => {\n          updateQueryParamsInURL({ pageIndex }, componentId, location, navigate);\n          setPageIndex(pageIndex);\n        }}\n        onPerPageSelect={(_event, pageSize) => {\n          const pageIndexDefault = 1;\n          updateQueryParamsInURL({ pageIndex: pageIndexDefault, pageSize }, componentId, location, navigate);\n          setPageSize(pageSize);\n          setPageIndex(pageIndexDefault);\n        }}\n        variant={PaginationVariant.bottom}\n      />\n    </div>\n  );\n};\n"],"mappings":"qIAAA,OAASA,UAAU,GAAIC,aAAvB,CAAqCC,iBAArC,KAA8D,wBAA9D,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,kBAAzC,CACA,OAASC,6BAAT,CAAwCC,sBAAxC,KAAsE,+BAAtE,CACA,MAAO,kBAAP,C,2CAQA,MAAO,IAAMR,WAAU,CAAG,QAAbA,WAAa,MAA+D,IAA5DS,YAA4D,MAA5DA,WAA4D,CAA/CC,KAA+C,MAA/CA,KAA+C,2BAAxCC,eAAwC,CAAxCA,eAAwC,+BAAtB,EAAsB,sBACvF,GAAMC,SAAQ,CAAGP,WAAW,EAA5B,CACA,GAAMQ,SAAQ,CAAGP,WAAW,EAA5B,CAEA,cAAkCF,QAAQ,CAAS,CAAT,CAA1C,wCAAOU,SAAP,eAAkBC,YAAlB,eACA,eAAgCX,QAAQ,CAASO,eAAT,CAAxC,yCAAOK,QAAP,eAAiBC,WAAjB,eAEA;AACA;AACAd,SAAS,CAAC,UAAM,CACd;AACA,GAAMe,2BAA0B,CAAGX,6BAA6B,CAACK,QAAQ,CAACO,MAAV,CAAkBV,WAAlB,CAAhE,CACA,GAAI,EAAES,0BAA0B,CAACJ,SAA3B,EAAwCI,0BAA0B,CAACF,QAArE,CAAJ,CAAoF,CAClF;AACA;AACAR,sBAAsB,CAAC,CAAEM,SAAS,CAAE,CAAb,CAAgBE,QAAQ,CAAEL,eAA1B,CAAD,CAA8CF,WAA9C,CAA2DG,QAA3D,CAAqEC,QAArE,CAA+E,IAA/E,CAAtB,CACD,CAJD,IAIO,CACLE,YAAY,CAACK,MAAM,CAACF,0BAA0B,CAACJ,SAA5B,CAAP,CAAZ,CACAG,WAAW,CAACG,MAAM,CAACF,0BAA0B,CAACF,QAA5B,CAAP,CAAX,CACD,CACF,CAXQ,CAWN,CAACJ,QAAQ,CAACO,MAAV,CAAkBP,QAAlB,CAA4BH,WAA5B,CAAyCE,eAAzC,CAA0DE,QAA1D,CAXM,CAAT,CAWyE;AAEzE;AAEA;AACA,GAAIH,KAAK,GAAKW,SAAd,CAAyB,CACvB,mBAAO,mDAAP,CACD,CAED;AACA,mBACE,YAAK,SAAS,CAAC,YAAf,uBACE,KAAC,YAAD,EACE,SAAS,CAAEX,KADb,CAEE,OAAO,CAAEM,QAFX,CAGE,IAAI,CAAEF,SAHR,CAIE,SAAS,CAAE,mBAACQ,MAAD,CAASR,SAAT,CAAuB,CAChCN,sBAAsB,CAAC,CAAEM,SAAS,CAATA,SAAF,CAAD,CAAgBL,WAAhB,CAA6BG,QAA7B,CAAuCC,QAAvC,CAAtB,CACAE,YAAY,CAACD,SAAD,CAAZ,CACD,CAPH,CAQE,eAAe,CAAE,yBAACQ,MAAD,CAASN,QAAT,CAAsB,CACrC,GAAMO,iBAAgB,CAAG,CAAzB,CACAf,sBAAsB,CAAC,CAAEM,SAAS,CAAES,gBAAb,CAA+BP,QAAQ,CAARA,QAA/B,CAAD,CAA4CP,WAA5C,CAAyDG,QAAzD,CAAmEC,QAAnE,CAAtB,CACAI,WAAW,CAACD,QAAD,CAAX,CACAD,YAAY,CAACQ,gBAAD,CAAZ,CACD,CAbH,CAcE,OAAO,CAAErB,iBAAiB,CAACsB,MAd7B,EADF,EADF,CAoBD,CAlDM"},"metadata":{},"sourceType":"module"}