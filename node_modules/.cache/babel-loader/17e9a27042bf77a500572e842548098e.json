{"ast":null,"code":"import * as React from 'react';\nexport var DragDropContext = React.createContext({\n  onDrag: function onDrag(_source) {\n    return true;\n  },\n  onDragMove: function onDragMove(_source, _dest) {},\n  onDrop: function onDrop(_source, _dest) {\n    return false;\n  }\n});\nexport var DragDrop = function DragDrop(_ref) {\n  var children = _ref.children,\n      _ref$onDrag = _ref.onDrag,\n      onDrag = _ref$onDrag === void 0 ? function () {\n    return true;\n  } : _ref$onDrag,\n      _ref$onDragMove = _ref.onDragMove,\n      onDragMove = _ref$onDragMove === void 0 ? function () {} : _ref$onDragMove,\n      _ref$onDrop = _ref.onDrop,\n      onDrop = _ref$onDrop === void 0 ? function () {\n    return false;\n  } : _ref$onDrop;\n  return React.createElement(DragDropContext.Provider, {\n    value: {\n      onDrag: onDrag,\n      onDragMove: onDragMove,\n      onDrop: onDrop\n    }\n  }, children);\n};\nDragDrop.displayName = 'DragDrop';","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AASA,OAAO,IAAMC,eAAe,GAAGD,KAAK,CAACE,aAAN,CAAoB;EACjDC,MAAM,EAAE,gBAACC,OAAD;IAAA,OAAoC,IAApC;EAAA,CADyC;EAEjDC,UAAU,EAAE,oBAACD,OAAD,EAAiCE,KAAjC,EAAkE,CAAG,CAFhC;EAGjDC,MAAM,EAAE,gBAACH,OAAD,EAAiCE,KAAjC;IAAA,OAAmE,KAAnE;EAAA;AAHyC,CAApB,CAAxB;AAiBP,OAAO,IAAME,QAAQ,GAA2C,SAAnDA,QAAmD;EAAA,IAC9DC,QAD8D,QAC9DA,QAD8D;EAAA,uBAE9DN,MAF8D;EAAA,IAE9DA,MAF8D,4BAErD;IAAA,OAAM,IAAN;EAAA,CAFqD;EAAA,2BAG9DE,UAH8D;EAAA,IAG9DA,UAH8D,gCAGjD,YAAK,CAAG,CAHyC;EAAA,uBAI9DE,MAJ8D;EAAA,IAI9DA,MAJ8D,4BAIrD;IAAA,OAAM,KAAN;EAAA,CAJqD;EAAA,OAM9DP,oBAACC,eAAe,CAACS,QAAjB,EAAyB;IAACC,KAAK,EAAE;MAAER,MAAM,EAANA,MAAF;MAAUE,UAAU,EAAVA,UAAV;MAAsBE,MAAM,EAANA;IAAtB;EAAR,CAAzB,EAAkEE,QAAlE,CAN8D;AAAA,CAAzD;AAQPD,QAAQ,CAACI,WAAT,GAAuB,UAAvB","names":["React","DragDropContext","createContext","onDrag","_source","onDragMove","_dest","onDrop","DragDrop","children","Provider","value","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/DragDrop/DragDrop.tsx"],"sourcesContent":["import * as React from 'react';\n\ninterface DraggableItemPosition {\n  /** Parent droppableId */\n  droppableId: string;\n  /** Index of item in parent Droppable */\n  index: number;\n}\n\nexport const DragDropContext = React.createContext({\n  onDrag: (_source: DraggableItemPosition) => true as boolean,\n  onDragMove: (_source: DraggableItemPosition, _dest?: DraggableItemPosition) => {},\n  onDrop: (_source: DraggableItemPosition, _dest?: DraggableItemPosition) => false as boolean\n});\n\ninterface DragDropProps {\n  /** Potentially Droppable and Draggable children */\n  children?: React.ReactNode;\n  /** Callback for drag event. Return true to allow drag, false to disallow. */\n  onDrag?: (source: DraggableItemPosition) => boolean;\n  /** Callback on mouse move while dragging. */\n  onDragMove?: (source: DraggableItemPosition, dest?: DraggableItemPosition) => void;\n  /** Callback for drop event. Return true to allow drop, false to disallow. */\n  onDrop?: (source: DraggableItemPosition, dest?: DraggableItemPosition) => boolean;\n}\n\nexport const DragDrop: React.FunctionComponent<DragDropProps> = ({\n  children,\n  onDrag = () => true,\n  onDragMove = () => {},\n  onDrop = () => false\n}: DragDropProps) => (\n  <DragDropContext.Provider value={{ onDrag, onDragMove, onDrop }}>{children}</DragDropContext.Provider>\n);\nDragDrop.displayName = 'DragDrop';\n"]},"metadata":{},"sourceType":"module"}