{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Button } from '../Button';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport { FindRefWrapper } from '../../helpers/Popper/FindRefWrapper';\nexport const PopoverCloseButton = _a => {\n  var {\n    onClose = () => undefined\n  } = _a,\n      props = __rest(_a, [\"onClose\"]);\n\n  const [closeButtonElement, setCloseButtonElement] = React.useState(null);\n  React.useEffect(() => {\n    closeButtonElement && closeButtonElement.addEventListener('click', onClose, false);\n    return () => {\n      closeButtonElement && closeButtonElement.removeEventListener('click', onClose, false);\n    };\n  }, [closeButtonElement]);\n  return React.createElement(FindRefWrapper, {\n    onFoundRef: foundRef => setCloseButtonElement(foundRef)\n  }, React.createElement(Button, Object.assign({\n    variant: \"plain\",\n    \"aria-label\": true\n  }, props, {\n    style: {\n      pointerEvents: 'auto'\n    }\n  }), React.createElement(TimesIcon, null)));\n};\nPopoverCloseButton.displayName = 'PopoverCloseButton';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,SAAP,MAAsB,mDAAtB;AACA,SAASC,cAAT,QAA+B,qCAA/B;AAEA,OAAO,MAAMC,kBAAkB,GAAsDC,EAAD,IAGtD;MAHuD;IACnFC,OAAO,GAAG,MAAMC;EADmE,IAClDF;MAC9BG,KAAK,cAF2E,WAE3E;;EAER,MAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CV,KAAK,CAACW,QAAN,CAAe,IAAf,CAApD;EACAX,KAAK,CAACY,SAAN,CAAgB,MAAK;IACnBH,kBAAkB,IAAIA,kBAAkB,CAACI,gBAAnB,CAAoC,OAApC,EAA6CP,OAA7C,EAAsD,KAAtD,CAAtB;IACA,OAAO,MAAK;MACVG,kBAAkB,IAAIA,kBAAkB,CAACK,mBAAnB,CAAuC,OAAvC,EAAgDR,OAAhD,EAAyD,KAAzD,CAAtB;IACD,CAFD;EAGD,CALD,EAKG,CAACG,kBAAD,CALH;EAMA,OACET,oBAACG,cAAD,EAAe;IAACY,UAAU,EAAGC,QAAD,IAAmBN,qBAAqB,CAACM,QAAD;EAArD,CAAf,EACEhB,oBAACC,MAAD,EAAOgB;IAACC,OAAO,EAAC,OAAT;IAAgB;EAAhB,GAAgCV,KAAhC,EAAqC;IAAEW,KAAK,EAAE;MAAEC,aAAa,EAAE;IAAjB;EAAT,CAArC,CAAP,EACEpB,oBAACE,SAAD,EAAU,IAAV,CADF,CADF,CADF;AAOD,CAlBM;AAmBPE,kBAAkB,CAACiB,WAAnB,GAAiC,oBAAjC","names":["React","Button","TimesIcon","FindRefWrapper","PopoverCloseButton","_a","onClose","undefined","props","closeButtonElement","setCloseButtonElement","useState","useEffect","addEventListener","removeEventListener","onFoundRef","foundRef","Object","variant","style","pointerEvents","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Popover/PopoverCloseButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Button } from '../Button';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport { FindRefWrapper } from '../../helpers/Popper/FindRefWrapper';\n\nexport const PopoverCloseButton: React.FunctionComponent<PopoverCloseButtonProps> = ({\n  onClose = () => undefined as void,\n  ...props\n}: PopoverCloseButtonProps) => {\n  const [closeButtonElement, setCloseButtonElement] = React.useState(null);\n  React.useEffect(() => {\n    closeButtonElement && closeButtonElement.addEventListener('click', onClose, false);\n    return () => {\n      closeButtonElement && closeButtonElement.removeEventListener('click', onClose, false);\n    };\n  }, [closeButtonElement]);\n  return (\n    <FindRefWrapper onFoundRef={(foundRef: any) => setCloseButtonElement(foundRef)}>\n      <Button variant=\"plain\" aria-label {...props} style={{ pointerEvents: 'auto' }}>\n        <TimesIcon />\n      </Button>\n    </FindRefWrapper>\n  );\n};\nPopoverCloseButton.displayName = 'PopoverCloseButton';\n\nexport interface PopoverCloseButtonProps {\n  /** PopoverCloseButton onClose function */\n  onClose?: (event: any) => void;\n  /** Aria label for the Close button */\n  'aria-label': string;\n}\n"]},"metadata":{},"sourceType":"module"}