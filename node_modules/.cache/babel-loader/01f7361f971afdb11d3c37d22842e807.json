{"ast":null,"code":"import { __rest } from \"tslib\";\n/* eslint-disable no-console */\n\nimport * as React from 'react';\nimport { Button, ButtonVariant } from '../../components/Button';\nimport { PageContextConsumer } from './Page';\nexport var PageToggleButton = function PageToggleButton(_a) {\n  var children = _a.children,\n      _a$isNavOpen = _a.isNavOpen,\n      isNavOpen = _a$isNavOpen === void 0 ? true : _a$isNavOpen,\n      _a$onNavToggle = _a.onNavToggle,\n      onNavToggle = _a$onNavToggle === void 0 ? function () {\n    return undefined;\n  } : _a$onNavToggle,\n      props = __rest(_a, [\"children\", \"isNavOpen\", \"onNavToggle\"]);\n\n  return React.createElement(PageContextConsumer, null, function (_ref) {\n    var isManagedSidebar = _ref.isManagedSidebar,\n        managedOnNavToggle = _ref.onNavToggle,\n        managedIsNavOpen = _ref.isNavOpen;\n    var navToggle = isManagedSidebar ? managedOnNavToggle : onNavToggle;\n    var navOpen = isManagedSidebar ? managedIsNavOpen : isNavOpen;\n    return React.createElement(Button, Object.assign({\n      id: \"nav-toggle\",\n      onClick: navToggle,\n      \"aria-label\": \"Side navigation toggle\",\n      \"aria-expanded\": navOpen ? 'true' : 'false',\n      variant: ButtonVariant.plain\n    }, props), children);\n  });\n};\nPageToggleButton.displayName = 'PageToggleButton';","map":{"version":3,"mappings":";AAAA;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,EAA8BC,aAA9B,QAAmD,yBAAnD;AACA,SAASC,mBAAT,QAAsD,QAAtD;AAWA,OAAO,IAAMC,gBAAgB,GAAmD,SAAnEA,gBAAmE,CAACC,EAAD,EAKpD;MAJ1BC,WAEoCD,GAFpCC;qBAEoCD,GADpCE;MAAAA,sCAAY;uBACwBF,GAApCG;MAAAA,0CAAc;IAAA,OAAMC,SAAN;EAAA;MACXC,QAAKC,WAJuE,wCAIvE;;EACmB,OAC3BX,oBAACG,mBAAD,EAAoB,IAApB,EACG,gBAAyG;IAAA,IAAtGS,gBAAsG,QAAtGA,gBAAsG;IAAA,IAAvEC,kBAAuE,QAApFL,WAAoF;IAAA,IAAxCM,gBAAwC,QAAnDP,SAAmD;IACxG,IAAMQ,SAAS,GAAGH,gBAAgB,GAAGC,kBAAH,GAAwBL,WAA1D;IACA,IAAMQ,OAAO,GAAGJ,gBAAgB,GAAGE,gBAAH,GAAsBP,SAAtD;IAEA,OACEP,oBAACC,MAAD,EAAOgB;MACLC,EAAE,EAAC,YADE;MAELC,OAAO,EAAEJ,SAFJ;MAEa,cACP,wBAHN;MAG8B,iBACpBC,OAAO,GAAG,MAAH,GAAY,OAJ7B;MAKLI,OAAO,EAAElB,aAAa,CAACmB;IALlB,GAMDX,KANC,CAAP,EAQGJ,QARH,CADF;EAYD,CAjBH,CAD2B;AAoB5B,CAzBM;AA0BPF,gBAAgB,CAACkB,WAAjB,GAA+B,kBAA/B","names":["React","Button","ButtonVariant","PageContextConsumer","PageToggleButton","_a","children","isNavOpen","onNavToggle","undefined","props","__rest","isManagedSidebar","managedOnNavToggle","managedIsNavOpen","navToggle","navOpen","Object","id","onClick","variant","plain","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Page/PageToggleButton.tsx"],"sourcesContent":["/* eslint-disable no-console */\nimport * as React from 'react';\nimport { Button, ButtonProps, ButtonVariant } from '../../components/Button';\nimport { PageContextConsumer, PageContextProps } from './Page';\n\nexport interface PageToggleButtonProps extends ButtonProps {\n  /** Content of the page toggle button */\n  children?: React.ReactNode;\n  /** True if the side nav is shown  */\n  isNavOpen?: boolean;\n  /** Callback function to handle the side nav toggle button, managed by the Page component if the Page isManagedSidebar prop is set to true */\n  onNavToggle?: () => void;\n}\n\nexport const PageToggleButton: React.FunctionComponent<PageToggleButtonProps> = ({\n  children,\n  isNavOpen = true,\n  onNavToggle = () => undefined as any,\n  ...props\n}: PageToggleButtonProps) => (\n  <PageContextConsumer>\n    {({ isManagedSidebar, onNavToggle: managedOnNavToggle, isNavOpen: managedIsNavOpen }: PageContextProps) => {\n      const navToggle = isManagedSidebar ? managedOnNavToggle : onNavToggle;\n      const navOpen = isManagedSidebar ? managedIsNavOpen : isNavOpen;\n\n      return (\n        <Button\n          id=\"nav-toggle\"\n          onClick={navToggle}\n          aria-label=\"Side navigation toggle\"\n          aria-expanded={navOpen ? 'true' : 'false'}\n          variant={ButtonVariant.plain}\n          {...props}\n        >\n          {children}\n        </Button>\n      );\n    }}\n  </PageContextConsumer>\n);\nPageToggleButton.displayName = 'PageToggleButton';\n"]},"metadata":{},"sourceType":"module"}