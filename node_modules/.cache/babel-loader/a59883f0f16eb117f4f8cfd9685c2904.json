{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Skeleton/skeleton';\nimport { css } from '@patternfly/react-styles';\nexport const Skeleton = _a => {\n  var {\n    className,\n    width,\n    height,\n    fontSize,\n    shape,\n    screenreaderText\n  } = _a,\n      props = __rest(_a, [\"className\", \"width\", \"height\", \"fontSize\", \"shape\", \"screenreaderText\"]);\n\n  const fontHeightClassName = fontSize ? Object.values(styles.modifiers).find(key => key === `pf-m-text-${fontSize}`) : undefined;\n  return React.createElement(\"div\", Object.assign({}, props, {\n    className: css(styles.skeleton, fontSize && fontHeightClassName, shape === 'circle' && styles.modifiers.circle, shape === 'square' && styles.modifiers.square, className)\n  }, (width || height) && {\n    style: Object.assign({\n      '--pf-c-skeleton--Width': width ? width : undefined,\n      '--pf-c-skeleton--Height': height ? height : undefined\n    }, props.style)\n  }), React.createElement(\"span\", {\n    className: \"pf-u-screen-reader\"\n  }, screenreaderText));\n};\nSkeleton.displayName = 'Skeleton';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,2DAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AAiBA,OAAO,MAAMC,QAAQ,GAA4CC,EAAD,IAQ5C;MAR6C;IAC/DC,SAD+D;IAE/DC,KAF+D;IAG/DC,MAH+D;IAI/DC,QAJ+D;IAK/DC,KAL+D;IAM/DC;EAN+D,IAM/CN;MACbO,KAAK,cAPuD,yEAOvD;;EAER,MAAMC,mBAAmB,GAAGJ,QAAQ,GAChCK,MAAM,CAACC,MAAP,CAAcb,MAAM,CAACc,SAArB,EAAgCC,IAAhC,CAAqCC,GAAG,IAAIA,GAAG,KAAK,aAAaT,QAAQ,EAAzE,CADgC,GAEhCU,SAFJ;EAIA,OACElB,6CACMW,KADN,EACW;IACTN,SAAS,EAAEH,GAAG,CACZD,MAAM,CAACkB,QADK,EAEZX,QAAQ,IAAII,mBAFA,EAGZH,KAAK,KAAK,QAAV,IAAsBR,MAAM,CAACc,SAAP,CAAiBK,MAH3B,EAIZX,KAAK,KAAK,QAAV,IAAsBR,MAAM,CAACc,SAAP,CAAiBM,MAJ3B,EAKZhB,SALY;EADL,CADX,EASO,CAACC,KAAK,IAAIC,MAAV,KAAqB;IACxBe,KAAK,EAAET;MACL,0BAA0BP,KAAK,GAAGA,KAAH,GAAWY,SADrC;MAEL,2BAA2BX,MAAM,GAAGA,MAAH,GAAYW;IAFxC,GAGFP,KAAK,CAACW,KAHJ;EADiB,CAT5B,GAiBEtB;IAAMK,SAAS,EAAC;EAAhB,GAAsCK,gBAAtC,CAjBF,CADF;AAqBD,CAlCM;AAmCPP,QAAQ,CAACoB,WAAT,GAAuB,UAAvB","names":["React","styles","css","Skeleton","_a","className","width","height","fontSize","shape","screenreaderText","props","fontHeightClassName","Object","values","modifiers","find","key","undefined","skeleton","circle","square","style","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Skeleton/Skeleton.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Skeleton/skeleton';\nimport { css } from '@patternfly/react-styles';\n\nexport interface SkeletonProps extends React.HTMLProps<HTMLDivElement> {\n  /** Additional classes added to the Skeleton */\n  className?: string;\n  /** The width of the Skeleton. Must specify pixels or percentage. */\n  width?: string;\n  /** The height of the Skeleton. Must specify pixels or percentage. */\n  height?: string;\n  /** The font size height of the Skeleton */\n  fontSize?: 'sm' | 'md' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl';\n  /** The shape of the Skeleton */\n  shape?: 'circle' | 'square';\n  /** Text read just to screen reader users */\n  screenreaderText?: string;\n}\n\nexport const Skeleton: React.FunctionComponent<SkeletonProps> = ({\n  className,\n  width,\n  height,\n  fontSize,\n  shape,\n  screenreaderText,\n  ...props\n}: SkeletonProps) => {\n  const fontHeightClassName = fontSize\n    ? Object.values(styles.modifiers).find(key => key === `pf-m-text-${fontSize}`)\n    : undefined;\n\n  return (\n    <div\n      {...props}\n      className={css(\n        styles.skeleton,\n        fontSize && fontHeightClassName,\n        shape === 'circle' && styles.modifiers.circle,\n        shape === 'square' && styles.modifiers.square,\n        className\n      )}\n      {...((width || height) && {\n        style: {\n          '--pf-c-skeleton--Width': width ? width : undefined,\n          '--pf-c-skeleton--Height': height ? height : undefined,\n          ...props.style\n        } as React.CSSProperties\n      })}\n    >\n      <span className=\"pf-u-screen-reader\">{screenreaderText}</span>\n    </div>\n  );\n};\nSkeleton.displayName = 'Skeleton';\n"]},"metadata":{},"sourceType":"module"}