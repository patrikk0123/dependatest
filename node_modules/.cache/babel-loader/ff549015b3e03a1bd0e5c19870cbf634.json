{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/NumberInput/number-input';\nimport { css } from '@patternfly/react-styles';\nimport MinusIcon from '@patternfly/react-icons/dist/esm/icons/minus-icon';\nimport PlusIcon from '@patternfly/react-icons/dist/esm/icons/plus-icon';\nimport { InputGroup } from '../InputGroup';\nimport { Button } from '../Button';\nimport { KEY_CODES } from '../../helpers';\n\nconst defaultKeyDownHandler = args => event => {\n  if (KEY_CODES.ARROW_UP === event.keyCode && args.onPlus) {\n    event.preventDefault();\n    args.onPlus(null, args.inputName);\n  }\n\n  if (KEY_CODES.ARROW_DOWN === event.keyCode && args.onMinus) {\n    event.preventDefault();\n    args.onMinus(null, args.inputName);\n  }\n};\n\nexport const NumberInput = _a => {\n  var {\n    value = 0,\n    className,\n    widthChars,\n    isDisabled = false,\n    onMinus = () => {},\n    onChange,\n    onBlur,\n    onPlus = () => {},\n    unit,\n    unitPosition = 'after',\n    min,\n    max,\n    inputName,\n    inputAriaLabel = 'Input',\n    minusBtnAriaLabel = 'Minus',\n    plusBtnAriaLabel = 'Plus',\n    inputProps,\n    minusBtnProps,\n    plusBtnProps\n  } = _a,\n      props = __rest(_a, [\"value\", \"className\", \"widthChars\", \"isDisabled\", \"onMinus\", \"onChange\", \"onBlur\", \"onPlus\", \"unit\", \"unitPosition\", \"min\", \"max\", \"inputName\", \"inputAriaLabel\", \"minusBtnAriaLabel\", \"plusBtnAriaLabel\", \"inputProps\", \"minusBtnProps\", \"plusBtnProps\"]);\n\n  const numberInputUnit = React.createElement(\"div\", {\n    className: css(styles.numberInputUnit)\n  }, unit);\n  const keyDownHandler = inputProps && inputProps.onKeyDown ? inputProps.onKeyDown : defaultKeyDownHandler({\n    inputName,\n    onMinus,\n    onPlus\n  });\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.numberInput, className)\n  }, widthChars && {\n    style: Object.assign({\n      '--pf-c-number-input--c-form-control--width-chars': widthChars\n    }, props.style)\n  }, props), unit && unitPosition === 'before' && numberInputUnit, React.createElement(InputGroup, null, React.createElement(Button, Object.assign({\n    variant: \"control\",\n    \"aria-label\": minusBtnAriaLabel,\n    isDisabled: isDisabled || value <= min,\n    onClick: evt => onMinus(evt, inputName)\n  }, minusBtnProps), React.createElement(\"span\", {\n    className: css(styles.numberInputIcon)\n  }, React.createElement(MinusIcon, {\n    \"aria-hidden\": \"true\"\n  }))), React.createElement(\"input\", Object.assign({\n    className: css(styles.formControl),\n    type: \"number\",\n    value: value,\n    name: inputName,\n    \"aria-label\": inputAriaLabel\n  }, isDisabled && {\n    disabled: isDisabled\n  }, onChange && {\n    onChange\n  }, onBlur && {\n    onBlur\n  }, !onChange && {\n    readOnly: true\n  }, inputProps, {\n    onKeyDown: keyDownHandler\n  })), React.createElement(Button, Object.assign({\n    variant: \"control\",\n    \"aria-label\": plusBtnAriaLabel,\n    isDisabled: isDisabled || value >= max,\n    onClick: evt => onPlus(evt, inputName)\n  }, plusBtnProps), React.createElement(\"span\", {\n    className: css(styles.numberInputIcon)\n  }, React.createElement(PlusIcon, {\n    \"aria-hidden\": \"true\"\n  })))), unit && unitPosition === 'after' && numberInputUnit);\n};\nNumberInput.displayName = 'NumberInput';","map":{"version":3,"mappings":"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","names":["React","styles","css","MinusIcon","PlusIcon","InputGroup","Button","KEY_CODES","defaultKeyDownHandler","args","event","ARROW_UP","keyCode","onPlus","preventDefault","inputName","ARROW_DOWN","onMinus","NumberInput","_a","value","className","widthChars","isDisabled","onChange","onBlur","unit","unitPosition","min","max","inputAriaLabel","minusBtnAriaLabel","plusBtnAriaLabel","inputProps","minusBtnProps","plusBtnProps","props","numberInputUnit","keyDownHandler","onKeyDown","numberInput","style","Object","variant","onClick","evt","numberInputIcon","formControl","type","name","disabled","readOnly","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/NumberInput/NumberInput.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/NumberInput/number-input';\nimport { css } from '@patternfly/react-styles';\nimport MinusIcon from '@patternfly/react-icons/dist/esm/icons/minus-icon';\nimport PlusIcon from '@patternfly/react-icons/dist/esm/icons/plus-icon';\nimport { InputGroup } from '../InputGroup';\nimport { Button, ButtonProps } from '../Button';\nimport { KEY_CODES } from '../../helpers';\n\nexport interface NumberInputProps extends React.HTMLProps<HTMLDivElement> {\n  /** Value of the number input */\n  value?: number;\n  /** Additional classes added to the number input */\n  className?: string;\n  /** Sets the width of the number input to a number of characters */\n  widthChars?: number;\n  /** Indicates the whole number input should be disabled */\n  isDisabled?: boolean;\n  /** Callback for the minus button */\n  onMinus?: (event: React.MouseEvent, name?: string) => void;\n  /** Callback for the text input changing */\n  onChange?: (event: React.FormEvent<HTMLInputElement>) => void;\n  /** Callback function when text input is blurred (focus leaves) */\n  onBlur?: (event?: any) => void;\n  /** Callback for the plus button */\n  onPlus?: (event: React.MouseEvent, name?: string) => void;\n  /** Adds the given unit to the number input */\n  unit?: React.ReactNode;\n  /** Position of the number input unit in relation to the number input */\n  unitPosition?: 'before' | 'after';\n  /** Minimum value of the number input, disabling the minus button when reached */\n  min?: number;\n  /** Maximum value of the number input, disabling the plus button when reached */\n  max?: number;\n  /** Name of the input */\n  inputName?: string;\n  /** Aria label of the input */\n  inputAriaLabel?: string;\n  /** Aria label of the minus button */\n  minusBtnAriaLabel?: string;\n  /** Aria label of the plus button */\n  plusBtnAriaLabel?: string;\n  /** Additional properties added to the text input */\n  inputProps?: any;\n  /** Additional properties added to the minus button */\n  minusBtnProps?: ButtonProps;\n  /** Additional properties added to the plus button */\n  plusBtnProps?: ButtonProps;\n}\n\ntype DefaultKeyDownHandlerArgs = Pick<NumberInputProps, 'inputName' | 'onMinus' | 'onPlus'>;\n\nconst defaultKeyDownHandler = (args: DefaultKeyDownHandlerArgs) => (event: React.KeyboardEvent<HTMLInputElement>) => {\n  if (KEY_CODES.ARROW_UP === event.keyCode && args.onPlus) {\n    event.preventDefault();\n    args.onPlus(null, args.inputName);\n  }\n  if (KEY_CODES.ARROW_DOWN === event.keyCode && args.onMinus) {\n    event.preventDefault();\n    args.onMinus(null, args.inputName);\n  }\n};\n\nexport const NumberInput: React.FunctionComponent<NumberInputProps> = ({\n  value = 0,\n  className,\n  widthChars,\n  isDisabled = false,\n  onMinus = () => {},\n  onChange,\n  onBlur,\n  onPlus = () => {},\n  unit,\n  unitPosition = 'after',\n  min,\n  max,\n  inputName,\n  inputAriaLabel = 'Input',\n  minusBtnAriaLabel = 'Minus',\n  plusBtnAriaLabel = 'Plus',\n  inputProps,\n  minusBtnProps,\n  plusBtnProps,\n  ...props\n}: NumberInputProps) => {\n  const numberInputUnit = <div className={css(styles.numberInputUnit)}>{unit}</div>;\n  const keyDownHandler =\n    inputProps && inputProps.onKeyDown ? inputProps.onKeyDown : defaultKeyDownHandler({ inputName, onMinus, onPlus });\n\n  return (\n    <div\n      className={css(styles.numberInput, className)}\n      {...(widthChars && {\n        style: {\n          '--pf-c-number-input--c-form-control--width-chars': widthChars,\n          ...props.style\n        } as React.CSSProperties\n      })}\n      {...props}\n    >\n      {unit && unitPosition === 'before' && numberInputUnit}\n      <InputGroup>\n        <Button\n          variant=\"control\"\n          aria-label={minusBtnAriaLabel}\n          isDisabled={isDisabled || value <= min}\n          onClick={evt => onMinus(evt, inputName)}\n          {...minusBtnProps}\n        >\n          <span className={css(styles.numberInputIcon)}>\n            <MinusIcon aria-hidden=\"true\" />\n          </span>\n        </Button>\n        <input\n          className={css(styles.formControl)}\n          type=\"number\"\n          value={value}\n          name={inputName}\n          aria-label={inputAriaLabel}\n          {...(isDisabled && { disabled: isDisabled })}\n          {...(onChange && { onChange })}\n          {...(onBlur && { onBlur })}\n          {...(!onChange && { readOnly: true })}\n          {...inputProps}\n          onKeyDown={keyDownHandler}\n        />\n        <Button\n          variant=\"control\"\n          aria-label={plusBtnAriaLabel}\n          isDisabled={isDisabled || value >= max}\n          onClick={evt => onPlus(evt, inputName)}\n          {...plusBtnProps}\n        >\n          <span className={css(styles.numberInputIcon)}>\n            <PlusIcon aria-hidden=\"true\" />\n          </span>\n        </Button>\n      </InputGroup>\n      {unit && unitPosition === 'after' && numberInputUnit}\n    </div>\n  );\n};\nNumberInput.displayName = 'NumberInput';\n"]},"metadata":{},"sourceType":"module"}