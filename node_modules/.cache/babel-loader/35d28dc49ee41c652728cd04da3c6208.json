{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport GripVerticalIcon from '@patternfly/react-icons/dist/esm/icons/grip-vertical-icon';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button/Button';\nexport var DraggableCell = function DraggableCell(_a) {\n  var className = _a.className,\n      onClick = _a.onClick,\n      ariaLabel = _a['aria-label'],\n      id = _a.id,\n      props = __rest(_a, [\"className\", \"onClick\", 'aria-label', \"id\"]);\n\n  return React.createElement(Button, Object.assign({\n    id: id,\n    variant: \"plain\",\n    className: className,\n    type: \"button\",\n    \"aria-label\": ariaLabel || \"Draggable row draggable button\",\n    onClick: onClick\n  }, props), React.createElement(GripVerticalIcon, {\n    \"aria-hidden\": true\n  }));\n};\nDraggableCell.displayName = 'DraggableCell';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,gBAAP,MAA6B,2DAA7B;AACA,SAASC,MAAT,QAAuB,0DAAvB;AASA,OAAO,IAAMC,aAAa,GAAgD,SAA7DA,aAA6D,CAACC,EAAD,EAMjD;MALvBC,YAGED,GAHFC;MACAC,UAEEF,GAFFE;MACcC,YACZH,GADF;MACAI,KAAEJ,GAAFI;MACGC,QAAKC,WALiE,4CAKjE;;EACgB,OACxBV,oBAACE,MAAD,EAAOS;IACLH,EAAE,EAAEA,EADC;IAELI,OAAO,EAAC,OAFH;IAGLP,SAAS,EAAEA,SAHN;IAILQ,IAAI,EAAC,QAJA;IAIQ,cACDN,SAAS,oCALhB;IAMLD,OAAO,EAAEA;EANJ,GAODG,KAPC,CAAP,EASET,oBAACC,gBAAD,EAAiB;IAAA;EAAA,CAAjB,CATF,CADwB;AAYzB,CAlBM;AAoBPE,aAAa,CAACW,WAAd,GAA4B,eAA5B","names":["React","GripVerticalIcon","Button","DraggableCell","_a","className","onClick","ariaLabel","id","props","__rest","Object","variant","type","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-table/src/components/Table/DraggableCell.tsx"],"sourcesContent":["import * as React from 'react';\nimport GripVerticalIcon from '@patternfly/react-icons/dist/esm/icons/grip-vertical-icon';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button/Button';\n\nexport interface DraggableCellProps {\n  id: string;\n  className?: string;\n  onClick?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  'aria-label'?: string;\n}\n\nexport const DraggableCell: React.FunctionComponent<DraggableCellProps> = ({\n  className,\n  onClick,\n  'aria-label': ariaLabel,\n  id,\n  ...props\n}: DraggableCellProps) => (\n  <Button\n    id={id}\n    variant=\"plain\"\n    className={className}\n    type=\"button\"\n    aria-label={ariaLabel || `Draggable row draggable button`}\n    onClick={onClick}\n    {...props}\n  >\n    <GripVerticalIcon aria-hidden />\n  </Button>\n);\n\nDraggableCell.displayName = 'DraggableCell';\n"]},"metadata":{},"sourceType":"module"}