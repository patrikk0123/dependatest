{"ast":null,"code":"var _jsxFileName = \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/BuildStartButton/BuildStartButton.tsx\";\nimport { Button, Checkbox, Divider, Dropdown, DropdownToggle, List, ListItem, Popover, Radio } from '@patternfly/react-core';\nimport { BuildIcon, InfoCircleIcon, WarningTriangleIcon } from '@patternfly/react-icons';\nimport { useState } from 'react';\nimport styles from './BuildStartButton.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ALIGNMENT_PREFERENCE_DEFAULT_INDEX = 1;\nconst alignmentPreferences = [{\n  title: 'Persistent',\n  value: 'PREFER_PERSISTENT',\n  description: 'Prefers latest persistent build version'\n}, {\n  title: 'Temporary',\n  value: 'PREFER_TEMPORARY',\n  description: 'Prefers latest temporary build version'\n}];\nconst REBUILD_MODE_DEFAULT_INDEX = 1;\nconst rebuildModes = [{\n  title: 'Explicit',\n  value: 'EXPLICIT_DEPENDENCY_CHECK'\n}, {\n  title: 'Implicit',\n  value: 'IMPLICIT_DEPENDENCY_CHECK'\n}, {\n  title: 'Force',\n  value: 'FORCE'\n}];\nconst persistentPopoverText = 'Standard build, which can be used for product release';\nconst temporaryPopoverText = 'Test build, which cannot be used for product release and which will be garbage collected during automatic cleaning';\nconst keepPodOnFailureAPopoverText = \"The builder container won't be destroyed if the build fails and you can use SSH to debug it\";\nconst buildDependenciesPopoverText = 'Build also dependencies of this build configuration if they are not built yet';\nconst descriptionTextPopoverText = 'Not implicit (automatically captured) ones - those are used only to determine if the rebuild is required';\n\nconst alignmentPreferencePopoverText = /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Select temporary build dependency alignment preferences:\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Persistent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: /*#__PURE__*/_jsxDEV(ListItem, {\n        children: \"Prefers latest persistent build version\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Temporary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: /*#__PURE__*/_jsxDEV(ListItem, {\n        children: \"Prefers latest temporary build version\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n\nconst rebuildModePopoverText = /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Rebuild a previously successful build config when:\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Explicit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        children: \"The build config has been modified since the last successful build\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: \"A build config, explicitly defined as a dependency of this one, has been modified since the last successful build\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: \"There exists a newer, successful build of a build config explicitly defined as a dependency of this one\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Implicit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Explicit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), \" criteria plus:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: \"There exists a newer version of an implicit dependency (automatically captured from sources such as Indy, MRRC or Maven Central)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Force\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: /*#__PURE__*/_jsxDEV(ListItem, {\n        children: \"Always\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n\nexport const BuildStartButton = _ref => {\n  let {\n    buildConfig,\n    groupConfig,\n    size = 'md'\n  } = _ref;\n  const [isTempBuild, setIsTempBuild] = useState(false);\n  const [alignmentPreference, setAlignmentPreference] = useState(alignmentPreferences[ALIGNMENT_PREFERENCE_DEFAULT_INDEX]);\n  const [rebuildMode, setRebuildMode] = useState(rebuildModes[REBUILD_MODE_DEFAULT_INDEX]);\n  const [keepPodOnFailure, setKeepPodOnFailure] = useState(false);\n  const [buildDependencies, setBuildDependencies] = useState(true);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const dropdownAlignmentsDirection = {\n    sm: 'right',\n    md: 'right',\n    lg: 'right'\n  };\n  const params = {\n    id: '',\n    temporaryBuild: false,\n    alignmentPreference: '',\n    rebuildMode: ''\n  };\n\n  const triggerBuild = () => {\n    setIsDropdownOpen(false);\n\n    if (!isTempBuild) {\n      setAlignmentPreference(undefined);\n    }\n\n    params.temporaryBuild = isTempBuild;\n    params.alignmentPreference = alignmentPreference ? alignmentPreference.value : undefined;\n    params.rebuildMode = rebuildMode.value;\n\n    if (buildConfig) {\n      params.keepPodOnFailure = keepPodOnFailure;\n      params.buildDependencies = buildDependencies;\n      params.id = buildConfig.id; // @Todo: BuildConfigService.build(params);\n    } else if (groupConfig) {\n      params.id = groupConfig.id; // @Todo: GroupConfigService.build(params);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      icon: /*#__PURE__*/_jsxDEV(BuildIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }, this),\n      variant: \"primary\",\n      isSmall: size === 'sm',\n      isLarge: size === 'lg',\n      onClick: triggerBuild,\n      className: styles['button-build'],\n      children: \"Build\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      alignments: dropdownAlignmentsDirection,\n      toggle: /*#__PURE__*/_jsxDEV(DropdownToggle, {\n        onToggle: () => setIsDropdownOpen(!isDropdownOpen),\n        id: \"dropdown-toggle\",\n        children: size !== 'sm' ? isTempBuild ? 'Temporary' : 'Persistent' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this),\n      isOpen: isDropdownOpen,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles['dropdown-panel'],\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles['dropdown-icon-item'],\n          children: [/*#__PURE__*/_jsxDEV(Radio, {\n            isChecked: !isTempBuild,\n            name: \"isTempBuild-false-radio\",\n            onChange: () => setIsTempBuild(false),\n            label: \"Persistent\",\n            id: \"isTempBuild-false-radio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"pnc-info-icon\",\n            children: /*#__PURE__*/_jsxDEV(Popover, {\n              bodyContent: persistentPopoverText,\n              showClose: false,\n              enableFlip: false,\n              position: \"auto\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: /*#__PURE__*/_jsxDEV(InfoCircleIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles['dropdown-icon-item'],\n          children: [/*#__PURE__*/_jsxDEV(Radio, {\n            isChecked: isTempBuild,\n            name: \"isTempBuild-true-radio\",\n            onChange: () => setIsTempBuild(true),\n            label: \"Temporary\",\n            id: \"isTempBuild-true-radio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"pnc-warning-icon\",\n            children: /*#__PURE__*/_jsxDEV(Popover, {\n              bodyContent: temporaryPopoverText,\n              showClose: false,\n              enableFlip: false,\n              position: \"auto\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: /*#__PURE__*/_jsxDEV(WarningTriangleIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), isTempBuild && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Alignment Preference\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"pnc-info-icon\",\n              children: /*#__PURE__*/_jsxDEV(Popover, {\n                bodyContent: alignmentPreferencePopoverText,\n                showClose: false,\n                enableFlip: false,\n                position: \"auto\",\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: /*#__PURE__*/_jsxDEV(InfoCircleIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Radio, {\n              isChecked: alignmentPreference === alignmentPreferences[0],\n              name: `alignmentPref-${alignmentPreferences[0].title}-radio`,\n              onChange: () => setAlignmentPreference(alignmentPreferences[0]),\n              label: alignmentPreferences[0].title,\n              id: `alignmentPref-${alignmentPreferences[0].title}-radio`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Radio, {\n              isChecked: alignmentPreference === alignmentPreferences[1],\n              name: `alignmentPref-${alignmentPreferences[1].title}-radio`,\n              onChange: () => setAlignmentPreference(alignmentPreferences[1]),\n              label: alignmentPreferences[1].title,\n              id: `alignmentPref-${alignmentPreferences[1].title}-radio`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Rebuild Mode\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"pnc-info-icon\",\n            children: /*#__PURE__*/_jsxDEV(Popover, {\n              bodyContent: rebuildModePopoverText,\n              showClose: false,\n              enableFlip: false,\n              position: \"auto\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: /*#__PURE__*/_jsxDEV(InfoCircleIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Radio, {\n            isChecked: rebuildMode === rebuildModes[0],\n            name: `rebuildMode-${rebuildModes[0].title}-radio`,\n            onChange: () => setRebuildMode(rebuildModes[0]),\n            label: rebuildModes[0].title,\n            id: `rebuildMode-${rebuildModes[0].title}-radio`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Radio, {\n            isChecked: rebuildMode === rebuildModes[1],\n            name: `rebuildMode-${rebuildModes[1].title}-radio`,\n            onChange: () => setRebuildMode(rebuildModes[1]),\n            label: rebuildModes[1].title,\n            id: `rebuildMode-${rebuildModes[1].title}-radio`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Radio, {\n            isChecked: rebuildMode === rebuildModes[2],\n            name: `rebuildMode-${rebuildModes[2].title}-radio`,\n            onChange: () => setRebuildMode(rebuildModes[2]),\n            label: rebuildModes[2].title,\n            id: `rebuildMode-${rebuildModes[2].title}-radio`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), buildConfig && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles['dropdown-icon-item'],\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              label: \"keep pod alive\",\n              isChecked: keepPodOnFailure,\n              onChange: () => setKeepPodOnFailure(!keepPodOnFailure),\n              id: \"keepPodOnFailure-check\",\n              name: \"keepPodOnFailure-check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"pnc-info-icon\",\n              children: /*#__PURE__*/_jsxDEV(Popover, {\n                bodyContent: keepPodOnFailureAPopoverText,\n                showClose: false,\n                enableFlip: false,\n                position: \"auto\",\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: /*#__PURE__*/_jsxDEV(InfoCircleIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles['dropdown-icon-item'],\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              label: \"with dependencies\",\n              isChecked: buildDependencies,\n              onChange: () => setBuildDependencies(!buildDependencies),\n              id: \"buildDependencies-check\",\n              name: \"buildDependencies-check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"pnc-info-icon\",\n              children: /*#__PURE__*/_jsxDEV(Popover, {\n                bodyContent: buildDependenciesPopoverText,\n                showClose: false,\n                enableFlip: false,\n                position: \"auto\",\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: /*#__PURE__*/_jsxDEV(InfoCircleIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: styles['description-text'],\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Press Build button to start \", isTempBuild ? 'Temporary' : 'Persistent', \" \", rebuildMode.title, \" build\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), buildDependencies && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Applying the same Rebuild Mode also to explicitly defined dependencies\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"pnc-info-icon\",\n                children: /*#__PURE__*/_jsxDEV(Popover, {\n                  bodyContent: descriptionTextPopoverText,\n                  showClose: false,\n                  enableFlip: false,\n                  position: \"auto\",\n                  children: /*#__PURE__*/_jsxDEV(InfoCircleIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};","map":{"version":3,"names":["Button","Checkbox","Divider","Dropdown","DropdownToggle","List","ListItem","Popover","Radio","BuildIcon","InfoCircleIcon","WarningTriangleIcon","useState","styles","ALIGNMENT_PREFERENCE_DEFAULT_INDEX","alignmentPreferences","title","value","description","REBUILD_MODE_DEFAULT_INDEX","rebuildModes","persistentPopoverText","temporaryPopoverText","keepPodOnFailureAPopoverText","buildDependenciesPopoverText","descriptionTextPopoverText","alignmentPreferencePopoverText","rebuildModePopoverText","BuildStartButton","buildConfig","groupConfig","size","isTempBuild","setIsTempBuild","alignmentPreference","setAlignmentPreference","rebuildMode","setRebuildMode","keepPodOnFailure","setKeepPodOnFailure","buildDependencies","setBuildDependencies","isDropdownOpen","setIsDropdownOpen","dropdownAlignmentsDirection","sm","md","lg","params","id","temporaryBuild","triggerBuild","undefined"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/BuildStartButton/BuildStartButton.tsx"],"sourcesContent":["import {\n  Button,\n  Checkbox,\n  Divider,\n  Dropdown,\n  DropdownProps,\n  DropdownToggle,\n  List,\n  ListItem,\n  Popover,\n  Radio,\n} from '@patternfly/react-core';\nimport { BuildIcon, InfoCircleIcon, WarningTriangleIcon } from '@patternfly/react-icons';\nimport { useState } from 'react';\n\nimport { BuildConfiguration, GroupConfiguration } from 'pnc-api-types-ts';\n\nimport styles from './BuildStartButton.module.css';\n\ninterface IBuildStartButtonProp {\n  /**\n   * Object: The configuration representing Build Config\n   */\n  buildConfig?: BuildConfiguration;\n\n  /**\n   * Object: The configuration representing Group Config\n   */\n  groupConfig?: GroupConfiguration;\n\n  /**\n   * String: Value representing bootstrap button size: lg, md(default if empty), sm\n   */\n  size?: string;\n}\n\ninterface IParamOption {\n  title: string;\n  value: string;\n  description?: string;\n}\n\ninterface IParams {\n  id: string;\n  temporaryBuild: boolean;\n  alignmentPreference?: string;\n  rebuildMode: string;\n  keepPodOnFailure?: boolean;\n  buildDependencies?: boolean;\n}\n\nconst ALIGNMENT_PREFERENCE_DEFAULT_INDEX = 1;\nconst alignmentPreferences: Array<IParamOption> = [\n  {\n    title: 'Persistent',\n    value: 'PREFER_PERSISTENT',\n    description: 'Prefers latest persistent build version',\n  },\n  {\n    title: 'Temporary',\n    value: 'PREFER_TEMPORARY',\n    description: 'Prefers latest temporary build version',\n  },\n];\n\nconst REBUILD_MODE_DEFAULT_INDEX = 1;\nconst rebuildModes: Array<IParamOption> = [\n  {\n    title: 'Explicit',\n    value: 'EXPLICIT_DEPENDENCY_CHECK',\n  },\n  {\n    title: 'Implicit',\n    value: 'IMPLICIT_DEPENDENCY_CHECK',\n  },\n  {\n    title: 'Force',\n    value: 'FORCE',\n  },\n];\n\nconst persistentPopoverText = 'Standard build, which can be used for product release';\nconst temporaryPopoverText =\n  'Test build, which cannot be used for product release and which will be garbage collected during automatic cleaning';\nconst keepPodOnFailureAPopoverText =\n  \"The builder container won't be destroyed if the build fails and you can use SSH to debug it\";\nconst buildDependenciesPopoverText = 'Build also dependencies of this build configuration if they are not built yet';\nconst descriptionTextPopoverText =\n  'Not implicit (automatically captured) ones - those are used only to determine if the rebuild is required';\nconst alignmentPreferencePopoverText = (\n  <>\n    <p>Select temporary build dependency alignment preferences:</p>\n    <br />\n    <div>\n      <b>Persistent</b>\n      <List>\n        <ListItem>Prefers latest persistent build version</ListItem>\n      </List>\n    </div>\n    <br />\n    <div>\n      <b>Temporary</b>\n      <List>\n        <ListItem>Prefers latest temporary build version</ListItem>\n      </List>\n    </div>\n  </>\n);\nconst rebuildModePopoverText = (\n  <>\n    <p>Rebuild a previously successful build config when:</p>\n    <br />\n    <div>\n      <b>Explicit</b>\n      <List>\n        <ListItem>The build config has been modified since the last successful build</ListItem>\n        <ListItem>\n          A build config, explicitly defined as a dependency of this one, has been modified since the last successful build\n        </ListItem>\n        <ListItem>\n          There exists a newer, successful build of a build config explicitly defined as a dependency of this one\n        </ListItem>\n      </List>\n    </div>\n    <br />\n    <div>\n      <b>Implicit</b>\n      <List>\n        <ListItem>\n          <b>Explicit</b> criteria plus:\n        </ListItem>\n        <ListItem>\n          There exists a newer version of an implicit dependency (automatically captured from sources such as Indy, MRRC or Maven\n          Central)\n        </ListItem>\n      </List>\n    </div>\n    <br />\n    <div>\n      <b>Force</b>\n      <List>\n        <ListItem>Always</ListItem>\n      </List>\n    </div>\n  </>\n);\n\nexport const BuildStartButton = ({ buildConfig, groupConfig, size = 'md' }: IBuildStartButtonProp) => {\n  const [isTempBuild, setIsTempBuild] = useState<boolean>(false);\n  const [alignmentPreference, setAlignmentPreference] = useState<IParamOption | undefined>(\n    alignmentPreferences[ALIGNMENT_PREFERENCE_DEFAULT_INDEX]\n  );\n  const [rebuildMode, setRebuildMode] = useState<IParamOption>(rebuildModes[REBUILD_MODE_DEFAULT_INDEX]);\n  const [keepPodOnFailure, setKeepPodOnFailure] = useState<boolean>(false);\n  const [buildDependencies, setBuildDependencies] = useState<boolean>(true);\n  const [isDropdownOpen, setIsDropdownOpen] = useState<boolean>(false);\n  const dropdownAlignmentsDirection: DropdownProps['alignments'] = { sm: 'right', md: 'right', lg: 'right' };\n\n  const params: IParams = {\n    id: '',\n    temporaryBuild: false,\n    alignmentPreference: '',\n    rebuildMode: '',\n  };\n\n  const triggerBuild = () => {\n    setIsDropdownOpen(false);\n\n    if (!isTempBuild) {\n      setAlignmentPreference(undefined);\n    }\n    params.temporaryBuild = isTempBuild;\n    params.alignmentPreference = alignmentPreference ? alignmentPreference.value : undefined;\n    params.rebuildMode = rebuildMode.value;\n    if (buildConfig) {\n      params.keepPodOnFailure = keepPodOnFailure;\n      params.buildDependencies = buildDependencies;\n      params.id = buildConfig.id;\n      // @Todo: BuildConfigService.build(params);\n    } else if (groupConfig) {\n      params.id = groupConfig.id;\n      // @Todo: GroupConfigService.build(params);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        icon={<BuildIcon />}\n        variant=\"primary\"\n        isSmall={size === 'sm'}\n        isLarge={size === 'lg'}\n        onClick={triggerBuild}\n        className={styles['button-build']}\n      >\n        Build\n      </Button>\n      <Dropdown\n        alignments={dropdownAlignmentsDirection}\n        toggle={\n          <DropdownToggle onToggle={() => setIsDropdownOpen(!isDropdownOpen)} id=\"dropdown-toggle\">\n            {size !== 'sm' ? (isTempBuild ? 'Temporary' : 'Persistent') : ''}\n          </DropdownToggle>\n        }\n        isOpen={isDropdownOpen}\n      >\n        <div className={styles['dropdown-panel']}>\n          <div className={styles['dropdown-icon-item']}>\n            <Radio\n              isChecked={!isTempBuild}\n              name=\"isTempBuild-false-radio\"\n              onChange={() => setIsTempBuild(false)}\n              label=\"Persistent\"\n              id=\"isTempBuild-false-radio\"\n            />\n            <span className=\"pnc-info-icon\">\n              <Popover bodyContent={persistentPopoverText} showClose={false} enableFlip={false} position=\"auto\">\n                <small>\n                  <InfoCircleIcon />\n                </small>\n              </Popover>\n            </span>\n          </div>\n          <div className={styles['dropdown-icon-item']}>\n            <Radio\n              isChecked={isTempBuild}\n              name=\"isTempBuild-true-radio\"\n              onChange={() => setIsTempBuild(true)}\n              label=\"Temporary\"\n              id=\"isTempBuild-true-radio\"\n            />\n            <span className=\"pnc-warning-icon\">\n              <Popover bodyContent={temporaryPopoverText} showClose={false} enableFlip={false} position=\"auto\">\n                <small>\n                  <WarningTriangleIcon />\n                </small>\n              </Popover>\n            </span>\n          </div>\n          <Divider />\n          {isTempBuild && (\n            <>\n              <div>\n                Alignment Preference\n                <span className=\"pnc-info-icon\">\n                  <Popover bodyContent={alignmentPreferencePopoverText} showClose={false} enableFlip={false} position=\"auto\">\n                    <small>\n                      <InfoCircleIcon />\n                    </small>\n                  </Popover>\n                </span>\n              </div>\n              <div>\n                <Radio\n                  isChecked={alignmentPreference === alignmentPreferences[0]}\n                  name={`alignmentPref-${alignmentPreferences[0].title}-radio`}\n                  onChange={() => setAlignmentPreference(alignmentPreferences[0])}\n                  label={alignmentPreferences[0].title}\n                  id={`alignmentPref-${alignmentPreferences[0].title}-radio`}\n                />\n              </div>\n              <div>\n                <Radio\n                  isChecked={alignmentPreference === alignmentPreferences[1]}\n                  name={`alignmentPref-${alignmentPreferences[1].title}-radio`}\n                  onChange={() => setAlignmentPreference(alignmentPreferences[1])}\n                  label={alignmentPreferences[1].title}\n                  id={`alignmentPref-${alignmentPreferences[1].title}-radio`}\n                />\n              </div>\n              <Divider />\n            </>\n          )}\n          <div>\n            Rebuild Mode\n            <span className=\"pnc-info-icon\">\n              <Popover bodyContent={rebuildModePopoverText} showClose={false} enableFlip={false} position=\"auto\">\n                <small>\n                  <InfoCircleIcon />\n                </small>\n              </Popover>\n            </span>\n          </div>\n          <div>\n            <Radio\n              isChecked={rebuildMode === rebuildModes[0]}\n              name={`rebuildMode-${rebuildModes[0].title}-radio`}\n              onChange={() => setRebuildMode(rebuildModes[0])}\n              label={rebuildModes[0].title}\n              id={`rebuildMode-${rebuildModes[0].title}-radio`}\n            />\n          </div>\n          <div>\n            <Radio\n              isChecked={rebuildMode === rebuildModes[1]}\n              name={`rebuildMode-${rebuildModes[1].title}-radio`}\n              onChange={() => setRebuildMode(rebuildModes[1])}\n              label={rebuildModes[1].title}\n              id={`rebuildMode-${rebuildModes[1].title}-radio`}\n            />\n          </div>\n          <div>\n            <Radio\n              isChecked={rebuildMode === rebuildModes[2]}\n              name={`rebuildMode-${rebuildModes[2].title}-radio`}\n              onChange={() => setRebuildMode(rebuildModes[2])}\n              label={rebuildModes[2].title}\n              id={`rebuildMode-${rebuildModes[2].title}-radio`}\n            />\n          </div>\n          <Divider />\n          {buildConfig && (\n            <>\n              <div className={styles['dropdown-icon-item']}>\n                <Checkbox\n                  label=\"keep pod alive\"\n                  isChecked={keepPodOnFailure}\n                  onChange={() => setKeepPodOnFailure(!keepPodOnFailure)}\n                  id=\"keepPodOnFailure-check\"\n                  name=\"keepPodOnFailure-check\"\n                />\n                <span className=\"pnc-info-icon\">\n                  <Popover bodyContent={keepPodOnFailureAPopoverText} showClose={false} enableFlip={false} position=\"auto\">\n                    <small>\n                      <InfoCircleIcon />\n                    </small>\n                  </Popover>\n                </span>\n              </div>\n              <div className={styles['dropdown-icon-item']}>\n                <Checkbox\n                  label=\"with dependencies\"\n                  isChecked={buildDependencies}\n                  onChange={() => setBuildDependencies(!buildDependencies)}\n                  id=\"buildDependencies-check\"\n                  name=\"buildDependencies-check\"\n                />\n                <span className=\"pnc-info-icon\">\n                  <Popover bodyContent={buildDependenciesPopoverText} showClose={false} enableFlip={false} position=\"auto\">\n                    <small>\n                      <InfoCircleIcon />\n                    </small>\n                  </Popover>\n                </span>\n              </div>\n              <Divider />\n            </>\n          )}\n          <small className={styles['description-text']}>\n            <p>\n              Press Build button to start {isTempBuild ? 'Temporary' : 'Persistent'} {rebuildMode.title} build\n            </p>\n            {buildDependencies && (\n              <span>\n                <p>\n                  Applying the same Rebuild Mode also to explicitly defined dependencies\n                  <span className=\"pnc-info-icon\">\n                    <Popover bodyContent={descriptionTextPopoverText} showClose={false} enableFlip={false} position=\"auto\">\n                      <InfoCircleIcon />\n                    </Popover>\n                  </span>\n                </p>\n              </span>\n            )}\n          </small>\n        </div>\n      </Dropdown>\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}