{"ast":null,"code":"var _jsxFileName = \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/Sorting/Sorting.tsx\";\nimport { Button, InputGroup, Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { SortAmountDownAltIcon, SortAmountDownIcon } from '@patternfly/react-icons';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { getComponentQueryParamValue, updateQueryParamsInURL } from '../../utils/queryParamsHelper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let SORT_ORDER;\n\n(function (SORT_ORDER) {\n  SORT_ORDER[\"Asc\"] = \"asc\";\n  SORT_ORDER[\"Desc\"] = \"desc\";\n})(SORT_ORDER || (SORT_ORDER = {}));\n\nexport const Sorting = _ref => {\n  var _Object$entries$filte, _sortOptions$defaultA;\n\n  let {\n    sortOptions,\n    componentId\n  } = _ref;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [isFirstRender, setIsFirstRender] = useState(true);\n  const defaultAttributeKey = (_Object$entries$filte = Object.entries(sortOptions).filter(_ref2 => {\n    let [_, v] = _ref2;\n    return v.isDefaultAttribute;\n  })[0]) === null || _Object$entries$filte === void 0 ? void 0 : _Object$entries$filte[0];\n  const defaultSortOrder = ((_sortOptions$defaultA = sortOptions[defaultAttributeKey]) === null || _sortOptions$defaultA === void 0 ? void 0 : _sortOptions$defaultA.defaultSortOrder) || SORT_ORDER.Asc; // attribute by which list is sorted\n\n  const [sortAttribute, setSortAttribute] = useState();\n  const [sortOrder, setSortOrder] = useState(SORT_ORDER.Asc);\n  const [isSortSelectOpen, setIsSortSelectOpen] = useState(false);\n  /**\n   * Add sort param by updating URL.\n   */\n\n  const addSortFilter = useCallback(function (sortAttributeKey, order) {\n    let replace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    updateQueryParamsInURL({\n      sort: `=${order}=${sortAttributeKey}`,\n      pageIndex: 1\n    }, componentId, location, navigate, replace);\n  }, [componentId, location, navigate]);\n  /**\n   * Delete sort param from URL.\n   */\n\n  const deleteSortFilter = () => {\n    updateQueryParamsInURL({\n      sort: '',\n      pageIndex: 1\n    }, componentId, location, navigate);\n  };\n  /**\n   * Sychronize UI with the URL sort param.\n   */\n\n\n  useEffect(() => {\n    const currentSortParam = getComponentQueryParamValue(location.search, 'sort', componentId); // if URL contains sort param\n\n    if (currentSortParam) {\n      var _currentSortParam$spl, _currentSortParam$spl2;\n\n      const urlSortOder = (_currentSortParam$spl = currentSortParam.split('=')) === null || _currentSortParam$spl === void 0 ? void 0 : _currentSortParam$spl[1];\n      const urlSortAttributeKey = (_currentSortParam$spl2 = currentSortParam.split('=')) === null || _currentSortParam$spl2 === void 0 ? void 0 : _currentSortParam$spl2[2];\n      setSortOrder(urlSortOder);\n      setSortAttribute(sortOptions[urlSortAttributeKey]);\n    } else {\n      setSortAttribute(undefined);\n    }\n  }, [location.search, location, componentId, navigate, sortOptions]);\n  /**\n   * Add default sorting (if any) and check sortOptiions validity.\n   */\n\n  useEffect(() => {\n    const currentSortParam = getComponentQueryParamValue(location.search, 'sort', componentId); // if URL contains no sort param AND component is rendered first time AND there is default sort attribute\n\n    if (!currentSortParam && isFirstRender && defaultAttributeKey) {\n      addSortFilter(defaultAttributeKey, defaultSortOrder, true);\n    }\n\n    if (isFirstRender) {\n      setIsFirstRender(false);\n      Object.entries(sortOptions).forEach(_ref3 => {\n        let [k, v] = _ref3;\n\n        // check sort options validity\n        if (k !== v.id) {\n          console.error('sortOptions: ', sortOptions);\n          throw new Error(`sortOptions have invalid format, object key (${k}) has to match id field (${v.id})!`);\n        }\n      });\n    }\n  }, [isFirstRender, sortOptions, defaultAttributeKey, defaultSortOrder, addSortFilter, componentId, location]);\n  return /*#__PURE__*/_jsxDEV(InputGroup, {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      hasPlaceholderStyle: true,\n      placeholderText: \"Sort\",\n      variant: SelectVariant.single,\n      onToggle: isOpen => {\n        setIsSortSelectOpen(isOpen);\n      },\n      onSelect: (_, selection) => {\n        setIsSortSelectOpen(false);\n        addSortFilter(selection === null || selection === void 0 ? void 0 : selection.id, sortOrder);\n      },\n      selections: sortAttribute,\n      isOpen: isSortSelectOpen,\n      children: [...Object.keys(sortOptions).map(filterAttributeKey => {\n        const filterAttribute = sortOptions[filterAttributeKey]; // use 'title' attribute as default\n\n        filterAttribute.toString = () => {\n          return filterAttribute.title;\n        };\n\n        return /*#__PURE__*/_jsxDEV(SelectOption, {\n          value: filterAttribute\n        }, filterAttribute.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 20\n        }, this);\n      })]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"plain\",\n      isDisabled: !sortAttribute,\n      onClick: () => {\n        addSortFilter(sortAttribute.id, sortOrder === SORT_ORDER.Asc ? SORT_ORDER.Desc : SORT_ORDER.Asc);\n      },\n      icon: sortOrder === SORT_ORDER.Asc ? /*#__PURE__*/_jsxDEV(SortAmountDownAltIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(SortAmountDownIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 74\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), sortAttribute && /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        padding: '0px'\n      },\n      variant: \"plain\",\n      onClick: () => {\n        deleteSortFilter();\n      },\n      children: \"Remove sorting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["Button","InputGroup","Select","SelectOption","SelectVariant","SortAmountDownAltIcon","SortAmountDownIcon","useCallback","useEffect","useState","useLocation","useNavigate","getComponentQueryParamValue","updateQueryParamsInURL","SORT_ORDER","Sorting","sortOptions","componentId","location","navigate","isFirstRender","setIsFirstRender","defaultAttributeKey","Object","entries","filter","_","v","isDefaultAttribute","defaultSortOrder","Asc","sortAttribute","setSortAttribute","sortOrder","setSortOrder","isSortSelectOpen","setIsSortSelectOpen","addSortFilter","sortAttributeKey","order","replace","sort","pageIndex","deleteSortFilter","currentSortParam","search","urlSortOder","split","urlSortAttributeKey","undefined","forEach","k","id","console","error","Error","single","isOpen","selection","keys","map","filterAttributeKey","filterAttribute","toString","title","Desc","padding"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/Sorting/Sorting.tsx"],"sourcesContent":["import { Button, InputGroup, Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { SortAmountDownAltIcon, SortAmountDownIcon } from '@patternfly/react-icons';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nimport { getComponentQueryParamValue, updateQueryParamsInURL } from '../../utils/queryParamsHelper';\n\nexport enum SORT_ORDER {\n  Asc = 'asc',\n  Desc = 'desc',\n}\n\ninterface ISortAttribute {\n  /**\n   * ID has to match object key {@link ISortOptions}, there is automatic checker throwing errors if they don't match.\n   */\n  id: string;\n  /**\n   * Sorting option title.\n   */\n  title: string;\n  /**\n   * Should be sorted by default by this attribute?\n   * Maximally one attribute should be default.\n   */\n  isDefaultAttribute?: boolean;\n  /**\n   * If sorted by default by this attribute, which order is used?\n   * If omitted, ascending order is assumed.\n   */\n  defaultSortOrder?: SORT_ORDER;\n}\n\nexport interface ISortOptions {\n  [key: string]: ISortAttribute;\n}\n\ninterface ISortingProps {\n  sortOptions: ISortOptions;\n  componentId: string;\n}\n\nexport const Sorting = ({ sortOptions, componentId }: ISortingProps) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const [isFirstRender, setIsFirstRender] = useState<boolean>(true);\n\n  const defaultAttributeKey = Object.entries(sortOptions).filter(([_, v]) => v.isDefaultAttribute)[0]?.[0];\n  const defaultSortOrder = sortOptions[defaultAttributeKey]?.defaultSortOrder || SORT_ORDER.Asc;\n\n  // attribute by which list is sorted\n  const [sortAttribute, setSortAttribute] = useState<ISortAttribute>();\n  const [sortOrder, setSortOrder] = useState<SORT_ORDER>(SORT_ORDER.Asc);\n  const [isSortSelectOpen, setIsSortSelectOpen] = useState<boolean>(false);\n\n  /**\n   * Add sort param by updating URL.\n   */\n  const addSortFilter = useCallback(\n    (sortAttributeKey: string, order: SORT_ORDER, replace: boolean = false) => {\n      updateQueryParamsInURL({ sort: `=${order}=${sortAttributeKey}`, pageIndex: 1 }, componentId, location, navigate, replace);\n    },\n    [componentId, location, navigate]\n  );\n\n  /**\n   * Delete sort param from URL.\n   */\n  const deleteSortFilter = () => {\n    updateQueryParamsInURL({ sort: '', pageIndex: 1 }, componentId, location, navigate);\n  };\n\n  /**\n   * Sychronize UI with the URL sort param.\n   */\n  useEffect(() => {\n    const currentSortParam = getComponentQueryParamValue(location.search, 'sort', componentId);\n\n    // if URL contains sort param\n    if (currentSortParam) {\n      const urlSortOder = currentSortParam.split('=')?.[1];\n      const urlSortAttributeKey = currentSortParam.split('=')?.[2];\n\n      setSortOrder(urlSortOder as SORT_ORDER);\n      setSortAttribute(sortOptions[urlSortAttributeKey]);\n    } else {\n      setSortAttribute(undefined);\n    }\n  }, [location.search, location, componentId, navigate, sortOptions]);\n\n  /**\n   * Add default sorting (if any) and check sortOptiions validity.\n   */\n  useEffect(() => {\n    const currentSortParam = getComponentQueryParamValue(location.search, 'sort', componentId);\n    // if URL contains no sort param AND component is rendered first time AND there is default sort attribute\n    if (!currentSortParam && isFirstRender && defaultAttributeKey) {\n      addSortFilter(defaultAttributeKey, defaultSortOrder, true);\n    }\n\n    if (isFirstRender) {\n      setIsFirstRender(false);\n\n      Object.entries(sortOptions).forEach(([k, v]) => {\n        // check sort options validity\n        if (k !== v.id) {\n          console.error('sortOptions: ', sortOptions);\n          throw new Error(`sortOptions have invalid format, object key (${k}) has to match id field (${v.id})!`);\n        }\n      });\n    }\n  }, [isFirstRender, sortOptions, defaultAttributeKey, defaultSortOrder, addSortFilter, componentId, location]);\n\n  return (\n    <InputGroup>\n      <Select\n        hasPlaceholderStyle\n        placeholderText=\"Sort\"\n        variant={SelectVariant.single}\n        onToggle={(isOpen) => {\n          setIsSortSelectOpen(isOpen);\n        }}\n        onSelect={(_, selection) => {\n          setIsSortSelectOpen(false);\n          addSortFilter((selection as ISortAttribute)?.id, sortOrder);\n        }}\n        selections={sortAttribute}\n        isOpen={isSortSelectOpen}\n      >\n        {[\n          ...Object.keys(sortOptions).map((filterAttributeKey: string) => {\n            const filterAttribute = sortOptions[filterAttributeKey];\n            // use 'title' attribute as default\n            filterAttribute.toString = () => {\n              return filterAttribute.title;\n            };\n\n            return <SelectOption key={filterAttribute.id} value={filterAttribute} />;\n          }),\n        ]}\n      </Select>\n\n      <Button\n        variant=\"plain\"\n        isDisabled={!sortAttribute}\n        onClick={() => {\n          addSortFilter(sortAttribute!.id, sortOrder === SORT_ORDER.Asc ? SORT_ORDER.Desc : SORT_ORDER.Asc);\n        }}\n        icon={sortOrder === SORT_ORDER.Asc ? <SortAmountDownAltIcon /> : <SortAmountDownIcon />}\n      />\n\n      {sortAttribute && (\n        <Button\n          style={{ padding: '0px' }}\n          variant=\"plain\"\n          onClick={() => {\n            deleteSortFilter();\n          }}\n        >\n          Remove sorting\n        </Button>\n      )}\n    </InputGroup>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}