{"ast":null,"code":"import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { ActionsColumn } from '../../ActionsColumn';\n\nvar resolveOrDefault = function resolveOrDefault(resolver, defaultValue, rowData, extraData) {\n  return typeof resolver === 'function' ? resolver(rowData, extraData) : defaultValue;\n};\n\nexport var cellActions = function cellActions(actions, actionResolver, areActionsDisabled) {\n  return function (label, _ref) {\n    var rowData = _ref.rowData,\n        column = _ref.column,\n        rowIndex = _ref.rowIndex,\n        columnIndex = _ref.columnIndex,\n        _ref$column$extraPara = _ref.column.extraParams,\n        dropdownPosition = _ref$column$extraPara.dropdownPosition,\n        dropdownDirection = _ref$column$extraPara.dropdownDirection,\n        actionsToggle = _ref$column$extraPara.actionsToggle,\n        property = _ref.property;\n    var extraData = {\n      rowIndex: rowIndex,\n      columnIndex: columnIndex,\n      column: column,\n      property: property\n    };\n    var resolvedActions = resolveOrDefault(actionResolver, actions, rowData, extraData);\n    var resolvedIsDisabled = resolveOrDefault(areActionsDisabled, rowData && rowData.disableActions, rowData, extraData);\n    var renderProps = resolvedActions && resolvedActions.length > 0 ? {\n      children: React.createElement(ActionsColumn, {\n        items: resolvedActions,\n        dropdownPosition: dropdownPosition,\n        dropdownDirection: dropdownDirection,\n        isDisabled: resolvedIsDisabled,\n        rowData: rowData,\n        extraData: extraData,\n        actionsToggle: actionsToggle\n      }, label)\n    } : {};\n    return Object.assign({\n      className: css(styles.tableAction),\n      style: {\n        paddingRight: 0\n      },\n      isVisible: true\n    }, renderProps);\n  };\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,qDAAnB;AACA,SAASC,aAAT,QAA8B,qBAA9B;;AAaA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CACvBC,QADuB,EAEvBC,YAFuB,EAGvBC,OAHuB,EAIvBC,SAJuB;EAAA,OAKnB,OAAOH,QAAP,KAAoB,UAApB,GAAiCA,QAAQ,CAACE,OAAD,EAAUC,SAAV,CAAzC,GAAgEF,YAL7C;AAAA,CAAzB;;AAOA,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,CACzBC,OADyB,EAEzBC,cAFyB,EAGzBC,kBAHyB;EAAA,OAIV,UACfC,KADe,QAYb;IAAA,IATAN,OASA,QATAA,OASA;IAAA,IARAO,MAQA,QARAA,MAQA;IAAA,IAPAC,QAOA,QAPAA,QAOA;IAAA,IANAC,WAMA,QANAA,WAMA;IAAA,iCALAF,MAKA,CAJEG,WAIF;IAAA,IAJiBC,gBAIjB,yBAJiBA,gBAIjB;IAAA,IAJmCC,iBAInC,yBAJmCA,iBAInC;IAAA,IAJsDC,aAItD,yBAJsDA,aAItD;IAAA,IAFAC,QAEA,QAFAA,QAEA;IACF,IAAMb,SAAS,GAAG;MAChBO,QAAQ,EAARA,QADgB;MAEhBC,WAAW,EAAXA,WAFgB;MAGhBF,MAAM,EAANA,MAHgB;MAIhBO,QAAQ,EAARA;IAJgB,CAAlB;IAMA,IAAMC,eAAe,GAAGlB,gBAAgB,CAACO,cAAD,EAAiBD,OAAjB,EAA0BH,OAA1B,EAAmCC,SAAnC,CAAxC;IACA,IAAMe,kBAAkB,GAAGnB,gBAAgB,CACzCQ,kBADyC,EAEzCL,OAAO,IAAIA,OAAO,CAACiB,cAFsB,EAGzCjB,OAHyC,EAIzCC,SAJyC,CAA3C;IAOA,IAAMiB,WAAW,GACfH,eAAe,IAAKA,eAAsB,CAACI,MAAvB,GAAgC,CAApD,GACI;MACEC,QAAQ,EACN3B,oBAACG,aAAD,EAAc;QACZyB,KAAK,EAAEN,eADK;QAEZJ,gBAAgB,EAAEA,gBAFN;QAGZC,iBAAiB,EAAEA,iBAHP;QAIZU,UAAU,EAAEN,kBAJA;QAKZhB,OAAO,EAAEA,OALG;QAMZC,SAAS,EAAEA,SANC;QAOZY,aAAa,EAAEA;MAPH,CAAd,EASGP,KATH;IAFJ,CADJ,GAgBI,EAjBN;IAmBA;MACEiB,SAAS,EAAE7B,GAAG,CAACC,MAAM,CAAC6B,WAAR,CADhB;MAEEC,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAhB,CAFT;MAGEC,SAAS,EAAE;IAHb,GAIKT,WAJL;EAMD,CAxD0B;AAAA,CAApB","names":["React","css","styles","ActionsColumn","resolveOrDefault","resolver","defaultValue","rowData","extraData","cellActions","actions","actionResolver","areActionsDisabled","label","column","rowIndex","columnIndex","extraParams","dropdownPosition","dropdownDirection","actionsToggle","property","resolvedActions","resolvedIsDisabled","disableActions","renderProps","length","children","items","isDisabled","className","tableAction","style","paddingRight","isVisible"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-table/src/components/Table/utils/decorators/cellActions.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { ActionsColumn } from '../../ActionsColumn';\nimport {\n  IActions,\n  IAction,\n  IActionsResolver,\n  IAreActionsDisabled,\n  IExtra,\n  IExtraData,\n  IFormatterValueType,\n  IRowData,\n  ITransform\n} from '../../TableTypes';\n\nconst resolveOrDefault = (\n  resolver: IActionsResolver | IAreActionsDisabled,\n  defaultValue: IActions | boolean,\n  rowData: IRowData,\n  extraData: IExtraData\n) => (typeof resolver === 'function' ? resolver(rowData, extraData) : defaultValue);\n\nexport const cellActions = (\n  actions: IActions,\n  actionResolver: IActionsResolver,\n  areActionsDisabled: IAreActionsDisabled\n): ITransform => (\n  label: IFormatterValueType,\n  {\n    rowData,\n    column,\n    rowIndex,\n    columnIndex,\n    column: {\n      extraParams: { dropdownPosition, dropdownDirection, actionsToggle }\n    },\n    property\n  }: IExtra\n) => {\n  const extraData = {\n    rowIndex,\n    columnIndex,\n    column,\n    property\n  };\n  const resolvedActions = resolveOrDefault(actionResolver, actions, rowData, extraData) as IAction[];\n  const resolvedIsDisabled = resolveOrDefault(\n    areActionsDisabled,\n    rowData && rowData.disableActions,\n    rowData,\n    extraData\n  ) as boolean;\n\n  const renderProps =\n    resolvedActions && (resolvedActions as []).length > 0\n      ? {\n          children: (\n            <ActionsColumn\n              items={resolvedActions}\n              dropdownPosition={dropdownPosition}\n              dropdownDirection={dropdownDirection}\n              isDisabled={resolvedIsDisabled}\n              rowData={rowData}\n              extraData={extraData}\n              actionsToggle={actionsToggle}\n            >\n              {label}\n            </ActionsColumn>\n          )\n        }\n      : {};\n\n  return {\n    className: css(styles.tableAction),\n    style: { paddingRight: 0 },\n    isVisible: true,\n    ...renderProps\n  };\n};\n"]},"metadata":{},"sourceType":"module"}