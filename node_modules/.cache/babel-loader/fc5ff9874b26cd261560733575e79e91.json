{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Popover/popover';\nimport { Title, TitleSizes } from '../Title';\nimport { PopoverHeaderIcon } from './PopoverHeaderIcon';\nimport { PopoverHeaderText } from './PopoverHeaderText';\nexport const PopoverHeader = _a => {\n  var {\n    children,\n    icon,\n    className,\n    titleHeadingLevel = 'h6',\n    alertSeverityVariant,\n    id,\n    alertSeverityScreenReaderText\n  } = _a,\n      props = __rest(_a, [\"children\", \"icon\", \"className\", \"titleHeadingLevel\", \"alertSeverityVariant\", \"id\", \"alertSeverityScreenReaderText\"]);\n\n  const HeadingLevel = titleHeadingLevel;\n  return icon || alertSeverityVariant ? React.createElement(\"header\", Object.assign({\n    className: css('pf-c-popover__header', className),\n    id: id\n  }, props), React.createElement(HeadingLevel, {\n    className: css(styles.popoverTitle, icon && styles.modifiers.icon)\n  }, icon && React.createElement(PopoverHeaderIcon, null, icon), alertSeverityVariant && alertSeverityScreenReaderText && React.createElement(\"span\", {\n    className: \"pf-u-screen-reader\"\n  }, alertSeverityScreenReaderText), React.createElement(PopoverHeaderText, null, children))) : React.createElement(Title, Object.assign({\n    headingLevel: titleHeadingLevel,\n    size: TitleSizes.md,\n    id: id,\n    className: className\n  }, props), children);\n};\nPopoverHeader.displayName = 'PopoverHeader';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,yDAAnB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,UAAlC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAmBA,OAAO,MAAMC,aAAa,GAAiDC,EAAD,IASjD;MATkD;IACzEC,QADyE;IAEzEC,IAFyE;IAGzEC,SAHyE;IAIzEC,iBAAiB,GAAG,IAJqD;IAKzEC,oBALyE;IAMzEC,EANyE;IAOzEC;EAPyE,IAO5CP;MAC1BQ,KAAK,cARiE,qHAQjE;;EAER,MAAMC,YAAY,GAAGL,iBAArB;EAEA,OAAOF,IAAI,IAAIG,oBAAR,GACLb;IAAQW,SAAS,EAAEV,GAAG,CAAC,sBAAD,EAAyBU,SAAzB,CAAtB;IAA2DG,EAAE,EAAEA;EAA/D,GAAuEE,KAAvE,GACEhB,oBAACiB,YAAD,EAAa;IAACN,SAAS,EAAEV,GAAG,CAACC,MAAM,CAACgB,YAAR,EAAsBR,IAAI,IAAIR,MAAM,CAACiB,SAAP,CAAiBT,IAA/C;EAAf,CAAb,EACGA,IAAI,IAAIV,oBAACK,iBAAD,EAAkB,IAAlB,EAAoBK,IAApB,CADX,EAEGG,oBAAoB,IAAIE,6BAAxB,IACCf;IAAMW,SAAS,EAAC;EAAhB,GAAsCI,6BAAtC,CAHJ,EAKEf,oBAACM,iBAAD,EAAkB,IAAlB,EAAoBG,QAApB,CALF,CADF,CADK,GAWLT,oBAACG,KAAD,EAAMiB;IAACC,YAAY,EAAET,iBAAf;IAAkCU,IAAI,EAAElB,UAAU,CAACmB,EAAnD;IAAuDT,EAAE,EAAEA,EAA3D;IAA+DH,SAAS,EAAEA;EAA1E,GAAyFK,KAAzF,CAAN,EACGP,QADH,CAXF;AAeD,CA3BM;AA4BPF,aAAa,CAACiB,WAAd,GAA4B,eAA5B","names":["React","css","styles","Title","TitleSizes","PopoverHeaderIcon","PopoverHeaderText","PopoverHeader","_a","children","icon","className","titleHeadingLevel","alertSeverityVariant","id","alertSeverityScreenReaderText","props","HeadingLevel","popoverTitle","modifiers","Object","headingLevel","size","md","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Popover/PopoverHeader.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Popover/popover';\nimport { Title, TitleSizes } from '../Title';\nimport { PopoverHeaderIcon } from './PopoverHeaderIcon';\nimport { PopoverHeaderText } from './PopoverHeaderText';\n\nexport interface PopoverHeaderProps extends Omit<React.HTMLProps<HTMLHeadingElement>, 'size'> {\n  /** Content of the popover header. */\n  children: React.ReactNode;\n  /** Indicates the header contains an icon. */\n  icon?: React.ReactNode;\n  /** Class to be applied to the header. */\n  className?: string;\n  /** Heading level of the header title */\n  titleHeadingLevel?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n  /** Severity variants for an alert popover. This modifies the color of the header to match the severity. */\n  alertSeverityVariant?: 'default' | 'info' | 'warning' | 'success' | 'danger';\n  /** Id of the header */\n  id?: string;\n  /** Text announced by screen reader when alert severity variant is set to indicate severity level */\n  alertSeverityScreenReaderText?: string;\n}\n\nexport const PopoverHeader: React.FunctionComponent<PopoverHeaderProps> = ({\n  children,\n  icon,\n  className,\n  titleHeadingLevel = 'h6',\n  alertSeverityVariant,\n  id,\n  alertSeverityScreenReaderText,\n  ...props\n}: PopoverHeaderProps) => {\n  const HeadingLevel = titleHeadingLevel;\n\n  return icon || alertSeverityVariant ? (\n    <header className={css('pf-c-popover__header', className)} id={id} {...props}>\n      <HeadingLevel className={css(styles.popoverTitle, icon && styles.modifiers.icon)}>\n        {icon && <PopoverHeaderIcon>{icon}</PopoverHeaderIcon>}\n        {alertSeverityVariant && alertSeverityScreenReaderText && (\n          <span className=\"pf-u-screen-reader\">{alertSeverityScreenReaderText}</span>\n        )}\n        <PopoverHeaderText>{children}</PopoverHeaderText>\n      </HeadingLevel>\n    </header>\n  ) : (\n    <Title headingLevel={titleHeadingLevel} size={TitleSizes.md} id={id} className={className} {...props}>\n      {children}\n    </Title>\n  );\n};\nPopoverHeader.displayName = 'PopoverHeader';\n"]},"metadata":{},"sourceType":"module"}