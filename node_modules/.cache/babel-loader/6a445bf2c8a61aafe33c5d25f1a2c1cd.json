{"ast":null,"code":"import _slicedToArray from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/MultipleFileUpload/multiple-file-upload';\nimport { css } from '@patternfly/react-styles';\nimport { ExpandableSection } from '../ExpandableSection';\nimport InProgressIcon from '@patternfly/react-icons/dist/esm/icons/in-progress-icon';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/esm/icons/times-circle-icon';\nexport var MultipleFileUploadStatus = function MultipleFileUploadStatus(_a) {\n  var children = _a.children,\n      className = _a.className,\n      statusToggleText = _a.statusToggleText,\n      statusToggleIcon = _a.statusToggleIcon,\n      props = __rest(_a, [\"children\", \"className\", \"statusToggleText\", \"statusToggleIcon\"]);\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      icon = _React$useState2[0],\n      setIcon = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isOpen = _React$useState4[0],\n      setIsOpen = _React$useState4[1];\n\n  React.useEffect(function () {\n    switch (statusToggleIcon) {\n      case 'danger':\n        setIcon(React.createElement(TimesCircleIcon, null));\n        break;\n\n      case 'success':\n        setIcon(React.createElement(CheckCircleIcon, null));\n        break;\n\n      case 'inProgress':\n        setIcon(React.createElement(InProgressIcon, null));\n        break;\n\n      default:\n        setIcon(statusToggleIcon);\n    }\n  }, [statusToggleIcon]);\n  var toggle = React.createElement(\"div\", {\n    className: styles.multipleFileUploadStatusProgress\n  }, React.createElement(\"div\", {\n    className: styles.multipleFileUploadStatusProgressIcon\n  }, icon), React.createElement(\"div\", {\n    className: styles.multipleFileUploadStatusItemProgressText\n  }, statusToggleText));\n\n  var toggleExpandableSection = function toggleExpandableSection() {\n    setIsOpen(!isOpen);\n  };\n\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.multipleFileUploadStatus, className)\n  }, props), React.createElement(ExpandableSection, {\n    toggleContent: toggle,\n    isExpanded: isOpen,\n    onToggle: toggleExpandableSection\n  }, React.createElement(\"ul\", {\n    className: \"pf-c-multiple-file-upload__status-list\"\n  }, children)));\n};\nMultipleFileUploadStatus.displayName = 'MultipleFileUploadStatus';","map":{"version":3,"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,iFAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,OAAOC,cAAP,MAA2B,yDAA3B;AACA,OAAOC,eAAP,MAA4B,0DAA5B;AACA,OAAOC,eAAP,MAA4B,0DAA5B;AAaA,OAAO,IAAMC,wBAAwB,GAA2D,SAAnFA,wBAAmF,CAACC,EAAD,EAM5D;MALlCC,WAGgBD,GAHhBC;MACAC,YAEgBF,GAFhBE;MACAC,mBACgBH,GADhBG;MACAC,mBAAgBJ,GAAhBI;MACGC,QAAKC,WALuF,iEAKvF;;EAER,sBAAwBd,KAAK,CAACe,QAAN,EAAxB;EAAA;EAAA,IAAOC,IAAP;EAAA,IAAaC,OAAb;;EACA,uBAA4BjB,KAAK,CAACe,QAAN,CAAe,IAAf,CAA5B;EAAA;EAAA,IAAOG,MAAP;EAAA,IAAeC,SAAf;;EAEAnB,KAAK,CAACoB,SAAN,CAAgB,YAAK;IACnB,QAAQR,gBAAR;MACE,KAAK,QAAL;QACEK,OAAO,CAACjB,oBAACM,eAAD,EAAgB,IAAhB,CAAD,CAAP;QACA;;MACF,KAAK,SAAL;QACEW,OAAO,CAACjB,oBAACK,eAAD,EAAgB,IAAhB,CAAD,CAAP;QACA;;MACF,KAAK,YAAL;QACEY,OAAO,CAACjB,oBAACI,cAAD,EAAe,IAAf,CAAD,CAAP;QACA;;MACF;QACEa,OAAO,CAACL,gBAAD,CAAP;IAXJ;EAaD,CAdD,EAcG,CAACA,gBAAD,CAdH;EAgBA,IAAMS,MAAM,GACVrB;IAAKU,SAAS,EAAET,MAAM,CAACqB;EAAvB,GACEtB;IAAKU,SAAS,EAAET,MAAM,CAACsB;EAAvB,GAA8DP,IAA9D,CADF,EAEEhB;IAAKU,SAAS,EAAET,MAAM,CAACuB;EAAvB,GAAkEb,gBAAlE,CAFF,CADF;;EAOA,IAAMc,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAK;IACnCN,SAAS,CAAC,CAACD,MAAF,CAAT;EACD,CAFD;;EAIA,OACElB;IAAKU,SAAS,EAAER,GAAG,CAACD,MAAM,CAACyB,wBAAR,EAAkChB,SAAlC;EAAnB,GAAqEG,KAArE,GACEb,oBAACG,iBAAD,EAAkB;IAACwB,aAAa,EAAEN,MAAhB;IAAwBO,UAAU,EAAEV,MAApC;IAA4CW,QAAQ,EAAEJ;EAAtD,CAAlB,EACEzB;IAAIU,SAAS,EAAC;EAAd,GAAwDD,QAAxD,CADF,CADF,CADF;AAOD,CA5CM;AA8CPF,wBAAwB,CAACuB,WAAzB,GAAuC,0BAAvC","names":["React","styles","css","ExpandableSection","InProgressIcon","CheckCircleIcon","TimesCircleIcon","MultipleFileUploadStatus","_a","children","className","statusToggleText","statusToggleIcon","props","__rest","useState","icon","setIcon","isOpen","setIsOpen","useEffect","toggle","multipleFileUploadStatusProgress","multipleFileUploadStatusProgressIcon","multipleFileUploadStatusItemProgressText","toggleExpandableSection","multipleFileUploadStatus","toggleContent","isExpanded","onToggle","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/MultipleFileUpload/MultipleFileUploadStatus.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/MultipleFileUpload/multiple-file-upload';\nimport { css } from '@patternfly/react-styles';\nimport { ExpandableSection } from '../ExpandableSection';\nimport InProgressIcon from '@patternfly/react-icons/dist/esm/icons/in-progress-icon';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/esm/icons/times-circle-icon';\n\nexport interface MultipleFileUploadStatusProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content rendered inside multi file upload status list */\n  children?: React.ReactNode;\n  /** Class to add to outer div */\n  className?: string;\n  /** String to show in the status toggle */\n  statusToggleText?: string;\n  /** Icon to show in the status toggle */\n  statusToggleIcon?: 'danger' | 'success' | 'inProgress' | React.ReactNode;\n}\n\nexport const MultipleFileUploadStatus: React.FunctionComponent<MultipleFileUploadStatusProps> = ({\n  children,\n  className,\n  statusToggleText,\n  statusToggleIcon,\n  ...props\n}: MultipleFileUploadStatusProps) => {\n  const [icon, setIcon] = React.useState<React.ReactNode>();\n  const [isOpen, setIsOpen] = React.useState(true);\n\n  React.useEffect(() => {\n    switch (statusToggleIcon) {\n      case 'danger':\n        setIcon(<TimesCircleIcon />);\n        break;\n      case 'success':\n        setIcon(<CheckCircleIcon />);\n        break;\n      case 'inProgress':\n        setIcon(<InProgressIcon />);\n        break;\n      default:\n        setIcon(statusToggleIcon);\n    }\n  }, [statusToggleIcon]);\n\n  const toggle = (\n    <div className={styles.multipleFileUploadStatusProgress}>\n      <div className={styles.multipleFileUploadStatusProgressIcon}>{icon}</div>\n      <div className={styles.multipleFileUploadStatusItemProgressText}>{statusToggleText}</div>\n    </div>\n  );\n\n  const toggleExpandableSection = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <div className={css(styles.multipleFileUploadStatus, className)} {...props}>\n      <ExpandableSection toggleContent={toggle} isExpanded={isOpen} onToggle={toggleExpandableSection}>\n        <ul className=\"pf-c-multiple-file-upload__status-list\">{children}</ul>\n      </ExpandableSection>\n    </div>\n  );\n};\n\nMultipleFileUploadStatus.displayName = 'MultipleFileUploadStatus';\n"]},"metadata":{},"sourceType":"module"}