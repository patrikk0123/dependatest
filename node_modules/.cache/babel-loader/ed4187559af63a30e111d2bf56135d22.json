{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/layouts/Stack/stack';\nimport { css } from '@patternfly/react-styles';\nexport const StackItem = _a => {\n  var {\n    isFilled = false,\n    className = '',\n    children = null\n  } = _a,\n      props = __rest(_a, [\"isFilled\", \"className\", \"children\"]);\n\n  return React.createElement(\"div\", Object.assign({}, props, {\n    className: css(styles.stackItem, isFilled && styles.modifiers.fill, className)\n  }), children);\n};\nStackItem.displayName = 'StackItem';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,kDAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AAWA,OAAO,MAAMC,SAAS,GAA6CC,EAAD,IAK7C;MAL8C;IACjEC,QAAQ,GAAG,KADsD;IAEjEC,SAAS,GAAG,EAFqD;IAGjEC,QAAQ,GAAG;EAHsD,IAGlDH;MACZI,KAAK,cAJyD,qCAIzD;;EACY,OACpBR,6CAASQ,KAAT,EAAc;IAAEF,SAAS,EAAEJ,GAAG,CAACD,MAAM,CAACQ,SAAR,EAAmBJ,QAAQ,IAAIJ,MAAM,CAACS,SAAP,CAAiBC,IAAhD,EAAsDL,SAAtD;EAAhB,CAAd,GACGC,QADH,CADoB;AAIrB,CATM;AAUPJ,SAAS,CAACS,WAAV,GAAwB,WAAxB","names":["React","styles","css","StackItem","_a","isFilled","className","children","props","stackItem","modifiers","fill","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/layouts/Stack/StackItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/layouts/Stack/stack';\nimport { css } from '@patternfly/react-styles';\n\nexport interface StackItemProps extends React.HTMLProps<HTMLDivElement> {\n  /** Flag indicating if this Stack Layout item should fill the available vertical space. */\n  isFilled?: boolean;\n  /** additional classes added to the Stack Layout Item */\n  children?: React.ReactNode;\n  /** content rendered inside the Stack Layout Item */\n  className?: string;\n}\n\nexport const StackItem: React.FunctionComponent<StackItemProps> = ({\n  isFilled = false,\n  className = '',\n  children = null,\n  ...props\n}: StackItemProps) => (\n  <div {...props} className={css(styles.stackItem, isFilled && styles.modifiers.fill, className)}>\n    {children}\n  </div>\n);\nStackItem.displayName = 'StackItem';\n"]},"metadata":{},"sourceType":"module"}