{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ProgressStepper/progress-stepper';\nimport { css } from '@patternfly/react-styles';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ResourcesFullIcon from '@patternfly/react-icons/dist/esm/icons/resources-full-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nvar variantIcons = {\n  default: undefined,\n  pending: undefined,\n  success: React.createElement(CheckCircleIcon, null),\n  info: React.createElement(ResourcesFullIcon, null),\n  warning: React.createElement(ExclamationTriangleIcon, null),\n  danger: React.createElement(ExclamationCircleIcon, null)\n};\nvar variantStyle = {\n  default: '',\n  info: styles.modifiers.info,\n  success: styles.modifiers.success,\n  pending: styles.modifiers.pending,\n  warning: styles.modifiers.warning,\n  danger: styles.modifiers.danger\n};\nexport var ProgressStep = function ProgressStep(_a) {\n  var children = _a.children,\n      className = _a.className,\n      variant = _a.variant,\n      isCurrent = _a.isCurrent,\n      description = _a.description,\n      icon = _a.icon,\n      titleId = _a.titleId,\n      ariaLabel = _a['aria-label'],\n      popoverRender = _a.popoverRender,\n      props = __rest(_a, [\"children\", \"className\", \"variant\", \"isCurrent\", \"description\", \"icon\", \"titleId\", 'aria-label', \"popoverRender\"]);\n\n  var _icon = icon !== undefined ? icon : variantIcons[variant];\n\n  var Component = popoverRender !== undefined ? 'span' : 'div';\n  var stepRef = React.useRef();\n\n  if (props.id === undefined || titleId === undefined) {\n    /* eslint-disable no-console */\n    console.warn('ProgressStep: The titleId and id properties are required to make this component accessible, and one or both of these properties are missing.');\n  }\n\n  return React.createElement(\"li\", Object.assign({\n    className: css(styles.progressStepperStep, variantStyle[variant], isCurrent && styles.modifiers.current, className),\n    \"aria-label\": ariaLabel\n  }, isCurrent && {\n    'aria-current': 'step'\n  }, props), React.createElement(\"div\", {\n    className: css(styles.progressStepperStepConnector)\n  }, React.createElement(\"span\", {\n    className: css(styles.progressStepperStepIcon)\n  }, _icon && _icon)), React.createElement(\"div\", {\n    className: css(styles.progressStepperStepMain)\n  }, React.createElement(Component, Object.assign({\n    className: css(styles.progressStepperStepTitle, popoverRender && styles.modifiers.helpText),\n    id: titleId,\n    ref: stepRef\n  }, popoverRender && {\n    tabIndex: 0,\n    role: 'button',\n    type: 'button'\n  }, props.id !== undefined && titleId !== undefined && {\n    'aria-labelledby': \"\".concat(props.id, \" \").concat(titleId)\n  }), children, popoverRender && popoverRender(stepRef)), description && React.createElement(\"div\", {\n    className: css(styles.progressStepperStepDescription)\n  }, description)));\n};\nProgressStep.displayName = 'ProgressStep';","map":{"version":3,"mappings":"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","names":["React","styles","css","CheckCircleIcon","ResourcesFullIcon","ExclamationTriangleIcon","ExclamationCircleIcon","variantIcons","default","undefined","pending","success","info","warning","danger","variantStyle","modifiers","ProgressStep","_a","children","className","variant","isCurrent","description","icon","titleId","ariaLabel","popoverRender","props","__rest","_icon","Component","stepRef","useRef","id","console","warn","progressStepperStep","current","progressStepperStepConnector","progressStepperStepIcon","progressStepperStepMain","Object","progressStepperStepTitle","helpText","ref","tabIndex","role","type","progressStepperStepDescription","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/ProgressStepper/ProgressStep.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ProgressStepper/progress-stepper';\nimport { css } from '@patternfly/react-styles';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ResourcesFullIcon from '@patternfly/react-icons/dist/esm/icons/resources-full-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\n\nexport interface ProgressStepProps\n  extends React.DetailedHTMLProps<React.LiHTMLAttributes<HTMLLIElement>, HTMLLIElement> {\n  /** Content rendered inside the progress step. */\n  children?: React.ReactNode;\n  /** Additional classes applied to the progress step container. */\n  className?: string;\n  /** Variant of the progress step. Each variant has a default icon. */\n  variant?: 'default' | 'success' | 'info' | 'pending' | 'warning' | 'danger';\n  /** Flag indicating the progress step is the current step. */\n  isCurrent?: boolean;\n  /** Custom icon of a progress step. Will override default icons provided by the variant. */\n  icon?: React.ReactNode;\n  /** Description text of a progress step. */\n  description?: string;\n  /** ID of the title of the progress step. */\n  titleId?: string;\n  /** Accessible label for the progress step. Should communicate all information being communicated by the progress\n   * step's icon, including the variant and the completed status. */\n  'aria-label'?: string;\n  /** Forwards the step ref to rendered function.  Use this prop to add a popover to the step.*/\n  popoverRender?: (stepRef: React.RefObject<any>) => React.ReactNode;\n}\n\nconst variantIcons = {\n  default: undefined as any,\n  pending: undefined as any,\n  success: <CheckCircleIcon />,\n  info: <ResourcesFullIcon />,\n  warning: <ExclamationTriangleIcon />,\n  danger: <ExclamationCircleIcon />\n};\n\nconst variantStyle = {\n  default: '',\n  info: styles.modifiers.info,\n  success: styles.modifiers.success,\n  pending: styles.modifiers.pending,\n  warning: styles.modifiers.warning,\n  danger: styles.modifiers.danger\n};\n\nexport const ProgressStep: React.FunctionComponent<ProgressStepProps> = ({\n  children,\n  className,\n  variant,\n  isCurrent,\n  description,\n  icon,\n  titleId,\n  'aria-label': ariaLabel,\n  popoverRender,\n  ...props\n}: ProgressStepProps) => {\n  const _icon = icon !== undefined ? icon : variantIcons[variant];\n  const Component = popoverRender !== undefined ? 'span' : 'div';\n  const stepRef = React.useRef();\n\n  if (props.id === undefined || titleId === undefined) {\n    /* eslint-disable no-console */\n    console.warn(\n      'ProgressStep: The titleId and id properties are required to make this component accessible, and one or both of these properties are missing.'\n    );\n  }\n\n  return (\n    <li\n      className={css(\n        styles.progressStepperStep,\n        variantStyle[variant],\n        isCurrent && styles.modifiers.current,\n        className\n      )}\n      aria-label={ariaLabel}\n      {...(isCurrent && { 'aria-current': 'step' })}\n      {...props}\n    >\n      <div className={css(styles.progressStepperStepConnector)}>\n        <span className={css(styles.progressStepperStepIcon)}>{_icon && _icon}</span>\n      </div>\n      <div className={css(styles.progressStepperStepMain)}>\n        <Component\n          className={css(styles.progressStepperStepTitle, popoverRender && styles.modifiers.helpText)}\n          id={titleId}\n          ref={stepRef}\n          {...(popoverRender && { tabIndex: 0, role: 'button', type: 'button' })}\n          {...(props.id !== undefined && titleId !== undefined && { 'aria-labelledby': `${props.id} ${titleId}` })}\n        >\n          {children}\n          {popoverRender && popoverRender(stepRef)}\n        </Component>\n        {description && <div className={css(styles.progressStepperStepDescription)}>{description}</div>}\n      </div>\n    </li>\n  );\n};\n\nProgressStep.displayName = 'ProgressStep';\n"]},"metadata":{},"sourceType":"module"}