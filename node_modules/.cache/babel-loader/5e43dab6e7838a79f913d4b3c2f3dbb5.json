{"ast":null,"code":"/*!\n * https://github.com/Starcounter-Jack/JSON-Patch\n * (c) 2017-2021 Joachim Wester\n * MIT license\n */\nimport { _deepClone, _objectKeys, escapePathComponent, hasOwnProperty } from './helpers.mjs';\nimport { applyPatch } from './core.mjs';\nvar beforeDict = new WeakMap();\n\nvar Mirror =\n/** @class */\nfunction () {\n  function Mirror(obj) {\n    this.observers = new Map();\n    this.obj = obj;\n  }\n\n  return Mirror;\n}();\n\nvar ObserverInfo =\n/** @class */\nfunction () {\n  function ObserverInfo(callback, observer) {\n    this.callback = callback;\n    this.observer = observer;\n  }\n\n  return ObserverInfo;\n}();\n\nfunction getMirror(obj) {\n  return beforeDict.get(obj);\n}\n\nfunction getObserverFromMirror(mirror, callback) {\n  return mirror.observers.get(callback);\n}\n\nfunction removeObserverFromMirror(mirror, observer) {\n  mirror.observers.delete(observer.callback);\n}\n/**\n * Detach an observer from an object\n */\n\n\nexport function unobserve(root, observer) {\n  observer.unobserve();\n}\n/**\n * Observes changes made to an object, which can then be retrieved using generate\n */\n\nexport function observe(obj, callback) {\n  var patches = [];\n  var observer;\n  var mirror = getMirror(obj);\n\n  if (!mirror) {\n    mirror = new Mirror(obj);\n    beforeDict.set(obj, mirror);\n  } else {\n    var observerInfo = getObserverFromMirror(mirror, callback);\n    observer = observerInfo && observerInfo.observer;\n  }\n\n  if (observer) {\n    return observer;\n  }\n\n  observer = {};\n  mirror.value = _deepClone(obj);\n\n  if (callback) {\n    observer.callback = callback;\n    observer.next = null;\n\n    var dirtyCheck = function () {\n      generate(observer);\n    };\n\n    var fastCheck = function () {\n      clearTimeout(observer.next);\n      observer.next = setTimeout(dirtyCheck);\n    };\n\n    if (typeof window !== 'undefined') {\n      //not Node\n      window.addEventListener('mouseup', fastCheck);\n      window.addEventListener('keyup', fastCheck);\n      window.addEventListener('mousedown', fastCheck);\n      window.addEventListener('keydown', fastCheck);\n      window.addEventListener('change', fastCheck);\n    }\n  }\n\n  observer.patches = patches;\n  observer.object = obj;\n\n  observer.unobserve = function () {\n    generate(observer);\n    clearTimeout(observer.next);\n    removeObserverFromMirror(mirror, observer);\n\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('mouseup', fastCheck);\n      window.removeEventListener('keyup', fastCheck);\n      window.removeEventListener('mousedown', fastCheck);\n      window.removeEventListener('keydown', fastCheck);\n      window.removeEventListener('change', fastCheck);\n    }\n  };\n\n  mirror.observers.set(callback, new ObserverInfo(callback, observer));\n  return observer;\n}\n/**\n * Generate an array of patches from an observer\n */\n\nexport function generate(observer, invertible) {\n  if (invertible === void 0) {\n    invertible = false;\n  }\n\n  var mirror = beforeDict.get(observer.object);\n\n  _generate(mirror.value, observer.object, observer.patches, \"\", invertible);\n\n  if (observer.patches.length) {\n    applyPatch(mirror.value, observer.patches);\n  }\n\n  var temp = observer.patches;\n\n  if (temp.length > 0) {\n    observer.patches = [];\n\n    if (observer.callback) {\n      observer.callback(temp);\n    }\n  }\n\n  return temp;\n} // Dirty check if obj is different from mirror, generate patches and update mirror\n\nfunction _generate(mirror, obj, patches, path, invertible) {\n  if (obj === mirror) {\n    return;\n  }\n\n  if (typeof obj.toJSON === \"function\") {\n    obj = obj.toJSON();\n  }\n\n  var newKeys = _objectKeys(obj);\n\n  var oldKeys = _objectKeys(mirror);\n\n  var changed = false;\n  var deleted = false; //if ever \"move\" operation is implemented here, make sure this test runs OK: \"should not generate the same patch twice (move)\"\n\n  for (var t = oldKeys.length - 1; t >= 0; t--) {\n    var key = oldKeys[t];\n    var oldVal = mirror[key];\n\n    if (hasOwnProperty(obj, key) && !(obj[key] === undefined && oldVal !== undefined && Array.isArray(obj) === false)) {\n      var newVal = obj[key];\n\n      if (typeof oldVal == \"object\" && oldVal != null && typeof newVal == \"object\" && newVal != null && Array.isArray(oldVal) === Array.isArray(newVal)) {\n        _generate(oldVal, newVal, patches, path + \"/\" + escapePathComponent(key), invertible);\n      } else {\n        if (oldVal !== newVal) {\n          changed = true;\n\n          if (invertible) {\n            patches.push({\n              op: \"test\",\n              path: path + \"/\" + escapePathComponent(key),\n              value: _deepClone(oldVal)\n            });\n          }\n\n          patches.push({\n            op: \"replace\",\n            path: path + \"/\" + escapePathComponent(key),\n            value: _deepClone(newVal)\n          });\n        }\n      }\n    } else if (Array.isArray(mirror) === Array.isArray(obj)) {\n      if (invertible) {\n        patches.push({\n          op: \"test\",\n          path: path + \"/\" + escapePathComponent(key),\n          value: _deepClone(oldVal)\n        });\n      }\n\n      patches.push({\n        op: \"remove\",\n        path: path + \"/\" + escapePathComponent(key)\n      });\n      deleted = true; // property has been deleted\n    } else {\n      if (invertible) {\n        patches.push({\n          op: \"test\",\n          path: path,\n          value: mirror\n        });\n      }\n\n      patches.push({\n        op: \"replace\",\n        path: path,\n        value: obj\n      });\n      changed = true;\n    }\n  }\n\n  if (!deleted && newKeys.length == oldKeys.length) {\n    return;\n  }\n\n  for (var t = 0; t < newKeys.length; t++) {\n    var key = newKeys[t];\n\n    if (!hasOwnProperty(mirror, key) && obj[key] !== undefined) {\n      patches.push({\n        op: \"add\",\n        path: path + \"/\" + escapePathComponent(key),\n        value: _deepClone(obj[key])\n      });\n    }\n  }\n}\n/**\n * Create an array of patches from the differences in two objects\n */\n\n\nexport function compare(tree1, tree2, invertible) {\n  if (invertible === void 0) {\n    invertible = false;\n  }\n\n  var patches = [];\n\n  _generate(tree1, tree2, patches, '', invertible);\n\n  return patches;\n}","map":{"version":3,"names":["_deepClone","_objectKeys","escapePathComponent","hasOwnProperty","applyPatch","beforeDict","WeakMap","Mirror","obj","observers","Map","ObserverInfo","callback","observer","getMirror","get","getObserverFromMirror","mirror","removeObserverFromMirror","delete","unobserve","root","observe","patches","set","observerInfo","value","next","dirtyCheck","generate","fastCheck","clearTimeout","setTimeout","window","addEventListener","object","removeEventListener","invertible","_generate","length","temp","path","toJSON","newKeys","oldKeys","changed","deleted","t","key","oldVal","undefined","Array","isArray","newVal","push","op","compare","tree1","tree2"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/fast-json-patch/module/duplex.mjs"],"sourcesContent":["/*!\n * https://github.com/Starcounter-Jack/JSON-Patch\n * (c) 2017-2021 Joachim Wester\n * MIT license\n */\nimport { _deepClone, _objectKeys, escapePathComponent, hasOwnProperty } from './helpers.mjs';\nimport { applyPatch } from './core.mjs';\nvar beforeDict = new WeakMap();\nvar Mirror = /** @class */ (function () {\n    function Mirror(obj) {\n        this.observers = new Map();\n        this.obj = obj;\n    }\n    return Mirror;\n}());\nvar ObserverInfo = /** @class */ (function () {\n    function ObserverInfo(callback, observer) {\n        this.callback = callback;\n        this.observer = observer;\n    }\n    return ObserverInfo;\n}());\nfunction getMirror(obj) {\n    return beforeDict.get(obj);\n}\nfunction getObserverFromMirror(mirror, callback) {\n    return mirror.observers.get(callback);\n}\nfunction removeObserverFromMirror(mirror, observer) {\n    mirror.observers.delete(observer.callback);\n}\n/**\n * Detach an observer from an object\n */\nexport function unobserve(root, observer) {\n    observer.unobserve();\n}\n/**\n * Observes changes made to an object, which can then be retrieved using generate\n */\nexport function observe(obj, callback) {\n    var patches = [];\n    var observer;\n    var mirror = getMirror(obj);\n    if (!mirror) {\n        mirror = new Mirror(obj);\n        beforeDict.set(obj, mirror);\n    }\n    else {\n        var observerInfo = getObserverFromMirror(mirror, callback);\n        observer = observerInfo && observerInfo.observer;\n    }\n    if (observer) {\n        return observer;\n    }\n    observer = {};\n    mirror.value = _deepClone(obj);\n    if (callback) {\n        observer.callback = callback;\n        observer.next = null;\n        var dirtyCheck = function () {\n            generate(observer);\n        };\n        var fastCheck = function () {\n            clearTimeout(observer.next);\n            observer.next = setTimeout(dirtyCheck);\n        };\n        if (typeof window !== 'undefined') { //not Node\n            window.addEventListener('mouseup', fastCheck);\n            window.addEventListener('keyup', fastCheck);\n            window.addEventListener('mousedown', fastCheck);\n            window.addEventListener('keydown', fastCheck);\n            window.addEventListener('change', fastCheck);\n        }\n    }\n    observer.patches = patches;\n    observer.object = obj;\n    observer.unobserve = function () {\n        generate(observer);\n        clearTimeout(observer.next);\n        removeObserverFromMirror(mirror, observer);\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('mouseup', fastCheck);\n            window.removeEventListener('keyup', fastCheck);\n            window.removeEventListener('mousedown', fastCheck);\n            window.removeEventListener('keydown', fastCheck);\n            window.removeEventListener('change', fastCheck);\n        }\n    };\n    mirror.observers.set(callback, new ObserverInfo(callback, observer));\n    return observer;\n}\n/**\n * Generate an array of patches from an observer\n */\nexport function generate(observer, invertible) {\n    if (invertible === void 0) { invertible = false; }\n    var mirror = beforeDict.get(observer.object);\n    _generate(mirror.value, observer.object, observer.patches, \"\", invertible);\n    if (observer.patches.length) {\n        applyPatch(mirror.value, observer.patches);\n    }\n    var temp = observer.patches;\n    if (temp.length > 0) {\n        observer.patches = [];\n        if (observer.callback) {\n            observer.callback(temp);\n        }\n    }\n    return temp;\n}\n// Dirty check if obj is different from mirror, generate patches and update mirror\nfunction _generate(mirror, obj, patches, path, invertible) {\n    if (obj === mirror) {\n        return;\n    }\n    if (typeof obj.toJSON === \"function\") {\n        obj = obj.toJSON();\n    }\n    var newKeys = _objectKeys(obj);\n    var oldKeys = _objectKeys(mirror);\n    var changed = false;\n    var deleted = false;\n    //if ever \"move\" operation is implemented here, make sure this test runs OK: \"should not generate the same patch twice (move)\"\n    for (var t = oldKeys.length - 1; t >= 0; t--) {\n        var key = oldKeys[t];\n        var oldVal = mirror[key];\n        if (hasOwnProperty(obj, key) && !(obj[key] === undefined && oldVal !== undefined && Array.isArray(obj) === false)) {\n            var newVal = obj[key];\n            if (typeof oldVal == \"object\" && oldVal != null && typeof newVal == \"object\" && newVal != null && Array.isArray(oldVal) === Array.isArray(newVal)) {\n                _generate(oldVal, newVal, patches, path + \"/\" + escapePathComponent(key), invertible);\n            }\n            else {\n                if (oldVal !== newVal) {\n                    changed = true;\n                    if (invertible) {\n                        patches.push({ op: \"test\", path: path + \"/\" + escapePathComponent(key), value: _deepClone(oldVal) });\n                    }\n                    patches.push({ op: \"replace\", path: path + \"/\" + escapePathComponent(key), value: _deepClone(newVal) });\n                }\n            }\n        }\n        else if (Array.isArray(mirror) === Array.isArray(obj)) {\n            if (invertible) {\n                patches.push({ op: \"test\", path: path + \"/\" + escapePathComponent(key), value: _deepClone(oldVal) });\n            }\n            patches.push({ op: \"remove\", path: path + \"/\" + escapePathComponent(key) });\n            deleted = true; // property has been deleted\n        }\n        else {\n            if (invertible) {\n                patches.push({ op: \"test\", path: path, value: mirror });\n            }\n            patches.push({ op: \"replace\", path: path, value: obj });\n            changed = true;\n        }\n    }\n    if (!deleted && newKeys.length == oldKeys.length) {\n        return;\n    }\n    for (var t = 0; t < newKeys.length; t++) {\n        var key = newKeys[t];\n        if (!hasOwnProperty(mirror, key) && obj[key] !== undefined) {\n            patches.push({ op: \"add\", path: path + \"/\" + escapePathComponent(key), value: _deepClone(obj[key]) });\n        }\n    }\n}\n/**\n * Create an array of patches from the differences in two objects\n */\nexport function compare(tree1, tree2, invertible) {\n    if (invertible === void 0) { invertible = false; }\n    var patches = [];\n    _generate(tree1, tree2, patches, '', invertible);\n    return patches;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}