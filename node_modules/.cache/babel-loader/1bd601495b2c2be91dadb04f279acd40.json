{"ast":null,"code":"import { compare } from 'fast-json-patch';\nimport { merge } from 'lodash';\nexport const createPatchData = data => {\n  let a = Object.fromEntries(Object.entries(data) // .filter(([k, v]) => v.value !== '')\n  .map(_ref => {\n    let [k, v] = _ref;\n    return [k, v.value ? v.value : null];\n  }));\n  console.log(a);\n  return a;\n};\n/**\n * Compares changes between original and modified data and creates safe JSON patch.\n *\n * @param original - original data\n * @param modified - modified data\n * @returns Array of changes in JSON patch format\n */\n\nexport const createSafePatch = (original, modified) => {\n  return compare(original, merge({}, original, modified));\n};\n/**\n * Compares changes between original and modified data and creates destructive JSON patch.\n *\n * @param original - original data\n * @param modified - modified data\n * @returns Array of changes in JSON patch format\n */\n\nexport const createDestructivePatch = (original, modified) => {\n  return compare(original, modified);\n};","map":{"version":3,"names":["compare","merge","createPatchData","data","a","Object","fromEntries","entries","map","k","v","value","console","log","createSafePatch","original","modified","createDestructivePatch"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/utils/patchHelper.tsx"],"sourcesContent":["import { Operation, compare } from 'fast-json-patch';\nimport { merge } from 'lodash';\n\nimport { IFieldValues, IFields } from '../containers/useForm';\n\nexport const createPatchData = (data: IFields): any => {\n  let a = Object.fromEntries(\n    Object.entries(data)\n      // .filter(([k, v]) => v.value !== '')\n      .map(([k, v]) => {\n        return [k, v.value ? v.value : null];\n      })\n  );\n\n  console.log(a);\n  return a;\n};\n\n/**\n * Compares changes between original and modified data and creates safe JSON patch.\n *\n * @param original - original data\n * @param modified - modified data\n * @returns Array of changes in JSON patch format\n */\nexport const createSafePatch = (original: Object | any[], modified: Object | any[]): Operation[] => {\n  return compare(original, merge({}, original, modified));\n};\n\n/**\n * Compares changes between original and modified data and creates destructive JSON patch.\n *\n * @param original - original data\n * @param modified - modified data\n * @returns Array of changes in JSON patch format\n */\nexport const createDestructivePatch = (original: Object | any[], modified: Object | any[]): Operation[] => {\n  return compare(original, modified);\n};\n"],"mappings":"AAAA,SAAoBA,OAApB,QAAmC,iBAAnC;AACA,SAASC,KAAT,QAAsB,QAAtB;AAIA,OAAO,MAAMC,eAAe,GAAIC,IAAD,IAAwB;EACrD,IAAIC,CAAC,GAAGC,MAAM,CAACC,WAAP,CACND,MAAM,CAACE,OAAP,CAAeJ,IAAf,EACE;EADF,CAEGK,GAFH,CAEO,QAAY;IAAA,IAAX,CAACC,CAAD,EAAIC,CAAJ,CAAW;IACf,OAAO,CAACD,CAAD,EAAIC,CAAC,CAACC,KAAF,GAAUD,CAAC,CAACC,KAAZ,GAAoB,IAAxB,CAAP;EACD,CAJH,CADM,CAAR;EAQAC,OAAO,CAACC,GAAR,CAAYT,CAAZ;EACA,OAAOA,CAAP;AACD,CAXM;AAaP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMU,eAAe,GAAG,CAACC,QAAD,EAA2BC,QAA3B,KAAqE;EAClG,OAAOhB,OAAO,CAACe,QAAD,EAAWd,KAAK,CAAC,EAAD,EAAKc,QAAL,EAAeC,QAAf,CAAhB,CAAd;AACD,CAFM;AAIP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,sBAAsB,GAAG,CAACF,QAAD,EAA2BC,QAA3B,KAAqE;EACzG,OAAOhB,OAAO,CAACe,QAAD,EAAWC,QAAX,CAAd;AACD,CAFM"},"metadata":{},"sourceType":"module"}