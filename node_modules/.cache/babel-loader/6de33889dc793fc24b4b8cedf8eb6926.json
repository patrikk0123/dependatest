{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Slider/slider';\nimport { css } from '@patternfly/react-styles';\nexport var SliderStep = function SliderStep(_a) {\n  var className = _a.className,\n      label = _a.label,\n      value = _a.value,\n      _a$isTickHidden = _a.isTickHidden,\n      isTickHidden = _a$isTickHidden === void 0 ? false : _a$isTickHidden,\n      _a$isLabelHidden = _a.isLabelHidden,\n      isLabelHidden = _a$isLabelHidden === void 0 ? false : _a$isLabelHidden,\n      _a$isActive = _a.isActive,\n      isActive = _a$isActive === void 0 ? false : _a$isActive,\n      props = __rest(_a, [\"className\", \"label\", \"value\", \"isTickHidden\", \"isLabelHidden\", \"isActive\"]);\n\n  var style = {\n    '--pf-c-slider__step--Left': \"\".concat(value, \"%\")\n  };\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.sliderStep, isActive && styles.modifiers.active, className),\n    style: style\n  }, props), !isTickHidden && React.createElement(\"div\", {\n    className: css(styles.sliderStepTick)\n  }), !isLabelHidden && label && React.createElement(\"div\", {\n    className: css(styles.sliderStepLabel)\n  }, label));\n};\nSliderStep.displayName = 'SliderStep';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,uDAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AAiBA,OAAO,IAAMC,UAAU,GAA6C,SAAvDA,UAAuD,CAACC,EAAD,EAQ9C;MAPpBC,YAKgBD,GALhBC;MACAC,QAIgBF,GAJhBE;MACAC,QAGgBH,GAHhBG;wBAGgBH,GAFhBI;MAAAA,4CAAe;yBAECJ,GADhBK;MAAAA,8CAAgB;oBACAL,GAAhBM;MAAAA,oCAAW;MACRC,QAAKC,WAP2D,4EAO3D;;EAER,IAAMC,KAAK,GAAG;IAAE,uCAAgCN,KAAhC;EAAF,CAAd;EACA,OACEP;IAAKK,SAAS,EAAEH,GAAG,CAACD,MAAM,CAACa,UAAR,EAAoBJ,QAAQ,IAAIT,MAAM,CAACc,SAAP,CAAiBC,MAAjD,EAAyDX,SAAzD,CAAnB;IAAwFQ,KAAK,EAAEA;EAA/F,GAA0GF,KAA1G,GACG,CAACH,YAAD,IAAiBR;IAAKK,SAAS,EAAEH,GAAG,CAACD,MAAM,CAACgB,cAAR;EAAnB,EADpB,EAEG,CAACR,aAAD,IAAkBH,KAAlB,IAA2BN;IAAKK,SAAS,EAAEH,GAAG,CAACD,MAAM,CAACiB,eAAR;EAAnB,GAA8CZ,KAA9C,CAF9B,CADF;AAMD,CAhBM;AAiBPH,UAAU,CAACgB,WAAX,GAAyB,YAAzB","names":["React","styles","css","SliderStep","_a","className","label","value","isTickHidden","isLabelHidden","isActive","props","__rest","style","sliderStep","modifiers","active","sliderStepTick","sliderStepLabel","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Slider/SliderStep.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Slider/slider';\nimport { css } from '@patternfly/react-styles';\n\nexport interface SliderStepProps extends Omit<React.HTMLProps<HTMLDivElement>, 'label'> {\n  /** Additional classes added to the slider steps. */\n  className?: string;\n  /** Step value **/\n  value?: number;\n  /** Step label **/\n  label?: string;\n  /** Flag indicating that the tick should be hidden */\n  isTickHidden?: boolean;\n  /** Flag indicating that the label should be hidden */\n  isLabelHidden?: boolean;\n  /** Flag indicating the step is active */\n  isActive?: boolean;\n}\n\nexport const SliderStep: React.FunctionComponent<SliderStepProps> = ({\n  className,\n  label,\n  value,\n  isTickHidden = false,\n  isLabelHidden = false,\n  isActive = false,\n  ...props\n}: SliderStepProps) => {\n  const style = { '--pf-c-slider__step--Left': `${value}%` } as React.CSSProperties;\n  return (\n    <div className={css(styles.sliderStep, isActive && styles.modifiers.active, className)} style={style} {...props}>\n      {!isTickHidden && <div className={css(styles.sliderStepTick)} />}\n      {!isLabelHidden && label && <div className={css(styles.sliderStepLabel)}>{label}</div>}\n    </div>\n  );\n};\nSliderStep.displayName = 'SliderStep';\n"]},"metadata":{},"sourceType":"module"}