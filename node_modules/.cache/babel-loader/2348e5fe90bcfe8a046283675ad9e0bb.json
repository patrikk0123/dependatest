{"ast":null,"code":"import _classCallCheck from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Dropdown } from '@patternfly/react-core/dist/esm/components/Dropdown';\nimport { KebabToggle } from '@patternfly/react-core/dist/esm/components/Dropdown/KebabToggle';\nimport { DropdownItem } from '@patternfly/react-core/dist/esm/components/Dropdown/DropdownItem';\nimport { DropdownSeparator } from '@patternfly/react-core/dist/esm/components/Dropdown/DropdownSeparator';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button/Button';\nimport { DropdownDirection, DropdownPosition } from '@patternfly/react-core/dist/esm/components/Dropdown/dropdownConstants';\nexport var ActionsColumn = /*#__PURE__*/function (_React$Component) {\n  _inherits(ActionsColumn, _React$Component);\n\n  var _super = _createSuper(ActionsColumn);\n\n  function ActionsColumn(props) {\n    var _this;\n\n    _classCallCheck(this, ActionsColumn);\n\n    _this = _super.call(this, props);\n    _this.toggleRef = React.createRef();\n\n    _this.onToggle = function (isOpen) {\n      _this.setState({\n        isOpen: isOpen\n      });\n    };\n\n    _this.onClick = function (event, onClick) {\n      var _this$props = _this.props,\n          rowData = _this$props.rowData,\n          extraData = _this$props.extraData; // Only prevent default if onClick is provided.  This allows href support.\n\n      if (onClick) {\n        event.preventDefault(); // tslint:disable-next-line:no-unused-expression\n\n        onClick(event, extraData && extraData.rowIndex, rowData, extraData);\n      }\n    };\n\n    _this.state = {\n      isOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(ActionsColumn, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var isOpen = this.state.isOpen;\n      var _this$props2 = this.props,\n          items = _this$props2.items,\n          children = _this$props2.children,\n          dropdownPosition = _this$props2.dropdownPosition,\n          dropdownDirection = _this$props2.dropdownDirection,\n          isDisabled = _this$props2.isDisabled,\n          rowData = _this$props2.rowData,\n          actionsToggle = _this$props2.actionsToggle;\n      var actionsToggleClone = actionsToggle ? actionsToggle({\n        onToggle: this.onToggle,\n        isOpen: isOpen,\n        isDisabled: isDisabled\n      }) : React.createElement(KebabToggle, {\n        isDisabled: isDisabled,\n        onToggle: this.onToggle\n      });\n      return React.createElement(React.Fragment, null, items.filter(function (item) {\n        return item.isOutsideDropdown;\n      }) // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      .map(function (_a, key) {\n        var title = _a.title,\n            itemKey = _a.itemKey,\n            _onClick = _a.onClick,\n            isOutsideDropdown = _a.isOutsideDropdown,\n            props = __rest(_a, [\"title\", \"itemKey\", \"onClick\", \"isOutsideDropdown\"]);\n\n        return typeof title === 'string' ? React.createElement(Button, Object.assign({\n          onClick: function onClick(event) {\n            return _this2.onClick(event, _onClick);\n          }\n        }, props, {\n          isDisabled: isDisabled,\n          key: itemKey || \"outside_dropdown_\".concat(key),\n          \"data-key\": itemKey || \"outside_dropdown_\".concat(key)\n        }), title) : React.cloneElement(title, Object.assign({\n          onClick: _onClick,\n          isDisabled: isDisabled\n        }, props));\n      }), React.createElement(Dropdown, Object.assign({\n        toggle: actionsToggleClone,\n        position: dropdownPosition,\n        direction: dropdownDirection,\n        isOpen: isOpen,\n        dropdownItems: items.filter(function (item) {\n          return !item.isOutsideDropdown;\n        }).map(function (_a, key) {\n          var title = _a.title,\n              itemKey = _a.itemKey,\n              _onClick2 = _a.onClick,\n              isSeparator = _a.isSeparator,\n              props = __rest(_a, [\"title\", \"itemKey\", \"onClick\", \"isSeparator\"]);\n\n          return isSeparator ? React.createElement(DropdownSeparator, Object.assign({}, props, {\n            key: itemKey || key,\n            \"data-key\": itemKey || key\n          })) : React.createElement(DropdownItem, Object.assign({\n            component: \"button\",\n            onClick: function onClick(event) {\n              _this2.onClick(event, _onClick2);\n\n              _this2.onToggle(!isOpen);\n            }\n          }, props, {\n            key: itemKey || key,\n            \"data-key\": itemKey || key\n          }), title);\n        }),\n        isPlain: true\n      }, rowData && rowData.actionProps)), children);\n    }\n  }]);\n\n  return ActionsColumn;\n}(React.Component);\nActionsColumn.displayName = 'ActionsColumn';\nActionsColumn.defaultProps = {\n  children: null,\n  items: [],\n  dropdownPosition: DropdownPosition.right,\n  dropdownDirection: DropdownDirection.down,\n  rowData: {},\n  extraData: {}\n};","map":{"version":3,"mappings":"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","names":["React","Dropdown","KebabToggle","DropdownItem","DropdownSeparator","Button","DropdownDirection","DropdownPosition","ActionsColumn","props","createRef","isOpen","setState","event","onClick","rowData","extraData","preventDefault","rowIndex","state","items","children","dropdownPosition","dropdownDirection","isDisabled","actionsToggle","actionsToggleClone","onToggle","Fragment","filter","item","isOutsideDropdown","map","_a","key","title","itemKey","__rest","Object","cloneElement","toggle","position","direction","dropdownItems","isSeparator","component","isPlain","actionProps","Component","right","down"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-table/src/components/Table/ActionsColumn.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Dropdown } from '@patternfly/react-core/dist/esm/components/Dropdown';\nimport { KebabToggle } from '@patternfly/react-core/dist/esm/components/Dropdown/KebabToggle';\nimport { DropdownItem } from '@patternfly/react-core/dist/esm/components/Dropdown/DropdownItem';\nimport { DropdownSeparator } from '@patternfly/react-core/dist/esm/components/Dropdown/DropdownSeparator';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button/Button';\n\nimport {\n  DropdownDirection,\n  DropdownPosition\n} from '@patternfly/react-core/dist/esm/components/Dropdown/dropdownConstants';\n\nimport { IAction, IExtraData, IRowData } from './TableTypes';\n\nexport interface CustomActionsToggleProps {\n  onToggle: (isOpen: boolean) => void;\n  isOpen: boolean;\n  isDisabled: boolean;\n}\n\nexport interface ActionsColumnProps {\n  children?: React.ReactNode;\n  items: IAction[];\n  isDisabled?: boolean;\n  dropdownPosition?: DropdownPosition;\n  dropdownDirection?: DropdownDirection;\n  rowData?: IRowData;\n  extraData?: IExtraData;\n  actionsToggle?: (props: CustomActionsToggleProps) => React.ReactNode;\n}\n\nexport interface ActionsColumnState {\n  isOpen: boolean;\n}\n\nexport class ActionsColumn extends React.Component<ActionsColumnProps, ActionsColumnState> {\n  static displayName = 'ActionsColumn';\n  private toggleRef = React.createRef<HTMLButtonElement>();\n  static defaultProps = {\n    children: null as React.ReactNode,\n    items: [] as IAction[],\n    dropdownPosition: DropdownPosition.right,\n    dropdownDirection: DropdownDirection.down,\n    rowData: {} as IRowData,\n    extraData: {} as IExtraData\n  };\n  constructor(props: ActionsColumnProps) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  onToggle = (isOpen: boolean): void => {\n    this.setState({\n      isOpen\n    });\n  };\n\n  onClick = (\n    event: React.MouseEvent<any> | React.KeyboardEvent | MouseEvent,\n    onClick:\n      | ((event: React.MouseEvent, rowIndex: number | undefined, rowData: IRowData, extraData: IExtraData) => void)\n      | undefined\n  ): void => {\n    const { rowData, extraData } = this.props;\n    // Only prevent default if onClick is provided.  This allows href support.\n    if (onClick) {\n      event.preventDefault();\n      // tslint:disable-next-line:no-unused-expression\n      onClick(event as React.MouseEvent, extraData && extraData.rowIndex, rowData, extraData);\n    }\n  };\n\n  render() {\n    const { isOpen } = this.state;\n    const { items, children, dropdownPosition, dropdownDirection, isDisabled, rowData, actionsToggle } = this.props;\n\n    const actionsToggleClone = actionsToggle ? (\n      actionsToggle({ onToggle: this.onToggle, isOpen, isDisabled })\n    ) : (\n      <KebabToggle isDisabled={isDisabled} onToggle={this.onToggle} />\n    );\n\n    return (\n      <React.Fragment>\n        {items\n          .filter(item => item.isOutsideDropdown)\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          .map(({ title, itemKey, onClick, isOutsideDropdown, ...props }, key) =>\n            typeof title === 'string' ? (\n              <Button\n                onClick={event => this.onClick(event, onClick)}\n                {...(props as any)}\n                isDisabled={isDisabled}\n                key={itemKey || `outside_dropdown_${key}`}\n                data-key={itemKey || `outside_dropdown_${key}`}\n              >\n                {title}\n              </Button>\n            ) : (\n              React.cloneElement(title as React.ReactElement, { onClick, isDisabled, ...props })\n            )\n          )}\n        <Dropdown\n          toggle={actionsToggleClone}\n          position={dropdownPosition}\n          direction={dropdownDirection}\n          isOpen={isOpen}\n          dropdownItems={items\n            .filter(item => !item.isOutsideDropdown)\n            .map(({ title, itemKey, onClick, isSeparator, ...props }, key) =>\n              isSeparator ? (\n                <DropdownSeparator {...props} key={itemKey || key} data-key={itemKey || key} />\n              ) : (\n                <DropdownItem\n                  component=\"button\"\n                  onClick={event => {\n                    this.onClick(event, onClick);\n                    this.onToggle(!isOpen);\n                  }}\n                  {...props}\n                  key={itemKey || key}\n                  data-key={itemKey || key}\n                >\n                  {title}\n                </DropdownItem>\n              )\n            )}\n          isPlain\n          {...(rowData && rowData.actionProps)}\n        />\n        {children}\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}