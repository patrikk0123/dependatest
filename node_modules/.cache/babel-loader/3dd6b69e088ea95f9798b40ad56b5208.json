{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\n\nvar TbodyBase = function TbodyBase(_a) {\n  var children = _a.children,\n      className = _a.className,\n      isExpanded = _a.isExpanded,\n      innerRef = _a.innerRef,\n      _a$isEvenStriped = _a.isEvenStriped,\n      isEvenStriped = _a$isEvenStriped === void 0 ? false : _a$isEvenStriped,\n      _a$isOddStriped = _a.isOddStriped,\n      isOddStriped = _a$isOddStriped === void 0 ? false : _a$isOddStriped,\n      props = __rest(_a, [\"children\", \"className\", \"isExpanded\", \"innerRef\", \"isEvenStriped\", \"isOddStriped\"]);\n\n  return React.createElement(\"tbody\", Object.assign({\n    role: \"rowgroup\",\n    className: css(className, isExpanded && styles.modifiers.expanded, isOddStriped && styles.modifiers.striped, isEvenStriped && styles.modifiers.stripedEven),\n    ref: innerRef\n  }, props), children);\n};\n\nexport var Tbody = React.forwardRef(function (props, ref) {\n  return React.createElement(TbodyBase, Object.assign({}, props, {\n    innerRef: ref\n  }));\n});\nTbody.displayName = 'Tbody';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,qDAAnB;;AAiBA,IAAMC,SAAS,GAAwC,SAAjDA,SAAiD,CAACC,EAAD,EAQtC;MAPfC,WAKoBD,GALpBC;MACAC,YAIoBF,GAJpBE;MACAC,aAGoBH,GAHpBG;MACAC,WAEoBJ,GAFpBI;yBAEoBJ,GADpBK;MAAAA,8CAAgB;wBACIL,GAApBM;MAAAA,4CAAe;MACZC,QAAKC,WAP8C,oFAO9C;;EACQ,OAChBZ;IACEa,IAAI,EAAC,UADP;IAEEP,SAAS,EAAEL,GAAG,CACZK,SADY,EAEZC,UAAU,IAAIL,MAAM,CAACY,SAAP,CAAiBC,QAFnB,EAGZL,YAAY,IAAIR,MAAM,CAACY,SAAP,CAAiBE,OAHrB,EAIZP,aAAa,IAAIP,MAAM,CAACY,SAAP,CAAiBG,WAJtB,CAFhB;IAQEC,GAAG,EAAEV;EARP,GASMG,KATN,GAWGN,QAXH,CADgB;AAcjB,CAtBD;;AAwBA,OAAO,IAAMc,KAAK,GAAGnB,KAAK,CAACoB,UAAN,CAAiB,UAACT,KAAD,EAAoBO,GAApB;EAAA,OACpClB,oBAACG,SAAD,EAAUkB,kBAAKV,KAAL,EAAU;IAAEH,QAAQ,EAAEU;EAAZ,CAAV,CAAV,CADoC;AAAA,CAAjB,CAAd;AAGPC,KAAK,CAACG,WAAN,GAAoB,OAApB","names":["React","css","styles","TbodyBase","_a","children","className","isExpanded","innerRef","isEvenStriped","isOddStriped","props","__rest","role","modifiers","expanded","striped","stripedEven","ref","Tbody","forwardRef","Object","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-table/src/components/TableComposable/Tbody.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\n\nexport interface TbodyProps extends React.HTMLProps<HTMLTableSectionElement> {\n  /** Content rendered inside the <tbody> row group */\n  children?: React.ReactNode;\n  /** Additional classes added to the <tbody> element  */\n  className?: string;\n  /** Modifies the body to allow for expandable rows */\n  isExpanded?: boolean;\n  /** Forwarded ref */\n  innerRef?: React.Ref<any>;\n  /** Flag indicating the <tbody> contains oddly striped rows. */\n  isOddStriped?: boolean;\n  /** Flag indicating the <tbody> contains evenly striped rows. */\n  isEvenStriped?: boolean;\n}\n\nconst TbodyBase: React.FunctionComponent<TbodyProps> = ({\n  children,\n  className,\n  isExpanded,\n  innerRef,\n  isEvenStriped = false,\n  isOddStriped = false,\n  ...props\n}: TbodyProps) => (\n  <tbody\n    role=\"rowgroup\"\n    className={css(\n      className,\n      isExpanded && styles.modifiers.expanded,\n      isOddStriped && styles.modifiers.striped,\n      isEvenStriped && styles.modifiers.stripedEven\n    )}\n    ref={innerRef}\n    {...props}\n  >\n    {children}\n  </tbody>\n);\n\nexport const Tbody = React.forwardRef((props: TbodyProps, ref: React.Ref<HTMLTableSectionElement>) => (\n  <TbodyBase {...props} innerRef={ref} />\n));\nTbody.displayName = 'Tbody';\n"]},"metadata":{},"sourceType":"module"}