{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list';\nexport const DataListCell = _a => {\n  var {\n    children = null,\n    className = '',\n    width = 1,\n    isFilled = true,\n    alignRight = false,\n    isIcon = false,\n    wrapModifier = null\n  } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"width\", \"isFilled\", \"alignRight\", \"isIcon\", \"wrapModifier\"]);\n\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.dataListCell, width > 1 && styles.modifiers[`flex_${width}`], !isFilled && styles.modifiers.noFill, alignRight && styles.modifiers.alignRight, isIcon && styles.modifiers.icon, className, wrapModifier && styles.modifiers[wrapModifier])\n  }, props), children);\n};\nDataListCell.displayName = 'DataListCell';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,4DAAnB;AAoBA,OAAO,MAAMC,YAAY,GAAgDC,EAAD,IAShD;MATiD;IACvEC,QAAQ,GAAG,IAD4D;IAEvEC,SAAS,GAAG,EAF2D;IAGvEC,KAAK,GAAG,CAH+D;IAIvEC,QAAQ,GAAG,IAJ4D;IAKvEC,UAAU,GAAG,KAL0D;IAMvEC,MAAM,GAAG,KAN8D;IAOvEC,YAAY,GAAG;EAPwD,IAOpDP;MAChBQ,KAAK,cAR+D,sFAQ/D;;EACe,OACvBZ;IACEM,SAAS,EAAEL,GAAG,CACZC,MAAM,CAACW,YADK,EAEZN,KAAK,GAAG,CAAR,IAAaL,MAAM,CAACY,SAAP,CAAiB,QAAQP,KAAK,EAA9B,CAFD,EAGZ,CAACC,QAAD,IAAaN,MAAM,CAACY,SAAP,CAAiBC,MAHlB,EAIZN,UAAU,IAAIP,MAAM,CAACY,SAAP,CAAiBL,UAJnB,EAKZC,MAAM,IAAIR,MAAM,CAACY,SAAP,CAAiBE,IALf,EAMZV,SANY,EAOZK,YAAY,IAAIT,MAAM,CAACY,SAAP,CAAiBH,YAAjB,CAPJ;EADhB,GAUMC,KAVN,GAYGP,QAZH,CADuB;AAexB,CAxBM;AAyBPF,YAAY,CAACc,WAAb,GAA2B,cAA3B","names":["React","css","styles","DataListCell","_a","children","className","width","isFilled","alignRight","isIcon","wrapModifier","props","dataListCell","modifiers","noFill","icon","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/DataList/DataListCell.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list';\nimport { DataListWrapModifier } from './DataList';\n\nexport interface DataListCellProps extends Omit<React.HTMLProps<HTMLDivElement>, 'width'> {\n  /** Content rendered inside the DataList cell */\n  children?: React.ReactNode;\n  /** Additional classes added to the DataList cell */\n  className?: string;\n  /** Width (from 1-5) to the DataList cell */\n  width?: 1 | 2 | 3 | 4 | 5;\n  /** Enables the body Content to fill the height of the card */\n  isFilled?: boolean;\n  /**  Aligns the cell content to the right of its parent. */\n  alignRight?: boolean;\n  /** Set to true if the cell content is an Icon */\n  isIcon?: boolean;\n  /** Determines which wrapping modifier to apply to the DataListCell */\n  wrapModifier?: DataListWrapModifier | 'nowrap' | 'truncate' | 'breakWord';\n}\n\nexport const DataListCell: React.FunctionComponent<DataListCellProps> = ({\n  children = null,\n  className = '',\n  width = 1,\n  isFilled = true,\n  alignRight = false,\n  isIcon = false,\n  wrapModifier = null,\n  ...props\n}: DataListCellProps) => (\n  <div\n    className={css(\n      styles.dataListCell,\n      width > 1 && styles.modifiers[`flex_${width}` as 'flex_2' | 'flex_3' | 'flex_4' | 'flex_5'],\n      !isFilled && styles.modifiers.noFill,\n      alignRight && styles.modifiers.alignRight,\n      isIcon && styles.modifiers.icon,\n      className,\n      wrapModifier && styles.modifiers[wrapModifier]\n    )}\n    {...props}\n  >\n    {children}\n  </div>\n);\nDataListCell.displayName = 'DataListCell';\n"]},"metadata":{},"sourceType":"module"}