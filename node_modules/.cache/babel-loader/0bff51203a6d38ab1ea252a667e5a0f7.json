{"ast":null,"code":"import _toConsumableArray from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport badgeStyles from '@patternfly/react-styles/css/components/Badge/badge';\nimport formStyles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport buttonStyles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/esm/icons/times-circle-icon';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport { SelectMenu } from './SelectMenu';\nimport { SelectOption } from './SelectOption';\nimport { SelectGroup } from './SelectGroup';\nimport { SelectToggle } from './SelectToggle';\nimport { SelectContext, SelectVariant, SelectPosition, SelectDirection, SelectFooterTabbableItems } from './selectConstants';\nimport { ChipGroup } from '../ChipGroup';\nimport { Chip } from '../Chip';\nimport { Spinner } from '../Spinner';\nimport { keyHandler, getNextIndex, getOUIAProps, getDefaultOUIAId, GenerateId } from '../../helpers';\nimport { KeyTypes } from '../../helpers/constants';\nimport { Divider } from '../Divider';\nimport { Popper } from '../../helpers/Popper/Popper';\nimport { createRenderableFavorites, extendItemsWithFavorite } from '../../helpers/favorites';\nimport { ValidatedOptions } from '../../helpers/constants';\nimport { findTabbableElements } from '../../helpers/util'; // seed for the aria-labelledby ID\n\nvar currentId = 0;\nexport var Select = /*#__PURE__*/function (_React$Component) {\n  _inherits(Select, _React$Component);\n\n  var _super = _createSuper(Select);\n\n  function Select() {\n    var _this;\n\n    _classCallCheck(this, Select);\n\n    _this = _super.apply(this, arguments);\n    _this.parentRef = React.createRef();\n    _this.menuComponentRef = React.createRef();\n    _this.filterRef = React.createRef();\n    _this.clearRef = React.createRef();\n    _this.inputRef = React.createRef();\n    _this.refCollection = [[]];\n    _this.optionContainerRefCollection = [];\n    _this.footerRef = React.createRef();\n    _this.state = {\n      focusFirstOption: false,\n      typeaheadInputValue: null,\n      typeaheadFilteredChildren: React.Children.toArray(_this.props.children),\n      favoritesGroup: [],\n      typeaheadCurrIndex: -1,\n      typeaheadStoredIndex: -1,\n      creatableValue: '',\n      tabbedIntoFavoritesMenu: false,\n      ouiaStateId: getDefaultOUIAId(Select.displayName, _this.props.variant),\n      viewMoreNextIndex: -1\n    };\n\n    _this.getTypeaheadActiveChild = function (typeaheadCurrIndex) {\n      return _this.refCollection[typeaheadCurrIndex] ? _this.refCollection[typeaheadCurrIndex][0] : null;\n    };\n\n    _this.componentDidUpdate = function (prevProps, prevState) {\n      if (_this.props.hasInlineFilter) {\n        _this.refCollection[0][0] = _this.filterRef.current;\n      } // Move focus to top of the menu if state.focusFirstOption was updated to true and the menu does not have custom content\n\n\n      if (!prevState.focusFirstOption && _this.state.focusFirstOption && !_this.props.customContent) {\n        var firstRef = _this.refCollection.find(function (ref) {\n          return ref !== null;\n        });\n\n        if (firstRef && firstRef[0]) {\n          firstRef[0].focus();\n        }\n      } else if ( // if viewMoreNextIndex is not -1, view more was clicked, set focus on first newly loaded item\n      _this.state.viewMoreNextIndex !== -1 && _this.refCollection.length > _this.state.viewMoreNextIndex && _this.props.loadingVariant !== 'spinner' && _this.refCollection[_this.state.viewMoreNextIndex][0] && _this.props.variant !== 'typeahead' && // do not hard focus newly added items for typeahead variants\n      _this.props.variant !== 'typeaheadmulti') {\n        _this.refCollection[_this.state.viewMoreNextIndex][0].focus();\n      }\n\n      var hasUpdatedChildren = prevProps.children.length !== _this.props.children.length || prevProps.children.some(function (prevChild, index) {\n        var prevChildProps = prevChild.props;\n        var currChild = _this.props.children[index];\n        var currChildProps = currChild.props;\n\n        if (prevChildProps && currChildProps) {\n          return prevChildProps.value !== currChildProps.value || prevChildProps.label !== currChildProps.label || prevChildProps.isDisabled !== currChildProps.isDisabled || prevChildProps.isPlaceholder !== currChildProps.isPlaceholder;\n        } else {\n          return prevChild !== currChild;\n        }\n      });\n\n      if (hasUpdatedChildren) {\n        _this.updateTypeAheadFilteredChildren(prevState.typeaheadInputValue || '', null);\n      } // for menus with favorites,\n      // if the number of favorites or typeahead filtered children has changed, the generated\n      // list of favorites needs to be updated\n\n\n      if (_this.props.onFavorite && (_this.props.favorites.length !== prevProps.favorites.length || _this.state.typeaheadFilteredChildren !== prevState.typeaheadFilteredChildren)) {\n        var tempRenderableChildren = _this.props.variant === 'typeahead' || _this.props.variant === 'typeaheadmulti' ? _this.state.typeaheadFilteredChildren : _this.props.children;\n        var renderableFavorites = createRenderableFavorites(tempRenderableChildren, _this.props.isGrouped, _this.props.favorites);\n        var favoritesGroup = renderableFavorites.length ? [React.createElement(SelectGroup, {\n          key: \"favorites\",\n          label: _this.props.favoritesLabel\n        }, renderableFavorites), React.createElement(Divider, {\n          key: \"favorites-group-divider\"\n        })] : [];\n\n        _this.setState({\n          favoritesGroup: favoritesGroup\n        });\n      }\n    };\n\n    _this.onEnter = function () {\n      _this.setState({\n        focusFirstOption: true\n      });\n    };\n\n    _this.onToggle = function (isExpanded, e) {\n      var _this$props = _this.props,\n          isInputValuePersisted = _this$props.isInputValuePersisted,\n          onSelect = _this$props.onSelect,\n          onToggle = _this$props.onToggle,\n          hasInlineFilter = _this$props.hasInlineFilter;\n\n      if (!isExpanded && isInputValuePersisted && onSelect) {\n        onSelect(undefined, _this.inputRef.current ? _this.inputRef.current.value : '');\n      }\n\n      if (isExpanded && hasInlineFilter) {\n        _this.setState({\n          focusFirstOption: true\n        });\n      }\n\n      onToggle(isExpanded, e);\n    };\n\n    _this.onClose = function () {\n      var isInputFilterPersisted = _this.props.isInputFilterPersisted;\n\n      _this.setState(Object.assign(Object.assign({\n        focusFirstOption: false,\n        typeaheadInputValue: null\n      }, !isInputFilterPersisted && {\n        typeaheadFilteredChildren: React.Children.toArray(_this.props.children)\n      }), {\n        typeaheadCurrIndex: -1,\n        tabbedIntoFavoritesMenu: false,\n        viewMoreNextIndex: -1\n      }));\n    };\n\n    _this.onChange = function (e) {\n      if (e.target.value.toString() !== '' && !_this.props.isOpen) {\n        _this.onToggle(true, e);\n      }\n\n      if (_this.props.onTypeaheadInputChanged) {\n        _this.props.onTypeaheadInputChanged(e.target.value.toString());\n      }\n\n      _this.setState({\n        typeaheadCurrIndex: -1,\n        typeaheadInputValue: e.target.value,\n        creatableValue: e.target.value\n      });\n\n      _this.updateTypeAheadFilteredChildren(e.target.value.toString(), e);\n\n      _this.refCollection = [[]];\n    };\n\n    _this.updateTypeAheadFilteredChildren = function (typeaheadInputValue, e) {\n      var typeaheadFilteredChildren;\n      var _this$props2 = _this.props,\n          onFilter = _this$props2.onFilter,\n          isCreatable = _this$props2.isCreatable,\n          onCreateOption = _this$props2.onCreateOption,\n          createText = _this$props2.createText,\n          noResultsFoundText = _this$props2.noResultsFoundText,\n          children = _this$props2.children,\n          isGrouped = _this$props2.isGrouped,\n          isCreateSelectOptionObject = _this$props2.isCreateSelectOptionObject,\n          loadingVariant = _this$props2.loadingVariant;\n\n      if (onFilter) {\n        /* The updateTypeAheadFilteredChildren callback is not only called on input changes but also when the children change.\n         * In this case the e is null but we can get the typeaheadInputValue from the state.\n         */\n        typeaheadFilteredChildren = onFilter(e, e ? e.target.value : typeaheadInputValue) || children;\n      } else {\n        var input;\n\n        try {\n          input = new RegExp(typeaheadInputValue.toString(), 'i');\n        } catch (err) {\n          input = new RegExp(typeaheadInputValue.toString().replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i');\n        }\n\n        var childrenArray = React.Children.toArray(children);\n\n        if (isGrouped) {\n          var childFilter = function childFilter(child) {\n            return child.props.value && child.props.value.toString && _this.getDisplay(child.props.value.toString(), 'text').search(input) === 0;\n          };\n\n          typeaheadFilteredChildren = typeaheadInputValue.toString() !== '' ? React.Children.map(children, function (group) {\n            if (React.isValidElement(group) && group.type === SelectGroup) {\n              var filteredGroupChildren = React.Children.toArray(group.props.children).filter(childFilter);\n\n              if (filteredGroupChildren.length > 0) {\n                return React.cloneElement(group, {\n                  titleId: group.props.label && group.props.label.replace(/\\W/g, '-'),\n                  children: filteredGroupChildren\n                });\n              }\n            } else {\n              return React.Children.toArray(group).filter(childFilter);\n            }\n          }) : childrenArray;\n        } else {\n          typeaheadFilteredChildren = typeaheadInputValue.toString() !== '' ? childrenArray.filter(function (child) {\n            var valueToCheck = child.props.value; // Dividers don't have value and should not be filtered\n\n            if (!valueToCheck) {\n              return true;\n            }\n\n            var isSelectOptionObject = typeof valueToCheck !== 'string' && valueToCheck.toString && valueToCheck.compareTo; // View more option should be returned as not a match\n\n            if (loadingVariant !== 'spinner' && (loadingVariant === null || loadingVariant === void 0 ? void 0 : loadingVariant.text) === valueToCheck) {\n              return true;\n            } // spinner should be returned as not a match\n\n\n            if (loadingVariant === 'spinner' && valueToCheck === 'loading') {\n              return true;\n            }\n\n            if (isSelectOptionObject) {\n              return valueToCheck.compareTo(typeaheadInputValue);\n            } else {\n              return _this.getDisplay(child.props.value.toString(), 'text').search(input) === 0;\n            }\n          }) : childrenArray;\n        }\n      }\n\n      if (!typeaheadFilteredChildren) {\n        typeaheadFilteredChildren = [];\n      }\n\n      if (typeaheadFilteredChildren.length === 0) {\n        !isCreatable && typeaheadFilteredChildren.push(React.createElement(SelectOption, {\n          isDisabled: true,\n          key: \"no-results\",\n          value: noResultsFoundText,\n          isNoResultsOption: true\n        }));\n      }\n\n      if (isCreatable && typeaheadInputValue !== '') {\n        var newValue = typeaheadInputValue;\n\n        if (!typeaheadFilteredChildren.find(function (i) {\n          return i.props.value && i.props.value.toString().toLowerCase() === newValue.toString().toLowerCase();\n        })) {\n          var newOptionValue = isCreateSelectOptionObject ? {\n            toString: function toString() {\n              return newValue;\n            },\n            compareTo: function compareTo(value) {\n              return _this.toString().toLowerCase().includes(value.toString().toLowerCase());\n            }\n          } : newValue;\n          typeaheadFilteredChildren.push(React.createElement(SelectOption, {\n            key: \"create \".concat(newValue),\n            value: newOptionValue,\n            onClick: function onClick() {\n              return onCreateOption && onCreateOption(newValue);\n            }\n          }, createText, \" \\\"\", newValue, \"\\\"\"));\n        }\n      }\n\n      _this.setState({\n        typeaheadFilteredChildren: typeaheadFilteredChildren\n      });\n    };\n\n    _this.onClick = function (e) {\n      if (!_this.props.isOpen) {\n        _this.onToggle(true, e);\n      }\n    };\n\n    _this.clearSelection = function (_e) {\n      _this.setState({\n        typeaheadInputValue: null,\n        typeaheadFilteredChildren: React.Children.toArray(_this.props.children),\n        typeaheadCurrIndex: -1\n      });\n    };\n\n    _this.sendRef = function (optionRef, favoriteRef, optionContainerRef, index) {\n      _this.refCollection[index] = [optionRef, favoriteRef];\n      _this.optionContainerRefCollection[index] = optionContainerRef;\n    };\n\n    _this.handleMenuKeys = function (index, innerIndex, position) {\n      keyHandler(index, innerIndex, position, _this.refCollection, _this.refCollection);\n\n      if (_this.props.variant === SelectVariant.typeahead || _this.props.variant === SelectVariant.typeaheadMulti) {\n        if (position !== 'tab') {\n          _this.handleTypeaheadKeys(position);\n        }\n      }\n    };\n\n    _this.moveFocus = function (nextIndex) {\n      var updateCurrentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var _this$props3 = _this.props,\n          isCreatable = _this$props3.isCreatable,\n          createText = _this$props3.createText;\n      var hasDescriptionElm = Boolean(_this.refCollection[nextIndex][0] && _this.refCollection[nextIndex][0].classList.contains('pf-m-description'));\n      var isLoad = Boolean(_this.refCollection[nextIndex][0] && _this.refCollection[nextIndex][0].classList.contains('pf-m-load'));\n      var optionTextElm = hasDescriptionElm ? _this.refCollection[nextIndex][0].firstElementChild : _this.refCollection[nextIndex][0];\n      var typeaheadInputValue = '';\n\n      if (isCreatable && optionTextElm.innerText.includes(createText)) {\n        typeaheadInputValue = _this.state.creatableValue;\n      } else if (optionTextElm && !isLoad) {\n        // !isLoad prevents the view more button text from appearing the typeahead input\n        typeaheadInputValue = optionTextElm.innerText;\n      }\n\n      _this.setState(function (prevState) {\n        return {\n          typeaheadCurrIndex: updateCurrentIndex ? nextIndex : prevState.typeaheadCurrIndex,\n          typeaheadStoredIndex: nextIndex,\n          typeaheadInputValue: typeaheadInputValue\n        };\n      });\n    };\n\n    _this.switchFocusToFavoriteMenu = function () {\n      var _this$state = _this.state,\n          typeaheadCurrIndex = _this$state.typeaheadCurrIndex,\n          typeaheadStoredIndex = _this$state.typeaheadStoredIndex;\n      var indexForFocus = 0;\n\n      if (typeaheadCurrIndex !== -1) {\n        indexForFocus = typeaheadCurrIndex;\n      } else if (typeaheadStoredIndex !== -1) {\n        indexForFocus = typeaheadStoredIndex;\n      }\n\n      if (_this.refCollection[indexForFocus] !== null && _this.refCollection[indexForFocus][0] !== null) {\n        _this.refCollection[indexForFocus][0].focus();\n      } else {\n        _this.clearRef.current.focus();\n      }\n\n      _this.setState({\n        tabbedIntoFavoritesMenu: true,\n        typeaheadCurrIndex: -1\n      });\n    };\n\n    _this.moveFocusToLastMenuItem = function () {\n      var refCollectionLen = _this.refCollection.length;\n\n      if (refCollectionLen > 0 && _this.refCollection[refCollectionLen - 1] !== null && _this.refCollection[refCollectionLen - 1][0] !== null) {\n        _this.refCollection[refCollectionLen - 1][0].focus();\n      }\n    };\n\n    _this.handleTypeaheadKeys = function (position) {\n      var shiftKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var _this$props4 = _this.props,\n          isOpen = _this$props4.isOpen,\n          onFavorite = _this$props4.onFavorite,\n          isCreatable = _this$props4.isCreatable;\n      var _this$state2 = _this.state,\n          typeaheadCurrIndex = _this$state2.typeaheadCurrIndex,\n          tabbedIntoFavoritesMenu = _this$state2.tabbedIntoFavoritesMenu;\n\n      var typeaheadActiveChild = _this.getTypeaheadActiveChild(typeaheadCurrIndex);\n\n      if (isOpen) {\n        if (position === 'enter') {\n          if ((typeaheadCurrIndex !== -1 || isCreatable && _this.refCollection.length === 1) && ( // do not allow selection without moving to an initial option unless it is a single create option\n          typeaheadActiveChild || _this.refCollection[0] && _this.refCollection[0][0])) {\n            if (typeaheadActiveChild) {\n              if (!typeaheadActiveChild.classList.contains('pf-m-load')) {\n                var hasDescriptionElm = typeaheadActiveChild.childElementCount > 1;\n                var typeaheadActiveChildText = hasDescriptionElm ? typeaheadActiveChild.firstChild.innerText : typeaheadActiveChild.innerText;\n\n                _this.setState({\n                  typeaheadInputValue: typeaheadActiveChildText\n                });\n              }\n            } else if (_this.refCollection[0] && _this.refCollection[0][0]) {\n              _this.setState({\n                typeaheadInputValue: _this.refCollection[0][0].innerText\n              });\n            }\n\n            if (typeaheadActiveChild) {\n              typeaheadActiveChild.click();\n            } else {\n              _this.refCollection[0][0].click();\n            }\n          }\n        } else if (position === 'tab') {\n          if (onFavorite) {\n            // if the input has focus, tab to the first item or the last item that was previously focused.\n            if (_this.inputRef.current === document.activeElement) {\n              // If shift is also clicked and there is a footer, tab to the last item in tabbable footer\n              if (_this.props.footer && shiftKey) {\n                var tabbableItems = findTabbableElements(_this.footerRef, SelectFooterTabbableItems);\n\n                if (tabbableItems.length > 0) {\n                  if (tabbableItems[tabbableItems.length - 1]) {\n                    tabbableItems[tabbableItems.length - 1].focus();\n                  }\n                }\n              } else {\n                _this.switchFocusToFavoriteMenu();\n              }\n            } else {\n              // focus is on menu or footer\n              if (_this.props.footer) {\n                var tabbedIntoMenu = false;\n\n                var _tabbableItems = findTabbableElements(_this.footerRef, SelectFooterTabbableItems);\n\n                if (_tabbableItems.length > 0) {\n                  // if current element is not in footer, tab to first tabbable element in footer,\n                  // if shift was clicked, tab to input since focus is on menu\n                  var currentElementIndex = _tabbableItems.findIndex(function (item) {\n                    return item === document.activeElement;\n                  });\n\n                  if (currentElementIndex === -1) {\n                    if (shiftKey) {\n                      // currently in menu, shift back to input\n                      _this.inputRef.current.focus();\n                    } else {\n                      // currently in menu, tab to first tabbable item in footer\n                      _tabbableItems[0].focus();\n                    }\n                  } else {\n                    // already in footer\n                    if (shiftKey) {\n                      // shift to previous item\n                      if (currentElementIndex === 0) {\n                        // on first footer item, shift back to menu\n                        _this.switchFocusToFavoriteMenu();\n\n                        tabbedIntoMenu = true;\n                      } else {\n                        // shift to previous footer item\n                        _tabbableItems[currentElementIndex - 1].focus();\n                      }\n                    } else {\n                      // tab to next tabbable item in footer or to input.\n                      if (_tabbableItems[currentElementIndex + 1]) {\n                        _tabbableItems[currentElementIndex + 1].focus();\n                      } else {\n                        _this.inputRef.current.focus();\n                      }\n                    }\n                  }\n                } else {\n                  // no tabbable items in footer, tab to input\n                  _this.inputRef.current.focus();\n\n                  tabbedIntoMenu = false;\n                }\n\n                _this.setState({\n                  tabbedIntoFavoritesMenu: tabbedIntoMenu\n                });\n              } else {\n                _this.inputRef.current.focus();\n\n                _this.setState({\n                  tabbedIntoFavoritesMenu: false\n                });\n              }\n            }\n          } else {\n            // Close if there is no footer\n            if (!_this.props.footer) {\n              _this.onToggle(false, null);\n\n              _this.onClose();\n            } else {\n              // has footer\n              var _tabbableItems2 = findTabbableElements(_this.footerRef, SelectFooterTabbableItems);\n\n              var _currentElementIndex = _tabbableItems2.findIndex(function (item) {\n                return item === document.activeElement;\n              });\n\n              if (_this.inputRef.current === document.activeElement) {\n                if (shiftKey) {\n                  // close toggle if shift key and tab on input\n                  _this.onToggle(false, null);\n\n                  _this.onClose();\n                } else {\n                  // tab to first tabbable item in footer\n                  if (_tabbableItems2[0]) {\n                    _tabbableItems2[0].focus();\n                  } else {\n                    _this.onToggle(false, null);\n\n                    _this.onClose();\n                  }\n                }\n              } else {\n                // focus is in footer\n                if (shiftKey) {\n                  if (_currentElementIndex === 0) {\n                    // shift tab back to input\n                    _this.inputRef.current.focus();\n                  } else {\n                    // shift to previous footer item\n                    _tabbableItems2[_currentElementIndex - 1].focus();\n                  }\n                } else {\n                  // tab to next footer item or close tab if last item\n                  if (_tabbableItems2[_currentElementIndex + 1]) {\n                    _tabbableItems2[_currentElementIndex + 1].focus();\n                  } else {\n                    // no next item, close toggle\n                    _this.onToggle(false, null);\n\n                    _this.inputRef.current.focus();\n\n                    _this.onClose();\n                  }\n                }\n              }\n            }\n          }\n        } else if (!tabbedIntoFavoritesMenu) {\n          if (_this.refCollection[0][0] === null) {\n            return;\n          }\n\n          var nextIndex;\n\n          if (typeaheadCurrIndex === -1 && position === 'down') {\n            nextIndex = 0;\n          } else if (typeaheadCurrIndex === -1 && position === 'up') {\n            nextIndex = _this.refCollection.length - 1;\n          } else if (position !== 'left' && position !== 'right') {\n            nextIndex = getNextIndex(typeaheadCurrIndex, position, _this.refCollection);\n          } else {\n            nextIndex = typeaheadCurrIndex;\n          }\n\n          if (_this.refCollection[nextIndex] === null) {\n            return;\n          }\n\n          _this.moveFocus(nextIndex);\n        } else {\n          var _nextIndex = _this.refCollection.findIndex(function (ref) {\n            return ref !== undefined && (ref[0] === document.activeElement || ref[1] === document.activeElement);\n          });\n\n          _this.moveFocus(_nextIndex);\n        }\n      }\n    };\n\n    _this.onClickTypeaheadToggleButton = function () {\n      if (_this.inputRef && _this.inputRef.current) {\n        _this.inputRef.current.focus();\n      }\n    };\n\n    _this.getDisplay = function (value) {\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'node';\n\n      if (!value) {\n        return;\n      }\n\n      var item = _this.props.isGrouped ? React.Children.toArray(_this.props.children).reduce(function (acc, curr) {\n        return [].concat(_toConsumableArray(acc), _toConsumableArray(React.Children.toArray(curr.props.children)));\n      }, []).find(function (child) {\n        return child.props.value.toString() === value.toString();\n      }) : React.Children.toArray(_this.props.children).find(function (child) {\n        return child.props.value && child.props.value.toString() === value.toString();\n      });\n\n      if (item) {\n        if (item && item.props.children) {\n          if (type === 'node') {\n            return item.props.children;\n          }\n\n          return _this.findText(item);\n        }\n\n        return item.props.value.toString();\n      }\n\n      return value.toString();\n    };\n\n    _this.findText = function (item) {\n      if (typeof item === 'string') {\n        return item;\n      } else if (!React.isValidElement(item)) {\n        return '';\n      } else {\n        var multi = [];\n        React.Children.toArray(item.props.children).forEach(function (child) {\n          return multi.push(_this.findText(child));\n        });\n        return multi.join('');\n      }\n    };\n\n    _this.generateSelectedBadge = function () {\n      var _this$props5 = _this.props,\n          customBadgeText = _this$props5.customBadgeText,\n          selections = _this$props5.selections;\n\n      if (customBadgeText !== null) {\n        return customBadgeText;\n      }\n\n      if (Array.isArray(selections) && selections.length > 0) {\n        return selections.length;\n      }\n\n      return null;\n    };\n\n    _this.setVieMoreNextIndex = function () {\n      _this.setState({\n        viewMoreNextIndex: _this.refCollection.length - 1\n      });\n    };\n\n    _this.isLastOptionBeforeFooter = function (index) {\n      return _this.props.footer && index === _this.refCollection.length - 1 ? true : false;\n    };\n\n    return _this;\n  }\n\n  _createClass(Select, [{\n    key: \"extendTypeaheadChildren\",\n    value: function extendTypeaheadChildren(typeaheadCurrIndex, favoritesGroup) {\n      var _this2 = this;\n\n      var _this$props6 = this.props,\n          isGrouped = _this$props6.isGrouped,\n          onFavorite = _this$props6.onFavorite;\n      var typeaheadChildren = favoritesGroup ? favoritesGroup.concat(this.state.typeaheadFilteredChildren) : this.state.typeaheadFilteredChildren;\n      var activeElement = this.optionContainerRefCollection[typeaheadCurrIndex];\n      var typeaheadActiveChild = this.getTypeaheadActiveChild(typeaheadCurrIndex);\n\n      if (typeaheadActiveChild && typeaheadActiveChild.classList.contains('pf-m-description')) {\n        typeaheadActiveChild = typeaheadActiveChild.firstElementChild;\n      }\n\n      this.refCollection = [[]];\n      this.optionContainerRefCollection = [];\n\n      if (isGrouped) {\n        return React.Children.map(typeaheadChildren, function (group) {\n          if (group.type === Divider) {\n            return group;\n          } else if (group.type === SelectGroup && onFavorite) {\n            return React.cloneElement(group, {\n              titleId: group.props.label && group.props.label.replace(/\\W/g, '-'),\n              children: React.Children.map(group.props.children, function (child) {\n                return child.type === Divider ? child : React.cloneElement(child, {\n                  isFocused: activeElement && (activeElement.id === child.props.id || _this2.props.isCreatable && typeaheadActiveChild.innerText === \"{createText} \\\"\".concat(group.props.value, \"\\\"\"))\n                });\n              })\n            });\n          } else if (group.type === SelectGroup) {\n            return React.cloneElement(group, {\n              titleId: group.props.label && group.props.label.replace(/\\W/g, '-'),\n              children: React.Children.map(group.props.children, function (child) {\n                return child.type === Divider ? child : React.cloneElement(child, {\n                  isFocused: typeaheadActiveChild && (typeaheadActiveChild.innerText === child.props.value.toString() || _this2.props.isCreatable && typeaheadActiveChild.innerText === \"{createText} \\\"\".concat(child.props.value, \"\\\"\"))\n                });\n              })\n            });\n          } else {\n            // group has been filtered down to SelectOption\n            return React.cloneElement(group, {\n              isFocused: typeaheadActiveChild && (typeaheadActiveChild.innerText === group.props.value.toString() || _this2.props.isCreatable && typeaheadActiveChild.innerText === \"{createText} \\\"\".concat(group.props.value, \"\\\"\"))\n            });\n          }\n        });\n      }\n\n      return typeaheadChildren.map(function (child, index) {\n        var childElement = child;\n        return childElement.type.displayName === 'Divider' ? child : React.cloneElement(child, {\n          isFocused: typeaheadActiveChild ? typeaheadActiveChild.innerText === child.props.value.toString() || _this2.props.isCreatable && typeaheadActiveChild.innerText === \"{createText} \\\"\".concat(child.props.value, \"\\\"\") : index === typeaheadCurrIndex // fallback for view more + typeahead use cases, when the new expanded list is loaded and refCollection hasn't be updated yet\n\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _a = this.props,\n          children = _a.children,\n          chipGroupProps = _a.chipGroupProps,\n          chipGroupComponent = _a.chipGroupComponent,\n          className = _a.className,\n          customContent = _a.customContent,\n          variant = _a.variant,\n          direction = _a.direction,\n          onSelect = _a.onSelect,\n          onClear = _a.onClear,\n          onBlur = _a.onBlur,\n          toggleId = _a.toggleId,\n          isOpen = _a.isOpen,\n          isGrouped = _a.isGrouped,\n          isPlain = _a.isPlain,\n          isDisabled = _a.isDisabled,\n          hasPlaceholderStyle = _a.hasPlaceholderStyle,\n          validated = _a.validated,\n          selectionsProp = _a.selections,\n          typeAheadAriaLabel = _a.typeAheadAriaLabel,\n          typeAheadAriaDescribedby = _a.typeAheadAriaDescribedby,\n          clearSelectionsAriaLabel = _a.clearSelectionsAriaLabel,\n          toggleAriaLabel = _a.toggleAriaLabel,\n          removeSelectionAriaLabel = _a.removeSelectionAriaLabel,\n          ariaLabel = _a['aria-label'],\n          ariaLabelledBy = _a['aria-labelledby'],\n          ariaDescribedby = _a['aria-describedby'],\n          ariaInvalid = _a['aria-invalid'],\n          placeholderText = _a.placeholderText,\n          width = _a.width,\n          maxHeight = _a.maxHeight,\n          toggleIcon = _a.toggleIcon,\n          ouiaId = _a.ouiaId,\n          ouiaSafe = _a.ouiaSafe,\n          hasInlineFilter = _a.hasInlineFilter,\n          isCheckboxSelectionBadgeHidden = _a.isCheckboxSelectionBadgeHidden,\n          inlineFilterPlaceholderText = _a.inlineFilterPlaceholderText,\n          onFilter = _a.onFilter,\n          onTypeaheadInputChanged = _a.onTypeaheadInputChanged,\n          onCreateOption = _a.onCreateOption,\n          isCreatable = _a.isCreatable,\n          onToggle = _a.onToggle,\n          createText = _a.createText,\n          noResultsFoundText = _a.noResultsFoundText,\n          customBadgeText = _a.customBadgeText,\n          inputIdPrefix = _a.inputIdPrefix,\n          inputAutoComplete = _a.inputAutoComplete,\n          isInputValuePersisted = _a.isInputValuePersisted,\n          isInputFilterPersisted = _a.isInputFilterPersisted,\n          menuAppendTo = _a.menuAppendTo,\n          favorites = _a.favorites,\n          onFavorite = _a.onFavorite,\n          favoritesLabel = _a.favoritesLabel,\n          footer = _a.footer,\n          loadingVariant = _a.loadingVariant,\n          isCreateSelectOptionObject = _a.isCreateSelectOptionObject,\n          shouldResetOnSelect = _a.shouldResetOnSelect,\n          isFlipEnabled = _a.isFlipEnabled,\n          props = __rest(_a, [\"children\", \"chipGroupProps\", \"chipGroupComponent\", \"className\", \"customContent\", \"variant\", \"direction\", \"onSelect\", \"onClear\", \"onBlur\", \"toggleId\", \"isOpen\", \"isGrouped\", \"isPlain\", \"isDisabled\", \"hasPlaceholderStyle\", \"validated\", \"selections\", \"typeAheadAriaLabel\", \"typeAheadAriaDescribedby\", \"clearSelectionsAriaLabel\", \"toggleAriaLabel\", \"removeSelectionAriaLabel\", 'aria-label', 'aria-labelledby', 'aria-describedby', 'aria-invalid', \"placeholderText\", \"width\", \"maxHeight\", \"toggleIcon\", \"ouiaId\", \"ouiaSafe\", \"hasInlineFilter\", \"isCheckboxSelectionBadgeHidden\", \"inlineFilterPlaceholderText\", \"onFilter\", \"onTypeaheadInputChanged\", \"onCreateOption\", \"isCreatable\", \"onToggle\", \"createText\", \"noResultsFoundText\", \"customBadgeText\", \"inputIdPrefix\", \"inputAutoComplete\", \"isInputValuePersisted\", \"isInputFilterPersisted\", \"menuAppendTo\", \"favorites\", \"onFavorite\", \"favoritesLabel\", \"footer\", \"loadingVariant\", \"isCreateSelectOptionObject\", \"shouldResetOnSelect\", \"isFlipEnabled\"]);\n\n      var _this$state3 = this.state,\n          openedOnEnter = _this$state3.focusFirstOption,\n          typeaheadCurrIndex = _this$state3.typeaheadCurrIndex,\n          typeaheadInputValue = _this$state3.typeaheadInputValue,\n          typeaheadFilteredChildren = _this$state3.typeaheadFilteredChildren,\n          favoritesGroup = _this$state3.favoritesGroup;\n      var selectToggleId = toggleId || \"pf-select-toggle-id-\".concat(currentId++);\n      var selections = Array.isArray(selectionsProp) ? selectionsProp : [selectionsProp]; // Find out if the selected option is a placeholder\n\n      var selectedOption = React.Children.toArray(children).find(function (option) {\n        return option.props.value === selections[0];\n      });\n      var isSelectedPlaceholder = selectedOption && selectedOption.props.isPlaceholder;\n      var hasAnySelections = Boolean(selections[0] && selections[0] !== '');\n      var typeaheadActiveChild = this.getTypeaheadActiveChild(typeaheadCurrIndex);\n      var childPlaceholderText = null; // If onFavorites is set,  add isFavorite prop to children and add a Favorites group to the SelectMenu\n\n      var renderableItems = [];\n\n      if (onFavorite) {\n        // if variant is type-ahead call the extendTypeaheadChildren before adding favorites\n        var tempExtendedChildren = children;\n\n        if (variant === 'typeahead' || variant === 'typeaheadmulti') {\n          tempExtendedChildren = this.extendTypeaheadChildren(typeaheadCurrIndex, favoritesGroup);\n        } else if (onFavorite) {\n          tempExtendedChildren = favoritesGroup.concat(children);\n        } // mark items that are favorited with isFavorite\n\n\n        renderableItems = extendItemsWithFavorite(tempExtendedChildren, isGrouped, favorites);\n      } else {\n        renderableItems = children;\n      }\n\n      if (!customContent) {\n        if (!hasAnySelections && !placeholderText) {\n          var childPlaceholder = React.Children.toArray(children).filter(function (child) {\n            return child.props.isPlaceholder === true;\n          });\n          childPlaceholderText = childPlaceholder[0] && this.getDisplay(childPlaceholder[0].props.value, 'node') || children[0] && this.getDisplay(children[0].props.value, 'node');\n        }\n      }\n\n      if (isOpen) {\n        if (renderableItems.find(function (item) {\n          var _a;\n\n          return ((_a = item) === null || _a === void 0 ? void 0 : _a.key) === 'loading';\n        }) === undefined) {\n          if (loadingVariant === 'spinner') {\n            renderableItems.push(React.createElement(SelectOption, {\n              isLoading: true,\n              key: \"loading\",\n              value: \"loading\"\n            }, React.createElement(Spinner, {\n              size: \"lg\"\n            })));\n          } else if (loadingVariant === null || loadingVariant === void 0 ? void 0 : loadingVariant.text) {\n            renderableItems.push(React.createElement(SelectOption, {\n              isLoad: true,\n              key: \"loading\",\n              value: loadingVariant.text,\n              setViewMoreNextIndex: this.setVieMoreNextIndex,\n              onClick: loadingVariant === null || loadingVariant === void 0 ? void 0 : loadingVariant.onClick\n            }));\n          }\n        }\n      }\n\n      var hasOnClear = onClear !== Select.defaultProps.onClear;\n      var clearBtn = React.createElement(\"button\", {\n        className: css(buttonStyles.button, buttonStyles.modifiers.plain, styles.selectToggleClear),\n        onClick: function onClick(e) {\n          _this3.clearSelection(e);\n\n          onClear(e);\n          e.stopPropagation();\n        },\n        \"aria-label\": clearSelectionsAriaLabel,\n        type: \"button\",\n        disabled: isDisabled,\n        ref: this.clearRef,\n        onKeyDown: function onKeyDown(event) {\n          if (event.key === KeyTypes.Enter) {\n            _this3.clearRef.current.click();\n          }\n        }\n      }, React.createElement(TimesCircleIcon, {\n        \"aria-hidden\": true\n      }));\n      var selectedChips = null;\n\n      if (variant === SelectVariant.typeaheadMulti) {\n        selectedChips = chipGroupComponent ? chipGroupComponent : React.createElement(ChipGroup, Object.assign({}, chipGroupProps), selections && selections.map(function (item) {\n          return React.createElement(Chip, {\n            key: item,\n            onClick: function onClick(e) {\n              return onSelect(e, item);\n            },\n            closeBtnAriaLabel: removeSelectionAriaLabel\n          }, _this3.getDisplay(item, 'node'));\n        }));\n      }\n\n      if (hasInlineFilter) {\n        var filterBox = React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          key: \"inline-filter\",\n          className: css(styles.selectMenuSearch)\n        }, React.createElement(\"input\", {\n          key: \"inline-filter-input\",\n          type: \"search\",\n          className: css(formStyles.formControl, formStyles.modifiers.search),\n          onChange: this.onChange,\n          placeholder: inlineFilterPlaceholderText,\n          onKeyDown: function onKeyDown(event) {\n            if (event.key === KeyTypes.ArrowUp) {\n              _this3.handleMenuKeys(0, 0, 'up');\n\n              event.preventDefault();\n            } else if (event.key === KeyTypes.ArrowDown) {\n              _this3.handleMenuKeys(0, 0, 'down');\n\n              event.preventDefault();\n            } else if (event.key === KeyTypes.ArrowLeft) {\n              _this3.handleMenuKeys(0, 0, 'left');\n\n              event.preventDefault();\n            } else if (event.key === KeyTypes.ArrowRight) {\n              _this3.handleMenuKeys(0, 0, 'right');\n\n              event.preventDefault();\n            } else if (event.key === KeyTypes.Tab && variant !== SelectVariant.checkbox && _this3.props.footer) {\n              // tab to footer or close menu if shift key\n              if (event.shiftKey) {\n                _this3.onToggle(false, event);\n              } else {\n                var tabbableItems = findTabbableElements(_this3.footerRef, SelectFooterTabbableItems);\n\n                if (tabbableItems.length > 0) {\n                  tabbableItems[0].focus();\n                  event.stopPropagation();\n                  event.preventDefault();\n                } else {\n                  _this3.onToggle(false, event);\n                }\n              }\n            } else if (event.key === KeyTypes.Tab && variant === SelectVariant.checkbox) {\n              // More modal-like experience for checkboxes\n              // Let SelectOption handle this\n              if (event.shiftKey) {\n                _this3.handleMenuKeys(0, 0, 'up');\n              } else {\n                _this3.handleMenuKeys(0, 0, 'down');\n              }\n\n              event.stopPropagation();\n              event.preventDefault();\n            }\n          },\n          ref: this.filterRef,\n          autoComplete: inputAutoComplete\n        })), React.createElement(Divider, {\n          key: \"inline-filter-divider\"\n        }));\n        renderableItems = [filterBox].concat(_toConsumableArray(typeaheadFilteredChildren)).map(function (option, index) {\n          return React.cloneElement(option, {\n            key: index\n          });\n        });\n      }\n\n      var variantProps;\n      var variantChildren;\n\n      if (customContent) {\n        variantProps = {\n          selected: selections,\n          openedOnEnter: openedOnEnter,\n          isCustomContent: true\n        };\n        variantChildren = customContent;\n      } else {\n        switch (variant) {\n          case 'single':\n            variantProps = {\n              selected: selections[0],\n              hasInlineFilter: hasInlineFilter,\n              openedOnEnter: openedOnEnter\n            };\n            variantChildren = renderableItems;\n            break;\n\n          case 'checkbox':\n            variantProps = {\n              checked: selections,\n              isGrouped: isGrouped,\n              hasInlineFilter: hasInlineFilter,\n              openedOnEnter: openedOnEnter\n            };\n            variantChildren = renderableItems;\n            break;\n\n          case 'typeahead':\n            variantProps = {\n              selected: selections[0],\n              openedOnEnter: openedOnEnter\n            };\n            variantChildren = onFavorite ? renderableItems : this.extendTypeaheadChildren(typeaheadCurrIndex);\n\n            if (variantChildren.length === 0) {\n              variantChildren.push(React.createElement(SelectOption, {\n                isDisabled: true,\n                key: 0,\n                value: noResultsFoundText,\n                isNoResultsOption: true\n              }));\n            }\n\n            break;\n\n          case 'typeaheadmulti':\n            variantProps = {\n              selected: selections,\n              openedOnEnter: openedOnEnter\n            };\n            variantChildren = onFavorite ? renderableItems : this.extendTypeaheadChildren(typeaheadCurrIndex);\n\n            if (variantChildren.length === 0) {\n              variantChildren.push(React.createElement(SelectOption, {\n                isDisabled: true,\n                key: 0,\n                value: noResultsFoundText,\n                isNoResultsOption: true\n              }));\n            }\n\n            break;\n        }\n      }\n\n      var innerMenu = React.createElement(SelectMenu // This removes the `position: absolute` styling from the `.pf-c-select__menu`\n      // allowing the menu to flip correctly\n      , Object.assign({}, isFlipEnabled && {\n        style: {\n          position: 'revert'\n        }\n      }, props, {\n        isGrouped: isGrouped,\n        selected: selections\n      }, variantProps, {\n        openedOnEnter: openedOnEnter,\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabelledBy,\n        sendRef: this.sendRef,\n        keyHandler: this.handleMenuKeys,\n        maxHeight: maxHeight,\n        ref: this.menuComponentRef,\n        footer: footer,\n        footerRef: this.footerRef,\n        isLastOptionBeforeFooter: this.isLastOptionBeforeFooter\n      }), variantChildren);\n      var menuContainer = footer ? React.createElement(\"div\", {\n        className: css(styles.selectMenu)\n      }, \" \", innerMenu, \" \") : innerMenu;\n      var popperContainer = React.createElement(\"div\", Object.assign({\n        className: css(styles.select, isOpen && styles.modifiers.expanded, validated === ValidatedOptions.success && styles.modifiers.success, validated === ValidatedOptions.warning && styles.modifiers.warning, validated === ValidatedOptions.error && styles.modifiers.invalid, direction === SelectDirection.up && styles.modifiers.top, className)\n      }, width && {\n        style: {\n          width: width\n        }\n      }, ariaDescribedby && {\n        'aria-describedby': ariaDescribedby\n      }, validated !== ValidatedOptions.default && {\n        'aria-invalid': ariaInvalid\n      }), isOpen && menuContainer);\n      var mainContainer = React.createElement(\"div\", Object.assign({\n        className: css(styles.select, isOpen && styles.modifiers.expanded, validated === ValidatedOptions.success && styles.modifiers.success, validated === ValidatedOptions.warning && styles.modifiers.warning, validated === ValidatedOptions.error && styles.modifiers.invalid, direction === SelectDirection.up && styles.modifiers.top, className),\n        ref: this.parentRef\n      }, getOUIAProps(Select.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), width && {\n        style: {\n          width: width\n        }\n      }, ariaDescribedby && {\n        'aria-describedby': ariaDescribedby\n      }, validated !== ValidatedOptions.default && {\n        'aria-invalid': ariaInvalid\n      }), React.createElement(SelectToggle, Object.assign({\n        id: selectToggleId,\n        parentRef: this.parentRef,\n        menuRef: this.menuComponentRef\n      }, footer && {\n        footerRef: this.footerRef\n      }, {\n        isOpen: isOpen,\n        isPlain: isPlain,\n        hasPlaceholderStyle: hasPlaceholderStyle && (!selections.length || selections[0] === null || isSelectedPlaceholder),\n        onToggle: this.onToggle,\n        onEnter: this.onEnter,\n        onClose: this.onClose,\n        onBlur: onBlur,\n        variant: variant,\n        \"aria-labelledby\": \"\".concat(ariaLabelledBy || '', \" \").concat(selectToggleId),\n        \"aria-label\": toggleAriaLabel,\n        handleTypeaheadKeys: this.handleTypeaheadKeys,\n        moveFocusToLastMenuItem: this.moveFocusToLastMenuItem,\n        isDisabled: isDisabled,\n        hasClearButton: hasOnClear,\n        hasFooter: footer !== undefined,\n        onClickTypeaheadToggleButton: this.onClickTypeaheadToggleButton\n      }), customContent && React.createElement(\"div\", {\n        className: css(styles.selectToggleWrapper)\n      }, toggleIcon && React.createElement(\"span\", {\n        className: css(styles.selectToggleIcon)\n      }, toggleIcon), React.createElement(\"span\", {\n        className: css(styles.selectToggleText)\n      }, placeholderText)), variant === SelectVariant.single && !customContent && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: css(styles.selectToggleWrapper)\n      }, toggleIcon && React.createElement(\"span\", {\n        className: css(styles.selectToggleIcon)\n      }, toggleIcon), React.createElement(\"span\", {\n        className: css(styles.selectToggleText)\n      }, this.getDisplay(selections[0], 'node') || placeholderText || childPlaceholderText)), hasOnClear && hasAnySelections && clearBtn), variant === SelectVariant.checkbox && !customContent && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: css(styles.selectToggleWrapper)\n      }, toggleIcon && React.createElement(\"span\", {\n        className: css(styles.selectToggleIcon)\n      }, toggleIcon), React.createElement(\"span\", {\n        className: css(styles.selectToggleText)\n      }, placeholderText), !isCheckboxSelectionBadgeHidden && hasAnySelections && React.createElement(\"div\", {\n        className: css(styles.selectToggleBadge)\n      }, React.createElement(\"span\", {\n        className: css(badgeStyles.badge, badgeStyles.modifiers.read)\n      }, this.generateSelectedBadge()))), hasOnClear && hasAnySelections && clearBtn), variant === SelectVariant.typeahead && !customContent && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: css(styles.selectToggleWrapper)\n      }, toggleIcon && React.createElement(\"span\", {\n        className: css(styles.selectToggleIcon)\n      }, toggleIcon), React.createElement(\"input\", Object.assign({\n        className: css(formStyles.formControl, styles.selectToggleTypeahead),\n        \"aria-activedescendant\": typeaheadActiveChild && typeaheadActiveChild.id,\n        id: \"\".concat(selectToggleId, \"-select-typeahead\"),\n        \"aria-label\": typeAheadAriaLabel\n      }, typeAheadAriaDescribedby && {\n        'aria-describedby': typeAheadAriaDescribedby\n      }, {\n        placeholder: placeholderText,\n        value: typeaheadInputValue !== null ? typeaheadInputValue : this.getDisplay(selections[0], 'text') || '',\n        type: \"text\",\n        onClick: this.onClick,\n        onChange: this.onChange,\n        autoComplete: inputAutoComplete,\n        disabled: isDisabled,\n        ref: this.inputRef\n      }))), hasOnClear && (selections[0] || typeaheadInputValue) && clearBtn), variant === SelectVariant.typeaheadMulti && !customContent && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: css(styles.selectToggleWrapper)\n      }, toggleIcon && React.createElement(\"span\", {\n        className: css(styles.selectToggleIcon)\n      }, toggleIcon), selections && Array.isArray(selections) && selections.length > 0 && selectedChips, React.createElement(\"input\", Object.assign({\n        className: css(formStyles.formControl, styles.selectToggleTypeahead),\n        \"aria-activedescendant\": typeaheadActiveChild && typeaheadActiveChild.id,\n        id: \"\".concat(selectToggleId, \"-select-multi-typeahead-typeahead\"),\n        \"aria-label\": typeAheadAriaLabel,\n        \"aria-invalid\": validated === ValidatedOptions.error\n      }, typeAheadAriaDescribedby && {\n        'aria-describedby': typeAheadAriaDescribedby\n      }, {\n        placeholder: placeholderText,\n        value: typeaheadInputValue !== null ? typeaheadInputValue : '',\n        type: \"text\",\n        onChange: this.onChange,\n        onClick: this.onClick,\n        autoComplete: inputAutoComplete,\n        disabled: isDisabled,\n        ref: this.inputRef\n      }))), hasOnClear && (selections && selections.length > 0 || typeaheadInputValue) && clearBtn), validated === ValidatedOptions.success && React.createElement(\"span\", {\n        className: css(styles.selectToggleStatusIcon)\n      }, React.createElement(CheckCircleIcon, {\n        \"aria-hidden\": \"true\"\n      })), validated === ValidatedOptions.error && React.createElement(\"span\", {\n        className: css(styles.selectToggleStatusIcon)\n      }, React.createElement(ExclamationCircleIcon, {\n        \"aria-hidden\": \"true\"\n      })), validated === ValidatedOptions.warning && React.createElement(\"span\", {\n        className: css(styles.selectToggleStatusIcon)\n      }, React.createElement(ExclamationTriangleIcon, {\n        \"aria-hidden\": \"true\"\n      }))), isOpen && menuAppendTo === 'inline' && menuContainer);\n\n      var getParentElement = function getParentElement() {\n        if (_this3.parentRef && _this3.parentRef.current) {\n          return _this3.parentRef.current.parentElement;\n        }\n\n        return null;\n      };\n\n      return React.createElement(GenerateId, null, function (randomId) {\n        return React.createElement(SelectContext.Provider, {\n          value: {\n            onSelect: onSelect,\n            onFavorite: onFavorite,\n            onClose: _this3.onClose,\n            variant: variant,\n            inputIdPrefix: inputIdPrefix || randomId,\n            shouldResetOnSelect: shouldResetOnSelect\n          }\n        }, menuAppendTo === 'inline' ? mainContainer : React.createElement(Popper, {\n          trigger: mainContainer,\n          popper: popperContainer,\n          direction: direction,\n          appendTo: menuAppendTo === 'parent' ? getParentElement() : menuAppendTo,\n          isVisible: isOpen\n        }));\n      });\n    }\n  }]);\n\n  return Select;\n}(React.Component);\nSelect.displayName = 'Select';\nSelect.defaultProps = {\n  children: [],\n  className: '',\n  position: SelectPosition.left,\n  direction: SelectDirection.down,\n  toggleId: null,\n  isOpen: false,\n  isGrouped: false,\n  isPlain: false,\n  isDisabled: false,\n  hasPlaceholderStyle: false,\n  isCreatable: false,\n  validated: 'default',\n  'aria-label': '',\n  'aria-labelledby': '',\n  'aria-describedby': '',\n  'aria-invalid': false,\n  typeAheadAriaLabel: '',\n  typeAheadAriaDescribedby: '',\n  clearSelectionsAriaLabel: 'Clear all',\n  toggleAriaLabel: 'Options menu',\n  removeSelectionAriaLabel: 'Remove',\n  selections: [],\n  createText: 'Create',\n  placeholderText: '',\n  noResultsFoundText: 'No results found',\n  variant: SelectVariant.single,\n  width: '',\n  onClear: function onClear() {\n    return undefined;\n  },\n  onCreateOption: function onCreateOption() {\n    return undefined;\n  },\n  toggleIcon: null,\n  onFilter: null,\n  onTypeaheadInputChanged: null,\n  customContent: null,\n  hasInlineFilter: false,\n  inlineFilterPlaceholderText: null,\n  customBadgeText: null,\n  inputIdPrefix: '',\n  inputAutoComplete: 'off',\n  menuAppendTo: 'inline',\n  favorites: [],\n  favoritesLabel: 'Favorites',\n  ouiaSafe: true,\n  chipGroupComponent: null,\n  isInputValuePersisted: false,\n  isInputFilterPersisted: false,\n  isCreateSelectOptionObject: false,\n  shouldResetOnSelect: true,\n  isFlipEnabled: false\n};","map":{"version":3,"mappings":"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","names":["React","styles","badgeStyles","formStyles","buttonStyles","css","TimesCircleIcon","CheckCircleIcon","ExclamationTriangleIcon","ExclamationCircleIcon","SelectMenu","SelectOption","SelectGroup","SelectToggle","SelectContext","SelectVariant","SelectPosition","SelectDirection","SelectFooterTabbableItems","ChipGroup","Chip","Spinner","keyHandler","getNextIndex","getOUIAProps","getDefaultOUIAId","GenerateId","KeyTypes","Divider","Popper","createRenderableFavorites","extendItemsWithFavorite","ValidatedOptions","findTabbableElements","currentId","Select","createRef","focusFirstOption","typeaheadInputValue","typeaheadFilteredChildren","Children","toArray","props","children","favoritesGroup","typeaheadCurrIndex","typeaheadStoredIndex","creatableValue","tabbedIntoFavoritesMenu","ouiaStateId","displayName","variant","viewMoreNextIndex","refCollection","prevProps","prevState","hasInlineFilter","filterRef","current","state","customContent","firstRef","find","ref","focus","length","loadingVariant","hasUpdatedChildren","some","prevChild","index","prevChildProps","currChild","currChildProps","value","label","isDisabled","isPlaceholder","updateTypeAheadFilteredChildren","onFavorite","favorites","tempRenderableChildren","renderableFavorites","isGrouped","key","favoritesLabel","setState","isExpanded","e","isInputValuePersisted","onSelect","onToggle","undefined","inputRef","isInputFilterPersisted","Object","target","toString","isOpen","onTypeaheadInputChanged","onFilter","isCreatable","onCreateOption","createText","noResultsFoundText","isCreateSelectOptionObject","input","RegExp","err","replace","childrenArray","childFilter","child","getDisplay","search","map","isValidElement","group","type","filteredGroupChildren","filter","cloneElement","titleId","valueToCheck","isSelectOptionObject","compareTo","text","push","isNoResultsOption","newValue","i","toLowerCase","newOptionValue","includes","onClick","_e","optionRef","favoriteRef","optionContainerRef","optionContainerRefCollection","innerIndex","position","typeahead","typeaheadMulti","handleTypeaheadKeys","nextIndex","updateCurrentIndex","hasDescriptionElm","Boolean","classList","contains","isLoad","optionTextElm","firstElementChild","innerText","indexForFocus","clearRef","refCollectionLen","shiftKey","typeaheadActiveChild","getTypeaheadActiveChild","childElementCount","typeaheadActiveChildText","firstChild","click","document","activeElement","footer","tabbableItems","footerRef","switchFocusToFavoriteMenu","tabbedIntoMenu","currentElementIndex","findIndex","item","onClose","moveFocus","reduce","acc","curr","findText","multi","forEach","join","customBadgeText","selections","Array","isArray","typeaheadChildren","concat","isFocused","id","childElement","_a","chipGroupProps","chipGroupComponent","className","direction","onClear","onBlur","toggleId","isPlain","hasPlaceholderStyle","validated","selectionsProp","typeAheadAriaLabel","typeAheadAriaDescribedby","clearSelectionsAriaLabel","toggleAriaLabel","removeSelectionAriaLabel","ariaLabel","ariaLabelledBy","ariaDescribedby","ariaInvalid","placeholderText","width","maxHeight","toggleIcon","ouiaId","ouiaSafe","isCheckboxSelectionBadgeHidden","inlineFilterPlaceholderText","inputIdPrefix","inputAutoComplete","menuAppendTo","shouldResetOnSelect","isFlipEnabled","__rest","openedOnEnter","selectToggleId","selectedOption","option","isSelectedPlaceholder","hasAnySelections","childPlaceholderText","renderableItems","tempExtendedChildren","extendTypeaheadChildren","childPlaceholder","isLoading","size","setViewMoreNextIndex","setVieMoreNextIndex","hasOnClear","defaultProps","clearBtn","button","modifiers","plain","selectToggleClear","clearSelection","stopPropagation","disabled","onKeyDown","event","Enter","selectedChips","closeBtnAriaLabel","filterBox","Fragment","selectMenuSearch","formControl","onChange","placeholder","ArrowUp","handleMenuKeys","preventDefault","ArrowDown","ArrowLeft","ArrowRight","Tab","checkbox","autoComplete","variantProps","variantChildren","selected","isCustomContent","checked","innerMenu","style","sendRef","menuComponentRef","isLastOptionBeforeFooter","menuContainer","selectMenu","popperContainer","select","expanded","success","warning","error","invalid","up","top","default","mainContainer","parentRef","menuRef","onEnter","moveFocusToLastMenuItem","hasClearButton","hasFooter","onClickTypeaheadToggleButton","selectToggleWrapper","selectToggleIcon","selectToggleText","single","selectToggleBadge","badge","read","generateSelectedBadge","selectToggleTypeahead","selectToggleStatusIcon","getParentElement","parentElement","Provider","randomId","trigger","popper","appendTo","isVisible","Component","left","down"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Select/Select.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport badgeStyles from '@patternfly/react-styles/css/components/Badge/badge';\nimport formStyles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport buttonStyles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/esm/icons/times-circle-icon';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport { SelectMenu } from './SelectMenu';\nimport { SelectOption, SelectOptionObject } from './SelectOption';\nimport { SelectGroup, SelectGroupProps } from './SelectGroup';\nimport { SelectToggle } from './SelectToggle';\nimport {\n  SelectContext,\n  SelectVariant,\n  SelectPosition,\n  SelectDirection,\n  SelectFooterTabbableItems\n} from './selectConstants';\nimport { ChipGroup, ChipGroupProps } from '../ChipGroup';\nimport { Chip } from '../Chip';\nimport { Spinner } from '../Spinner';\nimport {\n  keyHandler,\n  getNextIndex,\n  getOUIAProps,\n  OUIAProps,\n  getDefaultOUIAId,\n  PickOptional,\n  GenerateId\n} from '../../helpers';\nimport { KeyTypes } from '../../helpers/constants';\nimport { Divider } from '../Divider';\nimport { ToggleMenuBaseProps, Popper } from '../../helpers/Popper/Popper';\nimport { createRenderableFavorites, extendItemsWithFavorite } from '../../helpers/favorites';\nimport { ValidatedOptions } from '../../helpers/constants';\nimport { findTabbableElements } from '../../helpers/util';\n\n// seed for the aria-labelledby ID\nlet currentId = 0;\n\nexport interface SelectViewMoreObject {\n  /** View more text */\n  text: string;\n  /** Callback for when the view more button is clicked */\n  onClick: (event: React.MouseEvent | React.ChangeEvent) => void;\n}\nexport interface SelectProps\n  extends Omit<ToggleMenuBaseProps, 'menuAppendTo'>,\n    Omit<React.HTMLProps<HTMLDivElement>, 'onSelect' | 'ref' | 'checked' | 'selected'>,\n    OUIAProps {\n  /** Content rendered inside the Select. Must be React.ReactElement<SelectGroupProps>[] */\n  children?: React.ReactElement[];\n  /** Classes applied to the root of the Select */\n  className?: string;\n  /** Indicates where menu will be aligned horizontally */\n  position?: SelectPosition | 'right' | 'left';\n  /** Flag specifying which direction the Select menu expands */\n  direction?: 'up' | 'down';\n  /** Flag to indicate if select is open */\n  isOpen?: boolean;\n  /** Flag to indicate if select options are grouped */\n  isGrouped?: boolean;\n  /** Display the toggle with no border or background */\n  isPlain?: boolean;\n  /** Flag to indicate if select is disabled */\n  isDisabled?: boolean;\n  /** Flag to indicate if the typeahead select allows new items */\n  isCreatable?: boolean;\n  /** Flag indicating if placeholder styles should be applied */\n  hasPlaceholderStyle?: boolean;\n  /** @beta Flag indicating if the creatable option should set its value as a SelectOptionObject */\n  isCreateSelectOptionObject?: boolean;\n  /** Value to indicate if the select is modified to show that validation state.\n   * If set to success, select will be modified to indicate valid state.\n   * If set to error, select will be modified to indicate error state.\n   * If set to warning, select will be modified to indicate warning state.\n   */\n  validated?: 'success' | 'warning' | 'error' | 'default';\n  /** @beta Loading variant to display either the spinner or the view more text button */\n  loadingVariant?: 'spinner' | SelectViewMoreObject;\n  /** Text displayed in typeahead select to prompt the user to create an item */\n  createText?: string;\n  /** Title text of Select */\n  placeholderText?: string | React.ReactNode;\n  /** Text to display in typeahead select when no results are found */\n  noResultsFoundText?: string;\n  /** Array of selected items for multi select variants. */\n  selections?: string | SelectOptionObject | (string | SelectOptionObject)[];\n  /** Flag indicating if selection badge should be hidden for checkbox variant,default false */\n  isCheckboxSelectionBadgeHidden?: boolean;\n  /** Id for select toggle element */\n  toggleId?: string;\n  /** Adds accessible text to Select */\n  'aria-label'?: string;\n  /** Id of label for the Select aria-labelledby */\n  'aria-labelledby'?: string;\n  /** Id of div for the select aria-labelledby */\n  'aria-describedby'?: string;\n  /** Flag indicating if the select is an invalid state */\n  'aria-invalid'?: boolean;\n  /** Label for input field of type ahead select variants */\n  typeAheadAriaLabel?: string;\n  /** Id of div for input field of type ahead select variants */\n  typeAheadAriaDescribedby?: string;\n  /** Label for clear selection button of type ahead select variants */\n  clearSelectionsAriaLabel?: string;\n  /** Label for toggle of type ahead select variants */\n  toggleAriaLabel?: string;\n  /** Label for remove chip button of multiple type ahead select variant */\n  removeSelectionAriaLabel?: string;\n  /** ID list of favorited select items */\n  favorites?: string[];\n  /** Label for the favorites group */\n  favoritesLabel?: string;\n  /** Enables favorites. Callback called when a select options's favorite button is clicked */\n  onFavorite?: (itemId: string, isFavorite: boolean) => void;\n  /** Callback for selection behavior */\n  onSelect?: (\n    event: React.MouseEvent | React.ChangeEvent,\n    value: string | SelectOptionObject,\n    isPlaceholder?: boolean\n  ) => void;\n  /** Callback for toggle button behavior */\n  onToggle: (isExpanded: boolean, event: React.MouseEvent | React.ChangeEvent | React.KeyboardEvent | Event) => void;\n  /** Callback for toggle blur */\n  onBlur?: (event?: any) => void;\n  /** Callback for typeahead clear button */\n  onClear?: (event: React.MouseEvent) => void;\n  /** Optional callback for custom filtering */\n  onFilter?: (e: React.ChangeEvent<HTMLInputElement> | null, value: string) => React.ReactElement[] | undefined;\n  /** Optional callback for newly created options */\n  onCreateOption?: (newOptionValue: string) => void;\n  /** Optional event handler called each time the value in the typeahead input changes. */\n  onTypeaheadInputChanged?: (value: string) => void;\n  /** Variant of rendered Select */\n  variant?: 'single' | 'checkbox' | 'typeahead' | 'typeaheadmulti';\n  /** Width of the select container as a number of px or string percentage */\n  width?: string | number;\n  /** Max height of the select container as a number of px or string percentage */\n  maxHeight?: string | number;\n  /** Icon element to render inside the select toggle */\n  toggleIcon?: React.ReactElement;\n  /** Custom content to render in the select menu.  If this prop is defined, the variant prop will be ignored and the select will render with a single select toggle */\n  customContent?: React.ReactNode;\n  /** Flag indicating if select should have an inline text input for filtering */\n  hasInlineFilter?: boolean;\n  /** Placeholder text for inline filter */\n  inlineFilterPlaceholderText?: string;\n  /** Custom text for select badge */\n  customBadgeText?: string | number;\n  /** Prefix for the id of the input in the checkbox select variant*/\n  inputIdPrefix?: string;\n  /** Value for the typeahead and inline filtering input autocomplete attribute. When targeting Chrome this property should be a random string. */\n  inputAutoComplete?: string;\n  /** Optional props to pass to the chip group in the typeaheadmulti variant */\n  chipGroupProps?: Omit<ChipGroupProps, 'children' | 'ref'>;\n  /** Optional props to render custom chip group in the typeaheadmulti variant */\n  chipGroupComponent?: React.ReactNode;\n  /** Flag for retaining keyboard-entered value in typeahead text field when focus leaves input away */\n  isInputValuePersisted?: boolean;\n  /** @beta Flag for retaining filter results on blur from keyboard-entered typeahead text */\n  isInputFilterPersisted?: boolean;\n  /** Flag indicating the typeahead input value should reset upon selection */\n  shouldResetOnSelect?: boolean;\n  /** Content rendered in the footer of the select menu */\n  footer?: React.ReactNode;\n  /** The container to append the menu to. Defaults to 'inline'.\n   * If your menu is being cut off you can append it to an element higher up the DOM tree.\n   * Some examples:\n   * menuAppendTo=\"parent\"\n   * menuAppendTo={() => document.body}\n   * menuAppendTo={document.getElementById('target')}\n   */\n  menuAppendTo?: HTMLElement | (() => HTMLElement) | 'inline' | 'parent';\n  /** Flag for indicating that the select menu should automatically flip vertically when\n   * it reaches the boundary. This prop can only be used when the select component is not\n   * appended inline, e.g. `menuAppendTo=\"parent\"`\n   */\n  isFlipEnabled?: boolean;\n}\n\nexport interface SelectState {\n  focusFirstOption: boolean;\n  typeaheadInputValue: string | null;\n  typeaheadFilteredChildren: React.ReactNode[];\n  favoritesGroup: React.ReactNode[];\n  typeaheadCurrIndex: number;\n  creatableValue: string;\n  tabbedIntoFavoritesMenu: boolean;\n  typeaheadStoredIndex: number;\n  ouiaStateId: string;\n  viewMoreNextIndex: number;\n}\n\nexport class Select extends React.Component<SelectProps & OUIAProps, SelectState> {\n  static displayName = 'Select';\n  private parentRef = React.createRef<HTMLDivElement>();\n  private menuComponentRef = React.createRef<HTMLElement>();\n  private filterRef = React.createRef<HTMLInputElement>();\n  private clearRef = React.createRef<HTMLButtonElement>();\n  private inputRef = React.createRef<HTMLInputElement>();\n  private refCollection: HTMLElement[][] = [[]];\n  private optionContainerRefCollection: HTMLElement[] = [];\n  private footerRef = React.createRef<HTMLDivElement>();\n\n  static defaultProps: PickOptional<SelectProps> = {\n    children: [] as React.ReactElement[],\n    className: '',\n    position: SelectPosition.left,\n    direction: SelectDirection.down,\n    toggleId: null as string,\n    isOpen: false,\n    isGrouped: false,\n    isPlain: false,\n    isDisabled: false,\n    hasPlaceholderStyle: false,\n    isCreatable: false,\n    validated: 'default',\n    'aria-label': '',\n    'aria-labelledby': '',\n    'aria-describedby': '',\n    'aria-invalid': false,\n    typeAheadAriaLabel: '',\n    typeAheadAriaDescribedby: '',\n    clearSelectionsAriaLabel: 'Clear all',\n    toggleAriaLabel: 'Options menu',\n    removeSelectionAriaLabel: 'Remove',\n    selections: [],\n    createText: 'Create',\n    placeholderText: '',\n    noResultsFoundText: 'No results found',\n    variant: SelectVariant.single,\n    width: '',\n    onClear: () => undefined as void,\n    onCreateOption: () => undefined as void,\n    toggleIcon: null as React.ReactElement,\n    onFilter: null,\n    onTypeaheadInputChanged: null,\n    customContent: null,\n    hasInlineFilter: false,\n    inlineFilterPlaceholderText: null,\n    customBadgeText: null,\n    inputIdPrefix: '',\n    inputAutoComplete: 'off',\n    menuAppendTo: 'inline',\n    favorites: [] as string[],\n    favoritesLabel: 'Favorites',\n    ouiaSafe: true,\n    chipGroupComponent: null,\n    isInputValuePersisted: false,\n    isInputFilterPersisted: false,\n    isCreateSelectOptionObject: false,\n    shouldResetOnSelect: true,\n    isFlipEnabled: false\n  };\n\n  state: SelectState = {\n    focusFirstOption: false,\n    typeaheadInputValue: null,\n    typeaheadFilteredChildren: React.Children.toArray(this.props.children),\n    favoritesGroup: [] as React.ReactNode[],\n    typeaheadCurrIndex: -1,\n    typeaheadStoredIndex: -1,\n    creatableValue: '',\n    tabbedIntoFavoritesMenu: false,\n    ouiaStateId: getDefaultOUIAId(Select.displayName, this.props.variant),\n    viewMoreNextIndex: -1\n  };\n\n  getTypeaheadActiveChild = (typeaheadCurrIndex: number) =>\n    this.refCollection[typeaheadCurrIndex] ? this.refCollection[typeaheadCurrIndex][0] : null;\n\n  componentDidUpdate = (prevProps: SelectProps, prevState: SelectState) => {\n    if (this.props.hasInlineFilter) {\n      this.refCollection[0][0] = this.filterRef.current;\n    }\n\n    // Move focus to top of the menu if state.focusFirstOption was updated to true and the menu does not have custom content\n    if (!prevState.focusFirstOption && this.state.focusFirstOption && !this.props.customContent) {\n      const firstRef = this.refCollection.find(ref => ref !== null);\n      if (firstRef && firstRef[0]) {\n        firstRef[0].focus();\n      }\n    } else if (\n      // if viewMoreNextIndex is not -1, view more was clicked, set focus on first newly loaded item\n      this.state.viewMoreNextIndex !== -1 &&\n      this.refCollection.length > this.state.viewMoreNextIndex &&\n      this.props.loadingVariant !== 'spinner' &&\n      this.refCollection[this.state.viewMoreNextIndex][0] &&\n      this.props.variant !== 'typeahead' && // do not hard focus newly added items for typeahead variants\n      this.props.variant !== 'typeaheadmulti'\n    ) {\n      this.refCollection[this.state.viewMoreNextIndex][0].focus();\n    }\n\n    const hasUpdatedChildren =\n      prevProps.children.length !== this.props.children.length ||\n      prevProps.children.some((prevChild: React.ReactElement, index: number) => {\n        const prevChildProps = prevChild.props;\n        const currChild = this.props.children[index];\n        const { props: currChildProps } = currChild;\n\n        if (prevChildProps && currChildProps) {\n          return (\n            prevChildProps.value !== currChildProps.value ||\n            prevChildProps.label !== currChildProps.label ||\n            prevChildProps.isDisabled !== currChildProps.isDisabled ||\n            prevChildProps.isPlaceholder !== currChildProps.isPlaceholder\n          );\n        } else {\n          return prevChild !== currChild;\n        }\n      });\n\n    if (hasUpdatedChildren) {\n      this.updateTypeAheadFilteredChildren(prevState.typeaheadInputValue || '', null);\n    }\n\n    // for menus with favorites,\n    // if the number of favorites or typeahead filtered children has changed, the generated\n    // list of favorites needs to be updated\n    if (\n      this.props.onFavorite &&\n      (this.props.favorites.length !== prevProps.favorites.length ||\n        this.state.typeaheadFilteredChildren !== prevState.typeaheadFilteredChildren)\n    ) {\n      const tempRenderableChildren =\n        this.props.variant === 'typeahead' || this.props.variant === 'typeaheadmulti'\n          ? this.state.typeaheadFilteredChildren\n          : this.props.children;\n      const renderableFavorites = createRenderableFavorites(\n        tempRenderableChildren,\n        this.props.isGrouped,\n        this.props.favorites\n      );\n      const favoritesGroup = renderableFavorites.length\n        ? [\n            <SelectGroup key=\"favorites\" label={this.props.favoritesLabel}>\n              {renderableFavorites}\n            </SelectGroup>,\n            <Divider key=\"favorites-group-divider\" />\n          ]\n        : [];\n      this.setState({ favoritesGroup });\n    }\n  };\n\n  onEnter = () => {\n    this.setState({ focusFirstOption: true });\n  };\n\n  onToggle = (isExpanded: boolean, e: React.MouseEvent | React.ChangeEvent | React.KeyboardEvent | Event) => {\n    const { isInputValuePersisted, onSelect, onToggle, hasInlineFilter } = this.props;\n    if (!isExpanded && isInputValuePersisted && onSelect) {\n      onSelect(undefined, this.inputRef.current ? this.inputRef.current.value : '');\n    }\n    if (isExpanded && hasInlineFilter) {\n      this.setState({\n        focusFirstOption: true\n      });\n    }\n    onToggle(isExpanded, e);\n  };\n\n  onClose = () => {\n    const { isInputFilterPersisted } = this.props;\n\n    this.setState({\n      focusFirstOption: false,\n      typeaheadInputValue: null,\n      ...(!isInputFilterPersisted && {\n        typeaheadFilteredChildren: React.Children.toArray(this.props.children)\n      }),\n      typeaheadCurrIndex: -1,\n      tabbedIntoFavoritesMenu: false,\n      viewMoreNextIndex: -1\n    });\n  };\n\n  onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.value.toString() !== '' && !this.props.isOpen) {\n      this.onToggle(true, e);\n    }\n\n    if (this.props.onTypeaheadInputChanged) {\n      this.props.onTypeaheadInputChanged(e.target.value.toString());\n    }\n\n    this.setState({\n      typeaheadCurrIndex: -1,\n      typeaheadInputValue: e.target.value,\n      creatableValue: e.target.value\n    });\n    this.updateTypeAheadFilteredChildren(e.target.value.toString(), e);\n    this.refCollection = [[]];\n  };\n\n  updateTypeAheadFilteredChildren = (typeaheadInputValue: string, e: React.ChangeEvent<HTMLInputElement> | null) => {\n    let typeaheadFilteredChildren: any;\n\n    const {\n      onFilter,\n      isCreatable,\n      onCreateOption,\n      createText,\n      noResultsFoundText,\n      children,\n      isGrouped,\n      isCreateSelectOptionObject,\n      loadingVariant\n    } = this.props;\n\n    if (onFilter) {\n      /* The updateTypeAheadFilteredChildren callback is not only called on input changes but also when the children change.\n       * In this case the e is null but we can get the typeaheadInputValue from the state.\n       */\n      typeaheadFilteredChildren = onFilter(e, e ? e.target.value : typeaheadInputValue) || children;\n    } else {\n      let input: RegExp;\n      try {\n        input = new RegExp(typeaheadInputValue.toString(), 'i');\n      } catch (err) {\n        input = new RegExp(typeaheadInputValue.toString().replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i');\n      }\n      const childrenArray = React.Children.toArray(children) as React.ReactElement<SelectGroupProps>[];\n      if (isGrouped) {\n        const childFilter = (child: React.ReactElement<SelectGroupProps>) =>\n          child.props.value &&\n          child.props.value.toString &&\n          this.getDisplay(child.props.value.toString(), 'text').search(input) === 0;\n        typeaheadFilteredChildren =\n          typeaheadInputValue.toString() !== ''\n            ? React.Children.map(children, group => {\n                if (React.isValidElement(group) && group.type === SelectGroup) {\n                  const filteredGroupChildren = (React.Children.toArray(group.props.children) as React.ReactElement<\n                    SelectGroupProps\n                  >[]).filter(childFilter);\n                  if (filteredGroupChildren.length > 0) {\n                    return React.cloneElement(group, {\n                      titleId: group.props.label && group.props.label.replace(/\\W/g, '-'),\n                      children: filteredGroupChildren as any\n                    });\n                  }\n                } else {\n                  return (React.Children.toArray(group) as React.ReactElement<SelectGroupProps>[]).filter(childFilter);\n                }\n              })\n            : childrenArray;\n      } else {\n        typeaheadFilteredChildren =\n          typeaheadInputValue.toString() !== ''\n            ? childrenArray.filter(child => {\n                const valueToCheck = child.props.value;\n                // Dividers don't have value and should not be filtered\n                if (!valueToCheck) {\n                  return true;\n                }\n\n                const isSelectOptionObject =\n                  typeof valueToCheck !== 'string' &&\n                  (valueToCheck as SelectOptionObject).toString &&\n                  (valueToCheck as SelectOptionObject).compareTo;\n\n                // View more option should be returned as not a match\n                if (loadingVariant !== 'spinner' && loadingVariant?.text === valueToCheck) {\n                  return true;\n                }\n\n                // spinner should be returned as not a match\n                if (loadingVariant === 'spinner' && valueToCheck === 'loading') {\n                  return true;\n                }\n\n                if (isSelectOptionObject) {\n                  return (valueToCheck as SelectOptionObject).compareTo(typeaheadInputValue);\n                } else {\n                  return this.getDisplay(child.props.value.toString(), 'text').search(input) === 0;\n                }\n              })\n            : childrenArray;\n      }\n    }\n    if (!typeaheadFilteredChildren) {\n      typeaheadFilteredChildren = [];\n    }\n    if (typeaheadFilteredChildren.length === 0) {\n      !isCreatable &&\n        typeaheadFilteredChildren.push(\n          <SelectOption isDisabled key=\"no-results\" value={noResultsFoundText} isNoResultsOption />\n        );\n    }\n    if (isCreatable && typeaheadInputValue !== '') {\n      const newValue = typeaheadInputValue;\n      if (\n        !typeaheadFilteredChildren.find(\n          (i: React.ReactElement) =>\n            i.props.value && i.props.value.toString().toLowerCase() === newValue.toString().toLowerCase()\n        )\n      ) {\n        const newOptionValue = isCreateSelectOptionObject\n          ? ({\n              toString: () => newValue,\n              compareTo: value =>\n                this.toString()\n                  .toLowerCase()\n                  .includes(value.toString().toLowerCase())\n            } as SelectOptionObject)\n          : newValue;\n\n        typeaheadFilteredChildren.push(\n          <SelectOption\n            key={`create ${newValue}`}\n            value={newOptionValue}\n            onClick={() => onCreateOption && onCreateOption(newValue)}\n          >\n            {createText} \"{newValue}\"\n          </SelectOption>\n        );\n      }\n    }\n\n    this.setState({\n      typeaheadFilteredChildren\n    });\n  };\n\n  onClick = (e: React.MouseEvent) => {\n    if (!this.props.isOpen) {\n      this.onToggle(true, e);\n    }\n  };\n\n  clearSelection = (_e: React.MouseEvent) => {\n    this.setState({\n      typeaheadInputValue: null,\n      typeaheadFilteredChildren: React.Children.toArray(this.props.children),\n      typeaheadCurrIndex: -1\n    });\n  };\n\n  extendTypeaheadChildren(typeaheadCurrIndex: number, favoritesGroup?: React.ReactNode[]) {\n    const { isGrouped, onFavorite } = this.props;\n    const typeaheadChildren = favoritesGroup\n      ? favoritesGroup.concat(this.state.typeaheadFilteredChildren)\n      : this.state.typeaheadFilteredChildren;\n    const activeElement = this.optionContainerRefCollection[typeaheadCurrIndex];\n\n    let typeaheadActiveChild = this.getTypeaheadActiveChild(typeaheadCurrIndex);\n    if (typeaheadActiveChild && typeaheadActiveChild.classList.contains('pf-m-description')) {\n      typeaheadActiveChild = typeaheadActiveChild.firstElementChild as HTMLElement;\n    }\n\n    this.refCollection = [[]];\n    this.optionContainerRefCollection = [];\n    if (isGrouped) {\n      return React.Children.map(typeaheadChildren as React.ReactElement[], (group: React.ReactElement) => {\n        if (group.type === Divider) {\n          return group;\n        } else if (group.type === SelectGroup && onFavorite) {\n          return React.cloneElement(group, {\n            titleId: group.props.label && group.props.label.replace(/\\W/g, '-'),\n            children: React.Children.map(group.props.children, (child: React.ReactElement) =>\n              child.type === Divider\n                ? child\n                : React.cloneElement(child as React.ReactElement, {\n                    isFocused:\n                      activeElement &&\n                      (activeElement.id === (child as React.ReactElement).props.id ||\n                        (this.props.isCreatable &&\n                          typeaheadActiveChild.innerText ===\n                            `{createText} \"${(group as React.ReactElement).props.value}\"`))\n                  })\n            )\n          });\n        } else if (group.type === SelectGroup) {\n          return React.cloneElement(group, {\n            titleId: group.props.label && group.props.label.replace(/\\W/g, '-'),\n            children: React.Children.map(group.props.children, (child: React.ReactElement) =>\n              child.type === Divider\n                ? child\n                : React.cloneElement(child as React.ReactElement, {\n                    isFocused:\n                      typeaheadActiveChild &&\n                      (typeaheadActiveChild.innerText === (child as React.ReactElement).props.value.toString() ||\n                        (this.props.isCreatable &&\n                          typeaheadActiveChild.innerText ===\n                            `{createText} \"${(child as React.ReactElement).props.value}\"`))\n                  })\n            )\n          });\n        } else {\n          // group has been filtered down to SelectOption\n          return React.cloneElement(group as React.ReactElement, {\n            isFocused:\n              typeaheadActiveChild &&\n              (typeaheadActiveChild.innerText === group.props.value.toString() ||\n                (this.props.isCreatable && typeaheadActiveChild.innerText === `{createText} \"${group.props.value}\"`))\n          });\n        }\n      });\n    }\n    return typeaheadChildren.map((child: React.ReactNode, index) => {\n      const childElement = child as any;\n      return childElement.type.displayName === 'Divider'\n        ? child\n        : React.cloneElement(child as React.ReactElement, {\n            isFocused: typeaheadActiveChild\n              ? typeaheadActiveChild.innerText === (child as React.ReactElement).props.value.toString() ||\n                (this.props.isCreatable &&\n                  typeaheadActiveChild.innerText === `{createText} \"${(child as React.ReactElement).props.value}\"`)\n              : index === typeaheadCurrIndex // fallback for view more + typeahead use cases, when the new expanded list is loaded and refCollection hasn't be updated yet\n          });\n    });\n  }\n\n  sendRef = (\n    optionRef: React.ReactNode,\n    favoriteRef: React.ReactNode,\n    optionContainerRef: React.ReactNode,\n    index: number\n  ) => {\n    this.refCollection[index] = [optionRef as HTMLElement, favoriteRef as HTMLElement];\n    this.optionContainerRefCollection[index] = optionContainerRef as HTMLElement;\n  };\n\n  handleMenuKeys = (index: number, innerIndex: number, position: string) => {\n    keyHandler(index, innerIndex, position, this.refCollection, this.refCollection);\n    if (this.props.variant === SelectVariant.typeahead || this.props.variant === SelectVariant.typeaheadMulti) {\n      if (position !== 'tab') {\n        this.handleTypeaheadKeys(position);\n      }\n    }\n  };\n\n  moveFocus = (nextIndex: number, updateCurrentIndex: boolean = true) => {\n    const { isCreatable, createText } = this.props;\n\n    const hasDescriptionElm = Boolean(\n      this.refCollection[nextIndex][0] && this.refCollection[nextIndex][0].classList.contains('pf-m-description')\n    );\n    const isLoad = Boolean(\n      this.refCollection[nextIndex][0] && this.refCollection[nextIndex][0].classList.contains('pf-m-load')\n    );\n    const optionTextElm = hasDescriptionElm\n      ? (this.refCollection[nextIndex][0].firstElementChild as HTMLElement)\n      : this.refCollection[nextIndex][0];\n\n    let typeaheadInputValue = '';\n    if (isCreatable && optionTextElm.innerText.includes(createText)) {\n      typeaheadInputValue = this.state.creatableValue;\n    } else if (optionTextElm && !isLoad) {\n      // !isLoad prevents the view more button text from appearing the typeahead input\n      typeaheadInputValue = optionTextElm.innerText;\n    }\n    this.setState(prevState => ({\n      typeaheadCurrIndex: updateCurrentIndex ? nextIndex : prevState.typeaheadCurrIndex,\n      typeaheadStoredIndex: nextIndex,\n      typeaheadInputValue\n    }));\n  };\n\n  switchFocusToFavoriteMenu = () => {\n    const { typeaheadCurrIndex, typeaheadStoredIndex } = this.state;\n    let indexForFocus = 0;\n\n    if (typeaheadCurrIndex !== -1) {\n      indexForFocus = typeaheadCurrIndex;\n    } else if (typeaheadStoredIndex !== -1) {\n      indexForFocus = typeaheadStoredIndex;\n    }\n\n    if (this.refCollection[indexForFocus] !== null && this.refCollection[indexForFocus][0] !== null) {\n      this.refCollection[indexForFocus][0].focus();\n    } else {\n      this.clearRef.current.focus();\n    }\n\n    this.setState({\n      tabbedIntoFavoritesMenu: true,\n      typeaheadCurrIndex: -1\n    });\n  };\n\n  moveFocusToLastMenuItem = () => {\n    const refCollectionLen = this.refCollection.length;\n    if (\n      refCollectionLen > 0 &&\n      this.refCollection[refCollectionLen - 1] !== null &&\n      this.refCollection[refCollectionLen - 1][0] !== null\n    ) {\n      this.refCollection[refCollectionLen - 1][0].focus();\n    }\n  };\n\n  handleTypeaheadKeys = (position: string, shiftKey: boolean = false) => {\n    const { isOpen, onFavorite, isCreatable } = this.props;\n    const { typeaheadCurrIndex, tabbedIntoFavoritesMenu } = this.state;\n    const typeaheadActiveChild = this.getTypeaheadActiveChild(typeaheadCurrIndex);\n    if (isOpen) {\n      if (position === 'enter') {\n        if (\n          (typeaheadCurrIndex !== -1 || (isCreatable && this.refCollection.length === 1)) && // do not allow selection without moving to an initial option unless it is a single create option\n          (typeaheadActiveChild || (this.refCollection[0] && this.refCollection[0][0]))\n        ) {\n          if (typeaheadActiveChild) {\n            if (!typeaheadActiveChild.classList.contains('pf-m-load')) {\n              const hasDescriptionElm = typeaheadActiveChild.childElementCount > 1;\n              const typeaheadActiveChildText = hasDescriptionElm\n                ? (typeaheadActiveChild.firstChild as HTMLElement).innerText\n                : typeaheadActiveChild.innerText;\n              this.setState({\n                typeaheadInputValue: typeaheadActiveChildText\n              });\n            }\n          } else if (this.refCollection[0] && this.refCollection[0][0]) {\n            this.setState({\n              typeaheadInputValue: this.refCollection[0][0].innerText\n            });\n          }\n          if (typeaheadActiveChild) {\n            typeaheadActiveChild.click();\n          } else {\n            this.refCollection[0][0].click();\n          }\n        }\n      } else if (position === 'tab') {\n        if (onFavorite) {\n          // if the input has focus, tab to the first item or the last item that was previously focused.\n          if (this.inputRef.current === document.activeElement) {\n            // If shift is also clicked and there is a footer, tab to the last item in tabbable footer\n            if (this.props.footer && shiftKey) {\n              const tabbableItems = findTabbableElements(this.footerRef, SelectFooterTabbableItems);\n              if (tabbableItems.length > 0) {\n                if (tabbableItems[tabbableItems.length - 1]) {\n                  tabbableItems[tabbableItems.length - 1].focus();\n                }\n              }\n            } else {\n              this.switchFocusToFavoriteMenu();\n            }\n          } else {\n            // focus is on menu or footer\n            if (this.props.footer) {\n              let tabbedIntoMenu = false;\n              const tabbableItems = findTabbableElements(this.footerRef, SelectFooterTabbableItems);\n              if (tabbableItems.length > 0) {\n                // if current element is not in footer, tab to first tabbable element in footer,\n                // if shift was clicked, tab to input since focus is on menu\n                const currentElementIndex = tabbableItems.findIndex((item: any) => item === document.activeElement);\n                if (currentElementIndex === -1) {\n                  if (shiftKey) {\n                    // currently in menu, shift back to input\n                    this.inputRef.current.focus();\n                  } else {\n                    // currently in menu, tab to first tabbable item in footer\n                    tabbableItems[0].focus();\n                  }\n                } else {\n                  // already in footer\n                  if (shiftKey) {\n                    // shift to previous item\n                    if (currentElementIndex === 0) {\n                      // on first footer item, shift back to menu\n                      this.switchFocusToFavoriteMenu();\n                      tabbedIntoMenu = true;\n                    } else {\n                      // shift to previous footer item\n                      tabbableItems[currentElementIndex - 1].focus();\n                    }\n                  } else {\n                    // tab to next tabbable item in footer or to input.\n                    if (tabbableItems[currentElementIndex + 1]) {\n                      tabbableItems[currentElementIndex + 1].focus();\n                    } else {\n                      this.inputRef.current.focus();\n                    }\n                  }\n                }\n              } else {\n                // no tabbable items in footer, tab to input\n                this.inputRef.current.focus();\n                tabbedIntoMenu = false;\n              }\n              this.setState({ tabbedIntoFavoritesMenu: tabbedIntoMenu });\n            } else {\n              this.inputRef.current.focus();\n              this.setState({ tabbedIntoFavoritesMenu: false });\n            }\n          }\n        } else {\n          // Close if there is no footer\n          if (!this.props.footer) {\n            this.onToggle(false, null);\n            this.onClose();\n          } else {\n            // has footer\n            const tabbableItems = findTabbableElements(this.footerRef, SelectFooterTabbableItems);\n            const currentElementIndex = tabbableItems.findIndex((item: any) => item === document.activeElement);\n            if (this.inputRef.current === document.activeElement) {\n              if (shiftKey) {\n                // close toggle if shift key and tab on input\n                this.onToggle(false, null);\n                this.onClose();\n              } else {\n                // tab to first tabbable item in footer\n                if (tabbableItems[0]) {\n                  tabbableItems[0].focus();\n                } else {\n                  this.onToggle(false, null);\n                  this.onClose();\n                }\n              }\n            } else {\n              // focus is in footer\n              if (shiftKey) {\n                if (currentElementIndex === 0) {\n                  // shift tab back to input\n                  this.inputRef.current.focus();\n                } else {\n                  // shift to previous footer item\n                  tabbableItems[currentElementIndex - 1].focus();\n                }\n              } else {\n                // tab to next footer item or close tab if last item\n                if (tabbableItems[currentElementIndex + 1]) {\n                  tabbableItems[currentElementIndex + 1].focus();\n                } else {\n                  // no next item, close toggle\n                  this.onToggle(false, null);\n                  this.inputRef.current.focus();\n                  this.onClose();\n                }\n              }\n            }\n          }\n        }\n      } else if (!tabbedIntoFavoritesMenu) {\n        if (this.refCollection[0][0] === null) {\n          return;\n        }\n        let nextIndex;\n        if (typeaheadCurrIndex === -1 && position === 'down') {\n          nextIndex = 0;\n        } else if (typeaheadCurrIndex === -1 && position === 'up') {\n          nextIndex = this.refCollection.length - 1;\n        } else if (position !== 'left' && position !== 'right') {\n          nextIndex = getNextIndex(typeaheadCurrIndex, position, this.refCollection);\n        } else {\n          nextIndex = typeaheadCurrIndex;\n        }\n        if (this.refCollection[nextIndex] === null) {\n          return;\n        }\n        this.moveFocus(nextIndex);\n      } else {\n        const nextIndex = this.refCollection.findIndex(\n          ref => ref !== undefined && (ref[0] === document.activeElement || ref[1] === document.activeElement)\n        );\n        this.moveFocus(nextIndex);\n      }\n    }\n  };\n\n  onClickTypeaheadToggleButton = () => {\n    if (this.inputRef && this.inputRef.current) {\n      this.inputRef.current.focus();\n    }\n  };\n\n  getDisplay = (value: string | SelectOptionObject, type: 'node' | 'text' = 'node') => {\n    if (!value) {\n      return;\n    }\n    const item = this.props.isGrouped\n      ? (React.Children.toArray(this.props.children) as React.ReactElement[])\n          .reduce((acc, curr) => [...acc, ...React.Children.toArray(curr.props.children)], [])\n          .find(child => child.props.value.toString() === value.toString())\n      : React.Children.toArray(this.props.children).find(\n          child =>\n            (child as React.ReactElement).props.value &&\n            (child as React.ReactElement).props.value.toString() === value.toString()\n        );\n    if (item) {\n      if (item && item.props.children) {\n        if (type === 'node') {\n          return item.props.children;\n        }\n        return this.findText(item);\n      }\n      return item.props.value.toString();\n    }\n    return value.toString();\n  };\n\n  findText = (item: React.ReactNode) => {\n    if (typeof item === 'string') {\n      return item;\n    } else if (!React.isValidElement(item)) {\n      return '';\n    } else {\n      const multi: string[] = [];\n      React.Children.toArray(item.props.children).forEach(child => multi.push(this.findText(child)));\n      return multi.join('');\n    }\n  };\n\n  generateSelectedBadge = () => {\n    const { customBadgeText, selections } = this.props;\n    if (customBadgeText !== null) {\n      return customBadgeText;\n    }\n    if (Array.isArray(selections) && selections.length > 0) {\n      return selections.length;\n    }\n    return null;\n  };\n\n  setVieMoreNextIndex = () => {\n    this.setState({ viewMoreNextIndex: this.refCollection.length - 1 });\n  };\n\n  isLastOptionBeforeFooter = (index: any) =>\n    this.props.footer && index === this.refCollection.length - 1 ? true : false;\n\n  render() {\n    const {\n      children,\n      chipGroupProps,\n      chipGroupComponent,\n      className,\n      customContent,\n      variant,\n      direction,\n      onSelect,\n      onClear,\n      onBlur,\n      toggleId,\n      isOpen,\n      isGrouped,\n      isPlain,\n      isDisabled,\n      hasPlaceholderStyle,\n      validated,\n      selections: selectionsProp,\n      typeAheadAriaLabel,\n      typeAheadAriaDescribedby,\n      clearSelectionsAriaLabel,\n      toggleAriaLabel,\n      removeSelectionAriaLabel,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-describedby': ariaDescribedby,\n      'aria-invalid': ariaInvalid,\n      placeholderText,\n      width,\n      maxHeight,\n      toggleIcon,\n      ouiaId,\n      ouiaSafe,\n      hasInlineFilter,\n      isCheckboxSelectionBadgeHidden,\n      inlineFilterPlaceholderText,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      onFilter,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      onTypeaheadInputChanged,\n      onCreateOption,\n      isCreatable,\n      onToggle,\n      createText,\n      noResultsFoundText,\n      customBadgeText,\n      inputIdPrefix,\n      inputAutoComplete,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      isInputValuePersisted,\n      isInputFilterPersisted,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      menuAppendTo,\n      favorites,\n      onFavorite,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      favoritesLabel,\n      footer,\n      loadingVariant,\n      isCreateSelectOptionObject,\n      shouldResetOnSelect,\n      isFlipEnabled,\n      ...props\n    } = this.props;\n    const {\n      focusFirstOption: openedOnEnter,\n      typeaheadCurrIndex,\n      typeaheadInputValue,\n      typeaheadFilteredChildren,\n      favoritesGroup\n    } = this.state;\n    const selectToggleId = toggleId || `pf-select-toggle-id-${currentId++}`;\n    const selections = Array.isArray(selectionsProp) ? selectionsProp : [selectionsProp];\n    // Find out if the selected option is a placeholder\n    const selectedOption = React.Children.toArray(children).find(\n      (option: any) => option.props.value === selections[0]\n    ) as any;\n    const isSelectedPlaceholder = selectedOption && selectedOption.props.isPlaceholder;\n    const hasAnySelections = Boolean(selections[0] && selections[0] !== '');\n    const typeaheadActiveChild = this.getTypeaheadActiveChild(typeaheadCurrIndex);\n    let childPlaceholderText = null as string;\n\n    // If onFavorites is set,  add isFavorite prop to children and add a Favorites group to the SelectMenu\n    let renderableItems: React.ReactNode[] = [];\n    if (onFavorite) {\n      // if variant is type-ahead call the extendTypeaheadChildren before adding favorites\n      let tempExtendedChildren: (React.ReactElement | React.ReactNode | {})[] = children;\n      if (variant === 'typeahead' || variant === 'typeaheadmulti') {\n        tempExtendedChildren = this.extendTypeaheadChildren(typeaheadCurrIndex, favoritesGroup);\n      } else if (onFavorite) {\n        tempExtendedChildren = favoritesGroup.concat(children);\n      }\n      // mark items that are favorited with isFavorite\n      renderableItems = extendItemsWithFavorite(tempExtendedChildren, isGrouped, favorites);\n    } else {\n      renderableItems = children;\n    }\n\n    if (!customContent) {\n      if (!hasAnySelections && !placeholderText) {\n        const childPlaceholder = React.Children.toArray(children).filter(\n          (child: React.ReactNode) => (child as React.ReactElement).props.isPlaceholder === true\n        );\n        childPlaceholderText =\n          (childPlaceholder[0] && this.getDisplay((childPlaceholder[0] as React.ReactElement).props.value, 'node')) ||\n          (children[0] && this.getDisplay(children[0].props.value, 'node'));\n      }\n    }\n\n    if (isOpen) {\n      if (renderableItems.find(item => (item as any)?.key === 'loading') === undefined) {\n        if (loadingVariant === 'spinner') {\n          renderableItems.push(\n            <SelectOption isLoading key=\"loading\" value=\"loading\">\n              <Spinner size=\"lg\" />\n            </SelectOption>\n          );\n        } else if (loadingVariant?.text) {\n          renderableItems.push(\n            <SelectOption\n              isLoad\n              key=\"loading\"\n              value={loadingVariant.text}\n              setViewMoreNextIndex={this.setVieMoreNextIndex}\n              onClick={loadingVariant?.onClick}\n            />\n          );\n        }\n      }\n    }\n\n    const hasOnClear = onClear !== Select.defaultProps.onClear;\n    const clearBtn = (\n      <button\n        className={css(buttonStyles.button, buttonStyles.modifiers.plain, styles.selectToggleClear)}\n        onClick={e => {\n          this.clearSelection(e);\n          onClear(e);\n          e.stopPropagation();\n        }}\n        aria-label={clearSelectionsAriaLabel}\n        type=\"button\"\n        disabled={isDisabled}\n        ref={this.clearRef}\n        onKeyDown={event => {\n          if (event.key === KeyTypes.Enter) {\n            this.clearRef.current.click();\n          }\n        }}\n      >\n        <TimesCircleIcon aria-hidden />\n      </button>\n    );\n\n    let selectedChips = null as any;\n    if (variant === SelectVariant.typeaheadMulti) {\n      selectedChips = chipGroupComponent ? (\n        chipGroupComponent\n      ) : (\n        <ChipGroup {...chipGroupProps}>\n          {selections &&\n            (selections as string[]).map(item => (\n              <Chip\n                key={item}\n                onClick={(e: React.MouseEvent) => onSelect(e, item)}\n                closeBtnAriaLabel={removeSelectionAriaLabel}\n              >\n                {this.getDisplay(item, 'node')}\n              </Chip>\n            ))}\n        </ChipGroup>\n      );\n    }\n\n    if (hasInlineFilter) {\n      const filterBox = (\n        <React.Fragment>\n          <div key=\"inline-filter\" className={css(styles.selectMenuSearch)}>\n            <input\n              key=\"inline-filter-input\"\n              type=\"search\"\n              className={css(formStyles.formControl, formStyles.modifiers.search)}\n              onChange={this.onChange}\n              placeholder={inlineFilterPlaceholderText}\n              onKeyDown={event => {\n                if (event.key === KeyTypes.ArrowUp) {\n                  this.handleMenuKeys(0, 0, 'up');\n                  event.preventDefault();\n                } else if (event.key === KeyTypes.ArrowDown) {\n                  this.handleMenuKeys(0, 0, 'down');\n                  event.preventDefault();\n                } else if (event.key === KeyTypes.ArrowLeft) {\n                  this.handleMenuKeys(0, 0, 'left');\n                  event.preventDefault();\n                } else if (event.key === KeyTypes.ArrowRight) {\n                  this.handleMenuKeys(0, 0, 'right');\n                  event.preventDefault();\n                } else if (event.key === KeyTypes.Tab && variant !== SelectVariant.checkbox && this.props.footer) {\n                  // tab to footer or close menu if shift key\n                  if (event.shiftKey) {\n                    this.onToggle(false, event);\n                  } else {\n                    const tabbableItems = findTabbableElements(this.footerRef, SelectFooterTabbableItems);\n                    if (tabbableItems.length > 0) {\n                      tabbableItems[0].focus();\n                      event.stopPropagation();\n                      event.preventDefault();\n                    } else {\n                      this.onToggle(false, event);\n                    }\n                  }\n                } else if (event.key === KeyTypes.Tab && variant === SelectVariant.checkbox) {\n                  // More modal-like experience for checkboxes\n                  // Let SelectOption handle this\n                  if (event.shiftKey) {\n                    this.handleMenuKeys(0, 0, 'up');\n                  } else {\n                    this.handleMenuKeys(0, 0, 'down');\n                  }\n                  event.stopPropagation();\n                  event.preventDefault();\n                }\n              }}\n              ref={this.filterRef}\n              autoComplete={inputAutoComplete}\n            />\n          </div>\n          <Divider key=\"inline-filter-divider\" />\n        </React.Fragment>\n      );\n      renderableItems = [filterBox, ...(typeaheadFilteredChildren as React.ReactElement[])].map((option, index) =>\n        React.cloneElement(option, { key: index })\n      );\n    }\n\n    let variantProps: any;\n    let variantChildren: any;\n    if (customContent) {\n      variantProps = {\n        selected: selections,\n        openedOnEnter,\n        isCustomContent: true\n      };\n      variantChildren = customContent;\n    } else {\n      switch (variant) {\n        case 'single':\n          variantProps = {\n            selected: selections[0],\n            hasInlineFilter,\n            openedOnEnter\n          };\n          variantChildren = renderableItems;\n          break;\n        case 'checkbox':\n          variantProps = {\n            checked: selections,\n            isGrouped,\n            hasInlineFilter,\n            openedOnEnter\n          };\n          variantChildren = renderableItems;\n          break;\n        case 'typeahead':\n          variantProps = {\n            selected: selections[0],\n            openedOnEnter\n          };\n          variantChildren = onFavorite ? renderableItems : this.extendTypeaheadChildren(typeaheadCurrIndex);\n          if (variantChildren.length === 0) {\n            variantChildren.push(<SelectOption isDisabled key={0} value={noResultsFoundText} isNoResultsOption />);\n          }\n          break;\n        case 'typeaheadmulti':\n          variantProps = {\n            selected: selections,\n            openedOnEnter\n          };\n          variantChildren = onFavorite ? renderableItems : this.extendTypeaheadChildren(typeaheadCurrIndex);\n          if (variantChildren.length === 0) {\n            variantChildren.push(<SelectOption isDisabled key={0} value={noResultsFoundText} isNoResultsOption />);\n          }\n          break;\n      }\n    }\n\n    const innerMenu = (\n      <SelectMenu\n        // This removes the `position: absolute` styling from the `.pf-c-select__menu`\n        // allowing the menu to flip correctly\n        {...(isFlipEnabled && { style: { position: 'revert' } })}\n        {...props}\n        isGrouped={isGrouped}\n        selected={selections}\n        {...variantProps}\n        openedOnEnter={openedOnEnter}\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabelledBy}\n        sendRef={this.sendRef}\n        keyHandler={this.handleMenuKeys}\n        maxHeight={maxHeight}\n        ref={this.menuComponentRef}\n        footer={footer}\n        footerRef={this.footerRef}\n        isLastOptionBeforeFooter={this.isLastOptionBeforeFooter}\n      >\n        {variantChildren}\n      </SelectMenu>\n    );\n\n    const menuContainer = footer ? <div className={css(styles.selectMenu)}> {innerMenu} </div> : innerMenu;\n\n    const popperContainer = (\n      <div\n        className={css(\n          styles.select,\n          isOpen && styles.modifiers.expanded,\n          validated === ValidatedOptions.success && styles.modifiers.success,\n          validated === ValidatedOptions.warning && styles.modifiers.warning,\n          validated === ValidatedOptions.error && styles.modifiers.invalid,\n          direction === SelectDirection.up && styles.modifiers.top,\n          className\n        )}\n        {...(width && { style: { width } })}\n        {...(ariaDescribedby && { 'aria-describedby': ariaDescribedby })}\n        {...(validated !== ValidatedOptions.default && { 'aria-invalid': ariaInvalid })}\n      >\n        {isOpen && menuContainer}\n      </div>\n    );\n\n    const mainContainer = (\n      <div\n        className={css(\n          styles.select,\n          isOpen && styles.modifiers.expanded,\n          validated === ValidatedOptions.success && styles.modifiers.success,\n          validated === ValidatedOptions.warning && styles.modifiers.warning,\n          validated === ValidatedOptions.error && styles.modifiers.invalid,\n          direction === SelectDirection.up && styles.modifiers.top,\n          className\n        )}\n        ref={this.parentRef}\n        {...getOUIAProps(Select.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n        {...(width && { style: { width } })}\n        {...(ariaDescribedby && { 'aria-describedby': ariaDescribedby })}\n        {...(validated !== ValidatedOptions.default && { 'aria-invalid': ariaInvalid })}\n      >\n        <SelectToggle\n          id={selectToggleId}\n          parentRef={this.parentRef}\n          menuRef={this.menuComponentRef}\n          {...(footer && { footerRef: this.footerRef })}\n          isOpen={isOpen}\n          isPlain={isPlain}\n          hasPlaceholderStyle={\n            hasPlaceholderStyle && (!selections.length || selections[0] === null || isSelectedPlaceholder)\n          }\n          onToggle={this.onToggle}\n          onEnter={this.onEnter}\n          onClose={this.onClose}\n          onBlur={onBlur}\n          variant={variant}\n          aria-labelledby={`${ariaLabelledBy || ''} ${selectToggleId}`}\n          aria-label={toggleAriaLabel}\n          handleTypeaheadKeys={this.handleTypeaheadKeys}\n          moveFocusToLastMenuItem={this.moveFocusToLastMenuItem}\n          isDisabled={isDisabled}\n          hasClearButton={hasOnClear}\n          hasFooter={footer !== undefined}\n          onClickTypeaheadToggleButton={this.onClickTypeaheadToggleButton}\n        >\n          {customContent && (\n            <div className={css(styles.selectToggleWrapper)}>\n              {toggleIcon && <span className={css(styles.selectToggleIcon)}>{toggleIcon}</span>}\n              <span className={css(styles.selectToggleText)}>{placeholderText}</span>\n            </div>\n          )}\n          {variant === SelectVariant.single && !customContent && (\n            <React.Fragment>\n              <div className={css(styles.selectToggleWrapper)}>\n                {toggleIcon && <span className={css(styles.selectToggleIcon)}>{toggleIcon}</span>}\n                <span className={css(styles.selectToggleText)}>\n                  {this.getDisplay(selections[0] as string, 'node') || placeholderText || childPlaceholderText}\n                </span>\n              </div>\n              {hasOnClear && hasAnySelections && clearBtn}\n            </React.Fragment>\n          )}\n          {variant === SelectVariant.checkbox && !customContent && (\n            <React.Fragment>\n              <div className={css(styles.selectToggleWrapper)}>\n                {toggleIcon && <span className={css(styles.selectToggleIcon)}>{toggleIcon}</span>}\n                <span className={css(styles.selectToggleText)}>{placeholderText}</span>\n                {!isCheckboxSelectionBadgeHidden && hasAnySelections && (\n                  <div className={css(styles.selectToggleBadge)}>\n                    <span className={css(badgeStyles.badge, badgeStyles.modifiers.read)}>\n                      {this.generateSelectedBadge()}\n                    </span>\n                  </div>\n                )}\n              </div>\n              {hasOnClear && hasAnySelections && clearBtn}\n            </React.Fragment>\n          )}\n          {variant === SelectVariant.typeahead && !customContent && (\n            <React.Fragment>\n              <div className={css(styles.selectToggleWrapper)}>\n                {toggleIcon && <span className={css(styles.selectToggleIcon)}>{toggleIcon}</span>}\n                <input\n                  className={css(formStyles.formControl, styles.selectToggleTypeahead)}\n                  aria-activedescendant={typeaheadActiveChild && typeaheadActiveChild.id}\n                  id={`${selectToggleId}-select-typeahead`}\n                  aria-label={typeAheadAriaLabel}\n                  {...(typeAheadAriaDescribedby && { 'aria-describedby': typeAheadAriaDescribedby })}\n                  placeholder={placeholderText as string}\n                  value={\n                    typeaheadInputValue !== null\n                      ? typeaheadInputValue\n                      : this.getDisplay(selections[0] as string, 'text') || ''\n                  }\n                  type=\"text\"\n                  onClick={this.onClick}\n                  onChange={this.onChange}\n                  autoComplete={inputAutoComplete}\n                  disabled={isDisabled}\n                  ref={this.inputRef}\n                />\n              </div>\n              {hasOnClear && (selections[0] || typeaheadInputValue) && clearBtn}\n            </React.Fragment>\n          )}\n          {variant === SelectVariant.typeaheadMulti && !customContent && (\n            <React.Fragment>\n              <div className={css(styles.selectToggleWrapper)}>\n                {toggleIcon && <span className={css(styles.selectToggleIcon)}>{toggleIcon}</span>}\n                {selections && Array.isArray(selections) && selections.length > 0 && selectedChips}\n                <input\n                  className={css(formStyles.formControl, styles.selectToggleTypeahead)}\n                  aria-activedescendant={typeaheadActiveChild && typeaheadActiveChild.id}\n                  id={`${selectToggleId}-select-multi-typeahead-typeahead`}\n                  aria-label={typeAheadAriaLabel}\n                  aria-invalid={validated === ValidatedOptions.error}\n                  {...(typeAheadAriaDescribedby && { 'aria-describedby': typeAheadAriaDescribedby })}\n                  placeholder={placeholderText as string}\n                  value={typeaheadInputValue !== null ? typeaheadInputValue : ''}\n                  type=\"text\"\n                  onChange={this.onChange}\n                  onClick={this.onClick}\n                  autoComplete={inputAutoComplete}\n                  disabled={isDisabled}\n                  ref={this.inputRef}\n                />\n              </div>\n              {hasOnClear && ((selections && selections.length > 0) || typeaheadInputValue) && clearBtn}\n            </React.Fragment>\n          )}\n          {validated === ValidatedOptions.success && (\n            <span className={css(styles.selectToggleStatusIcon)}>\n              <CheckCircleIcon aria-hidden=\"true\" />\n            </span>\n          )}\n          {validated === ValidatedOptions.error && (\n            <span className={css(styles.selectToggleStatusIcon)}>\n              <ExclamationCircleIcon aria-hidden=\"true\" />\n            </span>\n          )}\n          {validated === ValidatedOptions.warning && (\n            <span className={css(styles.selectToggleStatusIcon)}>\n              <ExclamationTriangleIcon aria-hidden=\"true\" />\n            </span>\n          )}\n        </SelectToggle>\n        {isOpen && menuAppendTo === 'inline' && menuContainer}\n      </div>\n    );\n\n    const getParentElement = () => {\n      if (this.parentRef && this.parentRef.current) {\n        return this.parentRef.current.parentElement;\n      }\n      return null;\n    };\n\n    return (\n      <GenerateId>\n        {randomId => (\n          <SelectContext.Provider\n            value={{\n              onSelect,\n              onFavorite,\n              onClose: this.onClose,\n              variant,\n              inputIdPrefix: inputIdPrefix || randomId,\n              shouldResetOnSelect\n            }}\n          >\n            {menuAppendTo === 'inline' ? (\n              mainContainer\n            ) : (\n              <Popper\n                trigger={mainContainer}\n                popper={popperContainer}\n                direction={direction}\n                appendTo={menuAppendTo === 'parent' ? getParentElement() : menuAppendTo}\n                isVisible={isOpen}\n              />\n            )}\n          </SelectContext.Provider>\n        )}\n      </GenerateId>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}