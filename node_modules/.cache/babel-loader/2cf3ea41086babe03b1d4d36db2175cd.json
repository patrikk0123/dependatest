{"ast":null,"code":"import _classCallCheck from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n/**\n * This component wraps any ReactNode and finds its ref\n * It has to be a class for findDOMNode to work\n * Ideally, all components used as triggers/toggles are either:\n * - class based components we can assign our own ref to\n * - functional components that have forwardRef implemented\n * However, there is no guarantee that is what will get passed in as trigger/toggle in the case of tooltips and popovers\n */\n\nexport var FindRefWrapper = /*#__PURE__*/function (_React$Component) {\n  _inherits(FindRefWrapper, _React$Component);\n\n  var _super = _createSuper(FindRefWrapper);\n\n  function FindRefWrapper() {\n    _classCallCheck(this, FindRefWrapper);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FindRefWrapper, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // eslint-disable-next-line react/no-find-dom-node\n      var root = ReactDOM.findDOMNode(this);\n      this.props.onFoundRef(root);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children || null;\n    }\n  }]);\n\n  return FindRefWrapper;\n}(React.Component);\nFindRefWrapper.displayName = 'FindRefWrapper';","map":{"version":3,"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;AAOA;;;;;;;;;AAQA,WAAaC,cAAb;EAAA;;EAAA;;EAAA;IAAA;;IAAA;EAAA;;EAAA;IAAA;IAAA,OAEE,6BAAiB;MACf;MACA,IAAMC,IAAI,GAAGF,QAAQ,CAACG,WAAT,CAAqB,IAArB,CAAb;MACA,KAAKC,KAAL,CAAWC,UAAX,CAAsBH,IAAtB;IACD;EANH;IAAA;IAAA,OAQE,kBAAM;MACJ,OAAO,KAAKE,KAAL,CAAWE,QAAX,IAAuB,IAA9B;IACD;EAVH;;EAAA;AAAA,EAAoCP,KAAK,CAACQ,SAA1C;AACSN,6BAAc,gBAAd","names":["React","ReactDOM","FindRefWrapper","root","findDOMNode","props","onFoundRef","children","Component"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/helpers/Popper/FindRefWrapper.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\ninterface FindRefWrapperProps {\n  children: React.ReactNode;\n  onFoundRef: any;\n}\n\n/**\n * This component wraps any ReactNode and finds its ref\n * It has to be a class for findDOMNode to work\n * Ideally, all components used as triggers/toggles are either:\n * - class based components we can assign our own ref to\n * - functional components that have forwardRef implemented\n * However, there is no guarantee that is what will get passed in as trigger/toggle in the case of tooltips and popovers\n */\nexport class FindRefWrapper extends React.Component<FindRefWrapperProps> {\n  static displayName = 'FindRefWrapper';\n  componentDidMount() {\n    // eslint-disable-next-line react/no-find-dom-node\n    const root = ReactDOM.findDOMNode(this);\n    this.props.onFoundRef(root);\n  }\n\n  render() {\n    return this.props.children || null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}