{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/NotificationDrawer/notification-drawer';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport { Text, TextVariants } from '../Text';\nimport { Button, ButtonVariant } from '../Button';\nexport const NotificationDrawerHeader = _a => {\n  var {\n    children,\n    className = '',\n    count,\n    closeButtonAriaLabel = 'Close',\n    customText,\n    onClose,\n    title = 'Notifications',\n    unreadText = 'unread'\n  } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"count\", \"closeButtonAriaLabel\", \"customText\", \"onClose\", \"title\", \"unreadText\"]);\n\n  return React.createElement(\"div\", Object.assign({}, props, {\n    className: css(styles.notificationDrawerHeader, className)\n  }), React.createElement(Text, {\n    component: TextVariants.h1,\n    className: css(styles.notificationDrawerHeaderTitle)\n  }, title), (customText !== undefined || count !== undefined) && React.createElement(\"span\", {\n    className: css(styles.notificationDrawerHeaderStatus)\n  }, customText || `${count} ${unreadText}`), (children || onClose) && React.createElement(\"div\", {\n    className: css(styles.notificationDrawerHeaderAction)\n  }, children, onClose && React.createElement(\"div\", null, React.createElement(Button, {\n    variant: ButtonVariant.plain,\n    \"aria-label\": closeButtonAriaLabel,\n    onClick: onClose\n  }, React.createElement(TimesIcon, {\n    \"aria-hidden\": \"true\"\n  })))));\n};\nNotificationDrawerHeader.displayName = 'NotificationDrawerHeader';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,gFAAnB;AACA,OAAOC,SAAP,MAAsB,mDAAtB;AAEA,SAASC,IAAT,EAAeC,YAAf,QAAmC,SAAnC;AACA,SAASC,MAAT,EAAiBC,aAAjB,QAAsC,WAAtC;AAqBA,OAAO,MAAMC,wBAAwB,GAA4DC,EAAD,IAU5D;MAV6D;IAC/FC,QAD+F;IAE/FC,SAAS,GAAG,EAFmF;IAG/FC,KAH+F;IAI/FC,oBAAoB,GAAG,OAJwE;IAK/FC,UAL+F;IAM/FC,OAN+F;IAO/FC,KAAK,GAAG,eAPuF;IAQ/FC,UAAU,GAAG;EARkF,IAQ1ER;MAClBS,KAAK,cATuF,0GASvF;;EAC2B,OACnClB,6CAASkB,KAAT,EAAc;IAAEP,SAAS,EAAEV,GAAG,CAACC,MAAM,CAACiB,wBAAR,EAAkCR,SAAlC;EAAhB,CAAd,GACEX,oBAACI,IAAD,EAAK;IAACgB,SAAS,EAAEf,YAAY,CAACgB,EAAzB;IAA6BV,SAAS,EAAEV,GAAG,CAACC,MAAM,CAACoB,6BAAR;EAA3C,CAAL,EACGN,KADH,CADF,EAIG,CAACF,UAAU,KAAKS,SAAf,IAA4BX,KAAK,KAAKW,SAAvC,KACCvB;IAAMW,SAAS,EAAEV,GAAG,CAACC,MAAM,CAACsB,8BAAR;EAApB,GAA8DV,UAAU,IAAI,GAAGF,KAAK,IAAIK,UAAU,EAAlG,CALJ,EAOG,CAACP,QAAQ,IAAIK,OAAb,KACCf;IAAKW,SAAS,EAAEV,GAAG,CAACC,MAAM,CAACuB,8BAAR;EAAnB,GACGf,QADH,EAEGK,OAAO,IACNf,iCACEA,oBAACM,MAAD,EAAO;IAACoB,OAAO,EAAEnB,aAAa,CAACoB,KAAxB;IAA6B,cAAcd,oBAA3C;IAAiEe,OAAO,EAAEb;EAA1E,CAAP,EACEf,oBAACG,SAAD,EAAU;IAAA,eAAa;EAAb,CAAV,CADF,CADF,CAHJ,CARJ,CADmC;AAqBpC,CA/BM;AAgCPK,wBAAwB,CAACqB,WAAzB,GAAuC,0BAAvC","names":["React","css","styles","TimesIcon","Text","TextVariants","Button","ButtonVariant","NotificationDrawerHeader","_a","children","className","count","closeButtonAriaLabel","customText","onClose","title","unreadText","props","notificationDrawerHeader","component","h1","notificationDrawerHeaderTitle","undefined","notificationDrawerHeaderStatus","notificationDrawerHeaderAction","variant","plain","onClick","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/NotificationDrawer/NotificationDrawerHeader.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/NotificationDrawer/notification-drawer';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\n\nimport { Text, TextVariants } from '../Text';\nimport { Button, ButtonVariant } from '../Button';\n\nexport interface NotificationDrawerHeaderProps extends React.HTMLProps<HTMLDivElement> {\n  /**  Content rendered inside the drawer */\n  children?: React.ReactNode;\n  /**  Additional classes for notification drawer header. */\n  className?: string;\n  /** Adds custom accessible text to the notification drawer close button. */\n  closeButtonAriaLabel?: string;\n  /**  Notification drawer heading count */\n  count?: number;\n  /**  Notification drawer heading custom text which can be used instead of providing count/unreadText */\n  customText?: string;\n  /**  Callback for when close button is clicked */\n  onClose?: () => void;\n  /**  Notification drawer heading title */\n  title?: string;\n  /**  Notification drawer heading unread text used in combination with a count */\n  unreadText?: string;\n}\n\nexport const NotificationDrawerHeader: React.FunctionComponent<NotificationDrawerHeaderProps> = ({\n  children,\n  className = '',\n  count,\n  closeButtonAriaLabel = 'Close',\n  customText,\n  onClose,\n  title = 'Notifications',\n  unreadText = 'unread',\n  ...props\n}: NotificationDrawerHeaderProps) => (\n  <div {...props} className={css(styles.notificationDrawerHeader, className)}>\n    <Text component={TextVariants.h1} className={css(styles.notificationDrawerHeaderTitle)}>\n      {title}\n    </Text>\n    {(customText !== undefined || count !== undefined) && (\n      <span className={css(styles.notificationDrawerHeaderStatus)}>{customText || `${count} ${unreadText}`}</span>\n    )}\n    {(children || onClose) && (\n      <div className={css(styles.notificationDrawerHeaderAction)}>\n        {children}\n        {onClose && (\n          <div>\n            <Button variant={ButtonVariant.plain} aria-label={closeButtonAriaLabel} onClick={onClose}>\n              <TimesIcon aria-hidden=\"true\" />\n            </Button>\n          </div>\n        )}\n      </div>\n    )}\n  </div>\n);\nNotificationDrawerHeader.displayName = 'NotificationDrawerHeader';\n"]},"metadata":{},"sourceType":"module"}