{"ast":null,"code":"import _classCallCheck from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Toolbar/toolbar';\nimport { css } from '@patternfly/react-styles';\nimport { formatBreakpointMods, toCamel } from '../../helpers/util';\nimport { PageContext } from '../Page/Page';\nexport var ToolbarGroupVariant;\n\n(function (ToolbarGroupVariant) {\n  ToolbarGroupVariant[\"filter-group\"] = \"filter-group\";\n  ToolbarGroupVariant[\"icon-button-group\"] = \"icon-button-group\";\n  ToolbarGroupVariant[\"button-group\"] = \"button-group\";\n})(ToolbarGroupVariant || (ToolbarGroupVariant = {}));\n\nvar ToolbarGroupWithRef = /*#__PURE__*/function (_React$Component) {\n  _inherits(ToolbarGroupWithRef, _React$Component);\n\n  var _super = _createSuper(ToolbarGroupWithRef);\n\n  function ToolbarGroupWithRef() {\n    _classCallCheck(this, ToolbarGroupWithRef);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ToolbarGroupWithRef, [{\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          visibility = _a.visibility,\n          visiblity = _a.visiblity,\n          alignment = _a.alignment,\n          spacer = _a.spacer,\n          spaceItems = _a.spaceItems,\n          className = _a.className,\n          variant = _a.variant,\n          children = _a.children,\n          innerRef = _a.innerRef,\n          props = __rest(_a, [\"visibility\", \"visiblity\", \"alignment\", \"spacer\", \"spaceItems\", \"className\", \"variant\", \"children\", \"innerRef\"]);\n\n      if (visiblity !== undefined) {\n        // eslint-disable-next-line no-console\n        console.warn('The ToolbarGroup visiblity prop has been deprecated. ' + 'Please use the correctly spelled visibility prop instead.');\n      }\n\n      return React.createElement(PageContext.Consumer, null, function (_ref) {\n        var width = _ref.width,\n            getBreakpoint = _ref.getBreakpoint;\n        return React.createElement(\"div\", Object.assign({\n          className: css(styles.toolbarGroup, variant && styles.modifiers[toCamel(variant)], formatBreakpointMods(visibility || visiblity, styles, '', getBreakpoint(width)), formatBreakpointMods(alignment, styles, '', getBreakpoint(width)), formatBreakpointMods(spacer, styles, '', getBreakpoint(width)), formatBreakpointMods(spaceItems, styles, '', getBreakpoint(width)), className)\n        }, props, {\n          ref: innerRef\n        }), children);\n      });\n    }\n  }]);\n\n  return ToolbarGroupWithRef;\n}(React.Component);\n\nexport var ToolbarGroup = React.forwardRef(function (props, ref) {\n  return React.createElement(ToolbarGroupWithRef, Object.assign({}, props, {\n    innerRef: ref\n  }));\n});","map":{"version":3,"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,yDAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,SAASC,oBAAT,EAA+BC,OAA/B,QAA8C,oBAA9C;AACA,SAASC,WAAT,QAA4B,cAA5B;AAEA,WAAYC,mBAAZ;;AAAA,WAAYA,mBAAZ,EAA+B;EAC7BA;EACAA;EACAA;AACD,CAJD,EAAYA,mBAAmB,KAAnBA,mBAAmB,MAA/B;;IAyDMC,mB;;;;;;;;;;;;;WACJ,kBAAM;MACE,SAWF,KAAKC,KAXH;MAAA,IACJC,UADI,GASIC,EATJ,CACJD,UADI;MAAA,IAEJE,SAFI,GASID,EATJ,CAEJC,SAFI;MAAA,IAGJC,SAHI,GASIF,EATJ,CAGJE,SAHI;MAAA,IAIJC,MAJI,GASIH,EATJ,CAIJG,MAJI;MAAA,IAKJC,UALI,GASIJ,EATJ,CAKJI,UALI;MAAA,IAMJC,SANI,GASIL,EATJ,CAMJK,SANI;MAAA,IAOJC,OAPI,GASIN,EATJ,CAOJM,OAPI;MAAA,IAQJC,QARI,GASIP,EATJ,CAQJO,QARI;MAAA,IASJC,QATI,GASIR,EATJ,CASJQ,QATI;MAAA,IAUDV,KAVC,GAUIW,WAVJ,gHAUI,CAVJ;;MAaN,IAAIR,SAAS,KAAKS,SAAlB,EAA6B;QAC3B;QACAC,OAAO,CAACC,IAAR,CACE,0DACE,2DAFJ;MAID;;MAED,OACEtB,oBAACK,WAAW,CAACkB,QAAb,EAAqB,IAArB,EACG;QAAA,IAAGC,KAAH,QAAGA,KAAH;QAAA,IAAUC,aAAV,QAAUA,aAAV;QAAA,OACCzB;UACEe,SAAS,EAAEb,GAAG,CACZD,MAAM,CAACyB,YADK,EAEZV,OAAO,IAAIf,MAAM,CAAC0B,SAAP,CAAiBvB,OAAO,CAACY,OAAD,CAAxB,CAFC,EAGZb,oBAAoB,CAACM,UAAU,IAAIE,SAAf,EAA0BV,MAA1B,EAAkC,EAAlC,EAAsCwB,aAAa,CAACD,KAAD,CAAnD,CAHR,EAIZrB,oBAAoB,CAACS,SAAD,EAAYX,MAAZ,EAAoB,EAApB,EAAwBwB,aAAa,CAACD,KAAD,CAArC,CAJR,EAKZrB,oBAAoB,CAACU,MAAD,EAASZ,MAAT,EAAiB,EAAjB,EAAqBwB,aAAa,CAACD,KAAD,CAAlC,CALR,EAMZrB,oBAAoB,CAACW,UAAD,EAAab,MAAb,EAAqB,EAArB,EAAyBwB,aAAa,CAACD,KAAD,CAAtC,CANR,EAOZT,SAPY;QADhB,GAUMP,KAVN,EAUW;UACToB,GAAG,EAAEV;QADI,CAVX,GAaGD,QAbH,CADD;MAAA,CADH,CADF;IAqBD;;;;EA5C+BjB,KAAK,CAAC6B,S;;AA+CxC,OAAO,IAAMC,YAAY,GAAG9B,KAAK,CAAC+B,UAAN,CAAiB,UAACvB,KAAD,EAA2BoB,GAA3B;EAAA,OAC3C5B,oBAACO,mBAAD,EAAoByB,kBAAKxB,KAAL,EAAU;IAAEU,QAAQ,EAAEU;EAAZ,CAAV,CAApB,CAD2C;AAAA,CAAjB,CAArB","names":["React","styles","css","formatBreakpointMods","toCamel","PageContext","ToolbarGroupVariant","ToolbarGroupWithRef","props","visibility","_a","visiblity","alignment","spacer","spaceItems","className","variant","children","innerRef","__rest","undefined","console","warn","Consumer","width","getBreakpoint","toolbarGroup","modifiers","ref","Component","ToolbarGroup","forwardRef","Object"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Toolbar/ToolbarGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Toolbar/toolbar';\nimport { css } from '@patternfly/react-styles';\nimport { formatBreakpointMods, toCamel } from '../../helpers/util';\nimport { PageContext } from '../Page/Page';\n\nexport enum ToolbarGroupVariant {\n  'filter-group' = 'filter-group',\n  'icon-button-group' = 'icon-button-group',\n  'button-group' = 'button-group'\n}\n\nexport interface ToolbarGroupProps extends Omit<React.HTMLProps<HTMLDivElement>, 'ref'> {\n  /** Classes applied to root element of the data toolbar group */\n  className?: string;\n  /** A type modifier which modifies spacing specifically depending on the type of group */\n  variant?: ToolbarGroupVariant | 'filter-group' | 'icon-button-group' | 'button-group';\n  /** Visibility at various breakpoints. */\n  visibility?: {\n    default?: 'hidden' | 'visible';\n    md?: 'hidden' | 'visible';\n    lg?: 'hidden' | 'visible';\n    xl?: 'hidden' | 'visible';\n    '2xl'?: 'hidden' | 'visible';\n  };\n  /** @deprecated prop misspelled */\n  visiblity?: {\n    default?: 'hidden' | 'visible';\n    md?: 'hidden' | 'visible';\n    lg?: 'hidden' | 'visible';\n    xl?: 'hidden' | 'visible';\n    '2xl'?: 'hidden' | 'visible';\n  };\n  /** Alignment at various breakpoints. */\n  alignment?: {\n    default?: 'alignRight' | 'alignLeft';\n    md?: 'alignRight' | 'alignLeft';\n    lg?: 'alignRight' | 'alignLeft';\n    xl?: 'alignRight' | 'alignLeft';\n    '2xl'?: 'alignRight' | 'alignLeft';\n  };\n  /** Spacers at various breakpoints. */\n  spacer?: {\n    default?: 'spacerNone' | 'spacerSm' | 'spacerMd' | 'spacerLg';\n    md?: 'spacerNone' | 'spacerSm' | 'spacerMd' | 'spacerLg';\n    lg?: 'spacerNone' | 'spacerSm' | 'spacerMd' | 'spacerLg';\n    xl?: 'spacerNone' | 'spacerSm' | 'spacerMd' | 'spacerLg';\n    '2xl'?: 'spacerNone' | 'spacerSm' | 'spacerMd' | 'spacerLg';\n  };\n  /** Space items at various breakpoints. */\n  spaceItems?: {\n    default?: 'spaceItemsNone' | 'spaceItemsSm' | 'spaceItemsMd' | 'spaceItemsLg';\n    md?: 'spaceItemsNone' | 'spaceItemsSm' | 'spaceItemsMd' | 'spaceItemsLg';\n    lg?: 'spaceItemsNone' | 'spaceItemsSm' | 'spaceItemsMd' | 'spaceItemsLg';\n    xl?: 'spaceItemsNone' | 'spaceItemsSm' | 'spaceItemsMd' | 'spaceItemsLg';\n    '2xl'?: 'spaceItemsNone' | 'spaceItemsSm' | 'spaceItemsMd' | 'spaceItemsLg';\n  };\n  /** Content to be rendered inside the data toolbar group */\n  children?: React.ReactNode;\n  /** Reference to pass to this group if it has .pf-m-chip-container modifier */\n  innerRef?: React.RefObject<any>;\n}\n\nclass ToolbarGroupWithRef extends React.Component<ToolbarGroupProps> {\n  render() {\n    const {\n      visibility,\n      visiblity,\n      alignment,\n      spacer,\n      spaceItems,\n      className,\n      variant,\n      children,\n      innerRef,\n      ...props\n    } = this.props;\n\n    if (visiblity !== undefined) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'The ToolbarGroup visiblity prop has been deprecated. ' +\n          'Please use the correctly spelled visibility prop instead.'\n      );\n    }\n\n    return (\n      <PageContext.Consumer>\n        {({ width, getBreakpoint }) => (\n          <div\n            className={css(\n              styles.toolbarGroup,\n              variant && styles.modifiers[toCamel(variant) as 'filterGroup' | 'iconButtonGroup' | 'buttonGroup'],\n              formatBreakpointMods(visibility || visiblity, styles, '', getBreakpoint(width)),\n              formatBreakpointMods(alignment, styles, '', getBreakpoint(width)),\n              formatBreakpointMods(spacer, styles, '', getBreakpoint(width)),\n              formatBreakpointMods(spaceItems, styles, '', getBreakpoint(width)),\n              className\n            )}\n            {...props}\n            ref={innerRef}\n          >\n            {children}\n          </div>\n        )}\n      </PageContext.Consumer>\n    );\n  }\n}\n\nexport const ToolbarGroup = React.forwardRef((props: ToolbarGroupProps, ref: any) => (\n  <ToolbarGroupWithRef {...props} innerRef={ref} />\n));\n"]},"metadata":{},"sourceType":"module"}