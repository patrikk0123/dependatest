{"ast":null,"code":"import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { TableText } from '../../TableText';\nexport const compoundExpand = (value, _ref) => {\n  let {\n    rowIndex,\n    columnIndex,\n    rowData,\n    column,\n    property\n  } = _ref;\n\n  if (!value) {\n    return null;\n  }\n\n  const {\n    title,\n    props\n  } = value;\n  const {\n    extraParams: {\n      onExpand\n    }\n  } = column;\n  const extraData = {\n    rowIndex,\n    columnIndex,\n    column,\n    property\n  };\n  /**\n   * @param {React.MouseEvent} event - Mouse event\n   */\n\n  function onToggle(event) {\n    // tslint:disable-next-line:no-unused-expression\n    onExpand && onExpand(event, rowIndex, columnIndex, props.isOpen, rowData, extraData);\n  }\n\n  return {\n    className: css(styles.tableCompoundExpansionToggle, props.isOpen && styles.modifiers.expanded),\n    children: props.isOpen !== undefined && React.createElement(\"button\", {\n      type: \"button\",\n      className: css(styles.tableButton),\n      onClick: onToggle,\n      \"aria-expanded\": props.isOpen,\n      \"aria-controls\": props.ariaControls\n    }, React.createElement(TableText, null, title))\n  };\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,qDAAnB;AAEA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,OAAO,MAAMC,cAAc,GAAe,CACxCC,KADwC,WAGtC;EAAA,IADF;IAAEC,QAAF;IAAYC,WAAZ;IAAyBC,OAAzB;IAAkCC,MAAlC;IAA0CC;EAA1C,CACE;;EACF,IAAI,CAACL,KAAL,EAAY;IACV,OAAO,IAAP;EACD;;EACD,MAAM;IAAEM,KAAF;IAASC;EAAT,IAAmBP,KAAzB;EACA,MAAM;IACJQ,WAAW,EAAE;MAAEC;IAAF;EADT,IAEFL,MAFJ;EAGA,MAAMM,SAAS,GAAG;IAChBT,QADgB;IAEhBC,WAFgB;IAGhBE,MAHgB;IAIhBC;EAJgB,CAAlB;EAOA;;;;EAGA,SAASM,QAAT,CAAkBC,KAAlB,EAAyC;IACvC;IACAH,QAAQ,IAAIA,QAAQ,CAACG,KAAD,EAAQX,QAAR,EAAkBC,WAAlB,EAA+BK,KAAK,CAACM,MAArC,EAA6CV,OAA7C,EAAsDO,SAAtD,CAApB;EACD;;EACD,OAAO;IACLI,SAAS,EAAElB,GAAG,CAACC,MAAM,CAACkB,4BAAR,EAAsCR,KAAK,CAACM,MAAN,IAAgBhB,MAAM,CAACmB,SAAP,CAAiBC,QAAvE,CADT;IAELC,QAAQ,EAAEX,KAAK,CAACM,MAAN,KAAiBM,SAAjB,IACRxB;MACEyB,IAAI,EAAC,QADP;MAEEN,SAAS,EAAElB,GAAG,CAACC,MAAM,CAACwB,WAAR,CAFhB;MAGEC,OAAO,EAAEX,QAHX;MAGmB,iBACFJ,KAAK,CAACM,MAJvB;MAI6B,iBACZN,KAAK,CAACgB;IALvB,GAOE5B,oBAACG,SAAD,EAAU,IAAV,EAAYQ,KAAZ,CAPF;EAHG,CAAP;AAcD,CAvCM","names":["React","css","styles","TableText","compoundExpand","value","rowIndex","columnIndex","rowData","column","property","title","props","extraParams","onExpand","extraData","onToggle","event","isOpen","className","tableCompoundExpansionToggle","modifiers","expanded","children","undefined","type","tableButton","onClick","ariaControls"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-table/src/components/Table/utils/decorators/compoundExpand.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { IExtra, IFormatterValueType, ITransform } from '../../TableTypes';\nimport { TableText } from '../../TableText';\n\nexport const compoundExpand: ITransform = (\n  value: IFormatterValueType,\n  { rowIndex, columnIndex, rowData, column, property }: IExtra\n) => {\n  if (!value) {\n    return null;\n  }\n  const { title, props } = value;\n  const {\n    extraParams: { onExpand }\n  } = column;\n  const extraData = {\n    rowIndex,\n    columnIndex,\n    column,\n    property\n  };\n\n  /**\n   * @param {React.MouseEvent} event - Mouse event\n   */\n  function onToggle(event: React.MouseEvent) {\n    // tslint:disable-next-line:no-unused-expression\n    onExpand && onExpand(event, rowIndex, columnIndex, props.isOpen, rowData, extraData);\n  }\n  return {\n    className: css(styles.tableCompoundExpansionToggle, props.isOpen && styles.modifiers.expanded),\n    children: props.isOpen !== undefined && (\n      <button\n        type=\"button\"\n        className={css(styles.tableButton)}\n        onClick={onToggle}\n        aria-expanded={props.isOpen}\n        aria-controls={props.ariaControls}\n      >\n        <TableText>{title}</TableText>\n      </button>\n    )\n  };\n};\n"]},"metadata":{},"sourceType":"module"}