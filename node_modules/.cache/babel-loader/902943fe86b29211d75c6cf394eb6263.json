{"ast":null,"code":"import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { SortColumn, SortByDirection } from '../../SortColumn';\nimport StarIcon from '@patternfly/react-icons/dist/esm/icons/star-icon';\nexport const sortableFavorites = sort => () => sortable(React.createElement(StarIcon, {\n  \"aria-hidden\": true\n}), {\n  columnIndex: sort.columnIndex,\n  className: styles.modifiers.favorite,\n  ariaLabel: 'Sort favorites',\n  column: {\n    extraParams: {\n      sortBy: sort.sortBy,\n      onSort: sort === null || sort === void 0 ? void 0 : sort.onSort\n    }\n  }\n});\nexport const sortable = (label, _ref) => {\n  let {\n    columnIndex,\n    column,\n    property,\n    className,\n    ariaLabel\n  } = _ref;\n  const {\n    extraParams: {\n      sortBy,\n      onSort\n    }\n  } = column;\n  const extraData = {\n    columnIndex,\n    column,\n    property\n  };\n  const isSortedBy = sortBy && columnIndex === sortBy.index;\n  /**\n   * @param {React.MouseEvent} event - React mouse event\n   */\n\n  function sortClicked(event) {\n    let reversedDirection;\n\n    if (!isSortedBy) {\n      reversedDirection = sortBy.defaultDirection ? sortBy.defaultDirection : SortByDirection.asc;\n    } else {\n      reversedDirection = sortBy.direction === SortByDirection.asc ? SortByDirection.desc : SortByDirection.asc;\n    } // tslint:disable-next-line:no-unused-expression\n\n\n    onSort && onSort(event, columnIndex, reversedDirection, extraData);\n  }\n\n  return {\n    className: css(styles.tableSort, isSortedBy && styles.modifiers.selected, className),\n    'aria-sort': isSortedBy ? `${sortBy.direction}ending` : 'none',\n    children: React.createElement(SortColumn, {\n      isSortedBy: isSortedBy,\n      sortDirection: isSortedBy ? sortBy.direction : '',\n      onSort: sortClicked,\n      \"aria-label\": ariaLabel\n    }, label)\n  };\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,qDAAnB;AAEA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,kBAA5C;AACA,OAAOC,QAAP,MAAqB,kDAArB;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,IAAD,IAAe,MAC9CC,QAAQ,CAACR,oBAACK,QAAD,EAAS;EAAA;AAAA,CAAT,CAAD,EAA2B;EACjCI,WAAW,EAAEF,IAAI,CAACE,WADe;EAEjCC,SAAS,EAAER,MAAM,CAACS,SAAP,CAAiBC,QAFK;EAGjCC,SAAS,EAAE,gBAHsB;EAIjCC,MAAM,EAAE;IACNC,WAAW,EAAE;MACXC,MAAM,EAAET,IAAI,CAACS,MADF;MAEXC,MAAM,EAAEV,IAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAEU;IAFH;EADP;AAJyB,CAA3B,CADH;AAaP,OAAO,MAAMT,QAAQ,GAAe,CAClCU,KADkC,WAGhC;EAAA,IADF;IAAET,WAAF;IAAeK,MAAf;IAAuBK,QAAvB;IAAiCT,SAAjC;IAA4CG;EAA5C,CACE;EACF,MAAM;IACJE,WAAW,EAAE;MAAEC,MAAF;MAAUC;IAAV;EADT,IAEFH,MAFJ;EAIA,MAAMM,SAAS,GAAG;IAChBX,WADgB;IAEhBK,MAFgB;IAGhBK;EAHgB,CAAlB;EAMA,MAAME,UAAU,GAAGL,MAAM,IAAIP,WAAW,KAAKO,MAAM,CAACM,KAApD;EACA;;;;EAGA,SAASC,WAAT,CAAqBC,KAArB,EAA4C;IAC1C,IAAIC,iBAAJ;;IACA,IAAI,CAACJ,UAAL,EAAiB;MACfI,iBAAiB,GAAGT,MAAM,CAACU,gBAAP,GAA2BV,MAAM,CAACU,gBAAlC,GAAyEtB,eAAe,CAACuB,GAA7G;IACD,CAFD,MAEO;MACLF,iBAAiB,GAAGT,MAAM,CAACY,SAAP,KAAqBxB,eAAe,CAACuB,GAArC,GAA2CvB,eAAe,CAACyB,IAA3D,GAAkEzB,eAAe,CAACuB,GAAtG;IACD,CANyC,CAO1C;;;IACAV,MAAM,IAAIA,MAAM,CAACO,KAAD,EAAQf,WAAR,EAAqBgB,iBAArB,EAAwCL,SAAxC,CAAhB;EACD;;EAED,OAAO;IACLV,SAAS,EAAET,GAAG,CAACC,MAAM,CAAC4B,SAAR,EAAmBT,UAAU,IAAInB,MAAM,CAACS,SAAP,CAAiBoB,QAAlD,EAA4DrB,SAA5D,CADT;IAEL,aAAaW,UAAU,GAAG,GAAGL,MAAM,CAACY,SAAS,QAAtB,GAAiC,MAFnD;IAGLI,QAAQ,EACNhC,oBAACG,UAAD,EAAW;MACTkB,UAAU,EAAEA,UADH;MAETY,aAAa,EAAEZ,UAAU,GAAGL,MAAM,CAACY,SAAV,GAAsB,EAFtC;MAGTX,MAAM,EAAEM,WAHC;MAGU,cACPV;IAJH,CAAX,EAMGK,KANH;EAJG,CAAP;AAcD,CA3CM","names":["React","css","styles","SortColumn","SortByDirection","StarIcon","sortableFavorites","sort","sortable","columnIndex","className","modifiers","favorite","ariaLabel","column","extraParams","sortBy","onSort","label","property","extraData","isSortedBy","index","sortClicked","event","reversedDirection","defaultDirection","asc","direction","desc","tableSort","selected","children","sortDirection"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-table/src/components/Table/utils/decorators/sortable.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { IExtra, IFormatterValueType, ITransform } from '../../TableTypes';\nimport { SortColumn, SortByDirection } from '../../SortColumn';\nimport StarIcon from '@patternfly/react-icons/dist/esm/icons/star-icon';\n\nexport const sortableFavorites = (sort: any) => () =>\n  sortable(<StarIcon aria-hidden />, {\n    columnIndex: sort.columnIndex,\n    className: styles.modifiers.favorite,\n    ariaLabel: 'Sort favorites',\n    column: {\n      extraParams: {\n        sortBy: sort.sortBy,\n        onSort: sort?.onSort\n      }\n    }\n  });\n\nexport const sortable: ITransform = (\n  label: IFormatterValueType,\n  { columnIndex, column, property, className, ariaLabel }: IExtra\n) => {\n  const {\n    extraParams: { sortBy, onSort }\n  } = column;\n\n  const extraData = {\n    columnIndex,\n    column,\n    property\n  };\n\n  const isSortedBy = sortBy && columnIndex === sortBy.index;\n  /**\n   * @param {React.MouseEvent} event - React mouse event\n   */\n  function sortClicked(event: React.MouseEvent) {\n    let reversedDirection: SortByDirection;\n    if (!isSortedBy) {\n      reversedDirection = sortBy.defaultDirection ? (sortBy.defaultDirection as SortByDirection) : SortByDirection.asc;\n    } else {\n      reversedDirection = sortBy.direction === SortByDirection.asc ? SortByDirection.desc : SortByDirection.asc;\n    }\n    // tslint:disable-next-line:no-unused-expression\n    onSort && onSort(event, columnIndex, reversedDirection, extraData);\n  }\n\n  return {\n    className: css(styles.tableSort, isSortedBy && styles.modifiers.selected, className),\n    'aria-sort': isSortedBy ? `${sortBy.direction}ending` : 'none',\n    children: (\n      <SortColumn\n        isSortedBy={isSortedBy}\n        sortDirection={isSortedBy ? sortBy.direction : ''}\n        onSort={sortClicked}\n        aria-label={ariaLabel}\n      >\n        {label}\n      </SortColumn>\n    )\n  };\n};\n"]},"metadata":{},"sourceType":"module"}