{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Panel/panel';\nimport { css } from '@patternfly/react-styles';\n\nconst PanelBase = _a => {\n  var {\n    className,\n    children,\n    variant,\n    isScrollable,\n    innerRef\n  } = _a,\n      props = __rest(_a, [\"className\", \"children\", \"variant\", \"isScrollable\", \"innerRef\"]);\n\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.panel, variant === 'raised' && styles.modifiers.raised, variant === 'bordered' && styles.modifiers.bordered, isScrollable && styles.modifiers.scrollable, className),\n    ref: innerRef\n  }, props), children);\n};\n\nexport const Panel = React.forwardRef((props, ref) => React.createElement(PanelBase, Object.assign({\n  innerRef: ref\n}, props)));\nPanel.displayName = 'Panel';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,qDAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;;AAeA,MAAMC,SAAS,GAAyCC,EAAD,IAOtC;MAPuC;IACtDC,SADsD;IAEtDC,QAFsD;IAGtDC,OAHsD;IAItDC,YAJsD;IAKtDC;EALsD,IAK9CL;MACLM,KAAK,cAN8C,gEAM9C;;EACQ,OAChBV;IACEK,SAAS,EAAEH,GAAG,CACZD,MAAM,CAACU,KADK,EAEZJ,OAAO,KAAK,QAAZ,IAAwBN,MAAM,CAACW,SAAP,CAAiBC,MAF7B,EAGZN,OAAO,KAAK,UAAZ,IAA0BN,MAAM,CAACW,SAAP,CAAiBE,QAH/B,EAIZN,YAAY,IAAIP,MAAM,CAACW,SAAP,CAAiBG,UAJrB,EAKZV,SALY,CADhB;IAQEW,GAAG,EAAEP;EARP,GASMC,KATN,GAWGJ,QAXH,CADgB;AAcjB,CArBD;;AAuBA,OAAO,MAAMW,KAAK,GAAGjB,KAAK,CAACkB,UAAN,CAAiB,CAACR,KAAD,EAAoBM,GAApB,KACpChB,oBAACG,SAAD,EAAUgB;EAACV,QAAQ,EAAEO;AAAX,GAAoBN,KAApB,CAAV,CADmB,CAAd;AAGPO,KAAK,CAACG,WAAN,GAAoB,OAApB","names":["React","styles","css","PanelBase","_a","className","children","variant","isScrollable","innerRef","props","panel","modifiers","raised","bordered","scrollable","ref","Panel","forwardRef","Object","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Panel/Panel.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Panel/panel';\nimport { css } from '@patternfly/react-styles';\n\nexport interface PanelProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content rendered inside the panel */\n  children?: React.ReactNode;\n  /** Class to add to outer div */\n  className?: string;\n  /** Adds panel variant styles */\n  variant?: 'raised' | 'bordered';\n  /** Flag to add scrollable styling to the panel */\n  isScrollable?: boolean;\n  /** @hide Forwarded ref */\n  innerRef?: React.Ref<any>;\n}\n\nconst PanelBase: React.FunctionComponent<PanelProps> = ({\n  className,\n  children,\n  variant,\n  isScrollable,\n  innerRef,\n  ...props\n}: PanelProps) => (\n  <div\n    className={css(\n      styles.panel,\n      variant === 'raised' && styles.modifiers.raised,\n      variant === 'bordered' && styles.modifiers.bordered,\n      isScrollable && styles.modifiers.scrollable,\n      className\n    )}\n    ref={innerRef}\n    {...props}\n  >\n    {children}\n  </div>\n);\n\nexport const Panel = React.forwardRef((props: PanelProps, ref: React.Ref<any>) => (\n  <PanelBase innerRef={ref} {...props} />\n));\nPanel.displayName = 'Panel';\n"]},"metadata":{},"sourceType":"module"}