{"ast":null,"code":"import getWindow from '../dom-utils/getWindow';\nconst passive = {\n  passive: true\n};\n/**\n *\n */\n\nfunction effect(_ref) {\n  let {\n    state,\n    instance,\n    options\n  } = _ref;\n  const {\n    scroll = true,\n    resize = true\n  } = options;\n  const window = getWindow(state.elements.popper);\n  const scrollParents = [...state.scrollParents.reference, ...state.scrollParents.popper];\n\n  if (scroll) {\n    scrollParents.forEach(scrollParent => {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n\n  return () => {\n    if (scroll) {\n      scrollParents.forEach(scrollParent => {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n}\n\nexport default {\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: () => {},\n  effect,\n  data: {}\n};","map":{"version":3,"mappings":"AAEA,OAAOA,SAAP,MAAsB,wBAAtB;AAQA,MAAMC,OAAO,GAAG;EAAEA,OAAO,EAAE;AAAX,CAAhB;AAEA;;;;AAGA,SAASC,MAAT,OAAwE;EAAA,IAAxD;IAAEC,KAAF;IAASC,QAAT;IAAmBC;EAAnB,CAAwD;EACtE,MAAM;IAAEC,MAAM,GAAG,IAAX;IAAiBC,MAAM,GAAG;EAA1B,IAAmCF,OAAzC;EAEA,MAAMG,MAAM,GAAGR,SAAS,CAACG,KAAK,CAACM,QAAN,CAAeC,MAAhB,CAAxB;EACA,MAAMC,aAAa,GAAG,CAAC,GAAGR,KAAK,CAACQ,aAAN,CAAoBC,SAAxB,EAAmC,GAAGT,KAAK,CAACQ,aAAN,CAAoBD,MAA1D,CAAtB;;EAEA,IAAIJ,MAAJ,EAAY;IACVK,aAAa,CAACE,OAAd,CAAsBC,YAAY,IAAG;MACnCA,YAAY,CAACC,gBAAb,CAA8B,QAA9B,EAAwCX,QAAQ,CAACY,MAAjD,EAAyDf,OAAzD;IACD,CAFD;EAGD;;EAED,IAAIM,MAAJ,EAAY;IACVC,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCX,QAAQ,CAACY,MAA3C,EAAmDf,OAAnD;EACD;;EAED,OAAO,MAAK;IACV,IAAIK,MAAJ,EAAY;MACVK,aAAa,CAACE,OAAd,CAAsBC,YAAY,IAAG;QACnCA,YAAY,CAACG,mBAAb,CAAiC,QAAjC,EAA2Cb,QAAQ,CAACY,MAApD,EAA4Df,OAA5D;MACD,CAFD;IAGD;;IAED,IAAIM,MAAJ,EAAY;MACVC,MAAM,CAACS,mBAAP,CAA2B,QAA3B,EAAqCb,QAAQ,CAACY,MAA9C,EAAsDf,OAAtD;IACD;EACF,CAVD;AAWD;;AAID,eAAe;EACbiB,IAAI,EAAE,gBADO;EAEbC,OAAO,EAAE,IAFI;EAGbC,KAAK,EAAE,OAHM;EAIbC,EAAE,EAAE,MAAK,CAAG,CAJC;EAKbnB,MALa;EAMboB,IAAI,EAAE;AANO,CAAf","names":["getWindow","passive","effect","state","instance","options","scroll","resize","window","elements","popper","scrollParents","reference","forEach","scrollParent","addEventListener","update","removeEventListener","name","enabled","phase","fn","data"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/modifiers/eventListeners.ts"],"sourcesContent":["// @ts-nocheck\nimport { ModifierArguments, Modifier } from '../types';\nimport getWindow from '../dom-utils/getWindow';\n\n// eslint-disable-next-line import/no-unused-modules\nexport interface Options {\n  scroll: boolean;\n  resize: boolean;\n}\n\nconst passive = { passive: true };\n\n/**\n *\n */\nfunction effect({ state, instance, options }: ModifierArguments<Options>) {\n  const { scroll = true, resize = true } = options;\n\n  const window = getWindow(state.elements.popper);\n  const scrollParents = [...state.scrollParents.reference, ...state.scrollParents.popper];\n\n  if (scroll) {\n    scrollParents.forEach(scrollParent => {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n\n  return () => {\n    if (scroll) {\n      scrollParents.forEach(scrollParent => {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type EventListenersModifier = Modifier<'eventListeners', Options>;\nexport default {\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: () => {},\n  effect,\n  data: {}\n} as EventListenersModifier;\n"]},"metadata":{},"sourceType":"module"}