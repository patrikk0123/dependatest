{"ast":null,"code":"import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { SortColumn, SortByDirection } from '../../SortColumn';\nimport StarIcon from '@patternfly/react-icons/dist/esm/icons/star-icon';\nexport var sortableFavorites = function sortableFavorites(sort) {\n  return function () {\n    return sortable(React.createElement(StarIcon, {\n      \"aria-hidden\": true\n    }), {\n      columnIndex: sort.columnIndex,\n      className: styles.modifiers.favorite,\n      ariaLabel: 'Sort favorites',\n      column: {\n        extraParams: {\n          sortBy: sort.sortBy,\n          onSort: sort === null || sort === void 0 ? void 0 : sort.onSort\n        }\n      }\n    });\n  };\n};\nexport var sortable = function sortable(label, _ref) {\n  var columnIndex = _ref.columnIndex,\n      column = _ref.column,\n      property = _ref.property,\n      className = _ref.className,\n      ariaLabel = _ref.ariaLabel;\n  var _column$extraParams = column.extraParams,\n      sortBy = _column$extraParams.sortBy,\n      onSort = _column$extraParams.onSort;\n  var extraData = {\n    columnIndex: columnIndex,\n    column: column,\n    property: property\n  };\n  var isSortedBy = sortBy && columnIndex === sortBy.index;\n  /**\n   * @param {React.MouseEvent} event - React mouse event\n   */\n\n  function sortClicked(event) {\n    var reversedDirection;\n\n    if (!isSortedBy) {\n      reversedDirection = sortBy.defaultDirection ? sortBy.defaultDirection : SortByDirection.asc;\n    } else {\n      reversedDirection = sortBy.direction === SortByDirection.asc ? SortByDirection.desc : SortByDirection.asc;\n    } // tslint:disable-next-line:no-unused-expression\n\n\n    onSort && onSort(event, columnIndex, reversedDirection, extraData);\n  }\n\n  return {\n    className: css(styles.tableSort, isSortedBy && styles.modifiers.selected, className),\n    'aria-sort': isSortedBy ? \"\".concat(sortBy.direction, \"ending\") : 'none',\n    children: React.createElement(SortColumn, {\n      isSortedBy: isSortedBy,\n      sortDirection: isSortedBy ? sortBy.direction : '',\n      onSort: sortClicked,\n      \"aria-label\": ariaLabel\n    }, label)\n  };\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,qDAAnB;AAEA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,kBAA5C;AACA,OAAOC,QAAP,MAAqB,kDAArB;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,IAAD;EAAA,OAAe;IAAA,OAC9CC,QAAQ,CAACR,oBAACK,QAAD,EAAS;MAAA;IAAA,CAAT,CAAD,EAA2B;MACjCI,WAAW,EAAEF,IAAI,CAACE,WADe;MAEjCC,SAAS,EAAER,MAAM,CAACS,SAAP,CAAiBC,QAFK;MAGjCC,SAAS,EAAE,gBAHsB;MAIjCC,MAAM,EAAE;QACNC,WAAW,EAAE;UACXC,MAAM,EAAET,IAAI,CAACS,MADF;UAEXC,MAAM,EAAEV,IAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAEU;QAFH;MADP;IAJyB,CAA3B,CADsC;EAAA,CAAf;AAAA,CAA1B;AAaP,OAAO,IAAMT,QAAQ,GAAe,SAAvBA,QAAuB,CAClCU,KADkC,QAGhC;EAAA,IADAT,WACA,QADAA,WACA;EAAA,IADaK,MACb,QADaA,MACb;EAAA,IADqBK,QACrB,QADqBA,QACrB;EAAA,IAD+BT,SAC/B,QAD+BA,SAC/B;EAAA,IAD0CG,SAC1C,QAD0CA,SAC1C;EACF,0BAEIC,MAFJ,CACEC,WADF;EAAA,IACiBC,MADjB,uBACiBA,MADjB;EAAA,IACyBC,MADzB,uBACyBA,MADzB;EAIA,IAAMG,SAAS,GAAG;IAChBX,WAAW,EAAXA,WADgB;IAEhBK,MAAM,EAANA,MAFgB;IAGhBK,QAAQ,EAARA;EAHgB,CAAlB;EAMA,IAAME,UAAU,GAAGL,MAAM,IAAIP,WAAW,KAAKO,MAAM,CAACM,KAApD;EACA;;;;EAGA,SAASC,WAAT,CAAqBC,KAArB,EAA4C;IAC1C,IAAIC,iBAAJ;;IACA,IAAI,CAACJ,UAAL,EAAiB;MACfI,iBAAiB,GAAGT,MAAM,CAACU,gBAAP,GAA2BV,MAAM,CAACU,gBAAlC,GAAyEtB,eAAe,CAACuB,GAA7G;IACD,CAFD,MAEO;MACLF,iBAAiB,GAAGT,MAAM,CAACY,SAAP,KAAqBxB,eAAe,CAACuB,GAArC,GAA2CvB,eAAe,CAACyB,IAA3D,GAAkEzB,eAAe,CAACuB,GAAtG;IACD,CANyC,CAO1C;;;IACAV,MAAM,IAAIA,MAAM,CAACO,KAAD,EAAQf,WAAR,EAAqBgB,iBAArB,EAAwCL,SAAxC,CAAhB;EACD;;EAED,OAAO;IACLV,SAAS,EAAET,GAAG,CAACC,MAAM,CAAC4B,SAAR,EAAmBT,UAAU,IAAInB,MAAM,CAACS,SAAP,CAAiBoB,QAAlD,EAA4DrB,SAA5D,CADT;IAEL,aAAaW,UAAU,aAAML,MAAM,CAACY,SAAb,cAAiC,MAFnD;IAGLI,QAAQ,EACNhC,oBAACG,UAAD,EAAW;MACTkB,UAAU,EAAEA,UADH;MAETY,aAAa,EAAEZ,UAAU,GAAGL,MAAM,CAACY,SAAV,GAAsB,EAFtC;MAGTX,MAAM,EAAEM,WAHC;MAGU,cACPV;IAJH,CAAX,EAMGK,KANH;EAJG,CAAP;AAcD,CA3CM","names":["React","css","styles","SortColumn","SortByDirection","StarIcon","sortableFavorites","sort","sortable","columnIndex","className","modifiers","favorite","ariaLabel","column","extraParams","sortBy","onSort","label","property","extraData","isSortedBy","index","sortClicked","event","reversedDirection","defaultDirection","asc","direction","desc","tableSort","selected","children","sortDirection"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-table/src/components/Table/utils/decorators/sortable.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { IExtra, IFormatterValueType, ITransform } from '../../TableTypes';\nimport { SortColumn, SortByDirection } from '../../SortColumn';\nimport StarIcon from '@patternfly/react-icons/dist/esm/icons/star-icon';\n\nexport const sortableFavorites = (sort: any) => () =>\n  sortable(<StarIcon aria-hidden />, {\n    columnIndex: sort.columnIndex,\n    className: styles.modifiers.favorite,\n    ariaLabel: 'Sort favorites',\n    column: {\n      extraParams: {\n        sortBy: sort.sortBy,\n        onSort: sort?.onSort\n      }\n    }\n  });\n\nexport const sortable: ITransform = (\n  label: IFormatterValueType,\n  { columnIndex, column, property, className, ariaLabel }: IExtra\n) => {\n  const {\n    extraParams: { sortBy, onSort }\n  } = column;\n\n  const extraData = {\n    columnIndex,\n    column,\n    property\n  };\n\n  const isSortedBy = sortBy && columnIndex === sortBy.index;\n  /**\n   * @param {React.MouseEvent} event - React mouse event\n   */\n  function sortClicked(event: React.MouseEvent) {\n    let reversedDirection: SortByDirection;\n    if (!isSortedBy) {\n      reversedDirection = sortBy.defaultDirection ? (sortBy.defaultDirection as SortByDirection) : SortByDirection.asc;\n    } else {\n      reversedDirection = sortBy.direction === SortByDirection.asc ? SortByDirection.desc : SortByDirection.asc;\n    }\n    // tslint:disable-next-line:no-unused-expression\n    onSort && onSort(event, columnIndex, reversedDirection, extraData);\n  }\n\n  return {\n    className: css(styles.tableSort, isSortedBy && styles.modifiers.selected, className),\n    'aria-sort': isSortedBy ? `${sortBy.direction}ending` : 'none',\n    children: (\n      <SortColumn\n        isSortedBy={isSortedBy}\n        sortDirection={isSortedBy ? sortBy.direction : ''}\n        onSort={sortClicked}\n        aria-label={ariaLabel}\n      >\n        {label}\n      </SortColumn>\n    )\n  };\n};\n"]},"metadata":{},"sourceType":"module"}