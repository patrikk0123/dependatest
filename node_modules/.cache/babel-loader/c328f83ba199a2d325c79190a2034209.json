{"ast":null,"code":"/**\n * evaluate-transforms.ts\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport { mergeProps } from './merge-props';\n/**\n * @param {transformsType} transforms - transforms type\n * @param {string | object} value - value\n * @param {ExtraParamsType} extraParameters - extra params type\n */\n\nexport function evaluateTransforms() {\n  let transforms = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let value = arguments.length > 1 ? arguments[1] : undefined;\n  let extraParameters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!transforms.every(f => typeof f === 'function')) {\n      throw new Error(\"All transforms weren't functions!\");\n    }\n  }\n\n  if (transforms.length === 0) {\n    return {};\n  }\n\n  return mergeProps(...transforms.map(transform => transform(value, extraParameters)));\n}","map":{"version":3,"mappings":"AAAA;;;;;;AAMA,SAASA,UAAT,QAA2B,eAA3B;AAGA;;;;;;AAKA,OAAM,SAAUC,kBAAV,GAGiC;EAAA,IAFrCC,UAEqC,uEAFR,EAEQ;EAAA,IADrCC,KACqC;EAAA,IAArCC,eAAqC,uEAAF,EAAE;;EAErC,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IACzC,IAAI,CAACL,UAAU,CAACM,KAAX,CAAiBC,CAAC,IAAI,OAAOA,CAAP,KAAa,UAAnC,CAAL,EAAqD;MACnD,MAAM,IAAIC,KAAJ,CAAU,mCAAV,CAAN;IACD;EACF;;EAED,IAAIR,UAAU,CAACS,MAAX,KAAsB,CAA1B,EAA6B;IAC3B,OAAO,EAAP;EACD;;EAED,OAAOX,UAAU,CAAC,GAAGE,UAAU,CAACU,GAAX,CAAeC,SAAS,IAAIA,SAAS,CAACV,KAAD,EAAQC,eAAR,CAArC,CAAJ,CAAjB;AACD","names":["mergeProps","evaluateTransforms","transforms","value","extraParameters","process","env","NODE_ENV","every","f","Error","length","map","transform"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-table/src/components/Table/base/evaluate-transforms.ts"],"sourcesContent":["/**\n * evaluate-transforms.ts\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport { mergeProps } from './merge-props';\nimport { transformsType, ExtraParamsType } from './types';\n\n/**\n * @param {transformsType} transforms - transforms type\n * @param {string | object} value - value\n * @param {ExtraParamsType} extraParameters - extra params type\n */\nexport function evaluateTransforms(\n  transforms: transformsType = [],\n  value: string | object,\n  extraParameters: ExtraParamsType = {}\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!transforms.every(f => typeof f === 'function')) {\n      throw new Error(\"All transforms weren't functions!\");\n    }\n  }\n\n  if (transforms.length === 0) {\n    return {};\n  }\n\n  return mergeProps(...transforms.map(transform => transform(value, extraParameters)));\n}\n"]},"metadata":{},"sourceType":"module"}