{"ast":null,"code":"export const WizardDrawerWrapper = _ref => {\n  let {\n    hasDrawer,\n    wrapper,\n    children\n  } = _ref;\n  return hasDrawer ? wrapper(children) : children;\n};\nWizardDrawerWrapper.displayName = 'WizardDrawerWrapper';","map":{"version":3,"mappings":"AAWA,OAAO,MAAMA,mBAAmB,GAAsD;EAAA,IAAC;IACrFC,SADqF;IAErFC,OAFqF;IAGrFC;EAHqF,CAAD;EAAA,OAI/EF,SAAS,GAAGC,OAAO,CAACC,QAAD,CAAV,GAAuBA,QAJ+C;AAAA,CAA/E;AAMPH,mBAAmB,CAACI,WAApB,GAAkC,qBAAlC","names":["WizardDrawerWrapper","hasDrawer","wrapper","children","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Wizard/WizardDrawerWrapper.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport interface WizardDrawerWrapperProps {\n  /** The wizard content  */\n  children: React.ReactElement;\n  /** Flag indicating the wizard has a drawer for at least one of the wizard steps */\n  hasDrawer: boolean;\n  /** The drawer component which wraps the wizard content */\n  wrapper: (children: React.ReactElement) => JSX.Element;\n}\n\nexport const WizardDrawerWrapper: React.FunctionComponent<WizardDrawerWrapperProps> = ({\n  hasDrawer,\n  wrapper,\n  children\n}) => (hasDrawer ? wrapper(children) : children);\n\nWizardDrawerWrapper.displayName = 'WizardDrawerWrapper';\n"]},"metadata":{},"sourceType":"module"}