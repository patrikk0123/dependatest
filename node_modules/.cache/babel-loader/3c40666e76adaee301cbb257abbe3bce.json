{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport CopyIcon from '@patternfly/react-icons/dist/esm/icons/copy-icon';\nimport { Button } from '../Button';\nimport { Tooltip } from '../Tooltip';\nexport var ClipboardCopyButton = function ClipboardCopyButton(_a) {\n  var onClick = _a.onClick,\n      _a$exitDelay = _a.exitDelay,\n      exitDelay = _a$exitDelay === void 0 ? 0 : _a$exitDelay,\n      _a$entryDelay = _a.entryDelay,\n      entryDelay = _a$entryDelay === void 0 ? 300 : _a$entryDelay,\n      _a$maxWidth = _a.maxWidth,\n      maxWidth = _a$maxWidth === void 0 ? '100px' : _a$maxWidth,\n      _a$position = _a.position,\n      position = _a$position === void 0 ? 'top' : _a$position,\n      _a$ariaLabel = _a['aria-label'],\n      ariaLabel = _a$ariaLabel === void 0 ? 'Copyable input' : _a$ariaLabel,\n      id = _a.id,\n      textId = _a.textId,\n      children = _a.children,\n      _a$variant = _a.variant,\n      variant = _a$variant === void 0 ? 'control' : _a$variant,\n      props = __rest(_a, [\"onClick\", \"exitDelay\", \"entryDelay\", \"maxWidth\", \"position\", 'aria-label', \"id\", \"textId\", \"children\", \"variant\"]);\n\n  return React.createElement(Tooltip, {\n    trigger: \"mouseenter focus click\",\n    exitDelay: exitDelay,\n    entryDelay: entryDelay,\n    maxWidth: maxWidth,\n    position: position,\n    \"aria-live\": \"polite\",\n    aria: \"none\",\n    content: React.createElement(\"div\", null, children)\n  }, React.createElement(Button, Object.assign({\n    type: \"button\",\n    variant: variant,\n    onClick: onClick,\n    \"aria-label\": ariaLabel,\n    id: id,\n    \"aria-labelledby\": \"\".concat(id, \" \").concat(textId)\n  }, props), React.createElement(CopyIcon, null)));\n};\nClipboardCopyButton.displayName = 'ClipboardCopyButton';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,kDAArB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,OAAT,QAAyC,YAAzC;AA4CA,OAAO,IAAMC,mBAAmB,GAAsD,SAAzEA,mBAAyE,CAACC,EAAD,EAYvD;MAX7BC,UASmBD,GATnBC;qBASmBD,GARnBE;MAAAA,sCAAY;sBAQOF,GAPnBG;MAAAA,wCAAa;oBAOMH,GANnBI;MAAAA,oCAAW;oBAMQJ,GALnBK;MAAAA,oCAAW;qBAKQL,GAJnB;MAAcM,sCAAY;MAC1BC,KAGmBP,GAHnBO;MACAC,SAEmBR,GAFnBQ;MACAC,WACmBT,GADnBS;mBACmBT,GAAnBU;MAAAA,kCAAU;MACPC,QAAKC,WAX6E,mHAW7E;;EACsB,OAC9BjB,oBAACG,OAAD,EAAQ;IACNe,OAAO,EAAC,wBADF;IAENX,SAAS,EAAEA,SAFL;IAGNC,UAAU,EAAEA,UAHN;IAINC,QAAQ,EAAEA,QAJJ;IAKNC,QAAQ,EAAEA,QALJ;IAKY,aACR,QANJ;IAONS,IAAI,EAAC,MAPC;IAQNC,OAAO,EAAEpB,iCAAMc,QAAN;EARH,CAAR,EAUEd,oBAACE,MAAD,EAAOmB;IACLC,IAAI,EAAC,QADA;IAELP,OAAO,EAAEA,OAFJ;IAGLT,OAAO,EAAEA,OAHJ;IAGW,cACJK,SAJP;IAKLC,EAAE,EAAEA,EALC;IAKC,6BACcA,EADd,cACoBC,MADpB;EALD,GAODG,KAPC,CAAP,EASEhB,oBAACC,QAAD,EAAS,IAAT,CATF,CAVF,CAD8B;AAuB/B,CAnCM;AAoCPG,mBAAmB,CAACmB,WAApB,GAAkC,qBAAlC","names":["React","CopyIcon","Button","Tooltip","ClipboardCopyButton","_a","onClick","exitDelay","entryDelay","maxWidth","position","ariaLabel","id","textId","children","variant","props","__rest","trigger","aria","content","Object","type","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/ClipboardCopy/ClipboardCopyButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport CopyIcon from '@patternfly/react-icons/dist/esm/icons/copy-icon';\nimport { Button } from '../Button';\nimport { Tooltip, TooltipPosition } from '../Tooltip';\nimport { PopoverPosition } from '../Popover';\n\nexport interface ClipboardCopyButtonProps\n  extends Omit<React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, 'ref'> {\n  /** Callback for the copy when the button is clicked */\n  onClick: (event: React.MouseEvent) => void;\n  /** Content of the copy button */\n  children: React.ReactNode;\n  /** ID of the copy button */\n  id: string;\n  /** ID of the content that is being copied */\n  textId: string;\n  /** Additional classes added to the copy button */\n  className?: string;\n  /** Exit delay on the copy button tooltip */\n  exitDelay?: number;\n  /** Entry delay on the copy button tooltip */\n  entryDelay?: number;\n  /** Max width of the copy button tooltip */\n  maxWidth?: string;\n  /** Position of the copy button tooltip */\n  position?:\n    | TooltipPosition\n    | PopoverPosition\n    | 'auto'\n    | 'top'\n    | 'bottom'\n    | 'left'\n    | 'right'\n    | 'top-start'\n    | 'top-end'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'left-start'\n    | 'left-end'\n    | 'right-start'\n    | 'right-end';\n  /** Aria-label for the copy button */\n  'aria-label'?: string;\n  /** Variant of the copy button */\n  variant?: 'control' | 'plain';\n}\n\nexport const ClipboardCopyButton: React.FunctionComponent<ClipboardCopyButtonProps> = ({\n  onClick,\n  exitDelay = 0,\n  entryDelay = 300,\n  maxWidth = '100px',\n  position = 'top',\n  'aria-label': ariaLabel = 'Copyable input',\n  id,\n  textId,\n  children,\n  variant = 'control',\n  ...props\n}: ClipboardCopyButtonProps) => (\n  <Tooltip\n    trigger=\"mouseenter focus click\"\n    exitDelay={exitDelay}\n    entryDelay={entryDelay}\n    maxWidth={maxWidth}\n    position={position}\n    aria-live=\"polite\"\n    aria=\"none\"\n    content={<div>{children}</div>}\n  >\n    <Button\n      type=\"button\"\n      variant={variant}\n      onClick={onClick}\n      aria-label={ariaLabel}\n      id={id}\n      aria-labelledby={`${id} ${textId}`}\n      {...props}\n    >\n      <CopyIcon />\n    </Button>\n  </Tooltip>\n);\nClipboardCopyButton.displayName = 'ClipboardCopyButton';\n"]},"metadata":{},"sourceType":"module"}