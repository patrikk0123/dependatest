{"ast":null,"code":"var hash = {\n  start: 'end',\n  end: 'start'\n};\n/**\n * @param placement\n */\n\nexport default function getOppositeVariationPlacement(placement) {\n  return placement.replace(/start|end/g, function (matched) {\n    return hash[matched];\n  });\n}","map":{"version":3,"mappings":"AAGA,IAAMA,IAAI,GAAG;EAAEC,KAAK,EAAE,KAAT;EAAgBC,GAAG,EAAE;AAArB,CAAb;AAEA;;;;AAGA,eAAc,SAAUC,6BAAV,CAAwCC,SAAxC,EAA4D;EACxE,OAAOA,SAAS,CAACC,OAAV,CAAkB,YAAlB,EAAgC,iBAAO;IAAA,OAAIL,IAAI,CAACM,OAAD,CAAR;EAAA,CAAvC,CAAP;AACD","names":["hash","start","end","getOppositeVariationPlacement","placement","replace","matched"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/utils/getOppositeVariationPlacement.ts"],"sourcesContent":["// @ts-nocheck\nimport { Placement } from '../enums';\n\nconst hash = { start: 'end', end: 'start' };\n\n/**\n * @param placement\n */\nexport default function getOppositeVariationPlacement(placement: Placement): Placement {\n  return placement.replace(/start|end/g, matched => hash[matched]) as any;\n}\n"]},"metadata":{},"sourceType":"module"}