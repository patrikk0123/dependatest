{"ast":null,"code":"import _classCallCheck from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Nav/nav';\nimport a11yStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { css } from '@patternfly/react-styles';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { getUniqueId } from '../../helpers/util';\nimport { NavContext } from './Nav';\nimport { PageSidebarContext } from '../Page/PageSidebar';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport var NavExpandable = /*#__PURE__*/function (_React$Component) {\n  _inherits(NavExpandable, _React$Component);\n\n  var _super = _createSuper(NavExpandable);\n\n  function NavExpandable() {\n    var _this;\n\n    _classCallCheck(this, NavExpandable);\n\n    _this = _super.apply(this, arguments);\n    _this.id = _this.props.id || getUniqueId();\n    _this.state = {\n      expandedState: _this.props.isExpanded,\n      ouiaStateId: getDefaultOUIAId(NavExpandable.displayName)\n    };\n\n    _this.onExpand = function (e, onToggle) {\n      var expandedState = _this.state.expandedState;\n\n      if (_this.props.onExpand) {\n        _this.props.onExpand(e, !expandedState);\n      } else {\n        _this.setState(function (prevState) {\n          return {\n            expandedState: !prevState.expandedState\n          };\n        });\n\n        var groupId = _this.props.groupId;\n        onToggle(e, groupId, !expandedState);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(NavExpandable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        expandedState: this.props.isExpanded\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.isExpanded !== prevProps.isExpanded) {\n        this.setState({\n          expandedState: this.props.isExpanded\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _a = this.props,\n          title = _a.title,\n          srText = _a.srText,\n          children = _a.children,\n          className = _a.className,\n          isActive = _a.isActive,\n          ouiaId = _a.ouiaId,\n          groupId = _a.groupId,\n          id = _a.id,\n          isExpanded = _a.isExpanded,\n          buttonProps = _a.buttonProps,\n          onExpand = _a.onExpand,\n          props = __rest(_a, [\"title\", \"srText\", \"children\", \"className\", \"isActive\", \"ouiaId\", \"groupId\", \"id\", \"isExpanded\", \"buttonProps\", \"onExpand\"]);\n\n      var _this$state = this.state,\n          expandedState = _this$state.expandedState,\n          ouiaStateId = _this$state.ouiaStateId;\n      return React.createElement(NavContext.Consumer, null, function (context) {\n        return React.createElement(\"li\", Object.assign({\n          className: css(styles.navItem, styles.modifiers.expandable, expandedState && styles.modifiers.expanded, isActive && styles.modifiers.current, className)\n        }, getOUIAProps(NavExpandable.displayName, ouiaId !== undefined ? ouiaId : ouiaStateId), props), React.createElement(PageSidebarContext.Consumer, null, function (_ref) {\n          var isNavOpen = _ref.isNavOpen;\n          return React.createElement(\"button\", Object.assign({\n            className: styles.navLink,\n            id: srText ? null : _this2.id,\n            onClick: function onClick(e) {\n              return _this2.onExpand(e, context.onToggle);\n            },\n            \"aria-expanded\": expandedState,\n            tabIndex: isNavOpen ? null : -1\n          }, buttonProps), title, React.createElement(\"span\", {\n            className: css(styles.navToggle)\n          }, React.createElement(\"span\", {\n            className: css(styles.navToggleIcon)\n          }, React.createElement(AngleRightIcon, {\n            \"aria-hidden\": \"true\"\n          }))));\n        }), React.createElement(\"section\", {\n          className: css(styles.navSubnav),\n          \"aria-labelledby\": _this2.id,\n          hidden: expandedState ? null : true\n        }, srText && React.createElement(\"h2\", {\n          className: css(a11yStyles.screenReader),\n          id: _this2.id\n        }, srText), React.createElement(\"ul\", {\n          className: css(styles.navList)\n        }, children)));\n      });\n    }\n  }]);\n\n  return NavExpandable;\n}(React.Component);\nNavExpandable.displayName = 'NavExpandable';\nNavExpandable.defaultProps = {\n  srText: '',\n  isExpanded: false,\n  children: '',\n  className: '',\n  groupId: null,\n  isActive: false,\n  id: ''\n};","map":{"version":3,"mappings":"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","names":["React","styles","a11yStyles","css","AngleRightIcon","getUniqueId","NavContext","PageSidebarContext","getOUIAProps","getDefaultOUIAId","NavExpandable","props","id","expandedState","isExpanded","ouiaStateId","displayName","e","onToggle","state","onExpand","setState","prevState","groupId","prevProps","title","_a","srText","children","className","isActive","ouiaId","buttonProps","__rest","Consumer","navItem","modifiers","expandable","expanded","current","undefined","isNavOpen","navLink","onClick","context","tabIndex","navToggle","navToggleIcon","navSubnav","hidden","screenReader","navList","Component"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Nav/NavExpandable.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Nav/nav';\nimport a11yStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { css } from '@patternfly/react-styles';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { getUniqueId } from '../../helpers/util';\nimport { NavContext } from './Nav';\nimport { PageSidebarContext } from '../Page/PageSidebar';\nimport { PickOptional } from '../../helpers/typeUtils';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId } from '../../helpers';\n\nexport interface NavExpandableProps\n  extends React.DetailedHTMLProps<React.LiHTMLAttributes<HTMLLIElement>, HTMLLIElement>,\n    OUIAProps {\n  /** Title shown for the expandable list */\n  title: string;\n  /** If defined, screen readers will read this text instead of the list title */\n  srText?: string;\n  /** Boolean to programatically expand or collapse section */\n  isExpanded?: boolean;\n  /** Anything that can be rendered inside of the expandable list */\n  children?: React.ReactNode;\n  /** Additional classes added to the container */\n  className?: string;\n  /** Group identifier, will be returned with the onToggle and onSelect callback passed to the Nav component */\n  groupId?: string | number;\n  /** If true makes the expandable list title active */\n  isActive?: boolean;\n  /** Identifier to use for the section aria label */\n  id?: string;\n  /** allow consumer to optionally override this callback and manage expand state externally. if passed will not call Nav's onToggle. */\n  onExpand?: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, val: boolean) => void;\n  /** Additional props added to the NavExpandable <button> */\n  buttonProps?: any;\n}\n\ninterface NavExpandableState {\n  expandedState: boolean;\n  ouiaStateId: string;\n}\n\nexport class NavExpandable extends React.Component<NavExpandableProps, NavExpandableState> {\n  static displayName = 'NavExpandable';\n  static defaultProps: PickOptional<NavExpandableProps> = {\n    srText: '',\n    isExpanded: false,\n    children: '',\n    className: '',\n    groupId: null as string,\n    isActive: false,\n    id: ''\n  };\n\n  id = this.props.id || getUniqueId();\n\n  state = {\n    expandedState: this.props.isExpanded,\n    ouiaStateId: getDefaultOUIAId(NavExpandable.displayName)\n  };\n\n  componentDidMount() {\n    this.setState({ expandedState: this.props.isExpanded });\n  }\n\n  componentDidUpdate(prevProps: NavExpandableProps) {\n    if (this.props.isExpanded !== prevProps.isExpanded) {\n      this.setState({ expandedState: this.props.isExpanded });\n    }\n  }\n\n  onExpand = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n    onToggle: (\n      event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n      groupId: string | number,\n      expandedState: boolean\n    ) => void\n  ) => {\n    const { expandedState } = this.state;\n    if (this.props.onExpand) {\n      this.props.onExpand(e, !expandedState);\n    } else {\n      this.setState(prevState => ({ expandedState: !prevState.expandedState }));\n      const { groupId } = this.props;\n      onToggle(e, groupId, !expandedState);\n    }\n  };\n\n  render() {\n    const {\n      title,\n      srText,\n      children,\n      className,\n      isActive,\n      ouiaId,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      groupId,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      id,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      isExpanded,\n      buttonProps,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onExpand,\n      ...props\n    } = this.props;\n\n    const { expandedState, ouiaStateId } = this.state;\n\n    return (\n      <NavContext.Consumer>\n        {context => (\n          <li\n            className={css(\n              styles.navItem,\n              styles.modifiers.expandable,\n              expandedState && styles.modifiers.expanded,\n              isActive && styles.modifiers.current,\n              className\n            )}\n            {...getOUIAProps(NavExpandable.displayName, ouiaId !== undefined ? ouiaId : ouiaStateId)}\n            {...props}\n          >\n            <PageSidebarContext.Consumer>\n              {({ isNavOpen }) => (\n                <button\n                  className={styles.navLink}\n                  id={srText ? null : this.id}\n                  onClick={e => this.onExpand(e, context.onToggle)}\n                  aria-expanded={expandedState}\n                  tabIndex={isNavOpen ? null : -1}\n                  {...buttonProps}\n                >\n                  {title}\n                  <span className={css(styles.navToggle)}>\n                    <span className={css(styles.navToggleIcon)}>\n                      <AngleRightIcon aria-hidden=\"true\" />\n                    </span>\n                  </span>\n                </button>\n              )}\n            </PageSidebarContext.Consumer>\n            <section className={css(styles.navSubnav)} aria-labelledby={this.id} hidden={expandedState ? null : true}>\n              {srText && (\n                <h2 className={css(a11yStyles.screenReader)} id={this.id}>\n                  {srText}\n                </h2>\n              )}\n              <ul className={css(styles.navList)}>{children}</ul>\n            </section>\n          </li>\n        )}\n      </NavContext.Consumer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}