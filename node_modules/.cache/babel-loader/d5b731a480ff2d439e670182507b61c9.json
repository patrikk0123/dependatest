{"ast":null,"code":"import _classCallCheck from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Switch/switch';\nimport { css } from '@patternfly/react-styles';\nimport CheckIcon from '@patternfly/react-icons/dist/esm/icons/check-icon';\nimport { getUniqueId } from '../../helpers/util';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport var Switch = /*#__PURE__*/function (_React$Component) {\n  _inherits(Switch, _React$Component);\n\n  var _super = _createSuper(Switch);\n\n  function Switch(props) {\n    var _this;\n\n    _classCallCheck(this, Switch);\n\n    _this = _super.call(this, props);\n\n    if (!props.label && !props['aria-label']) {\n      // eslint-disable-next-line no-console\n      console.error('Switch: Switch requires either a label or an aria-label to be specified');\n    }\n\n    _this.id = props.id || getUniqueId();\n    _this.state = {\n      ouiaStateId: getDefaultOUIAId(Switch.displayName)\n    };\n    return _this;\n  }\n\n  _createClass(Switch, [{\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          id = _a.id,\n          className = _a.className,\n          label = _a.label,\n          labelOff = _a.labelOff,\n          isChecked = _a.isChecked,\n          defaultChecked = _a.defaultChecked,\n          hasCheckIcon = _a.hasCheckIcon,\n          isDisabled = _a.isDisabled,\n          _onChange = _a.onChange,\n          isReversed = _a.isReversed,\n          ouiaId = _a.ouiaId,\n          ouiaSafe = _a.ouiaSafe,\n          props = __rest(_a, [\"id\", \"className\", \"label\", \"labelOff\", \"isChecked\", \"defaultChecked\", \"hasCheckIcon\", \"isDisabled\", \"onChange\", \"isReversed\", \"ouiaId\", \"ouiaSafe\"]);\n\n      var isAriaLabelledBy = props['aria-label'] === '';\n      return React.createElement(\"label\", Object.assign({\n        className: css(styles.switch, isReversed && styles.modifiers.reverse, className),\n        htmlFor: this.id\n      }, getOUIAProps(Switch.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)), React.createElement(\"input\", Object.assign({\n        id: this.id,\n        className: css(styles.switchInput),\n        type: \"checkbox\",\n        onChange: function onChange(event) {\n          return _onChange(event.target.checked, event);\n        }\n      }, [true, false].includes(defaultChecked) && {\n        defaultChecked: defaultChecked\n      }, ![true, false].includes(defaultChecked) && {\n        checked: isChecked\n      }, {\n        disabled: isDisabled,\n        \"aria-labelledby\": isAriaLabelledBy ? \"\".concat(this.id, \"-on\") : null\n      }, props)), label !== undefined ? React.createElement(React.Fragment, null, React.createElement(\"span\", {\n        className: css(styles.switchToggle)\n      }, hasCheckIcon && React.createElement(\"span\", {\n        className: css(styles.switchToggleIcon),\n        \"aria-hidden\": \"true\"\n      }, React.createElement(CheckIcon, {\n        noVerticalAlign: true\n      }))), React.createElement(\"span\", {\n        className: css(styles.switchLabel, styles.modifiers.on),\n        id: isAriaLabelledBy ? \"\".concat(this.id, \"-on\") : null,\n        \"aria-hidden\": \"true\"\n      }, label), React.createElement(\"span\", {\n        className: css(styles.switchLabel, styles.modifiers.off),\n        id: isAriaLabelledBy ? \"\".concat(this.id, \"-off\") : null,\n        \"aria-hidden\": \"true\"\n      }, labelOff !== undefined ? labelOff : label)) : React.createElement(\"span\", {\n        className: css(styles.switchToggle)\n      }, React.createElement(\"div\", {\n        className: css(styles.switchToggleIcon),\n        \"aria-hidden\": \"true\"\n      }, React.createElement(CheckIcon, {\n        noVerticalAlign: true\n      }))));\n    }\n  }]);\n\n  return Switch;\n}(React.Component);\nSwitch.displayName = 'Switch';\nSwitch.defaultProps = {\n  isChecked: true,\n  isDisabled: false,\n  isReversed: false,\n  'aria-label': '',\n  onChange: function onChange() {\n    return undefined;\n  }\n};","map":{"version":3,"mappings":"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","names":["React","styles","css","CheckIcon","getUniqueId","getOUIAProps","getDefaultOUIAId","Switch","props","label","console","error","id","state","ouiaStateId","displayName","_a","className","labelOff","isChecked","defaultChecked","hasCheckIcon","isDisabled","onChange","isReversed","ouiaId","ouiaSafe","__rest","isAriaLabelledBy","switch","modifiers","reverse","htmlFor","undefined","switchInput","type","event","target","checked","includes","disabled","Fragment","switchToggle","switchToggleIcon","noVerticalAlign","switchLabel","on","off","Component"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Switch/Switch.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Switch/switch';\nimport { css } from '@patternfly/react-styles';\nimport CheckIcon from '@patternfly/react-icons/dist/esm/icons/check-icon';\nimport { getUniqueId } from '../../helpers/util';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId } from '../../helpers';\n\nexport interface SwitchProps\n  extends Omit<React.HTMLProps<HTMLInputElement>, 'type' | 'onChange' | 'disabled' | 'label'>,\n    OUIAProps {\n  /** id for the label. */\n  id?: string;\n  /** Additional classes added to the switch */\n  className?: string;\n  /** Text value for the visible label when on */\n  label?: React.ReactNode;\n  /** Text value for the visible label when off */\n  labelOff?: React.ReactNode;\n  /** Flag to show if the switch is checked when it is controlled by React state.\n   * To make the switch uncontrolled instead use the defaultChecked prop, but do not use both.\n   */\n  isChecked?: boolean;\n  /** Flag to set the default checked value of the switch when it is uncontrolled by React state.\n   * To make the switch controlled instead use the isChecked prop, but do not use both.\n   */\n  defaultChecked?: boolean;\n  /** Flag to show if the switch has a check icon. */\n  hasCheckIcon?: boolean;\n  /** Flag to show if the switch is disabled. */\n  isDisabled?: boolean;\n  /** A callback for when the switch selection changes. (isChecked, event) => {} */\n  onChange?: (checked: boolean, event: React.FormEvent<HTMLInputElement>) => void;\n  /** Adds accessible text to the switch, and should describe the isChecked=\"true\" state. When label is defined, aria-label should be set to the text string that is visible when isChecked is true. */\n  'aria-label'?: string;\n  /** Flag to reverse the layout of toggle and label (toggle on right). */\n  isReversed?: boolean;\n}\n\nexport class Switch extends React.Component<SwitchProps & OUIAProps, { ouiaStateId: string }> {\n  static displayName = 'Switch';\n  id: string;\n\n  static defaultProps: SwitchProps = {\n    isChecked: true,\n    isDisabled: false,\n    isReversed: false,\n    'aria-label': '',\n    onChange: () => undefined as any\n  };\n\n  constructor(props: SwitchProps & OUIAProps) {\n    super(props);\n    if (!props.label && !props['aria-label']) {\n      // eslint-disable-next-line no-console\n      console.error('Switch: Switch requires either a label or an aria-label to be specified');\n    }\n\n    this.id = props.id || getUniqueId();\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(Switch.displayName)\n    };\n  }\n\n  render() {\n    const {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      id,\n      className,\n      label,\n      labelOff,\n      isChecked,\n      defaultChecked,\n      hasCheckIcon,\n      isDisabled,\n      onChange,\n      isReversed,\n      ouiaId,\n      ouiaSafe,\n      ...props\n    } = this.props;\n\n    const isAriaLabelledBy = props['aria-label'] === '';\n    return (\n      <label\n        className={css(styles.switch, isReversed && styles.modifiers.reverse, className)}\n        htmlFor={this.id}\n        {...getOUIAProps(Switch.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n      >\n        <input\n          id={this.id}\n          className={css(styles.switchInput)}\n          type=\"checkbox\"\n          onChange={event => onChange(event.target.checked, event)}\n          {...([true, false].includes(defaultChecked) && { defaultChecked })}\n          {...(![true, false].includes(defaultChecked) && { checked: isChecked })}\n          disabled={isDisabled}\n          aria-labelledby={isAriaLabelledBy ? `${this.id}-on` : null}\n          {...props}\n        />\n        {label !== undefined ? (\n          <React.Fragment>\n            <span className={css(styles.switchToggle)}>\n              {hasCheckIcon && (\n                <span className={css(styles.switchToggleIcon)} aria-hidden=\"true\">\n                  <CheckIcon noVerticalAlign />\n                </span>\n              )}\n            </span>\n            <span\n              className={css(styles.switchLabel, styles.modifiers.on)}\n              id={isAriaLabelledBy ? `${this.id}-on` : null}\n              aria-hidden=\"true\"\n            >\n              {label}\n            </span>\n            <span\n              className={css(styles.switchLabel, styles.modifiers.off)}\n              id={isAriaLabelledBy ? `${this.id}-off` : null}\n              aria-hidden=\"true\"\n            >\n              {labelOff !== undefined ? labelOff : label}\n            </span>\n          </React.Fragment>\n        ) : (\n          <span className={css(styles.switchToggle)}>\n            <div className={css(styles.switchToggleIcon)} aria-hidden=\"true\">\n              <CheckIcon noVerticalAlign />\n            </div>\n          </span>\n        )}\n      </label>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}