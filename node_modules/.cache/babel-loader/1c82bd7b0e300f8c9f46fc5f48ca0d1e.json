{"ast":null,"code":"import _classCallCheck from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Pagination/pagination';\nimport { css } from '@patternfly/react-styles';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-left-icon';\nimport AngleDoubleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-double-left-icon';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport AngleDoubleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-double-right-icon';\nimport { Button, ButtonVariant } from '../Button';\nimport { pluralize } from '../../helpers';\nimport { KEY_CODES } from '../../helpers/constants';\nexport var Navigation = /*#__PURE__*/function (_React$Component) {\n  _inherits(Navigation, _React$Component);\n\n  var _super = _createSuper(Navigation);\n\n  function Navigation(props) {\n    var _this;\n\n    _classCallCheck(this, Navigation);\n\n    _this = _super.call(this, props);\n\n    _this.handleNewPage = function (_evt, newPage) {\n      var _this$props = _this.props,\n          perPage = _this$props.perPage,\n          onSetPage = _this$props.onSetPage;\n      var startIdx = (newPage - 1) * perPage;\n      var endIdx = newPage * perPage;\n      return onSetPage(_evt, newPage, perPage, startIdx, endIdx);\n    };\n\n    _this.state = {\n      userInputPage: _this.props.page\n    };\n    return _this;\n  }\n\n  _createClass(Navigation, [{\n    key: \"onChange\",\n    value: function onChange(event, lastPage) {\n      var inputPage = Navigation.parseInteger(event.target.value, lastPage);\n      this.setState({\n        userInputPage: Number.isNaN(inputPage) ? event.target.value : inputPage\n      });\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event, page, lastPage, onPageInput) {\n      if (event.keyCode === KEY_CODES.ENTER) {\n        var inputPage = Navigation.parseInteger(this.state.userInputPage, lastPage);\n        onPageInput(event, Number.isNaN(inputPage) ? page : inputPage);\n        this.handleNewPage(event, Number.isNaN(inputPage) ? page : inputPage);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(lastState) {\n      if (this.props.page !== lastState.page && this.props.page <= this.props.lastPage && this.state.userInputPage !== this.props.page) {\n        this.setState({\n          userInputPage: this.props.page\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _a = this.props,\n          page = _a.page,\n          perPage = _a.perPage,\n          onSetPage = _a.onSetPage,\n          isDisabled = _a.isDisabled,\n          itemCount = _a.itemCount,\n          lastPage = _a.lastPage,\n          firstPage = _a.firstPage,\n          pagesTitle = _a.pagesTitle,\n          pagesTitlePlural = _a.pagesTitlePlural,\n          toLastPage = _a.toLastPage,\n          toNextPage = _a.toNextPage,\n          toFirstPage = _a.toFirstPage,\n          toPreviousPage = _a.toPreviousPage,\n          currPage = _a.currPage,\n          paginationTitle = _a.paginationTitle,\n          ofWord = _a.ofWord,\n          onNextClick = _a.onNextClick,\n          onPreviousClick = _a.onPreviousClick,\n          onFirstClick = _a.onFirstClick,\n          onLastClick = _a.onLastClick,\n          onPageInput = _a.onPageInput,\n          className = _a.className,\n          isCompact = _a.isCompact,\n          props = __rest(_a, [\"page\", \"perPage\", \"onSetPage\", \"isDisabled\", \"itemCount\", \"lastPage\", \"firstPage\", \"pagesTitle\", \"pagesTitlePlural\", \"toLastPage\", \"toNextPage\", \"toFirstPage\", \"toPreviousPage\", \"currPage\", \"paginationTitle\", \"ofWord\", \"onNextClick\", \"onPreviousClick\", \"onFirstClick\", \"onLastClick\", \"onPageInput\", \"className\", \"isCompact\"]);\n\n      var userInputPage = this.state.userInputPage;\n      return React.createElement(\"nav\", Object.assign({\n        className: css(styles.paginationNav, className),\n        \"aria-label\": paginationTitle\n      }, props), !isCompact && React.createElement(\"div\", {\n        className: css(styles.paginationNavControl, styles.modifiers.first)\n      }, React.createElement(Button, {\n        variant: ButtonVariant.plain,\n        isDisabled: isDisabled || page === firstPage || page === 0,\n        \"aria-label\": toFirstPage,\n        \"data-action\": \"first\",\n        onClick: function onClick(event) {\n          onFirstClick(event, 1);\n\n          _this2.handleNewPage(event, 1);\n\n          _this2.setState({\n            userInputPage: 1\n          });\n        }\n      }, React.createElement(AngleDoubleLeftIcon, null))), React.createElement(\"div\", {\n        className: styles.paginationNavControl\n      }, React.createElement(Button, {\n        variant: ButtonVariant.plain,\n        isDisabled: isDisabled || page === firstPage || page === 0,\n        \"data-action\": \"previous\",\n        onClick: function onClick(event) {\n          var newPage = page - 1 >= 1 ? page - 1 : 1;\n          onPreviousClick(event, newPage);\n\n          _this2.handleNewPage(event, newPage);\n\n          _this2.setState({\n            userInputPage: newPage\n          });\n        },\n        \"aria-label\": toPreviousPage\n      }, React.createElement(AngleLeftIcon, null))), !isCompact && React.createElement(\"div\", {\n        className: styles.paginationNavPageSelect\n      }, React.createElement(\"input\", {\n        className: css(styles.formControl),\n        \"aria-label\": currPage,\n        type: \"number\",\n        disabled: isDisabled || itemCount && page === firstPage && page === lastPage && itemCount >= 0 || page === 0,\n        min: lastPage <= 0 && firstPage <= 0 ? 0 : 1,\n        max: lastPage,\n        value: userInputPage,\n        onKeyDown: function onKeyDown(event) {\n          return _this2.onKeyDown(event, page, lastPage, onPageInput);\n        },\n        onChange: function onChange(event) {\n          return _this2.onChange(event, lastPage);\n        }\n      }), (itemCount || itemCount === 0) && React.createElement(\"span\", {\n        \"aria-hidden\": \"true\"\n      }, ofWord, \" \", pagesTitle ? pluralize(lastPage, pagesTitle, pagesTitlePlural) : lastPage)), React.createElement(\"div\", {\n        className: styles.paginationNavControl\n      }, React.createElement(Button, {\n        variant: ButtonVariant.plain,\n        isDisabled: isDisabled || page === lastPage,\n        \"aria-label\": toNextPage,\n        \"data-action\": \"next\",\n        onClick: function onClick(event) {\n          var newPage = page + 1 <= lastPage ? page + 1 : lastPage;\n          onNextClick(event, newPage);\n\n          _this2.handleNewPage(event, newPage);\n\n          _this2.setState({\n            userInputPage: newPage\n          });\n        }\n      }, React.createElement(AngleRightIcon, null))), !isCompact && React.createElement(\"div\", {\n        className: css(styles.paginationNavControl, styles.modifiers.last)\n      }, React.createElement(Button, {\n        variant: ButtonVariant.plain,\n        isDisabled: isDisabled || page === lastPage,\n        \"aria-label\": toLastPage,\n        \"data-action\": \"last\",\n        onClick: function onClick(event) {\n          onLastClick(event, lastPage);\n\n          _this2.handleNewPage(event, lastPage);\n\n          _this2.setState({\n            userInputPage: lastPage\n          });\n        }\n      }, React.createElement(AngleDoubleRightIcon, null))));\n    }\n  }], [{\n    key: \"parseInteger\",\n    value: function parseInteger(input, lastPage) {\n      // eslint-disable-next-line radix\n      var inputPage = Number.parseInt(input, 10);\n\n      if (!Number.isNaN(inputPage)) {\n        inputPage = inputPage > lastPage ? lastPage : inputPage;\n        inputPage = inputPage < 1 ? 1 : inputPage;\n      }\n\n      return inputPage;\n    }\n  }]);\n\n  return Navigation;\n}(React.Component);\nNavigation.displayName = 'Navigation';\nNavigation.defaultProps = {\n  className: '',\n  isDisabled: false,\n  isCompact: false,\n  lastPage: 0,\n  firstPage: 0,\n  pagesTitle: '',\n  pagesTitlePlural: '',\n  toLastPage: 'Go to last page',\n  toNextPage: 'Go to next page',\n  toFirstPage: 'Go to first page',\n  toPreviousPage: 'Go to previous page',\n  currPage: 'Current page',\n  paginationTitle: 'Pagination',\n  ofWord: 'of',\n  onNextClick: function onNextClick() {\n    return undefined;\n  },\n  onPreviousClick: function onPreviousClick() {\n    return undefined;\n  },\n  onFirstClick: function onFirstClick() {\n    return undefined;\n  },\n  onLastClick: function onLastClick() {\n    return undefined;\n  },\n  onPageInput: function onPageInput() {\n    return undefined;\n  }\n};","map":{"version":3,"mappings":"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","names":["React","styles","css","AngleLeftIcon","AngleDoubleLeftIcon","AngleRightIcon","AngleDoubleRightIcon","Button","ButtonVariant","pluralize","KEY_CODES","Navigation","props","_evt","newPage","perPage","onSetPage","startIdx","endIdx","state","userInputPage","page","event","lastPage","inputPage","parseInteger","target","value","setState","Number","isNaN","onPageInput","keyCode","ENTER","handleNewPage","lastState","_a","isDisabled","itemCount","firstPage","pagesTitle","pagesTitlePlural","toLastPage","toNextPage","toFirstPage","toPreviousPage","currPage","paginationTitle","ofWord","onNextClick","onPreviousClick","onFirstClick","onLastClick","className","isCompact","__rest","paginationNav","paginationNavControl","modifiers","first","variant","plain","onClick","paginationNavPageSelect","formControl","type","disabled","min","max","onKeyDown","onChange","last","input","parseInt","Component","undefined"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Pagination/Navigation.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Pagination/pagination';\nimport { css } from '@patternfly/react-styles';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-left-icon';\nimport AngleDoubleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-double-left-icon';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport AngleDoubleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-double-right-icon';\nimport { Button, ButtonVariant } from '../Button';\nimport { OnSetPage } from './Pagination';\nimport { pluralize, PickOptional } from '../../helpers';\nimport { KEY_CODES } from '../../helpers/constants';\n\nexport interface NavigationProps extends React.HTMLProps<HTMLElement> {\n  /** Additional classes for the container */\n  className?: string;\n  /** Flag indicating if the pagination is disabled */\n  isDisabled?: boolean;\n  /** Flag indicating if the pagination is compact */\n  isCompact?: boolean;\n  /** Total number of items. */\n  itemCount?: number;\n  /** The number of the last page */\n  lastPage?: number;\n  /** The number of first page where pagination starts */\n  firstPage?: number;\n  /** The title of a page displayed beside the page number */\n  pagesTitle?: string;\n  /** The title of a page displayed beside the page number (the plural form) */\n  pagesTitlePlural?: string;\n  /** Accessible label for the button which moves to the last page */\n  toLastPage?: string;\n  /** Accessible label for the button which moves to the previous page */\n  toPreviousPage?: string;\n  /** Accessible label for the button which moves to the next page */\n  toNextPage?: string;\n  /** Accessible label for the button which moves to the first page */\n  toFirstPage?: string;\n  /** Accessible label for the input displaying the current page */\n  currPage?: string;\n  /** Accessible label for the pagination component */\n  paginationTitle?: string;\n  /** Accessible label for the English word \"of\" */\n  ofWord?: string;\n  /** The number of the current page */\n  page: React.ReactText;\n  /** Number of items per page. */\n  perPage?: number;\n  /** Function called when page is changed */\n  onSetPage: OnSetPage;\n  /** Function called when user clicks to navigate to next page */\n  onNextClick?: (event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void;\n  /** Function called when user clicks to navigate to previous page */\n  onPreviousClick?: (event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void;\n  /** Function called when user clicks to navigate to first page */\n  onFirstClick?: (event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void;\n  /** Function called when user clicks to navigate to last page */\n  onLastClick?: (event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void;\n  /** Function called when user inputs page number */\n  onPageInput?: (event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void;\n}\n\nexport interface NavigationState {\n  userInputPage?: React.ReactText;\n}\n\nexport class Navigation extends React.Component<NavigationProps, NavigationState> {\n  static displayName = 'Navigation';\n  constructor(props: NavigationProps) {\n    super(props);\n    this.state = { userInputPage: this.props.page };\n  }\n\n  static defaultProps: PickOptional<NavigationProps> = {\n    className: '',\n    isDisabled: false,\n    isCompact: false,\n    lastPage: 0,\n    firstPage: 0,\n    pagesTitle: '',\n    pagesTitlePlural: '',\n    toLastPage: 'Go to last page',\n    toNextPage: 'Go to next page',\n    toFirstPage: 'Go to first page',\n    toPreviousPage: 'Go to previous page',\n    currPage: 'Current page',\n    paginationTitle: 'Pagination',\n    ofWord: 'of',\n    onNextClick: () => undefined as any,\n    onPreviousClick: () => undefined as any,\n    onFirstClick: () => undefined as any,\n    onLastClick: () => undefined as any,\n    onPageInput: () => undefined as any\n  };\n\n  private static parseInteger(input: React.ReactText, lastPage: number): number {\n    // eslint-disable-next-line radix\n    let inputPage = Number.parseInt(input as string, 10);\n    if (!Number.isNaN(inputPage)) {\n      inputPage = inputPage > lastPage ? lastPage : inputPage;\n      inputPage = inputPage < 1 ? 1 : inputPage;\n    }\n    return inputPage;\n  }\n\n  private onChange(event: React.ChangeEvent<HTMLInputElement>, lastPage: number): void {\n    const inputPage = Navigation.parseInteger(event.target.value, lastPage);\n    this.setState({ userInputPage: Number.isNaN(inputPage as number) ? event.target.value : inputPage });\n  }\n\n  private onKeyDown(\n    event: React.KeyboardEvent<HTMLInputElement>,\n    page: number | string,\n    lastPage: number,\n    onPageInput: (event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void\n  ): void {\n    if (event.keyCode === KEY_CODES.ENTER) {\n      const inputPage = Navigation.parseInteger(this.state.userInputPage, lastPage) as number;\n      onPageInput(event, Number.isNaN(inputPage) ? (page as number) : inputPage);\n      this.handleNewPage(event, Number.isNaN(inputPage) ? (page as number) : inputPage);\n    }\n  }\n\n  handleNewPage = (_evt: React.MouseEvent | React.KeyboardEvent | MouseEvent, newPage: number) => {\n    const { perPage, onSetPage } = this.props;\n    const startIdx = (newPage - 1) * perPage;\n    const endIdx = newPage * perPage;\n    return onSetPage(_evt, newPage, perPage, startIdx, endIdx);\n  };\n\n  componentDidUpdate(lastState: NavigationProps) {\n    if (\n      this.props.page !== lastState.page &&\n      this.props.page <= this.props.lastPage &&\n      this.state.userInputPage !== this.props.page\n    ) {\n      this.setState({ userInputPage: this.props.page });\n    }\n  }\n\n  render() {\n    const {\n      page,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      perPage,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onSetPage,\n      isDisabled,\n      itemCount,\n      lastPage,\n      firstPage,\n      pagesTitle,\n      pagesTitlePlural,\n      toLastPage,\n      toNextPage,\n      toFirstPage,\n      toPreviousPage,\n      currPage,\n      paginationTitle,\n      ofWord,\n      onNextClick,\n      onPreviousClick,\n      onFirstClick,\n      onLastClick,\n      onPageInput,\n      className,\n      isCompact,\n      ...props\n    } = this.props;\n    const { userInputPage } = this.state;\n    return (\n      <nav className={css(styles.paginationNav, className)} aria-label={paginationTitle} {...props}>\n        {!isCompact && (\n          <div className={css(styles.paginationNavControl, styles.modifiers.first)}>\n            <Button\n              variant={ButtonVariant.plain}\n              isDisabled={isDisabled || page === firstPage || page === 0}\n              aria-label={toFirstPage}\n              data-action=\"first\"\n              onClick={event => {\n                onFirstClick(event, 1);\n                this.handleNewPage(event, 1);\n                this.setState({ userInputPage: 1 });\n              }}\n            >\n              <AngleDoubleLeftIcon />\n            </Button>\n          </div>\n        )}\n        <div className={styles.paginationNavControl}>\n          <Button\n            variant={ButtonVariant.plain}\n            isDisabled={isDisabled || page === firstPage || page === 0}\n            data-action=\"previous\"\n            onClick={event => {\n              const newPage = (page as number) - 1 >= 1 ? (page as number) - 1 : 1;\n              onPreviousClick(event, newPage);\n              this.handleNewPage(event, newPage);\n              this.setState({ userInputPage: newPage });\n            }}\n            aria-label={toPreviousPage}\n          >\n            <AngleLeftIcon />\n          </Button>\n        </div>\n        {!isCompact && (\n          <div className={styles.paginationNavPageSelect}>\n            <input\n              className={css(styles.formControl)}\n              aria-label={currPage}\n              type=\"number\"\n              disabled={\n                isDisabled || (itemCount && page === firstPage && page === lastPage && itemCount >= 0) || page === 0\n              }\n              min={lastPage <= 0 && firstPage <= 0 ? 0 : 1}\n              max={lastPage}\n              value={userInputPage}\n              onKeyDown={event => this.onKeyDown(event, page, lastPage, onPageInput)}\n              onChange={event => this.onChange(event, lastPage)}\n            />\n            {(itemCount || itemCount === 0) && (\n              <span aria-hidden=\"true\">\n                {ofWord} {pagesTitle ? pluralize(lastPage, pagesTitle, pagesTitlePlural) : lastPage}\n              </span>\n            )}\n          </div>\n        )}\n        <div className={styles.paginationNavControl}>\n          <Button\n            variant={ButtonVariant.plain}\n            isDisabled={isDisabled || page === lastPage}\n            aria-label={toNextPage}\n            data-action=\"next\"\n            onClick={event => {\n              const newPage = (page as number) + 1 <= lastPage ? (page as number) + 1 : lastPage;\n              onNextClick(event, newPage);\n              this.handleNewPage(event, newPage);\n              this.setState({ userInputPage: newPage });\n            }}\n          >\n            <AngleRightIcon />\n          </Button>\n        </div>\n        {!isCompact && (\n          <div className={css(styles.paginationNavControl, styles.modifiers.last)}>\n            <Button\n              variant={ButtonVariant.plain}\n              isDisabled={isDisabled || page === lastPage}\n              aria-label={toLastPage}\n              data-action=\"last\"\n              onClick={event => {\n                onLastClick(event, lastPage);\n                this.handleNewPage(event, lastPage);\n                this.setState({ userInputPage: lastPage });\n              }}\n            >\n              <AngleDoubleRightIcon />\n            </Button>\n          </div>\n        )}\n      </nav>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}