{"ast":null,"code":"import { __rest } from \"tslib\";\n/* eslint-disable no-console */\n\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { css } from '@patternfly/react-styles';\nimport BarsIcon from '@patternfly/react-icons/dist/esm/icons/bars-icon';\nimport { Button, ButtonVariant } from '../../components/Button';\nimport { PageContextConsumer } from './Page';\nexport const PageHeader = _a => {\n  var {\n    className = '',\n    logo = null,\n    logoProps = null,\n    logoComponent = 'a',\n    headerTools = null,\n    topNav = null,\n    isNavOpen = true,\n    isManagedSidebar: deprecatedIsManagedSidebar = undefined,\n    role = undefined,\n    showNavToggle = false,\n    onNavToggle = () => undefined,\n    'aria-label': ariaLabel = 'Global navigation',\n    'aria-controls': ariaControls = null\n  } = _a,\n      props = __rest(_a, [\"className\", \"logo\", \"logoProps\", \"logoComponent\", \"headerTools\", \"topNav\", \"isNavOpen\", \"isManagedSidebar\", \"role\", \"showNavToggle\", \"onNavToggle\", 'aria-label', 'aria-controls']);\n\n  const LogoComponent = logoComponent;\n\n  if ([false, true].includes(deprecatedIsManagedSidebar)) {\n    console.warn('isManagedSidebar is deprecated in the PageHeader component. To make the sidebar toggle uncontrolled, pass this prop in the Page component');\n  }\n\n  return React.createElement(PageContextConsumer, null, _ref => {\n    let {\n      isManagedSidebar,\n      onNavToggle: managedOnNavToggle,\n      isNavOpen: managedIsNavOpen\n    } = _ref;\n    const navToggle = isManagedSidebar ? managedOnNavToggle : onNavToggle;\n    const navOpen = isManagedSidebar ? managedIsNavOpen : isNavOpen;\n    return React.createElement(\"header\", Object.assign({\n      role: role,\n      className: css(styles.pageHeader, className)\n    }, props), (showNavToggle || logo) && React.createElement(\"div\", {\n      className: css(styles.pageHeaderBrand)\n    }, showNavToggle && React.createElement(\"div\", {\n      className: css(styles.pageHeaderBrandToggle)\n    }, React.createElement(Button, {\n      id: \"nav-toggle\",\n      onClick: navToggle,\n      \"aria-label\": ariaLabel,\n      \"aria-controls\": ariaControls,\n      \"aria-expanded\": navOpen ? 'true' : 'false',\n      variant: ButtonVariant.plain\n    }, React.createElement(BarsIcon, null))), logo && React.createElement(LogoComponent, Object.assign({\n      className: css(styles.pageHeaderBrandLink)\n    }, logoProps), logo)), topNav && React.createElement(\"div\", {\n      className: css(styles.pageHeaderNav)\n    }, topNav), headerTools);\n  });\n};\nPageHeader.displayName = 'PageHeader';","map":{"version":3,"mappings":";AAAA;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,mDAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,QAAP,MAAqB,kDAArB;AACA,SAASC,MAAT,EAAiBC,aAAjB,QAAsC,yBAAtC;AACA,SAASC,mBAAT,QAAsD,QAAtD;AA6BA,OAAO,MAAMC,UAAU,GAA8CC,EAAD,IAe9C;MAf+C;IACnEC,SAAS,GAAG,EADuD;IAEnEC,IAAI,GAAG,IAF4D;IAGnEC,SAAS,GAAG,IAHuD;IAInEC,aAAa,GAAG,GAJmD;IAKnEC,WAAW,GAAG,IALqD;IAMnEC,MAAM,GAAG,IAN0D;IAOnEC,SAAS,GAAG,IAPuD;IAQnEC,gBAAgB,EAAEC,0BAA0B,GAAGC,SARoB;IASnEC,IAAI,GAAGD,SAT4D;IAUnEE,aAAa,GAAG,KAVmD;IAWnEC,WAAW,GAAG,MAAMH,SAX+C;IAYnE,cAAcI,SAAS,GAAG,mBAZyC;IAanE,iBAAiBC,YAAY,GAAG;EAbmC,IAa/Bf;MACjCgB,KAAK,cAd2D,oLAc3D;;EAER,MAAMC,aAAa,GAAGb,aAAtB;;EACA,IAAI,CAAC,KAAD,EAAQ,IAAR,EAAcc,QAAd,CAAuBT,0BAAvB,CAAJ,EAAwD;IACtDU,OAAO,CAACC,IAAR,CACE,2IADF;EAGD;;EACD,OACE5B,oBAACM,mBAAD,EAAoB,IAApB,EACG,QAAyG;IAAA,IAAxG;MAAEU,gBAAF;MAAoBK,WAAW,EAAEQ,kBAAjC;MAAqDd,SAAS,EAAEe;IAAhE,CAAwG;IACxG,MAAMC,SAAS,GAAGf,gBAAgB,GAAGa,kBAAH,GAAwBR,WAA1D;IACA,MAAMW,OAAO,GAAGhB,gBAAgB,GAAGc,gBAAH,GAAsBf,SAAtD;IAEA,OACEf;MAAQmB,IAAI,EAAEA,IAAd;MAAoBV,SAAS,EAAEP,GAAG,CAACD,MAAM,CAACgC,UAAR,EAAoBxB,SAApB;IAAlC,GAAsEe,KAAtE,GACG,CAACJ,aAAa,IAAIV,IAAlB,KACCV;MAAKS,SAAS,EAAEP,GAAG,CAACD,MAAM,CAACiC,eAAR;IAAnB,GACGd,aAAa,IACZpB;MAAKS,SAAS,EAAEP,GAAG,CAACD,MAAM,CAACkC,qBAAR;IAAnB,GACEnC,oBAACI,MAAD,EAAO;MACLgC,EAAE,EAAC,YADE;MAELC,OAAO,EAAEN,SAFJ;MAEa,cACNT,SAHP;MAGgB,iBACNC,YAJV;MAIsB,iBACZS,OAAO,GAAG,MAAH,GAAY,OAL7B;MAMLM,OAAO,EAAEjC,aAAa,CAACkC;IANlB,CAAP,EAQEvC,oBAACG,QAAD,EAAS,IAAT,CARF,CADF,CAFJ,EAeGO,IAAI,IACHV,oBAACyB,aAAD,EAAce;MAAC/B,SAAS,EAAEP,GAAG,CAACD,MAAM,CAACwC,mBAAR;IAAf,GAAiD9B,SAAjD,CAAd,EACGD,IADH,CAhBJ,CAFJ,EAwBGI,MAAM,IAAId;MAAKS,SAAS,EAAEP,GAAG,CAACD,MAAM,CAACyC,aAAR;IAAnB,GAA4C5B,MAA5C,CAxBb,EAyBGD,WAzBH,CADF;EA6BD,CAlCH,CADF;AAsCD,CA5DM;AA6DPN,UAAU,CAACoC,WAAX,GAAyB,YAAzB","names":["React","styles","css","BarsIcon","Button","ButtonVariant","PageContextConsumer","PageHeader","_a","className","logo","logoProps","logoComponent","headerTools","topNav","isNavOpen","isManagedSidebar","deprecatedIsManagedSidebar","undefined","role","showNavToggle","onNavToggle","ariaLabel","ariaControls","props","LogoComponent","includes","console","warn","managedOnNavToggle","managedIsNavOpen","navToggle","navOpen","pageHeader","pageHeaderBrand","pageHeaderBrandToggle","id","onClick","variant","plain","Object","pageHeaderBrandLink","pageHeaderNav","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Page/PageHeader.tsx"],"sourcesContent":["/* eslint-disable no-console */\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { css } from '@patternfly/react-styles';\nimport BarsIcon from '@patternfly/react-icons/dist/esm/icons/bars-icon';\nimport { Button, ButtonVariant } from '../../components/Button';\nimport { PageContextConsumer, PageContextProps } from './Page';\n\nexport interface PageHeaderProps extends React.HTMLProps<HTMLDivElement> {\n  /** Additional classes added to the page header */\n  className?: string;\n  /** Component to render the logo/brand, use <Brand /> */\n  logo?: React.ReactNode;\n  /** Additional props passed to the logo anchor container */\n  logoProps?: object;\n  /** Component to use to wrap the passed <logo> */\n  logoComponent?: React.ReactNode;\n  /** Component to render the header tools, use <PageHeaderTools />  */\n  headerTools?: React.ReactNode;\n  /** Component to render navigation within the header, use <Nav /> */\n  topNav?: React.ReactNode;\n  /** True to show the nav toggle button (toggles side nav) */\n  showNavToggle?: boolean;\n  /** True if the side nav is shown  */\n  isNavOpen?: boolean;\n  /** This prop is no longer managed through PageHeader but in the Page component. */\n  isManagedSidebar?: boolean;\n  /** Sets the value for role on the <main> element */\n  role?: string;\n  /** Callback function to handle the side nav toggle button, managed by the Page component if the Page isManagedSidebar prop is set to true */\n  onNavToggle?: () => void;\n  /** Aria Label for the nav toggle button */\n  'aria-label'?: string;\n}\n\nexport const PageHeader: React.FunctionComponent<PageHeaderProps> = ({\n  className = '',\n  logo = null as React.ReactNode,\n  logoProps = null as object,\n  logoComponent = 'a',\n  headerTools = null as React.ReactNode,\n  topNav = null as React.ReactNode,\n  isNavOpen = true,\n  isManagedSidebar: deprecatedIsManagedSidebar = undefined,\n  role = undefined as string,\n  showNavToggle = false,\n  onNavToggle = () => undefined as any,\n  'aria-label': ariaLabel = 'Global navigation',\n  'aria-controls': ariaControls = null,\n  ...props\n}: PageHeaderProps) => {\n  const LogoComponent = logoComponent as any;\n  if ([false, true].includes(deprecatedIsManagedSidebar)) {\n    console.warn(\n      'isManagedSidebar is deprecated in the PageHeader component. To make the sidebar toggle uncontrolled, pass this prop in the Page component'\n    );\n  }\n  return (\n    <PageContextConsumer>\n      {({ isManagedSidebar, onNavToggle: managedOnNavToggle, isNavOpen: managedIsNavOpen }: PageContextProps) => {\n        const navToggle = isManagedSidebar ? managedOnNavToggle : onNavToggle;\n        const navOpen = isManagedSidebar ? managedIsNavOpen : isNavOpen;\n\n        return (\n          <header role={role} className={css(styles.pageHeader, className)} {...props}>\n            {(showNavToggle || logo) && (\n              <div className={css(styles.pageHeaderBrand)}>\n                {showNavToggle && (\n                  <div className={css(styles.pageHeaderBrandToggle)}>\n                    <Button\n                      id=\"nav-toggle\"\n                      onClick={navToggle}\n                      aria-label={ariaLabel}\n                      aria-controls={ariaControls}\n                      aria-expanded={navOpen ? 'true' : 'false'}\n                      variant={ButtonVariant.plain}\n                    >\n                      <BarsIcon />\n                    </Button>\n                  </div>\n                )}\n                {logo && (\n                  <LogoComponent className={css(styles.pageHeaderBrandLink)} {...logoProps}>\n                    {logo}\n                  </LogoComponent>\n                )}\n              </div>\n            )}\n            {topNav && <div className={css(styles.pageHeaderNav)}>{topNav}</div>}\n            {headerTools}\n          </header>\n        );\n      }}\n    </PageContextConsumer>\n  );\n};\nPageHeader.displayName = 'PageHeader';\n"]},"metadata":{},"sourceType":"module"}