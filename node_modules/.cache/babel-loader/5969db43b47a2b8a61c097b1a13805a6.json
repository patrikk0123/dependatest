{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport Dropzone from 'react-dropzone';\nimport styles from '@patternfly/react-styles/css/components/MultipleFileUpload/multiple-file-upload';\nimport { css } from '@patternfly/react-styles';\nexport const MultipleFileUploadContext = React.createContext({\n  open: () => {}\n});\nexport const MultipleFileUpload = _a => {\n  var {\n    className,\n    children,\n    dropzoneProps = {},\n    isHorizontal,\n    onFileDrop = () => {}\n  } = _a,\n      props = __rest(_a, [\"className\", \"children\", \"dropzoneProps\", \"isHorizontal\", \"onFileDrop\"]);\n\n  const onDropAccepted = (acceptedFiles, event) => {\n    onFileDrop(acceptedFiles); // allow users to set a custom drop accepted handler rather than using on data change\n\n    dropzoneProps.onDropAccepted && dropzoneProps.onDropAccepted(acceptedFiles, event);\n  };\n\n  const onDropRejected = (rejectedFiles, event) => {\n    dropzoneProps.onDropRejected && (dropzoneProps === null || dropzoneProps === void 0 ? void 0 : dropzoneProps.onDropRejected(rejectedFiles, event));\n  };\n\n  return React.createElement(Dropzone, Object.assign({\n    multiple: true\n  }, dropzoneProps, {\n    onDropAccepted: onDropAccepted,\n    onDropRejected: onDropRejected\n  }), _ref => {\n    let {\n      getRootProps,\n      getInputProps,\n      isDragActive,\n      open\n    } = _ref;\n    const rootProps = getRootProps(Object.assign(Object.assign({}, props), {\n      onClick: event => event.preventDefault() // Prevents clicking TextArea from opening file dialog\n\n    }));\n    const inputProps = getInputProps();\n    return React.createElement(MultipleFileUploadContext.Provider, {\n      value: {\n        open\n      }\n    }, React.createElement(\"div\", Object.assign({\n      className: css(styles.multipleFileUpload, isDragActive && styles.modifiers.dragOver, isHorizontal && styles.modifiers.horizontal, className)\n    }, rootProps, props), React.createElement(\"input\", Object.assign({}, inputProps)), children));\n  });\n};\nMultipleFileUpload.displayName = 'MultipleFileUpload';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAA8D,gBAA9D;AACA,OAAOC,MAAP,MAAmB,iFAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AAeA,OAAO,MAAMC,yBAAyB,GAAGJ,KAAK,CAACK,aAAN,CAAoB;EAC3DC,IAAI,EAAE,MAAK,CAAG;AAD6C,CAApB,CAAlC;AAIP,OAAO,MAAMC,kBAAkB,GAAsDC,EAAD,IAOtD;MAPuD;IACnFC,SADmF;IAEnFC,QAFmF;IAGnFC,aAAa,GAAG,EAHmE;IAInFC,YAJmF;IAKnFC,UAAU,GAAG,MAAK,CAAG;EAL8D,IAK9DL;MAClBM,KAAK,cAN2E,wEAM3E;;EAER,MAAMC,cAAc,GAAyB,CAACC,aAAD,EAAwBC,KAAxB,KAAiC;IAC5EJ,UAAU,CAACG,aAAD,CAAV,CAD4E,CAE5E;;IACAL,aAAa,CAACI,cAAd,IAAgCJ,aAAa,CAACI,cAAd,CAA6BC,aAA7B,EAA4CC,KAA5C,CAAhC;EACD,CAJD;;EAMA,MAAMC,cAAc,GAAyB,CAACC,aAAD,EAAgBF,KAAhB,KAAyB;IACpEN,aAAa,CAACO,cAAd,KAAgCP,aAAa,SAAb,iBAAa,WAAb,GAAa,MAAb,gBAAa,CAAEO,cAAf,CAA8BC,aAA9B,EAA6CF,KAA7C,CAAhC;EACD,CAFD;;EAIA,OACEjB,oBAACC,QAAD,EAASmB;IAACC,QAAQ,EAAE;EAAX,GAAqBV,aAArB,EAAkC;IAAEI,cAAc,EAAEA,cAAlB;IAAkCG,cAAc,EAAEA;EAAlD,CAAlC,CAAT,EACG,QAAwD;IAAA,IAAvD;MAAEI,YAAF;MAAgBC,aAAhB;MAA+BC,YAA/B;MAA6ClB;IAA7C,CAAuD;IACvD,MAAMmB,SAAS,GAAGH,YAAY,iCACzBR,KADyB,GACpB;MACRY,OAAO,EAAET,KAAK,IAAIA,KAAK,CAACU,cAAN,EADV,CACiC;;IADjC,CADoB,EAA9B;IAIA,MAAMC,UAAU,GAAGL,aAAa,EAAhC;IAEA,OACEvB,oBAACI,yBAAyB,CAACyB,QAA3B,EAAmC;MAACC,KAAK,EAAE;QAAExB;MAAF;IAAR,CAAnC,EACEN;MACES,SAAS,EAAEN,GAAG,CACZD,MAAM,CAAC6B,kBADK,EAEZP,YAAY,IAAItB,MAAM,CAAC8B,SAAP,CAAiBC,QAFrB,EAGZrB,YAAY,IAAIV,MAAM,CAAC8B,SAAP,CAAiBE,UAHrB,EAIZzB,SAJY;IADhB,GAOMgB,SAPN,EAQMX,KARN,GAUEd,+CAEM4B,UAFN,EAVF,EAcGlB,QAdH,CADF,CADF;EAoBD,CA5BH,CADF;AAgCD,CAlDM;AAoDPH,kBAAkB,CAAC4B,WAAnB,GAAiC,oBAAjC","names":["React","Dropzone","styles","css","MultipleFileUploadContext","createContext","open","MultipleFileUpload","_a","className","children","dropzoneProps","isHorizontal","onFileDrop","props","onDropAccepted","acceptedFiles","event","onDropRejected","rejectedFiles","Object","multiple","getRootProps","getInputProps","isDragActive","rootProps","onClick","preventDefault","inputProps","Provider","value","multipleFileUpload","modifiers","dragOver","horizontal","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/MultipleFileUpload/MultipleFileUpload.tsx"],"sourcesContent":["import * as React from 'react';\nimport Dropzone, { DropzoneProps, DropFileEventHandler } from 'react-dropzone';\nimport styles from '@patternfly/react-styles/css/components/MultipleFileUpload/multiple-file-upload';\nimport { css } from '@patternfly/react-styles';\n\nexport interface MultipleFileUploadProps extends Omit<React.HTMLProps<HTMLDivElement>, 'value'> {\n  /** Content rendered inside the multi upload field */\n  children?: React.ReactNode;\n  /** Class to add to outer div */\n  className?: string;\n  /** Optional extra props to customize react-dropzone. */\n  dropzoneProps?: DropzoneProps;\n  /** Flag setting the component to horizontal styling mode */\n  isHorizontal?: boolean;\n  /** When files are dropped or uploaded this callback will be called with all accepted files */\n  onFileDrop?: (data: File[]) => void;\n}\n\nexport const MultipleFileUploadContext = React.createContext({\n  open: () => {}\n});\n\nexport const MultipleFileUpload: React.FunctionComponent<MultipleFileUploadProps> = ({\n  className,\n  children,\n  dropzoneProps = {},\n  isHorizontal,\n  onFileDrop = () => {},\n  ...props\n}: MultipleFileUploadProps) => {\n  const onDropAccepted: DropFileEventHandler = (acceptedFiles: File[], event) => {\n    onFileDrop(acceptedFiles);\n    // allow users to set a custom drop accepted handler rather than using on data change\n    dropzoneProps.onDropAccepted && dropzoneProps.onDropAccepted(acceptedFiles, event);\n  };\n\n  const onDropRejected: DropFileEventHandler = (rejectedFiles, event) => {\n    dropzoneProps.onDropRejected && dropzoneProps?.onDropRejected(rejectedFiles, event);\n  };\n\n  return (\n    <Dropzone multiple={true} {...dropzoneProps} onDropAccepted={onDropAccepted} onDropRejected={onDropRejected}>\n      {({ getRootProps, getInputProps, isDragActive, open }) => {\n        const rootProps = getRootProps({\n          ...props,\n          onClick: event => event.preventDefault() // Prevents clicking TextArea from opening file dialog\n        });\n        const inputProps = getInputProps();\n\n        return (\n          <MultipleFileUploadContext.Provider value={{ open }}>\n            <div\n              className={css(\n                styles.multipleFileUpload,\n                isDragActive && styles.modifiers.dragOver,\n                isHorizontal && styles.modifiers.horizontal,\n                className\n              )}\n              {...rootProps}\n              {...props}\n            >\n              <input\n                /* hidden, necessary for react-dropzone */\n                {...inputProps}\n              />\n              {children}\n            </div>\n          </MultipleFileUploadContext.Provider>\n        );\n      }}\n    </Dropzone>\n  );\n};\n\nMultipleFileUpload.displayName = 'MultipleFileUpload';\n"]},"metadata":{},"sourceType":"module"}