{"ast":null,"code":"import * as React from 'react';\nimport { TextInput } from '@patternfly/react-core/dist/esm/components/TextInput';\nimport inlineStyles from '@patternfly/react-styles/css/components/InlineEdit/inline-edit';\nimport formStyles from '@patternfly/react-styles/css/components/Form/form';\nimport { css } from '@patternfly/react-styles';\nexport const EditableTextCell = _ref => {\n  let {\n    value,\n    rowIndex,\n    cellIndex,\n    props,\n    handleTextInputChange,\n    inputAriaLabel,\n    isDisabled = false\n  } = _ref;\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: inlineStyles.inlineEditValue\n  }, value), React.createElement(\"div\", {\n    className: inlineStyles.inlineEditInput\n  }, React.createElement(TextInput, {\n    isDisabled: isDisabled,\n    value: props.editableValue !== undefined ? props.editableValue : value,\n    validated: props.isValid !== false ? 'default' : 'error',\n    type: \"text\",\n    onChange: (newValue, event) => {\n      handleTextInputChange(newValue, event, rowIndex, cellIndex);\n    },\n    \"aria-label\": inputAriaLabel\n  }), React.createElement(\"div\", {\n    className: css(formStyles.formHelperText, formStyles.modifiers.error),\n    \"aria-live\": \"polite\"\n  }, props.errorText)));\n};\nEditableTextCell.displayName = 'EditableTextCell';","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,sDAA1B;AACA,OAAOC,YAAP,MAAyB,gEAAzB;AACA,OAAOC,UAAP,MAAuB,mDAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AAyBA,OAAO,MAAMC,gBAAgB,GAA+C;EAAA,IAAC;IAC3EC,KAD2E;IAE3EC,QAF2E;IAG3EC,SAH2E;IAI3EC,KAJ2E;IAK3EC,qBAL2E;IAM3EC,cAN2E;IAO3EC,UAAU,GAAG;EAP8D,CAAD;EAAA,OAS1EZ,oBAACA,KAAK,CAACa,QAAP,EAAe,IAAf,EACEb;IAAKc,SAAS,EAAEZ,YAAY,CAACa;EAA7B,GAA+CT,KAA/C,CADF,EAEEN;IAAKc,SAAS,EAAEZ,YAAY,CAACc;EAA7B,GACEhB,oBAACC,SAAD,EAAU;IACRW,UAAU,EAAEA,UADJ;IAERN,KAAK,EAAEG,KAAK,CAACQ,aAAN,KAAwBC,SAAxB,GAAoCT,KAAK,CAACQ,aAA1C,GAA0DX,KAFzD;IAGRa,SAAS,EAAEV,KAAK,CAACW,OAAN,KAAkB,KAAlB,GAA0B,SAA1B,GAAsC,OAHzC;IAIRC,IAAI,EAAC,MAJG;IAKRC,QAAQ,EAAE,CAACC,QAAD,EAAWC,KAAX,KAAoB;MAC5Bd,qBAAqB,CAACa,QAAD,EAAWC,KAAX,EAAkBjB,QAAlB,EAA4BC,SAA5B,CAArB;IACD,CAPO;IAOP,cACWG;EARJ,CAAV,CADF,EAWEX;IAAKc,SAAS,EAAEV,GAAG,CAACD,UAAU,CAACsB,cAAZ,EAA4BtB,UAAU,CAACuB,SAAX,CAAqBC,KAAjD,CAAnB;IAA0E,aAAY;EAAtF,GACGlB,KAAK,CAACmB,SADT,CAXF,CAFF,CAT0E;AAAA,CAArE;AA4BPvB,gBAAgB,CAACwB,WAAjB,GAA+B,kBAA/B","names":["React","TextInput","inlineStyles","formStyles","css","EditableTextCell","value","rowIndex","cellIndex","props","handleTextInputChange","inputAriaLabel","isDisabled","Fragment","className","inlineEditValue","inlineEditInput","editableValue","undefined","validated","isValid","type","onChange","newValue","event","formHelperText","modifiers","error","errorText","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-table/src/components/Table/EditableTextCell.tsx"],"sourcesContent":["import * as React from 'react';\nimport { TextInput } from '@patternfly/react-core/dist/esm/components/TextInput';\nimport inlineStyles from '@patternfly/react-styles/css/components/InlineEdit/inline-edit';\nimport formStyles from '@patternfly/react-styles/css/components/Form/form';\nimport { css } from '@patternfly/react-styles';\nimport { EditableTextCellProps } from './base';\n\nexport interface IEditableTextCell extends React.HTMLProps<HTMLDivElement> {\n  /** The current value of the text input */\n  value: string;\n  /** Row index of this text cell */\n  rowIndex: number;\n  /** Cell index of this text cell */\n  cellIndex: number;\n  /** Props to build the input */\n  props: EditableTextCellProps;\n  /** Event handler which fires when user changes the text in this cell */\n  handleTextInputChange: (\n    newValue: string,\n    event: React.FormEvent<HTMLInputElement>,\n    rowIndex: number,\n    cellIndex: number\n  ) => void;\n  /** accessible label of the text input */\n  inputAriaLabel: string;\n  /** flag indicating if the text input is disabled */\n  isDisabled?: boolean;\n}\n\nexport const EditableTextCell: React.FunctionComponent<IEditableTextCell> = ({\n  value,\n  rowIndex,\n  cellIndex,\n  props,\n  handleTextInputChange,\n  inputAriaLabel,\n  isDisabled = false\n}: IEditableTextCell) => (\n  <React.Fragment>\n    <div className={inlineStyles.inlineEditValue}>{value}</div>\n    <div className={inlineStyles.inlineEditInput}>\n      <TextInput\n        isDisabled={isDisabled}\n        value={props.editableValue !== undefined ? props.editableValue : value}\n        validated={props.isValid !== false ? 'default' : 'error'}\n        type=\"text\"\n        onChange={(newValue, event) => {\n          handleTextInputChange(newValue, event, rowIndex, cellIndex);\n        }}\n        aria-label={inputAriaLabel}\n      />\n      <div className={css(formStyles.formHelperText, formStyles.modifiers.error)} aria-live=\"polite\">\n        {props.errorText}\n      </div>\n    </div>\n  </React.Fragment>\n);\nEditableTextCell.displayName = 'EditableTextCell';\n"]},"metadata":{},"sourceType":"module"}