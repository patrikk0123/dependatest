{"ast":null,"code":"import _classCallCheck from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/** This Component can be used to wrap a functional component in order to generate a random ID\n * Example of how to use this component\n *\n * const Component = ({id}: {id: string}) => (\n *  <GenerateId>{randomId => (\n *     <div id={id || randomId}>\n *       div with random ID\n *     </div>\n *   )}\n *  </GenerateId>\n *  );\n */\nimport * as React from 'react';\nvar currentId = 0;\nexport var GenerateId = /*#__PURE__*/function (_React$Component) {\n  _inherits(GenerateId, _React$Component);\n\n  var _super = _createSuper(GenerateId);\n\n  function GenerateId() {\n    var _this;\n\n    _classCallCheck(this, GenerateId);\n\n    _this = _super.apply(this, arguments);\n    _this.id = \"\".concat(_this.props.prefix).concat(currentId++);\n    return _this;\n  }\n\n  _createClass(GenerateId, [{\n    key: \"render\",\n    value: function render() {\n      return this.props.children(this.id);\n    }\n  }]);\n\n  return GenerateId;\n}(React.Component);\nGenerateId.displayName = 'GenerateId';\nGenerateId.defaultProps = {\n  prefix: 'pf-random-id-'\n};","map":{"version":3,"mappings":";;;;;AAAA;;;;;;;;;;;;AAaA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,IAAIC,SAAS,GAAG,CAAhB;AASA,WAAaC,UAAb;EAAA;;EAAA;;EAAA;IAAA;;IAAA;;;IAKE,qBAAQ,MAAKC,KAAL,CAAWC,MAAnB,SAA4BH,SAAS,EAArC;IALF;EAUC;;EAVD;IAAA;IAAA,OAOE,kBAAM;MACJ,OAAO,KAAKE,KAAL,CAAWE,QAAX,CAAoB,KAAKC,EAAzB,CAAP;IACD;EATH;;EAAA;AAAA,EAAgCN,KAAK,CAACO,SAAtC;AACSL,yBAAc,YAAd;AACAA,0BAAe;EACpBE,MAAM,EAAE;AADY,CAAf","names":["React","currentId","GenerateId","props","prefix","children","id","Component"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/helpers/GenerateId/GenerateId.ts"],"sourcesContent":["/** This Component can be used to wrap a functional component in order to generate a random ID\n * Example of how to use this component\n *\n * const Component = ({id}: {id: string}) => (\n *  <GenerateId>{randomId => (\n *     <div id={id || randomId}>\n *       div with random ID\n *     </div>\n *   )}\n *  </GenerateId>\n *  );\n */\n\nimport * as React from 'react';\n\nlet currentId = 0;\n\ninterface GenerateIdProps {\n  /** String to prefix the random id with */\n  prefix?: string;\n  /** Component to be rendered with the generated id */\n  children(id: string): React.ReactNode;\n}\n\nexport class GenerateId extends React.Component<GenerateIdProps, {}> {\n  static displayName = 'GenerateId';\n  static defaultProps = {\n    prefix: 'pf-random-id-'\n  };\n  id = `${this.props.prefix}${currentId++}`;\n\n  render() {\n    return this.props.children(this.id);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}