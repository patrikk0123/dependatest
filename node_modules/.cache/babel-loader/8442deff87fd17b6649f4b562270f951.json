{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tooltip/tooltip';\nimport { css } from '@patternfly/react-styles';\nexport const TooltipContent = _a => {\n  var {\n    className,\n    children,\n    isLeftAligned\n  } = _a,\n      props = __rest(_a, [\"className\", \"children\", \"isLeftAligned\"]);\n\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.tooltipContent, isLeftAligned && styles.modifiers.textAlignLeft, className)\n  }, props), children);\n};\nTooltipContent.displayName = 'TooltipContent';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,yDAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AAWA,OAAO,MAAMC,cAAc,GAAkDC,EAAD,IAKlD;MALmD;IAC3EC,SAD2E;IAE3EC,QAF2E;IAG3EC;EAH2E,IAG9DH;MACVI,KAAK,cAJmE,0CAInE;;EACiB,OACzBR;IAAKK,SAAS,EAAEH,GAAG,CAACD,MAAM,CAACQ,cAAR,EAAwBF,aAAa,IAAIN,MAAM,CAACS,SAAP,CAAiBC,aAA1D,EAAyEN,SAAzE;EAAnB,GAA4GG,KAA5G,GACGF,QADH,CADyB;AAI1B,CATM;AAUPH,cAAc,CAACS,WAAf,GAA6B,gBAA7B","names":["React","styles","css","TooltipContent","_a","className","children","isLeftAligned","props","tooltipContent","modifiers","textAlignLeft","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Tooltip/TooltipContent.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tooltip/tooltip';\nimport { css } from '@patternfly/react-styles';\n\nexport interface TooltipContentProps extends React.HTMLProps<HTMLDivElement> {\n  /** PopoverContent additional class */\n  className?: string;\n  /** PopoverContent content */\n  children: React.ReactNode;\n  /** Flag to align text to the left */\n  isLeftAligned?: boolean;\n}\n\nexport const TooltipContent: React.FunctionComponent<TooltipContentProps> = ({\n  className,\n  children,\n  isLeftAligned,\n  ...props\n}: TooltipContentProps) => (\n  <div className={css(styles.tooltipContent, isLeftAligned && styles.modifiers.textAlignLeft, className)} {...props}>\n    {children}\n  </div>\n);\nTooltipContent.displayName = 'TooltipContent';\n"]},"metadata":{},"sourceType":"module"}