{"ast":null,"code":"import _classCallCheck from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\n/**\n * header.tsx\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\n\nimport * as React from 'react';\nimport { ProviderContext } from './provider';\nimport { HeaderRow } from './header-row';\n\nvar BaseHeader = /*#__PURE__*/function (_React$Component) {\n  _inherits(BaseHeader, _React$Component);\n\n  var _super = _createSuper(BaseHeader);\n\n  function BaseHeader() {\n    _classCallCheck(this, BaseHeader);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BaseHeader, [{\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          children = _a.children,\n          headerRows = _a.headerRows,\n          onRow = _a.onRow,\n          renderers = _a.renderers,\n          columns = _a.columns,\n          props = __rest(_a, [\"children\", \"headerRows\", \"onRow\", \"renderers\", \"columns\"]); // If headerRows aren't passed, default to bodyColumns as header rows\n\n\n      return React.createElement(renderers.header.wrapper, props, [(headerRows || [columns]).map(function (rowData, rowIndex) {\n        return React.createElement(HeaderRow, {\n          key: \"\".concat(rowIndex, \"-header-row\"),\n          renderers: renderers.header,\n          onRow: onRow,\n          rowData: rowData,\n          rowIndex: rowIndex\n        });\n      })].concat(children));\n    }\n  }]);\n\n  return BaseHeader;\n}(React.Component);\n\nexport var Header = function Header(props) {\n  return React.createElement(ProviderContext.Consumer, null, function (_ref) {\n    var columns = _ref.columns,\n        renderers = _ref.renderers;\n    return React.createElement(BaseHeader, Object.assign({\n      columns: columns,\n      renderers: renderers\n    }, props));\n  });\n};","map":{"version":3,"mappings":";;;;;AAAA;;;;;;;AAMA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,eAAT,QAAgC,YAAhC;AACA,SAASC,SAAT,QAA0B,cAA1B;;IAWMC,U;;;;;;;;;;;;;WACJ,kBAAM;MACE,SAAgE,KAAKC,KAArE;MAAA,IAAEC,QAAF,GAAiDC,EAAjD,CAAED,QAAF;MAAA,IAAYE,UAAZ,GAAiDD,EAAjD,CAAYC,UAAZ;MAAA,IAAwBC,KAAxB,GAAiDF,EAAjD,CAAwBE,KAAxB;MAAA,IAA+BC,SAA/B,GAAiDH,EAAjD,CAA+BG,SAA/B;MAAA,IAA0CC,OAA1C,GAAiDJ,EAAjD,CAA0CI,OAA1C;MAAA,IAAsDN,KAAtD,GAA2DO,WAA3D,2DAA2D,CAA3D,CADF,CAGJ;;;MACA,OAAOX,KAAK,CAACY,aAAN,CACLH,SAAS,CAACI,MAAV,CAAiBC,OADZ,EAELV,KAFK,EAGL,CACE,CAACG,UAAU,IAAK,CAACG,OAAD,CAAhB,EAA2CK,GAA3C,CAA+C,UAACC,OAAD,EAAUC,QAAV;QAAA,OAC7CjB,KAAK,CAACY,aAAN,CAAoBV,SAApB,EAA+B;UAC7BgB,GAAG,YAAKD,QAAL,gBAD0B;UAE7BR,SAAS,EAAEA,SAAS,CAACI,MAFQ;UAG7BL,KAAK,EAALA,KAH6B;UAI7BQ,OAAO,EAAPA,OAJ6B;UAK7BC,QAAQ,EAARA;QAL6B,CAA/B,CAD6C;MAAA,CAA/C,CADF,EAUEE,MAVF,CAUSd,QAVT,CAHK,CAAP;IAeD;;;;EApBsBL,KAAK,CAACoB,S;;AAuB/B,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACjB,KAAD;EAAA,OACpBJ,oBAACC,eAAe,CAACqB,QAAjB,EAAyB,IAAzB,EACG;IAAA,IAAGZ,OAAH,QAAGA,OAAH;IAAA,IAAYD,SAAZ,QAAYA,SAAZ;IAAA,OAA4BT,oBAACG,UAAD,EAAWoB;MAACb,OAAO,EAAEA,OAAV;MAAmBD,SAAS,EAAEA;IAA9B,GAA6CL,KAA7C,CAAX,CAA5B;EAAA,CADH,CADoB;AAAA,CAAf","names":["React","ProviderContext","HeaderRow","BaseHeader","props","children","_a","headerRows","onRow","renderers","columns","__rest","createElement","header","wrapper","map","rowData","rowIndex","key","concat","Component","Header","Consumer","Object"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-table/src/components/Table/base/header.tsx"],"sourcesContent":["/**\n * header.tsx\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport * as React from 'react';\nimport { createElementType, RowsType, ColumnsType, RenderersTypes } from './types';\nimport { ProviderContext } from './provider';\nimport { HeaderRow } from './header-row';\n\nexport interface HeaderProps {\n  headerRows?: RowsType[] | ColumnsType; // array of rows arrays\n  children?: React.ReactNode;\n  columns?: ColumnsType;\n  renderers?: RenderersTypes['renderers'];\n  onRow?: Function;\n  className?: string;\n}\n\nclass BaseHeader extends React.Component<HeaderProps, {}> {\n  render() {\n    const { children, headerRows, onRow, renderers, columns, ...props } = this.props;\n\n    // If headerRows aren't passed, default to bodyColumns as header rows\n    return React.createElement(\n      renderers.header.wrapper as createElementType,\n      props,\n      [\n        (headerRows || ([columns] as ColumnsType)).map((rowData, rowIndex) =>\n          React.createElement(HeaderRow, {\n            key: `${rowIndex}-header-row`,\n            renderers: renderers.header,\n            onRow,\n            rowData,\n            rowIndex\n          })\n        )\n      ].concat(children as any)\n    );\n  }\n}\n\nexport const Header = (props: HeaderProps) => (\n  <ProviderContext.Consumer>\n    {({ columns, renderers }) => <BaseHeader columns={columns} renderers={renderers} {...props} />}\n  </ProviderContext.Consumer>\n);\n"]},"metadata":{},"sourceType":"module"}