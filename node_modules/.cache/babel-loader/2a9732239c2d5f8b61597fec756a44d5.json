{"ast":null,"code":"import _classCallCheck from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Radio/radio';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport var Radio = /*#__PURE__*/function (_React$Component) {\n  _inherits(Radio, _React$Component);\n\n  var _super = _createSuper(Radio);\n\n  function Radio(props) {\n    var _this;\n\n    _classCallCheck(this, Radio);\n\n    _this = _super.call(this, props);\n\n    _this.handleChange = function (event) {\n      _this.props.onChange(event.currentTarget.checked, event);\n    };\n\n    if (!props.label && !props['aria-label']) {\n      // eslint-disable-next-line no-console\n      console.error('Radio:', 'Radio requires an aria-label to be specified');\n    }\n\n    _this.state = {\n      ouiaStateId: getDefaultOUIAId(Radio.displayName)\n    };\n    return _this;\n  }\n\n  _createClass(Radio, [{\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          ariaLabel = _a['aria-label'],\n          checked = _a.checked,\n          className = _a.className,\n          defaultChecked = _a.defaultChecked,\n          isLabelWrapped = _a.isLabelWrapped,\n          isLabelBeforeButton = _a.isLabelBeforeButton,\n          isChecked = _a.isChecked,\n          isDisabled = _a.isDisabled,\n          isValid = _a.isValid,\n          label = _a.label,\n          onChange = _a.onChange,\n          description = _a.description,\n          body = _a.body,\n          ouiaId = _a.ouiaId,\n          _a$ouiaSafe = _a.ouiaSafe,\n          ouiaSafe = _a$ouiaSafe === void 0 ? true : _a$ouiaSafe,\n          props = __rest(_a, ['aria-label', \"checked\", \"className\", \"defaultChecked\", \"isLabelWrapped\", \"isLabelBeforeButton\", \"isChecked\", \"isDisabled\", \"isValid\", \"label\", \"onChange\", \"description\", \"body\", \"ouiaId\", \"ouiaSafe\"]);\n\n      if (!props.id) {\n        // eslint-disable-next-line no-console\n        console.error('Radio:', 'id is required to make input accessible');\n      }\n\n      var inputRendered = React.createElement(\"input\", Object.assign({}, props, {\n        className: css(styles.radioInput),\n        type: \"radio\",\n        onChange: this.handleChange,\n        \"aria-invalid\": !isValid,\n        disabled: isDisabled,\n        checked: checked || isChecked\n      }, checked === undefined && {\n        defaultChecked: defaultChecked\n      }, !label && {\n        'aria-label': ariaLabel\n      }, getOUIAProps(Radio.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)));\n      var labelRendered = null;\n\n      if (label && isLabelWrapped) {\n        labelRendered = React.createElement(\"span\", {\n          className: css(styles.radioLabel, isDisabled && styles.modifiers.disabled)\n        }, label);\n      } else if (label) {\n        labelRendered = React.createElement(\"label\", {\n          className: css(styles.radioLabel, isDisabled && styles.modifiers.disabled),\n          htmlFor: props.id\n        }, label);\n      }\n\n      var descRender = description ? React.createElement(\"span\", {\n        className: css(styles.radioDescription)\n      }, description) : null;\n      var bodyRender = body ? React.createElement(\"span\", {\n        className: css(styles.radioBody)\n      }, body) : null;\n      var childrenRendered = isLabelBeforeButton ? React.createElement(React.Fragment, null, labelRendered, inputRendered, descRender, bodyRender) : React.createElement(React.Fragment, null, inputRendered, labelRendered, descRender, bodyRender);\n      return isLabelWrapped ? React.createElement(\"label\", {\n        className: css(styles.radio, className),\n        htmlFor: props.id\n      }, childrenRendered) : React.createElement(\"div\", {\n        className: css(styles.radio, !label && styles.modifiers.standalone, className)\n      }, childrenRendered);\n    }\n  }]);\n\n  return Radio;\n}(React.Component);\nRadio.displayName = 'Radio';\nRadio.defaultProps = {\n  className: '',\n  isDisabled: false,\n  isValid: true,\n  onChange: function onChange() {}\n};","map":{"version":3,"mappings":"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","names":["React","styles","css","getOUIAProps","getDefaultOUIAId","Radio","props","event","onChange","currentTarget","checked","label","console","error","state","ouiaStateId","displayName","ariaLabel","_a","className","defaultChecked","isLabelWrapped","isLabelBeforeButton","isChecked","isDisabled","isValid","description","body","ouiaId","ouiaSafe","__rest","id","inputRendered","radioInput","type","handleChange","disabled","undefined","labelRendered","radioLabel","modifiers","htmlFor","descRender","radioDescription","bodyRender","radioBody","childrenRendered","radio","standalone","Component"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Radio/Radio.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Radio/radio';\nimport { css } from '@patternfly/react-styles';\nimport { PickOptional } from '../../helpers/typeUtils';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId } from '../../helpers';\n\nexport interface RadioProps\n  extends Omit<React.HTMLProps<HTMLInputElement>, 'disabled' | 'label' | 'onChange' | 'type'>,\n    OUIAProps {\n  /** Additional classes added to the radio. */\n  className?: string;\n  /** Id of the radio. */\n  id: string;\n  /** Flag to show if the radio label is wrapped on small screen. */\n  isLabelWrapped?: boolean;\n  /** Flag to show if the radio label is shown before the radio button. */\n  isLabelBeforeButton?: boolean;\n  /** Flag to show if the radio is checked. */\n  checked?: boolean;\n  /** Flag to show if the radio is checked. */\n  isChecked?: boolean;\n  /** Flag to show if the radio is disabled. */\n  isDisabled?: boolean;\n  /** Flag to show if the radio selection is valid or invalid. */\n  isValid?: boolean;\n  /** Label text of the radio. */\n  label?: React.ReactNode;\n  /** Name for group of radios */\n  name: string;\n  /** A callback for when the radio selection changes. */\n  onChange?: (checked: boolean, event: React.FormEvent<HTMLInputElement>) => void;\n  /** Aria label for the radio. */\n  'aria-label'?: string;\n  /** Description text of the radio. */\n  description?: React.ReactNode;\n  /** Body of the radio. */\n  body?: React.ReactNode;\n}\n\nexport class Radio extends React.Component<RadioProps, { ouiaStateId: string }> {\n  static displayName = 'Radio';\n  static defaultProps: PickOptional<RadioProps> = {\n    className: '',\n    isDisabled: false,\n    isValid: true,\n    onChange: () => {}\n  };\n\n  constructor(props: RadioProps) {\n    super(props);\n    if (!props.label && !props['aria-label']) {\n      // eslint-disable-next-line no-console\n      console.error('Radio:', 'Radio requires an aria-label to be specified');\n    }\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(Radio.displayName)\n    };\n  }\n\n  handleChange = (event: React.FormEvent<HTMLInputElement>) => {\n    this.props.onChange(event.currentTarget.checked, event);\n  };\n\n  render() {\n    const {\n      'aria-label': ariaLabel,\n      checked,\n      className,\n      defaultChecked,\n      isLabelWrapped,\n      isLabelBeforeButton,\n      isChecked,\n      isDisabled,\n      isValid,\n      label,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onChange,\n      description,\n      body,\n      ouiaId,\n      ouiaSafe = true,\n      ...props\n    } = this.props;\n    if (!props.id) {\n      // eslint-disable-next-line no-console\n      console.error('Radio:', 'id is required to make input accessible');\n    }\n\n    const inputRendered = (\n      <input\n        {...props}\n        className={css(styles.radioInput)}\n        type=\"radio\"\n        onChange={this.handleChange}\n        aria-invalid={!isValid}\n        disabled={isDisabled}\n        checked={checked || isChecked}\n        {...(checked === undefined && { defaultChecked })}\n        {...(!label && { 'aria-label': ariaLabel })}\n        {...getOUIAProps(Radio.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n      />\n    );\n\n    let labelRendered: React.ReactNode = null;\n    if (label && isLabelWrapped) {\n      labelRendered = <span className={css(styles.radioLabel, isDisabled && styles.modifiers.disabled)}>{label}</span>;\n    } else if (label) {\n      labelRendered = (\n        <label className={css(styles.radioLabel, isDisabled && styles.modifiers.disabled)} htmlFor={props.id}>\n          {label}\n        </label>\n      );\n    }\n\n    const descRender = description ? <span className={css(styles.radioDescription)}>{description}</span> : null;\n    const bodyRender = body ? <span className={css(styles.radioBody)}>{body}</span> : null;\n    const childrenRendered = isLabelBeforeButton ? (\n      <>\n        {labelRendered}\n        {inputRendered}\n        {descRender}\n        {bodyRender}\n      </>\n    ) : (\n      <>\n        {inputRendered}\n        {labelRendered}\n        {descRender}\n        {bodyRender}\n      </>\n    );\n\n    return isLabelWrapped ? (\n      <label className={css(styles.radio, className)} htmlFor={props.id}>\n        {childrenRendered}\n      </label>\n    ) : (\n      <div className={css(styles.radio, !label && styles.modifiers.standalone, className)}>{childrenRendered}</div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}