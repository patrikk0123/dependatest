{"ast":null,"code":"import _classCallCheck from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Progress/progress';\nimport { css } from '@patternfly/react-styles';\nimport { ProgressContainer, ProgressMeasureLocation } from './ProgressContainer';\nimport { getUniqueId } from '../../helpers/util';\nexport var ProgressSize;\n\n(function (ProgressSize) {\n  ProgressSize[\"sm\"] = \"sm\";\n  ProgressSize[\"md\"] = \"md\";\n  ProgressSize[\"lg\"] = \"lg\";\n})(ProgressSize || (ProgressSize = {}));\n\nexport var Progress = /*#__PURE__*/function (_React$Component) {\n  _inherits(Progress, _React$Component);\n\n  var _super = _createSuper(Progress);\n\n  function Progress() {\n    var _this;\n\n    _classCallCheck(this, Progress);\n\n    _this = _super.apply(this, arguments);\n    _this.id = _this.props.id || getUniqueId();\n    return _this;\n  }\n\n  _createClass(Progress, [{\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          id = _a.id,\n          size = _a.size,\n          className = _a.className,\n          value = _a.value,\n          title = _a.title,\n          label = _a.label,\n          variant = _a.variant,\n          measureLocation = _a.measureLocation,\n          min = _a.min,\n          max = _a.max,\n          valueText = _a.valueText,\n          isTitleTruncated = _a.isTitleTruncated,\n          tooltipPosition = _a.tooltipPosition,\n          ariaLabel = _a['aria-label'],\n          ariaLabelledBy = _a['aria-labelledby'],\n          props = __rest(_a, [\"id\", \"size\", \"className\", \"value\", \"title\", \"label\", \"variant\", \"measureLocation\", \"min\", \"max\", \"valueText\", \"isTitleTruncated\", \"tooltipPosition\", 'aria-label', 'aria-labelledby']);\n\n      var progressBarAriaProps = {\n        'aria-valuemin': min,\n        'aria-valuenow': value,\n        'aria-valuemax': max\n      };\n\n      if (title || ariaLabelledBy) {\n        progressBarAriaProps['aria-labelledby'] = title ? \"\".concat(this.id, \"-description\") : ariaLabelledBy;\n      }\n\n      if (ariaLabel) {\n        progressBarAriaProps['aria-label'] = ariaLabel;\n      }\n\n      if (valueText) {\n        progressBarAriaProps['aria-valuetext'] = valueText;\n      }\n\n      if (!title && !ariaLabelledBy && !ariaLabel) {\n        /* eslint-disable no-console */\n        console.warn('One of aria-label or aria-labelledby properties should be passed when using the progress component without a title.');\n      }\n\n      var scaledValue = Math.min(100, Math.max(0, Math.floor((value - min) / (max - min) * 100))) || 0;\n      return React.createElement(\"div\", Object.assign({}, props, {\n        className: css(styles.progress, styles.modifiers[variant], ['inside', 'outside'].includes(measureLocation) && styles.modifiers[measureLocation], measureLocation === 'inside' ? styles.modifiers[ProgressSize.lg] : styles.modifiers[size], !title && styles.modifiers.singleline, className),\n        id: this.id\n      }), React.createElement(ProgressContainer, {\n        parentId: this.id,\n        value: scaledValue,\n        title: title,\n        label: label,\n        variant: variant,\n        measureLocation: measureLocation,\n        progressBarAriaProps: progressBarAriaProps,\n        isTitleTruncated: isTitleTruncated,\n        tooltipPosition: tooltipPosition\n      }));\n    }\n  }]);\n\n  return Progress;\n}(React.Component);\nProgress.displayName = 'Progress';\nProgress.defaultProps = {\n  className: '',\n  measureLocation: ProgressMeasureLocation.top,\n  variant: null,\n  id: '',\n  title: '',\n  min: 0,\n  max: 100,\n  size: null,\n  label: null,\n  value: 0,\n  valueText: null,\n  isTitleTruncated: false,\n  tooltipPosition: 'top',\n  'aria-label': null,\n  'aria-labelledby': null\n};","map":{"version":3,"mappings":"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","names":["React","styles","css","ProgressContainer","ProgressMeasureLocation","getUniqueId","ProgressSize","Progress","props","id","_a","size","className","value","title","label","variant","measureLocation","min","max","valueText","isTitleTruncated","tooltipPosition","ariaLabel","ariaLabelledBy","__rest","progressBarAriaProps","console","warn","scaledValue","Math","floor","progress","modifiers","includes","lg","singleline","parentId","Component","top"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Progress/Progress.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Progress/progress';\nimport { css } from '@patternfly/react-styles';\nimport { ProgressContainer, ProgressMeasureLocation } from './ProgressContainer';\nimport { AriaProps } from './ProgressBar';\nimport { getUniqueId } from '../../helpers/util';\n\nexport enum ProgressSize {\n  sm = 'sm',\n  md = 'md',\n  lg = 'lg'\n}\n\nexport interface ProgressProps extends Omit<React.HTMLProps<HTMLDivElement>, 'size' | 'label' | 'title'> {\n  /** Classname for progress component. */\n  className?: string;\n  /** Size variant of progress. */\n  size?: 'sm' | 'md' | 'lg';\n  /** Where the measure percent will be located. */\n  measureLocation?: 'outside' | 'inside' | 'top' | 'none';\n  /** Status variant of progress. */\n  variant?: 'danger' | 'success' | 'warning';\n  /** Title above progress. The isTitleTruncated property will only affect string titles. Node title truncation must be handled manually. */\n  title?: React.ReactNode;\n  /** Text description of current progress value to display instead of percentage. */\n  label?: React.ReactNode;\n  /** Actual value of progress. */\n  value?: number;\n  /** DOM id for progress component. */\n  id?: string;\n  /** Minimal value of progress. */\n  min?: number;\n  /** Maximum value of progress. */\n  max?: number;\n  /** Accessible text description of current progress value, for when value is not a percentage. Use with label. */\n  valueText?: string;\n  /** Indicate whether to truncate the string title */\n  isTitleTruncated?: boolean;\n  /** Position of the tooltip which is displayed if title is truncated */\n  tooltipPosition?: 'auto' | 'top' | 'bottom' | 'left' | 'right';\n  /** Adds accessible text to the ProgressBar. Required when title not used and there is not any label associated with the progress bar */\n  'aria-label'?: string;\n  /** Associates the ProgressBar with it's label for accessibility purposes. Required when title not used */\n  'aria-labelledby'?: string;\n}\n\nexport class Progress extends React.Component<ProgressProps> {\n  static displayName = 'Progress';\n  static defaultProps: ProgressProps = {\n    className: '',\n    measureLocation: ProgressMeasureLocation.top,\n    variant: null,\n    id: '',\n    title: '',\n    min: 0,\n    max: 100,\n    size: null as ProgressSize,\n    label: null as React.ReactNode,\n    value: 0,\n    valueText: null as string,\n    isTitleTruncated: false,\n    tooltipPosition: 'top' as 'auto' | 'top' | 'bottom' | 'left' | 'right',\n    'aria-label': null as string,\n    'aria-labelledby': null as string\n  };\n\n  id = this.props.id || getUniqueId();\n\n  render() {\n    const {\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      id,\n      size,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      className,\n      value,\n      title,\n      label,\n      variant,\n      measureLocation,\n      min,\n      max,\n      valueText,\n      isTitleTruncated,\n      tooltipPosition,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      ...props\n    } = this.props;\n\n    const progressBarAriaProps: AriaProps = {\n      'aria-valuemin': min,\n      'aria-valuenow': value,\n      'aria-valuemax': max\n    };\n\n    if (title || ariaLabelledBy) {\n      progressBarAriaProps['aria-labelledby'] = title ? `${this.id}-description` : ariaLabelledBy;\n    }\n\n    if (ariaLabel) {\n      progressBarAriaProps['aria-label'] = ariaLabel;\n    }\n\n    if (valueText) {\n      progressBarAriaProps['aria-valuetext'] = valueText;\n    }\n\n    if (!title && !ariaLabelledBy && !ariaLabel) {\n      /* eslint-disable no-console */\n      console.warn(\n        'One of aria-label or aria-labelledby properties should be passed when using the progress component without a title.'\n      );\n    }\n\n    const scaledValue = Math.min(100, Math.max(0, Math.floor(((value - min) / (max - min)) * 100))) || 0;\n    return (\n      <div\n        {...props}\n        className={css(\n          styles.progress,\n          styles.modifiers[variant],\n          ['inside', 'outside'].includes(measureLocation) && styles.modifiers[measureLocation as 'inside' | 'outside'],\n          measureLocation === 'inside' ? styles.modifiers[ProgressSize.lg] : styles.modifiers[size as 'sm' | 'lg'],\n          !title && styles.modifiers.singleline,\n          className\n        )}\n        id={this.id}\n      >\n        <ProgressContainer\n          parentId={this.id}\n          value={scaledValue}\n          title={title}\n          label={label}\n          variant={variant}\n          measureLocation={measureLocation}\n          progressBarAriaProps={progressBarAriaProps}\n          isTitleTruncated={isTitleTruncated}\n          tooltipPosition={tooltipPosition}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}