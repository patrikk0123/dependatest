{"ast":null,"code":"var _jsxFileName = \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/Sorting/Sorting.tsx\";\nimport { Button, InputGroup, Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { SortAmountDownAltIcon, SortAmountDownIcon } from '@patternfly/react-icons';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { getComponentQueryParamValue, updateQueryParamsInURL } from '../../utils/queryParamsHelper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let SORT_ORDER;\n\n(function (SORT_ORDER) {\n  SORT_ORDER[\"Asc\"] = \"asc\";\n  SORT_ORDER[\"Desc\"] = \"desc\";\n})(SORT_ORDER || (SORT_ORDER = {}));\n\nexport const Sorting = _ref => {\n  var _Object$entries$filte;\n\n  let {\n    sortOptions,\n    componentId\n  } = _ref;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [isFirstRender, setIsFirstRender] = useState(true);\n  const defaultSortKey = (_Object$entries$filte = Object.entries(sortOptions).filter(_ref2 => {\n    let [k, v] = _ref2;\n    return v.defaultSorted;\n  })[0]) === null || _Object$entries$filte === void 0 ? void 0 : _Object$entries$filte[0];\n  const defaultSortOrder = sortOptions[defaultSortKey].defaultSortedOrder || SORT_ORDER.Asc; // attribute by which list is sorted\n\n  const [sortAttribute, setSortAttribute] = useState();\n  const [sortOrder, setSortOrder] = useState(SORT_ORDER.Asc);\n  const [isSortSelectOpen, setIsSortSelectOpen] = useState(false);\n  /**\n   * Add sort param by updating URL.\n   */\n\n  const addSortFilter = useCallback(function (filterAttribute, order) {\n    let replace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    updateQueryParamsInURL({\n      sort: `=${order}=${filterAttribute}`,\n      pageIndex: 1\n    }, componentId, location, navigate, replace);\n  }, [componentId, location, navigate]);\n  /**\n   * Delete sort param from URL.\n   */\n\n  const deleteSortFilter = () => {\n    updateQueryParamsInURL({\n      sort: '',\n      pageIndex: 1\n    }, componentId, location, navigate);\n  };\n  /**\n   * Sychronize UI with the URL sort param.\n   */\n\n\n  useEffect(() => {\n    const currentSortParam = getComponentQueryParamValue(location.search, 'sort', componentId) || '';\n\n    if (currentSortParam) {\n      var _currentSortParam$spl, _currentSortParam$spl2;\n\n      const sortOrderUrl = (_currentSortParam$spl = currentSortParam.split('=')) === null || _currentSortParam$spl === void 0 ? void 0 : _currentSortParam$spl[1];\n      const sortParam = (_currentSortParam$spl2 = currentSortParam.split('=')) === null || _currentSortParam$spl2 === void 0 ? void 0 : _currentSortParam$spl2[2];\n      setSortOrder(sortOrderUrl);\n      setSortAttribute(sortOptions[sortParam]);\n    } else {\n      setSortAttribute(undefined);\n    }\n  }, [location.search, location, componentId, navigate, sortOptions, defaultSortKey, addSortFilter]);\n  /**\n   * Add default sorting (if any) and check sortOptiions validity.\n   */\n\n  useEffect(() => {\n    const currentSortParam = getComponentQueryParamValue(location.search, 'sort', componentId) || '';\n\n    if (!currentSortParam && isFirstRender && defaultSortKey) {\n      addSortFilter(defaultSortKey, defaultSortOrder, true);\n    }\n\n    if (isFirstRender) {\n      setIsFirstRender(false);\n    } else {\n      Object.entries(sortOptions).forEach(_ref3 => {\n        let [k, v] = _ref3;\n\n        // check sort options validity\n        if (k !== v.id) {\n          console.error('sortOptions: ', sortOptions);\n          throw new Error(`sortOptions have invalid format, object key (${k}) has to match id field (${v.id})!`);\n        }\n      });\n    }\n  }, [isFirstRender, defaultSortKey, defaultSortOrder, addSortFilter, componentId, location, sortOptions]);\n  return /*#__PURE__*/_jsxDEV(InputGroup, {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      hasPlaceholderStyle: true,\n      placeholderText: \"Sort\",\n      variant: SelectVariant.single,\n      onToggle: isOpen => {\n        setIsSortSelectOpen(isOpen);\n      },\n      onSelect: (_, selection) => {\n        setIsSortSelectOpen(false);\n        addSortFilter(selection === null || selection === void 0 ? void 0 : selection.id, sortOrder);\n      },\n      selections: sortAttribute,\n      isOpen: isSortSelectOpen,\n      children: [...Object.keys(sortOptions).map(filterAttributeKey => {\n        const filterAttribute = sortOptions[filterAttributeKey]; // use 'title' attribute as default\n\n        filterAttribute.toString = () => {\n          return filterAttribute.title;\n        };\n\n        return /*#__PURE__*/_jsxDEV(SelectOption, {\n          value: filterAttribute\n        }, filterAttribute.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 20\n        }, this);\n      })]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        addSortFilter(sortAttribute.id, sortOrder === SORT_ORDER.Asc ? SORT_ORDER.Desc : SORT_ORDER.Asc);\n      },\n      variant: \"plain\",\n      isDisabled: !sortAttribute,\n      icon: sortOrder === SORT_ORDER.Asc ? /*#__PURE__*/_jsxDEV(SortAmountDownAltIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(SortAmountDownIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 74\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), sortAttribute && /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        padding: '1px'\n      },\n      onClick: () => {\n        deleteSortFilter();\n      },\n      variant: \"plain\",\n      isInline: true,\n      children: \"Remove sorting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["Button","InputGroup","Select","SelectOption","SelectVariant","SortAmountDownAltIcon","SortAmountDownIcon","useCallback","useEffect","useState","useLocation","useNavigate","getComponentQueryParamValue","updateQueryParamsInURL","SORT_ORDER","Sorting","sortOptions","componentId","location","navigate","isFirstRender","setIsFirstRender","defaultSortKey","Object","entries","filter","k","v","defaultSorted","defaultSortOrder","defaultSortedOrder","Asc","sortAttribute","setSortAttribute","sortOrder","setSortOrder","isSortSelectOpen","setIsSortSelectOpen","addSortFilter","filterAttribute","order","replace","sort","pageIndex","deleteSortFilter","currentSortParam","search","sortOrderUrl","split","sortParam","undefined","forEach","id","console","error","Error","single","isOpen","_","selection","keys","map","filterAttributeKey","toString","title","Desc","padding"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/Sorting/Sorting.tsx"],"sourcesContent":["import { Button, InputGroup, Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { SortAmountDownAltIcon, SortAmountDownIcon } from '@patternfly/react-icons';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nimport { getComponentQueryParamValue, updateQueryParamsInURL } from '../../utils/queryParamsHelper';\n\nexport enum SORT_ORDER {\n  Asc = 'asc',\n  Desc = 'desc',\n}\n\nexport interface ISortAttribute {\n  /**\n   * ID has to match object key {@link ISortOptions}, there is automatic checker throwing errors if they don't match.\n   */\n  id: string;\n  /**\n   * Sorting option title.\n   */\n  title: string;\n  /**\n   * Should be sorted by default by this option?\n   * Only one attribute should be dafault.\n   */\n  isSortedByDefault?: boolean;\n  /**\n   * If sorted by default by this attribute, which order is used?\n   */\n  defaultSortOrder?: SORT_ORDER;\n}\n\nexport interface ISortOptions {\n  [key: string]: ISortAttribute;\n}\n\ninterface ISortingProps {\n  sortOptions: ISortOptions;\n  componentId: any;\n}\n\nexport const Sorting = ({ sortOptions, componentId }: ISortingProps) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const [isFirstRender, setIsFirstRender] = useState<boolean>(true);\n\n  const defaultSortKey = Object.entries(sortOptions).filter(([k, v]) => v.defaultSorted)[0]?.[0];\n  const defaultSortOrder = sortOptions[defaultSortKey].defaultSortedOrder || SORT_ORDER.Asc;\n\n  // attribute by which list is sorted\n  const [sortAttribute, setSortAttribute] = useState<ISortAttribute | undefined>();\n  const [sortOrder, setSortOrder] = useState<SORT_ORDER>(SORT_ORDER.Asc);\n  const [isSortSelectOpen, setIsSortSelectOpen] = useState<boolean>(false);\n\n  /**\n   * Add sort param by updating URL.\n   */\n  const addSortFilter = useCallback(\n    (filterAttribute: string, order: SORT_ORDER, replace: boolean = false) => {\n      updateQueryParamsInURL({ sort: `=${order}=${filterAttribute}`, pageIndex: 1 }, componentId, location, navigate, replace);\n    },\n    [componentId, location, navigate]\n  );\n\n  /**\n   * Delete sort param from URL.\n   */\n  const deleteSortFilter = () => {\n    updateQueryParamsInURL({ sort: '', pageIndex: 1 }, componentId, location, navigate);\n  };\n\n  /**\n   * Sychronize UI with the URL sort param.\n   */\n  useEffect(() => {\n    const currentSortParam = getComponentQueryParamValue(location.search, 'sort', componentId) || '';\n\n    if (currentSortParam) {\n      const sortOrderUrl = currentSortParam.split('=')?.[1];\n      const sortParam = currentSortParam.split('=')?.[2];\n\n      setSortOrder(sortOrderUrl as SORT_ORDER);\n      setSortAttribute(sortOptions[sortParam]);\n    } else {\n      setSortAttribute(undefined);\n    }\n  }, [location.search, location, componentId, navigate, sortOptions, defaultSortKey, addSortFilter]);\n\n  /**\n   * Add default sorting (if any) and check sortOptiions validity.\n   */\n  useEffect(() => {\n    const currentSortParam = getComponentQueryParamValue(location.search, 'sort', componentId) || '';\n    if (!currentSortParam && isFirstRender && defaultSortKey) {\n      addSortFilter(defaultSortKey, defaultSortOrder, true);\n    }\n\n    if (isFirstRender) {\n      setIsFirstRender(false);\n    } else {\n      Object.entries(sortOptions).forEach(([k, v]) => {\n        // check sort options validity\n        if (k !== v.id) {\n          console.error('sortOptions: ', sortOptions);\n          throw new Error(`sortOptions have invalid format, object key (${k}) has to match id field (${v.id})!`);\n        }\n      });\n    }\n  }, [isFirstRender, defaultSortKey, defaultSortOrder, addSortFilter, componentId, location, sortOptions]);\n\n  return (\n    <InputGroup>\n      <Select\n        hasPlaceholderStyle\n        placeholderText=\"Sort\"\n        variant={SelectVariant.single}\n        onToggle={(isOpen) => {\n          setIsSortSelectOpen(isOpen);\n        }}\n        onSelect={(_, selection) => {\n          setIsSortSelectOpen(false);\n          addSortFilter((selection as ISortAttribute)?.id, sortOrder);\n        }}\n        selections={sortAttribute}\n        isOpen={isSortSelectOpen}\n      >\n        {[\n          ...Object.keys(sortOptions).map((filterAttributeKey: string) => {\n            const filterAttribute = sortOptions[filterAttributeKey];\n            // use 'title' attribute as default\n            filterAttribute.toString = () => {\n              return filterAttribute.title;\n            };\n\n            return <SelectOption key={filterAttribute.id} value={filterAttribute} />;\n          }),\n        ]}\n      </Select>\n\n      <Button\n        onClick={() => {\n          addSortFilter(sortAttribute!.id, sortOrder === SORT_ORDER.Asc ? SORT_ORDER.Desc : SORT_ORDER.Asc);\n        }}\n        variant=\"plain\"\n        isDisabled={!sortAttribute}\n        icon={sortOrder === SORT_ORDER.Asc ? <SortAmountDownAltIcon /> : <SortAmountDownIcon />}\n      ></Button>\n\n      {sortAttribute && (\n        <Button\n          style={{ padding: '1px' }}\n          onClick={() => {\n            deleteSortFilter();\n          }}\n          variant=\"plain\"\n          isInline\n        >\n          Remove sorting\n        </Button>\n      )}\n    </InputGroup>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}