{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport styles from '@patternfly/react-styles/css/components/Breadcrumb/breadcrumb';\nimport { css } from '@patternfly/react-styles';\nexport const BreadcrumbHeading = _a => {\n  var {\n    children = null,\n    className = '',\n    to = undefined,\n    target = undefined,\n    component = 'a',\n    showDivider\n  } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"to\", \"target\", \"component\", \"showDivider\"]);\n\n  const Component = component;\n  return React.createElement(\"li\", Object.assign({}, props, {\n    className: css(styles.breadcrumbItem, className)\n  }), showDivider && React.createElement(\"span\", {\n    className: styles.breadcrumbItemDivider\n  }, React.createElement(AngleRightIcon, null)), React.createElement(\"h1\", {\n    className: styles.breadcrumbHeading\n  }, !to && component === 'button' && React.createElement(\"button\", {\n    className: css(styles.breadcrumbLink, styles.modifiers.current),\n    \"aria-current\": true,\n    type: \"button\"\n  }, children), to && React.createElement(Component, {\n    href: to,\n    target: target,\n    className: css(styles.breadcrumbLink, styles.modifiers.current),\n    \"aria-current\": \"page\"\n  }, children), !to && component !== 'button' && React.createElement(React.Fragment, null, children)));\n};\nBreadcrumbHeading.displayName = 'BreadcrumbHeading';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,cAAP,MAA2B,yDAA3B;AACA,OAAOC,MAAP,MAAmB,+DAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AAiBA,OAAO,MAAMC,iBAAiB,GAAqDC,EAAD,IAQrD;MARsD;IACjFC,QAAQ,GAAG,IADsE;IAEjFC,SAAS,GAAG,EAFqE;IAGjFC,EAAE,GAAGC,SAH4E;IAIjFC,MAAM,GAAGD,SAJwE;IAKjFE,SAAS,GAAG,GALqE;IAMjFC;EANiF,IAMtEP;MACRQ,KAAK,cAPyE,qEAOzE;;EAER,MAAMC,SAAS,GAAGH,SAAlB;EACA,OACEX,4CAAQa,KAAR,EAAa;IAAEN,SAAS,EAAEJ,GAAG,CAACD,MAAM,CAACa,cAAR,EAAwBR,SAAxB;EAAhB,CAAb,GACGK,WAAW,IACVZ;IAAMO,SAAS,EAAEL,MAAM,CAACc;EAAxB,GACEhB,oBAACC,cAAD,EAAe,IAAf,CADF,CAFJ,EAMED;IAAIO,SAAS,EAAEL,MAAM,CAACe;EAAtB,GACG,CAACT,EAAD,IAAOG,SAAS,KAAK,QAArB,IACCX;IAAQO,SAAS,EAAEJ,GAAG,CAACD,MAAM,CAACgB,cAAR,EAAwBhB,MAAM,CAACiB,SAAP,CAAiBC,OAAzC,CAAtB;IAAuE,oBAAvE;IAAsFC,IAAI,EAAC;EAA3F,GACGf,QADH,CAFJ,EAMGE,EAAE,IACDR,oBAACc,SAAD,EAAU;IACRQ,IAAI,EAAEd,EADE;IAERE,MAAM,EAAEA,MAFA;IAGRH,SAAS,EAAEJ,GAAG,CAACD,MAAM,CAACgB,cAAR,EAAwBhB,MAAM,CAACiB,SAAP,CAAiBC,OAAzC,CAHN;IAGuD,gBAClD;EAJL,CAAV,EAMGd,QANH,CAPJ,EAgBG,CAACE,EAAD,IAAOG,SAAS,KAAK,QAArB,IAAiCX,oBAACA,KAAK,CAACuB,QAAP,EAAe,IAAf,EAAiBjB,QAAjB,CAhBpC,CANF,CADF;AA2BD,CArCM;AAsCPF,iBAAiB,CAACoB,WAAlB,GAAgC,mBAAhC","names":["React","AngleRightIcon","styles","css","BreadcrumbHeading","_a","children","className","to","undefined","target","component","showDivider","props","Component","breadcrumbItem","breadcrumbItemDivider","breadcrumbHeading","breadcrumbLink","modifiers","current","type","href","Fragment","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Breadcrumb/BreadcrumbHeading.tsx"],"sourcesContent":["import * as React from 'react';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport styles from '@patternfly/react-styles/css/components/Breadcrumb/breadcrumb';\nimport { css } from '@patternfly/react-styles';\n\nexport interface BreadcrumbHeadingProps extends React.HTMLProps<HTMLLIElement> {\n  /** Content rendered inside the breadcrumb title. */\n  children?: React.ReactNode;\n  /** Additional classes added to the breadcrumb item. */\n  className?: string;\n  /** HREF for breadcrumb link. */\n  to?: string;\n  /** Target for breadcrumb link. */\n  target?: string;\n  /** Sets the base component to render. Defaults to <a> */\n  component?: React.ReactNode;\n  /** Internal prop set by Breadcrumb on all but the first crumb */\n  showDivider?: boolean;\n}\n\nexport const BreadcrumbHeading: React.FunctionComponent<BreadcrumbHeadingProps> = ({\n  children = null,\n  className = '',\n  to = undefined,\n  target = undefined,\n  component = 'a',\n  showDivider,\n  ...props\n}: BreadcrumbHeadingProps) => {\n  const Component = component as any;\n  return (\n    <li {...props} className={css(styles.breadcrumbItem, className)}>\n      {showDivider && (\n        <span className={styles.breadcrumbItemDivider}>\n          <AngleRightIcon />\n        </span>\n      )}\n      <h1 className={styles.breadcrumbHeading}>\n        {!to && component === 'button' && (\n          <button className={css(styles.breadcrumbLink, styles.modifiers.current)} aria-current type=\"button\">\n            {children}\n          </button>\n        )}\n        {to && (\n          <Component\n            href={to}\n            target={target}\n            className={css(styles.breadcrumbLink, styles.modifiers.current)}\n            aria-current=\"page\"\n          >\n            {children}\n          </Component>\n        )}\n        {!to && component !== 'button' && <React.Fragment>{children}</React.Fragment>}\n      </h1>\n    </li>\n  );\n};\nBreadcrumbHeading.displayName = 'BreadcrumbHeading';\n"]},"metadata":{},"sourceType":"module"}