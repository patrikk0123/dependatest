{"ast":null,"code":"/**\n * Generic function for using unified date.\n *\n * Long version additionally also includes the time.\n *\n * @param date - Date (or string representing a date) to display\n * @param includeDate - Whether the date should be displayed, defaults to true\n * @param includeTime - Whether the time should be displayed, defaults to true\n */\nexport const createDateTime = _ref => {\n  let {\n    date,\n    includeDate = true,\n    includeTime = true\n  } = _ref;\n  return new Intl.DateTimeFormat('en-US', { ...(includeDate && {\n      dateStyle: 'medium'\n    }),\n    ...(includeTime && {\n      timeStyle: 'medium'\n    })\n  }).format(typeof date === 'string' ? new Date(date) : date);\n};\n/**\n * Copies 'this' object, sets all keys to same value and returns it.\n *\n * @param originalObj - Object to copy.\n * @param value - Value to set all keys of a copy to.\n * @returns copied object with value set to same value\n */\n\nexport const copyAndSetValues = (originalObj, value) => {\n  const copiedObj = { ...originalObj\n  };\n  Object.keys(copiedObj).forEach(key => {\n    copiedObj[key] = value;\n  });\n  return copiedObj;\n};","map":{"version":3,"names":["createDateTime","date","includeDate","includeTime","Intl","DateTimeFormat","dateStyle","timeStyle","format","Date","copyAndSetValues","originalObj","value","copiedObj","Object","keys","forEach","key"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/utils/utils.ts"],"sourcesContent":["/**\n * Generic function for using unified date.\n *\n * Long version additionally also includes the time.\n *\n * @param date - Date (or string representing a date) to display\n * @param includeDate - Whether the date should be displayed, defaults to true\n * @param includeTime - Whether the time should be displayed, defaults to true\n */\n\ninterface ICreateDateTimeObject {\n  date: Date | string;\n  includeDate?: boolean;\n  includeTime?: boolean;\n}\n\nexport const createDateTime = ({ date, includeDate = true, includeTime = true }: ICreateDateTimeObject): string =>\n  new Intl.DateTimeFormat('en-US', {\n    ...(includeDate && { dateStyle: 'medium' }),\n    ...(includeTime && { timeStyle: 'medium' }),\n  }).format(typeof date === 'string' ? new Date(date) : date);\n\n/**\n * Copies 'this' object, sets all keys to same value and returns it.\n *\n * @param originalObj - Object to copy.\n * @param value - Value to set all keys of a copy to.\n * @returns copied object with value set to same value\n */\nexport const copyAndSetValues = (originalObj: any, value: any) => {\n  const copiedObj = { ...originalObj };\n  Object.keys(copiedObj).forEach((key) => {\n    copiedObj[key] = value;\n  });\n\n  return copiedObj;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA,OAAO,MAAMA,cAAc,GAAG;EAAA,IAAC;IAAEC,IAAF;IAAQC,WAAW,GAAG,IAAtB;IAA4BC,WAAW,GAAG;EAA1C,CAAD;EAAA,OAC5B,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC,EAC/B,IAAIH,WAAW,IAAI;MAAEI,SAAS,EAAE;IAAb,CAAnB,CAD+B;IAE/B,IAAIH,WAAW,IAAI;MAAEI,SAAS,EAAE;IAAb,CAAnB;EAF+B,CAAjC,EAGGC,MAHH,CAGU,OAAOP,IAAP,KAAgB,QAAhB,GAA2B,IAAIQ,IAAJ,CAASR,IAAT,CAA3B,GAA4CA,IAHtD,CAD4B;AAAA,CAAvB;AAMP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMS,gBAAgB,GAAG,CAACC,WAAD,EAAmBC,KAAnB,KAAkC;EAChE,MAAMC,SAAS,GAAG,EAAE,GAAGF;EAAL,CAAlB;EACAG,MAAM,CAACC,IAAP,CAAYF,SAAZ,EAAuBG,OAAvB,CAAgCC,GAAD,IAAS;IACtCJ,SAAS,CAACI,GAAD,CAAT,GAAiBL,KAAjB;EACD,CAFD;EAIA,OAAOC,SAAP;AACD,CAPM"},"metadata":{},"sourceType":"module"}