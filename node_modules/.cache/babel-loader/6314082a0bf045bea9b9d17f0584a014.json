{"ast":null,"code":"import { useEffect, useState } from 'react';\nexport const useForm = function (initValues, validators) {\n  let formValid = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  const [isFormValid, setIsFormValid] = useState(formValid);\n  const [fieldValues, setFieldValues] = useState(initValues);\n  const [fieldErrors, setFieldErrors] = useState({});\n  const [fieldValidators, setFieldValidators] = useState(validators);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const initFieldStates = { ...initValues\n  };\n  Object.keys(initFieldStates).forEach(key => {\n    initFieldStates[key] = 'default';\n  });\n  const [fieldStates, setFieldStates] = useState(initFieldStates);\n  useEffect(() => {\n    if (Object.keys(fieldErrors).length) {\n      setIsFormValid(false);\n      return;\n    }\n\n    setIsFormValid(true);\n  }, [fieldErrors]);\n\n  const onChange = event => {\n    setFieldValues({ ...fieldValues,\n      [event.currentTarget.name]: event.currentTarget.value\n    });\n  };\n\n  const setError = (fieldName, error) => {\n    if (error) {\n      setFieldErrors({ ...fieldErrors,\n        [fieldName]: error\n      });\n      setFieldStates({ ...fieldStates,\n        [fieldName]: 'error'\n      });\n    } else {\n      setFieldErrors({ ...fieldErrors,\n        [fieldName]: undefined\n      });\n      setFieldStates({ ...fieldStates,\n        [fieldName]: 'success'\n      });\n    }\n  };\n\n  const onBlur = event => {\n    const fieldName = event.currentTarget.name;\n    const error = fieldValidators[fieldName](fieldValues[fieldName]);\n    setError(fieldName, error);\n  };\n\n  const onSubmit = callback => {\n    for (const key in fieldValidators) {\n      const error = fieldValidators[key](fieldValues[key]);\n      setError(key, error);\n    }\n  };\n\n  return {\n    fieldValues,\n    fieldErrors,\n    fieldStates,\n    isFormValid,\n    onChange,\n    onBlur,\n    onSubmit\n  };\n};","map":{"version":3,"names":["useEffect","useState","useForm","initValues","validators","formValid","isFormValid","setIsFormValid","fieldValues","setFieldValues","fieldErrors","setFieldErrors","fieldValidators","setFieldValidators","isSubmitting","setIsSubmitting","initFieldStates","Object","keys","forEach","key","fieldStates","setFieldStates","length","onChange","event","currentTarget","name","value","setError","fieldName","error","undefined","onBlur","onSubmit","callback"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/containers/useForm.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\n\ninterface IFieldValues {\n  [key: string]: string;\n}\n\ninterface IFieldErros {\n  [key: string]: string | undefined;\n}\n\ninterface IFieldValidators {\n  [key: string]: Function;\n}\n\nexport const useForm = (initValues: IFieldValues, validators: IFieldValidators, formValid: boolean = false) => {\n  const [isFormValid, setIsFormValid] = useState<boolean>(formValid);\n\n  const [fieldValues, setFieldValues] = useState<IFieldValues>(initValues);\n  const [fieldErrors, setFieldErrors] = useState<IFieldErros>({});\n  const [fieldValidators, setFieldValidators] = useState<IFieldValidators>(validators);\n\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n\n  const initFieldStates = { ...initValues };\n  Object.keys(initFieldStates).forEach((key) => {\n    initFieldStates[key] = 'default';\n  });\n  const [fieldStates, setFieldStates] = useState<any>(initFieldStates);\n\n  useEffect(() => {\n    if (Object.keys(fieldErrors).length) {\n      setIsFormValid(false);\n      return;\n    }\n    setIsFormValid(true);\n  }, [fieldErrors]);\n\n  const onChange = (event: React.FormEvent<HTMLInputElement>) => {\n    setFieldValues({ ...fieldValues, [event.currentTarget.name]: event.currentTarget.value });\n  };\n\n  const setError = (fieldName: string, error: string) => {\n    if (error) {\n      setFieldErrors({ ...fieldErrors, [fieldName]: error });\n      setFieldStates({ ...fieldStates, [fieldName]: 'error' });\n    } else {\n      setFieldErrors({ ...fieldErrors, [fieldName]: undefined });\n      setFieldStates({ ...fieldStates, [fieldName]: 'success' });\n    }\n  };\n\n  const onBlur = (event: React.FormEvent<HTMLInputElement>) => {\n    const fieldName = event.currentTarget.name;\n    const error = fieldValidators[fieldName](fieldValues[fieldName]);\n    setError(fieldName, error);\n  };\n\n  const onSubmit = (callback: Function) => {\n    for (const key in fieldValidators) {\n      const error = fieldValidators[key](fieldValues[key]);\n      setError(key, error);\n    }\n  };\n\n  return { fieldValues, fieldErrors, fieldStates, isFormValid, onChange, onBlur, onSubmit };\n};\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAcA,OAAO,MAAMC,OAAO,GAAG,UAACC,UAAD,EAA2BC,UAA3B,EAAwF;EAAA,IAA/BC,SAA+B,uEAAV,KAAU;EAC7G,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAUI,SAAV,CAA9C;EAEA,MAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAeE,UAAf,CAA9C;EACA,MAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAc,EAAd,CAA9C;EACA,MAAM,CAACW,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAmBG,UAAnB,CAAtD;EAEA,MAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAU,KAAV,CAAhD;EAEA,MAAMe,eAAe,GAAG,EAAE,GAAGb;EAAL,CAAxB;EACAc,MAAM,CAACC,IAAP,CAAYF,eAAZ,EAA6BG,OAA7B,CAAsCC,GAAD,IAAS;IAC5CJ,eAAe,CAACI,GAAD,CAAf,GAAuB,SAAvB;EACD,CAFD;EAGA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAMe,eAAN,CAA9C;EAEAhB,SAAS,CAAC,MAAM;IACd,IAAIiB,MAAM,CAACC,IAAP,CAAYR,WAAZ,EAAyBa,MAA7B,EAAqC;MACnChB,cAAc,CAAC,KAAD,CAAd;MACA;IACD;;IACDA,cAAc,CAAC,IAAD,CAAd;EACD,CANQ,EAMN,CAACG,WAAD,CANM,CAAT;;EAQA,MAAMc,QAAQ,GAAIC,KAAD,IAA8C;IAC7DhB,cAAc,CAAC,EAAE,GAAGD,WAAL;MAAkB,CAACiB,KAAK,CAACC,aAAN,CAAoBC,IAArB,GAA4BF,KAAK,CAACC,aAAN,CAAoBE;IAAlE,CAAD,CAAd;EACD,CAFD;;EAIA,MAAMC,QAAQ,GAAG,CAACC,SAAD,EAAoBC,KAApB,KAAsC;IACrD,IAAIA,KAAJ,EAAW;MACTpB,cAAc,CAAC,EAAE,GAAGD,WAAL;QAAkB,CAACoB,SAAD,GAAaC;MAA/B,CAAD,CAAd;MACAT,cAAc,CAAC,EAAE,GAAGD,WAAL;QAAkB,CAACS,SAAD,GAAa;MAA/B,CAAD,CAAd;IACD,CAHD,MAGO;MACLnB,cAAc,CAAC,EAAE,GAAGD,WAAL;QAAkB,CAACoB,SAAD,GAAaE;MAA/B,CAAD,CAAd;MACAV,cAAc,CAAC,EAAE,GAAGD,WAAL;QAAkB,CAACS,SAAD,GAAa;MAA/B,CAAD,CAAd;IACD;EACF,CARD;;EAUA,MAAMG,MAAM,GAAIR,KAAD,IAA8C;IAC3D,MAAMK,SAAS,GAAGL,KAAK,CAACC,aAAN,CAAoBC,IAAtC;IACA,MAAMI,KAAK,GAAGnB,eAAe,CAACkB,SAAD,CAAf,CAA2BtB,WAAW,CAACsB,SAAD,CAAtC,CAAd;IACAD,QAAQ,CAACC,SAAD,EAAYC,KAAZ,CAAR;EACD,CAJD;;EAMA,MAAMG,QAAQ,GAAIC,QAAD,IAAwB;IACvC,KAAK,MAAMf,GAAX,IAAkBR,eAAlB,EAAmC;MACjC,MAAMmB,KAAK,GAAGnB,eAAe,CAACQ,GAAD,CAAf,CAAqBZ,WAAW,CAACY,GAAD,CAAhC,CAAd;MACAS,QAAQ,CAACT,GAAD,EAAMW,KAAN,CAAR;IACD;EACF,CALD;;EAOA,OAAO;IAAEvB,WAAF;IAAeE,WAAf;IAA4BW,WAA5B;IAAyCf,WAAzC;IAAsDkB,QAAtD;IAAgES,MAAhE;IAAwEC;EAAxE,CAAP;AACD,CAnDM"},"metadata":{},"sourceType":"module"}