{"ast":null,"code":"import * as React from 'react';\nimport globalBreakpointMd from '@patternfly/react-tokens/dist/esm/global_breakpoint_md';\nimport globalBreakpointLg from '@patternfly/react-tokens/dist/esm/global_breakpoint_lg';\nimport globalBreakpointXl from '@patternfly/react-tokens/dist/esm/global_breakpoint_xl';\nimport globalBreakpoint2xl from '@patternfly/react-tokens/dist/esm/global_breakpoint_2xl';\nexport const ToolbarContext = React.createContext({\n  isExpanded: false,\n  toggleIsExpanded: () => {},\n  chipGroupContentRef: null,\n  updateNumberFilters: () => {},\n  numberOfFilters: 0,\n  clearAllFilters: () => {}\n});\nexport const ToolbarContentContext = React.createContext({\n  expandableContentRef: null,\n  expandableContentId: '',\n  chipContainerRef: null\n});\nexport const globalBreakpoints = {\n  md: parseInt(globalBreakpointMd.value),\n  lg: parseInt(globalBreakpointLg.value),\n  xl: parseInt(globalBreakpointXl.value),\n  '2xl': parseInt(globalBreakpoint2xl.value)\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,kBAAP,MAA+B,wDAA/B;AACA,OAAOC,kBAAP,MAA+B,wDAA/B;AACA,OAAOC,kBAAP,MAA+B,wDAA/B;AACA,OAAOC,mBAAP,MAAgC,yDAAhC;AAeA,OAAO,MAAMC,cAAc,GAAGL,KAAK,CAACM,aAAN,CAAyC;EACrEC,UAAU,EAAE,KADyD;EAErEC,gBAAgB,EAAE,MAAK,CAAG,CAF2C;EAGrEC,mBAAmB,EAAE,IAHgD;EAIrEC,mBAAmB,EAAE,MAAK,CAAG,CAJwC;EAKrEC,eAAe,EAAE,CALoD;EAMrEC,eAAe,EAAE,MAAK,CAAG;AAN4C,CAAzC,CAAvB;AAeP,OAAO,MAAMC,qBAAqB,GAAGb,KAAK,CAACM,aAAN,CAAgD;EACnFQ,oBAAoB,EAAE,IAD6D;EAEnFC,mBAAmB,EAAE,EAF8D;EAGnFC,gBAAgB,EAAE;AAHiE,CAAhD,CAA9B;AAMP,OAAO,MAAMC,iBAAiB,GAAG;EAC/BC,EAAE,EAAEC,QAAQ,CAAClB,kBAAkB,CAACmB,KAApB,CADmB;EAE/BC,EAAE,EAAEF,QAAQ,CAACjB,kBAAkB,CAACkB,KAApB,CAFmB;EAG/BE,EAAE,EAAEH,QAAQ,CAAChB,kBAAkB,CAACiB,KAApB,CAHmB;EAI/B,OAAOD,QAAQ,CAACf,mBAAmB,CAACgB,KAArB;AAJgB,CAA1B","names":["React","globalBreakpointMd","globalBreakpointLg","globalBreakpointXl","globalBreakpoint2xl","ToolbarContext","createContext","isExpanded","toggleIsExpanded","chipGroupContentRef","updateNumberFilters","numberOfFilters","clearAllFilters","ToolbarContentContext","expandableContentRef","expandableContentId","chipContainerRef","globalBreakpoints","md","parseInt","value","lg","xl"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Toolbar/ToolbarUtils.tsx"],"sourcesContent":["import * as React from 'react';\nimport { RefObject } from 'react';\nimport globalBreakpointMd from '@patternfly/react-tokens/dist/esm/global_breakpoint_md';\nimport globalBreakpointLg from '@patternfly/react-tokens/dist/esm/global_breakpoint_lg';\nimport globalBreakpointXl from '@patternfly/react-tokens/dist/esm/global_breakpoint_xl';\nimport globalBreakpoint2xl from '@patternfly/react-tokens/dist/esm/global_breakpoint_2xl';\n\nexport interface ToolbarContextProps {\n  isExpanded: boolean;\n  toggleIsExpanded: () => void;\n  chipGroupContentRef: RefObject<HTMLDivElement>;\n  updateNumberFilters: (categoryName: string, numberOfFilters: number) => void;\n  numberOfFilters: number;\n  clearAllFilters?: () => void;\n  clearFiltersButtonText?: string;\n  showClearFiltersButton?: boolean;\n  toolbarId?: string;\n  customChipGroupContent?: React.ReactNode;\n}\n\nexport const ToolbarContext = React.createContext<ToolbarContextProps>({\n  isExpanded: false,\n  toggleIsExpanded: () => {},\n  chipGroupContentRef: null,\n  updateNumberFilters: () => {},\n  numberOfFilters: 0,\n  clearAllFilters: () => {}\n});\n\ninterface ToolbarContentContextProps {\n  expandableContentRef: RefObject<HTMLDivElement>;\n  expandableContentId: string;\n  chipContainerRef: RefObject<any>;\n}\n\nexport const ToolbarContentContext = React.createContext<ToolbarContentContextProps>({\n  expandableContentRef: null,\n  expandableContentId: '',\n  chipContainerRef: null\n});\n\nexport const globalBreakpoints = {\n  md: parseInt(globalBreakpointMd.value),\n  lg: parseInt(globalBreakpointLg.value),\n  xl: parseInt(globalBreakpointXl.value),\n  '2xl': parseInt(globalBreakpoint2xl.value)\n};\n"]},"metadata":{},"sourceType":"module"}