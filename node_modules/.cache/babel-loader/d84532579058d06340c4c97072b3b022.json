{"ast":null,"code":"import _classCallCheck from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tabs/tabs';\nimport buttonStyles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-left-icon';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport PlusIcon from '@patternfly/react-icons/dist/esm/icons/plus-icon';\nimport { getUniqueId, isElementInView, formatBreakpointMods } from '../../helpers/util';\nimport { TabContent } from './TabContent';\nimport { TabsContextProvider } from './TabsContext';\nimport { Button } from '../Button';\nimport { getOUIAProps, getDefaultOUIAId, canUseDOM } from '../../helpers';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nexport var TabsComponent;\n\n(function (TabsComponent) {\n  TabsComponent[\"div\"] = \"div\";\n  TabsComponent[\"nav\"] = \"nav\";\n})(TabsComponent || (TabsComponent = {}));\n\nvar variantStyle = {\n  default: '',\n  light300: styles.modifiers.colorSchemeLight_300\n};\nexport var Tabs = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tabs, _React$Component);\n\n  var _super = _createSuper(Tabs);\n\n  function Tabs(props) {\n    var _this;\n\n    _classCallCheck(this, Tabs);\n\n    _this = _super.call(this, props);\n    _this.tabList = React.createRef();\n    _this.scrollTimeout = null;\n\n    _this.handleScrollButtons = function () {\n      // add debounce to the scroll event\n      clearTimeout(_this.scrollTimeout);\n      _this.scrollTimeout = setTimeout(function () {\n        var container = _this.tabList.current;\n        var disableLeftScrollButton = true;\n        var disableRightScrollButton = true;\n        var showScrollButtons = false;\n\n        if (container && !_this.props.isVertical) {\n          // get first element and check if it is in view\n          var overflowOnLeft = !isElementInView(container, container.firstChild, false); // get last element and check if it is in view\n\n          var overflowOnRight = !isElementInView(container, container.lastChild, false);\n          showScrollButtons = overflowOnLeft || overflowOnRight;\n          disableLeftScrollButton = !overflowOnLeft;\n          disableRightScrollButton = !overflowOnRight;\n        }\n\n        _this.setState({\n          showScrollButtons: showScrollButtons,\n          disableLeftScrollButton: disableLeftScrollButton,\n          disableRightScrollButton: disableRightScrollButton\n        });\n      }, 100);\n    };\n\n    _this.scrollLeft = function () {\n      // find first Element that is fully in view on the left, then scroll to the element before it\n      if (_this.tabList.current) {\n        var container = _this.tabList.current;\n        var childrenArr = Array.from(container.children);\n        var firstElementInView;\n        var lastElementOutOfView;\n        var i;\n\n        for (i = 0; i < childrenArr.length && !firstElementInView; i++) {\n          if (isElementInView(container, childrenArr[i], false)) {\n            firstElementInView = childrenArr[i];\n            lastElementOutOfView = childrenArr[i - 1];\n          }\n        }\n\n        if (lastElementOutOfView) {\n          container.scrollLeft -= lastElementOutOfView.scrollWidth;\n        }\n      }\n    };\n\n    _this.scrollRight = function () {\n      // find last Element that is fully in view on the right, then scroll to the element after it\n      if (_this.tabList.current) {\n        var container = _this.tabList.current;\n        var childrenArr = Array.from(container.children);\n        var lastElementInView;\n        var firstElementOutOfView;\n\n        for (var i = childrenArr.length - 1; i >= 0 && !lastElementInView; i--) {\n          if (isElementInView(container, childrenArr[i], false)) {\n            lastElementInView = childrenArr[i];\n            firstElementOutOfView = childrenArr[i + 1];\n          }\n        }\n\n        if (firstElementOutOfView) {\n          container.scrollLeft += firstElementOutOfView.scrollWidth;\n        }\n      }\n    };\n\n    _this.state = {\n      showScrollButtons: false,\n      disableLeftScrollButton: true,\n      disableRightScrollButton: true,\n      shownKeys: _this.props.defaultActiveKey !== undefined ? [_this.props.defaultActiveKey] : [_this.props.activeKey],\n      uncontrolledActiveKey: _this.props.defaultActiveKey,\n      uncontrolledIsExpandedLocal: _this.props.defaultIsExpanded,\n      ouiaStateId: getDefaultOUIAId(Tabs.displayName)\n    };\n\n    if (_this.props.isVertical && _this.props.expandable !== undefined) {\n      if (!_this.props.toggleAriaLabel && !_this.props.toggleText) {\n        // eslint-disable-next-line no-console\n        console.error('Tabs:', 'toggleAriaLabel or the toggleText prop is required to make the toggle button accessible');\n      }\n    }\n\n    return _this;\n  }\n\n  _createClass(Tabs, [{\n    key: \"handleTabClick\",\n    value: function handleTabClick(event, eventKey, tabContentRef) {\n      var shownKeys = this.state.shownKeys;\n      var _this$props = this.props,\n          onSelect = _this$props.onSelect,\n          defaultActiveKey = _this$props.defaultActiveKey; // if defaultActiveKey Tabs are uncontrolled, set new active key internally\n\n      if (defaultActiveKey !== undefined) {\n        this.setState({\n          uncontrolledActiveKey: eventKey\n        });\n      } else {\n        onSelect(event, eventKey);\n      } // process any tab content sections outside of the component\n\n\n      if (tabContentRef) {\n        React.Children.toArray(this.props.children).map(function (child) {\n          return child;\n        }).filter(function (child) {\n          return child.props && child.props.tabContentRef && child.props.tabContentRef.current;\n        }).forEach(function (child) {\n          return child.props.tabContentRef.current.hidden = true;\n        }); // most recently selected tabContent\n\n        if (tabContentRef.current) {\n          tabContentRef.current.hidden = false;\n        }\n      }\n\n      if (this.props.mountOnEnter) {\n        this.setState({\n          shownKeys: shownKeys.concat(eventKey)\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.props.isVertical) {\n        if (canUseDOM) {\n          window.addEventListener('resize', this.handleScrollButtons, false);\n        } // call the handle resize function to check if scroll buttons should be shown\n\n\n        this.handleScrollButtons();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (!this.props.isVertical) {\n        if (canUseDOM) {\n          window.removeEventListener('resize', this.handleScrollButtons, false);\n        }\n      }\n\n      clearTimeout(this.scrollTimeout);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props2 = this.props,\n          activeKey = _this$props2.activeKey,\n          mountOnEnter = _this$props2.mountOnEnter,\n          children = _this$props2.children;\n      var shownKeys = this.state.shownKeys;\n\n      if (prevProps.activeKey !== activeKey && mountOnEnter && shownKeys.indexOf(activeKey) < 0) {\n        this.setState({\n          shownKeys: shownKeys.concat(activeKey)\n        });\n      }\n\n      if (prevProps.children && children && React.Children.toArray(prevProps.children).length !== React.Children.toArray(children).length) {\n        this.handleScrollButtons();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _a = this.props,\n          className = _a.className,\n          children = _a.children,\n          activeKey = _a.activeKey,\n          defaultActiveKey = _a.defaultActiveKey,\n          id = _a.id,\n          isFilled = _a.isFilled,\n          isSecondary = _a.isSecondary,\n          isVertical = _a.isVertical,\n          isBox = _a.isBox,\n          hasBorderBottom = _a.hasBorderBottom,\n          hasSecondaryBorderBottom = _a.hasSecondaryBorderBottom,\n          leftScrollAriaLabel = _a.leftScrollAriaLabel,\n          rightScrollAriaLabel = _a.rightScrollAriaLabel,\n          ariaLabel = _a['aria-label'],\n          component = _a.component,\n          ouiaId = _a.ouiaId,\n          ouiaSafe = _a.ouiaSafe,\n          mountOnEnter = _a.mountOnEnter,\n          unmountOnExit = _a.unmountOnExit,\n          usePageInsets = _a.usePageInsets,\n          inset = _a.inset,\n          variant = _a.variant,\n          expandable = _a.expandable,\n          isExpanded = _a.isExpanded,\n          defaultIsExpanded = _a.defaultIsExpanded,\n          toggleText = _a.toggleText,\n          toggleAriaLabel = _a.toggleAriaLabel,\n          addButtonAriaLabel = _a.addButtonAriaLabel,\n          onToggle = _a.onToggle,\n          onClose = _a.onClose,\n          onAdd = _a.onAdd,\n          props = __rest(_a, [\"className\", \"children\", \"activeKey\", \"defaultActiveKey\", \"id\", \"isFilled\", \"isSecondary\", \"isVertical\", \"isBox\", \"hasBorderBottom\", \"hasSecondaryBorderBottom\", \"leftScrollAriaLabel\", \"rightScrollAriaLabel\", 'aria-label', \"component\", \"ouiaId\", \"ouiaSafe\", \"mountOnEnter\", \"unmountOnExit\", \"usePageInsets\", \"inset\", \"variant\", \"expandable\", \"isExpanded\", \"defaultIsExpanded\", \"toggleText\", \"toggleAriaLabel\", \"addButtonAriaLabel\", \"onToggle\", \"onClose\", \"onAdd\"]);\n\n      var _this$state = this.state,\n          showScrollButtons = _this$state.showScrollButtons,\n          disableLeftScrollButton = _this$state.disableLeftScrollButton,\n          disableRightScrollButton = _this$state.disableRightScrollButton,\n          shownKeys = _this$state.shownKeys,\n          uncontrolledActiveKey = _this$state.uncontrolledActiveKey,\n          uncontrolledIsExpandedLocal = _this$state.uncontrolledIsExpandedLocal;\n      var filteredChildren = React.Children.toArray(children).filter(Boolean).filter(function (child) {\n        return !child.props.isHidden;\n      });\n      var uniqueId = id || getUniqueId();\n      var Component = component === TabsComponent.nav ? 'nav' : 'div';\n      var localActiveKey = defaultActiveKey !== undefined ? uncontrolledActiveKey : activeKey;\n      var isExpandedLocal = defaultIsExpanded !== undefined ? uncontrolledIsExpandedLocal : isExpanded;\n      /*  Uncontrolled expandable tabs */\n\n      var toggleTabs = function toggleTabs(newValue) {\n        if (isExpanded === undefined) {\n          _this2.setState({\n            uncontrolledIsExpandedLocal: newValue\n          });\n        } else {\n          onToggle(newValue);\n        }\n      };\n\n      return React.createElement(TabsContextProvider, {\n        value: {\n          variant: variant,\n          mountOnEnter: mountOnEnter,\n          unmountOnExit: unmountOnExit,\n          localActiveKey: localActiveKey,\n          uniqueId: uniqueId,\n          handleTabClick: function handleTabClick() {\n            return _this2.handleTabClick.apply(_this2, arguments);\n          },\n          handleTabClose: onClose\n        }\n      }, React.createElement(Component, Object.assign({\n        \"aria-label\": ariaLabel,\n        className: css(styles.tabs, isFilled && styles.modifiers.fill, isSecondary && styles.modifiers.secondary, isVertical && styles.modifiers.vertical, isVertical && expandable && formatBreakpointMods(expandable, styles), isVertical && expandable && isExpandedLocal && styles.modifiers.expanded, isBox && styles.modifiers.box, showScrollButtons && !isVertical && styles.modifiers.scrollable, usePageInsets && styles.modifiers.pageInsets, !hasBorderBottom && styles.modifiers.noBorderBottom, hasSecondaryBorderBottom && styles.modifiers.borderBottom, formatBreakpointMods(inset, styles), variantStyle[variant], className)\n      }, getOUIAProps(Tabs.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), {\n        id: id && id\n      }, props), expandable && isVertical && React.createElement(GenerateId, null, function (randomId) {\n        return React.createElement(\"div\", {\n          className: css(styles.tabsToggle)\n        }, React.createElement(\"div\", {\n          className: css(styles.tabsToggleButton)\n        }, React.createElement(Button, {\n          onClick: function onClick() {\n            return toggleTabs(!isExpandedLocal);\n          },\n          variant: \"plain\",\n          \"aria-label\": toggleAriaLabel,\n          \"aria-expanded\": isExpandedLocal,\n          id: \"\".concat(randomId, \"-button\"),\n          \"aria-labelledby\": \"\".concat(randomId, \"-text \").concat(randomId, \"-button\")\n        }, React.createElement(\"span\", {\n          className: css(styles.tabsToggleIcon)\n        }, React.createElement(AngleRightIcon, {\n          \"arian-hidden\": \"true\"\n        })), toggleText && React.createElement(\"span\", {\n          className: css('pf-c-tabs__toggle-text'),\n          id: \"\".concat(randomId, \"-text\")\n        }, toggleText))));\n      }), React.createElement(\"button\", {\n        className: css(styles.tabsScrollButton, isSecondary && buttonStyles.modifiers.secondary),\n        \"aria-label\": leftScrollAriaLabel,\n        onClick: this.scrollLeft,\n        disabled: disableLeftScrollButton,\n        \"aria-hidden\": disableLeftScrollButton\n      }, React.createElement(AngleLeftIcon, null)), React.createElement(\"ul\", {\n        className: css(styles.tabsList),\n        ref: this.tabList,\n        onScroll: this.handleScrollButtons,\n        role: \"tablist\"\n      }, filteredChildren), React.createElement(\"button\", {\n        className: css(styles.tabsScrollButton, isSecondary && buttonStyles.modifiers.secondary),\n        \"aria-label\": rightScrollAriaLabel,\n        onClick: this.scrollRight,\n        disabled: disableRightScrollButton,\n        \"aria-hidden\": disableRightScrollButton\n      }, React.createElement(AngleRightIcon, null)), onAdd !== undefined && React.createElement(\"span\", {\n        className: css(styles.tabsAdd)\n      }, React.createElement(Button, {\n        variant: \"plain\",\n        \"aria-label\": addButtonAriaLabel || 'Add tab',\n        onClick: onAdd\n      }, React.createElement(PlusIcon, null)))), filteredChildren.filter(function (child) {\n        return child.props.children && !(unmountOnExit && child.props.eventKey !== localActiveKey) && !(mountOnEnter && shownKeys.indexOf(child.props.eventKey) === -1);\n      }).map(function (child) {\n        return React.createElement(TabContent, {\n          key: child.props.eventKey,\n          activeKey: localActiveKey,\n          child: child,\n          id: child.props.id || uniqueId,\n          ouiaId: child.props.ouiaId\n        });\n      }));\n    }\n  }]);\n\n  return Tabs;\n}(React.Component);\nTabs.displayName = 'Tabs';\nTabs.defaultProps = {\n  activeKey: 0,\n  onSelect: function onSelect() {\n    return undefined;\n  },\n  isFilled: false,\n  isSecondary: false,\n  isVertical: false,\n  isBox: false,\n  hasBorderBottom: true,\n  leftScrollAriaLabel: 'Scroll left',\n  rightScrollAriaLabel: 'Scroll right',\n  component: TabsComponent.div,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  ouiaSafe: true,\n  variant: 'default',\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onToggle: function onToggle(isExpanded) {\n    return undefined;\n  }\n};","map":{"version":3,"mappings":"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","names":["React","styles","buttonStyles","css","AngleLeftIcon","AngleRightIcon","PlusIcon","getUniqueId","isElementInView","formatBreakpointMods","TabContent","TabsContextProvider","Button","getOUIAProps","getDefaultOUIAId","canUseDOM","GenerateId","TabsComponent","variantStyle","default","light300","modifiers","colorSchemeLight_300","Tabs","props","createRef","clearTimeout","scrollTimeout","setTimeout","container","tabList","current","disableLeftScrollButton","disableRightScrollButton","showScrollButtons","isVertical","overflowOnLeft","firstChild","overflowOnRight","lastChild","setState","childrenArr","Array","from","children","firstElementInView","lastElementOutOfView","i","length","scrollLeft","scrollWidth","lastElementInView","firstElementOutOfView","state","shownKeys","defaultActiveKey","undefined","activeKey","uncontrolledActiveKey","uncontrolledIsExpandedLocal","defaultIsExpanded","ouiaStateId","displayName","expandable","toggleAriaLabel","toggleText","console","error","event","eventKey","tabContentRef","onSelect","Children","toArray","map","child","filter","forEach","hidden","mountOnEnter","concat","window","addEventListener","handleScrollButtons","removeEventListener","prevProps","indexOf","className","_a","id","isFilled","isSecondary","isBox","hasBorderBottom","hasSecondaryBorderBottom","leftScrollAriaLabel","rightScrollAriaLabel","ariaLabel","component","ouiaId","ouiaSafe","unmountOnExit","usePageInsets","inset","variant","isExpanded","addButtonAriaLabel","onToggle","onClose","onAdd","__rest","filteredChildren","Boolean","isHidden","uniqueId","Component","nav","localActiveKey","isExpandedLocal","toggleTabs","newValue","value","handleTabClick","handleTabClose","Object","tabs","fill","secondary","vertical","expanded","box","scrollable","pageInsets","noBorderBottom","borderBottom","tabsToggle","tabsToggleButton","onClick","randomId","tabsToggleIcon","tabsScrollButton","disabled","tabsList","ref","onScroll","role","scrollRight","tabsAdd","key","div"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Tabs/Tabs.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tabs/tabs';\nimport buttonStyles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\nimport { PickOptional } from '../../helpers/typeUtils';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-left-icon';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport PlusIcon from '@patternfly/react-icons/dist/esm/icons/plus-icon';\nimport { getUniqueId, isElementInView, formatBreakpointMods } from '../../helpers/util';\nimport { TabContent } from './TabContent';\nimport { TabProps } from './Tab';\nimport { TabsContextProvider } from './TabsContext';\nimport { Button } from '../Button';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId, canUseDOM } from '../../helpers';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\n\nexport enum TabsComponent {\n  div = 'div',\n  nav = 'nav'\n}\n\nexport interface TabsProps extends Omit<React.HTMLProps<HTMLElement | HTMLDivElement>, 'onSelect'>, OUIAProps {\n  /** Content rendered inside the tabs component. Must be React.ReactElement<TabProps>[] */\n  children: React.ReactNode;\n  /** Additional classes added to the tabs */\n  className?: string;\n  /** Tabs background color variant */\n  variant?: 'default' | 'light300';\n  /** The index of the active tab */\n  activeKey?: number | string;\n  /** The index of the default active tab. Set this for uncontrolled Tabs */\n  defaultActiveKey?: number | string;\n  /** Callback to handle tab selection */\n  onSelect?: (event: React.MouseEvent<HTMLElement, MouseEvent>, eventKey: number | string) => void;\n  /** @beta Callback to handle tab closing */\n  onClose?: (event: React.MouseEvent<HTMLElement, MouseEvent>, eventKey: number | string) => void;\n  /** @beta Callback for the add button. Passing this property inserts the add button */\n  onAdd?: () => void;\n  /** @beta Aria-label for the add button */\n  addButtonAriaLabel?: string;\n  /** Uniquely identifies the tabs */\n  id?: string;\n  /** Enables the filled tab list layout */\n  isFilled?: boolean;\n  /** Enables secondary tab styling */\n  isSecondary?: boolean;\n  /** Enables box styling to the tab component */\n  isBox?: boolean;\n  /** Enables vertical tab styling */\n  isVertical?: boolean;\n  /** Enables border bottom tab styling on tabs. Defaults to true. To remove the bottom border, set this prop to false. */\n  hasBorderBottom?: boolean;\n  /** Enables border bottom styling for secondary tabs */\n  hasSecondaryBorderBottom?: boolean;\n  /** Aria-label for the left scroll button */\n  leftScrollAriaLabel?: string;\n  /** Aria-label for the right scroll button */\n  rightScrollAriaLabel?: string;\n  /** Determines what tag is used around the tabs. Use \"nav\" to define the tabs inside a navigation region */\n  component?: 'div' | 'nav';\n  /** Provides an accessible label for the tabs. Labels should be unique for each set of tabs that are present on a page. When component is set to nav, this prop should be defined to differentiate the tabs from other navigation regions on the page. */\n  'aria-label'?: string;\n  /** Waits until the first \"enter\" transition to mount tab children (add them to the DOM) */\n  mountOnEnter?: boolean;\n  /** Unmounts tab children (removes them from the DOM) when they are no longer visible */\n  unmountOnExit?: boolean;\n  /** Flag indicates that the tabs should use page insets. */\n  usePageInsets?: boolean;\n  /** Insets at various breakpoints. */\n  inset?: {\n    default?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n    sm?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n    md?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n    lg?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n    xl?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n    '2xl'?: 'insetNone' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl';\n  };\n  /** Enable expandable vertical tabs at various breakpoints. (isVertical should be set to true for this to work) */\n  expandable?: {\n    default?: 'expandable' | 'nonExpandable';\n    sm?: 'expandable' | 'nonExpandable';\n    md?: 'expandable' | 'nonExpandable';\n    lg?: 'expandable' | 'nonExpandable';\n    xl?: 'expandable' | 'nonExpandable';\n    '2xl'?: 'expandable' | 'nonExpandable';\n  };\n  /** Flag to indicate if the vertical tabs are expanded */\n  isExpanded?: boolean;\n  /** Flag indicating the default expanded state for uncontrolled expand/collapse of */\n  defaultIsExpanded?: boolean;\n  /** Text that appears in the expandable toggle */\n  toggleText?: string;\n  /** Aria-label for the expandable toggle */\n  toggleAriaLabel?: string;\n  /** Callback function to toggle the expandable tabs. */\n  onToggle?: (isExpanded: boolean) => void;\n}\n\nconst variantStyle = {\n  default: '',\n  light300: styles.modifiers.colorSchemeLight_300\n};\n\ninterface TabsState {\n  showScrollButtons: boolean;\n  disableLeftScrollButton: boolean;\n  disableRightScrollButton: boolean;\n  shownKeys: (string | number)[];\n  uncontrolledActiveKey: number | string;\n  uncontrolledIsExpandedLocal: boolean;\n  ouiaStateId: string;\n}\n\nexport class Tabs extends React.Component<TabsProps, TabsState> {\n  static displayName = 'Tabs';\n  tabList = React.createRef<HTMLUListElement>();\n  constructor(props: TabsProps) {\n    super(props);\n    this.state = {\n      showScrollButtons: false,\n      disableLeftScrollButton: true,\n      disableRightScrollButton: true,\n      shownKeys: this.props.defaultActiveKey !== undefined ? [this.props.defaultActiveKey] : [this.props.activeKey], // only for mountOnEnter case\n      uncontrolledActiveKey: this.props.defaultActiveKey,\n      uncontrolledIsExpandedLocal: this.props.defaultIsExpanded,\n      ouiaStateId: getDefaultOUIAId(Tabs.displayName)\n    };\n\n    if (this.props.isVertical && this.props.expandable !== undefined) {\n      if (!this.props.toggleAriaLabel && !this.props.toggleText) {\n        // eslint-disable-next-line no-console\n        console.error(\n          'Tabs:',\n          'toggleAriaLabel or the toggleText prop is required to make the toggle button accessible'\n        );\n      }\n    }\n  }\n\n  scrollTimeout: NodeJS.Timeout = null;\n\n  static defaultProps: PickOptional<TabsProps> = {\n    activeKey: 0,\n    onSelect: () => undefined as any,\n    isFilled: false,\n    isSecondary: false,\n    isVertical: false,\n    isBox: false,\n    hasBorderBottom: true,\n    leftScrollAriaLabel: 'Scroll left',\n    rightScrollAriaLabel: 'Scroll right',\n    component: TabsComponent.div,\n    mountOnEnter: false,\n    unmountOnExit: false,\n    ouiaSafe: true,\n    variant: 'default',\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onToggle: (isExpanded): void => undefined\n  };\n\n  handleTabClick(\n    event: React.MouseEvent<HTMLElement, MouseEvent>,\n    eventKey: number | string,\n    tabContentRef: React.RefObject<any>\n  ) {\n    const { shownKeys } = this.state;\n    const { onSelect, defaultActiveKey } = this.props;\n    // if defaultActiveKey Tabs are uncontrolled, set new active key internally\n    if (defaultActiveKey !== undefined) {\n      this.setState({\n        uncontrolledActiveKey: eventKey\n      });\n    } else {\n      onSelect(event, eventKey);\n    }\n\n    // process any tab content sections outside of the component\n    if (tabContentRef) {\n      React.Children.toArray(this.props.children)\n        .map(child => child as React.ReactElement<TabProps>)\n        .filter(child => child.props && child.props.tabContentRef && child.props.tabContentRef.current)\n        .forEach(child => (child.props.tabContentRef.current.hidden = true));\n      // most recently selected tabContent\n      if (tabContentRef.current) {\n        tabContentRef.current.hidden = false;\n      }\n    }\n    if (this.props.mountOnEnter) {\n      this.setState({\n        shownKeys: shownKeys.concat(eventKey)\n      });\n    }\n  }\n\n  handleScrollButtons = () => {\n    // add debounce to the scroll event\n    clearTimeout(this.scrollTimeout);\n    this.scrollTimeout = setTimeout(() => {\n      const container = this.tabList.current;\n      let disableLeftScrollButton = true;\n      let disableRightScrollButton = true;\n      let showScrollButtons = false;\n\n      if (container && !this.props.isVertical) {\n        // get first element and check if it is in view\n        const overflowOnLeft = !isElementInView(container, container.firstChild as HTMLElement, false);\n\n        // get last element and check if it is in view\n        const overflowOnRight = !isElementInView(container, container.lastChild as HTMLElement, false);\n\n        showScrollButtons = overflowOnLeft || overflowOnRight;\n\n        disableLeftScrollButton = !overflowOnLeft;\n        disableRightScrollButton = !overflowOnRight;\n      }\n      this.setState({\n        showScrollButtons,\n        disableLeftScrollButton,\n        disableRightScrollButton\n      });\n    }, 100);\n  };\n\n  scrollLeft = () => {\n    // find first Element that is fully in view on the left, then scroll to the element before it\n    if (this.tabList.current) {\n      const container = this.tabList.current;\n      const childrenArr = Array.from(container.children);\n      let firstElementInView: any;\n      let lastElementOutOfView: any;\n      let i;\n      for (i = 0; i < childrenArr.length && !firstElementInView; i++) {\n        if (isElementInView(container, childrenArr[i] as HTMLElement, false)) {\n          firstElementInView = childrenArr[i];\n          lastElementOutOfView = childrenArr[i - 1];\n        }\n      }\n      if (lastElementOutOfView) {\n        container.scrollLeft -= lastElementOutOfView.scrollWidth;\n      }\n    }\n  };\n\n  scrollRight = () => {\n    // find last Element that is fully in view on the right, then scroll to the element after it\n    if (this.tabList.current) {\n      const container = this.tabList.current as any;\n      const childrenArr = Array.from(container.children);\n      let lastElementInView: any;\n      let firstElementOutOfView: any;\n      for (let i = childrenArr.length - 1; i >= 0 && !lastElementInView; i--) {\n        if (isElementInView(container, childrenArr[i] as HTMLElement, false)) {\n          lastElementInView = childrenArr[i];\n          firstElementOutOfView = childrenArr[i + 1];\n        }\n      }\n      if (firstElementOutOfView) {\n        container.scrollLeft += firstElementOutOfView.scrollWidth;\n      }\n    }\n  };\n\n  componentDidMount() {\n    if (!this.props.isVertical) {\n      if (canUseDOM) {\n        window.addEventListener('resize', this.handleScrollButtons, false);\n      }\n      // call the handle resize function to check if scroll buttons should be shown\n      this.handleScrollButtons();\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this.props.isVertical) {\n      if (canUseDOM) {\n        window.removeEventListener('resize', this.handleScrollButtons, false);\n      }\n    }\n    clearTimeout(this.scrollTimeout);\n  }\n\n  componentDidUpdate(prevProps: TabsProps) {\n    const { activeKey, mountOnEnter, children } = this.props;\n    const { shownKeys } = this.state;\n    if (prevProps.activeKey !== activeKey && mountOnEnter && shownKeys.indexOf(activeKey) < 0) {\n      this.setState({\n        shownKeys: shownKeys.concat(activeKey)\n      });\n    }\n\n    if (\n      prevProps.children &&\n      children &&\n      React.Children.toArray(prevProps.children).length !== React.Children.toArray(children).length\n    ) {\n      this.handleScrollButtons();\n    }\n  }\n\n  render() {\n    const {\n      className,\n      children,\n      activeKey,\n      defaultActiveKey,\n      id,\n      isFilled,\n      isSecondary,\n      isVertical,\n      isBox,\n      hasBorderBottom,\n      hasSecondaryBorderBottom,\n      leftScrollAriaLabel,\n      rightScrollAriaLabel,\n      'aria-label': ariaLabel,\n      component,\n      ouiaId,\n      ouiaSafe,\n      mountOnEnter,\n      unmountOnExit,\n      usePageInsets,\n      inset,\n      variant,\n      expandable,\n      isExpanded,\n      defaultIsExpanded,\n      toggleText,\n      toggleAriaLabel,\n      addButtonAriaLabel,\n      onToggle,\n      onClose,\n      onAdd,\n      ...props\n    } = this.props;\n    const {\n      showScrollButtons,\n      disableLeftScrollButton,\n      disableRightScrollButton,\n      shownKeys,\n      uncontrolledActiveKey,\n      uncontrolledIsExpandedLocal\n    } = this.state;\n    const filteredChildren = (React.Children.toArray(children) as React.ReactElement<TabProps>[])\n      .filter(Boolean)\n      .filter(child => !child.props.isHidden);\n\n    const uniqueId = id || getUniqueId();\n    const Component: any = component === TabsComponent.nav ? 'nav' : 'div';\n    const localActiveKey = defaultActiveKey !== undefined ? uncontrolledActiveKey : activeKey;\n\n    const isExpandedLocal = defaultIsExpanded !== undefined ? uncontrolledIsExpandedLocal : isExpanded;\n    /*  Uncontrolled expandable tabs */\n    const toggleTabs = (newValue: boolean) => {\n      if (isExpanded === undefined) {\n        this.setState({ uncontrolledIsExpandedLocal: newValue });\n      } else {\n        onToggle(newValue);\n      }\n    };\n\n    return (\n      <TabsContextProvider\n        value={{\n          variant,\n          mountOnEnter,\n          unmountOnExit,\n          localActiveKey,\n          uniqueId,\n          handleTabClick: (...args) => this.handleTabClick(...args),\n          handleTabClose: onClose\n        }}\n      >\n        <Component\n          aria-label={ariaLabel}\n          className={css(\n            styles.tabs,\n            isFilled && styles.modifiers.fill,\n            isSecondary && styles.modifiers.secondary,\n            isVertical && styles.modifiers.vertical,\n            isVertical && expandable && formatBreakpointMods(expandable, styles),\n            isVertical && expandable && isExpandedLocal && styles.modifiers.expanded,\n            isBox && styles.modifiers.box,\n            showScrollButtons && !isVertical && styles.modifiers.scrollable,\n            usePageInsets && styles.modifiers.pageInsets,\n            !hasBorderBottom && styles.modifiers.noBorderBottom,\n            hasSecondaryBorderBottom && styles.modifiers.borderBottom,\n            formatBreakpointMods(inset, styles),\n            variantStyle[variant],\n            className\n          )}\n          {...getOUIAProps(Tabs.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n          id={id && id}\n          {...props}\n        >\n          {expandable && isVertical && (\n            <GenerateId>\n              {randomId => (\n                <div className={css(styles.tabsToggle)}>\n                  <div className={css(styles.tabsToggleButton)}>\n                    <Button\n                      onClick={() => toggleTabs(!isExpandedLocal)}\n                      variant=\"plain\"\n                      aria-label={toggleAriaLabel}\n                      aria-expanded={isExpandedLocal}\n                      id={`${randomId}-button`}\n                      aria-labelledby={`${randomId}-text ${randomId}-button`}\n                    >\n                      <span className={css(styles.tabsToggleIcon)}>\n                        <AngleRightIcon arian-hidden=\"true\" />\n                      </span>\n                      {toggleText && (\n                        <span className={css('pf-c-tabs__toggle-text')} id={`${randomId}-text`}>\n                          {toggleText}\n                        </span>\n                      )}\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </GenerateId>\n          )}\n          <button\n            className={css(styles.tabsScrollButton, isSecondary && buttonStyles.modifiers.secondary)}\n            aria-label={leftScrollAriaLabel}\n            onClick={this.scrollLeft}\n            disabled={disableLeftScrollButton}\n            aria-hidden={disableLeftScrollButton}\n          >\n            <AngleLeftIcon />\n          </button>\n          <ul className={css(styles.tabsList)} ref={this.tabList} onScroll={this.handleScrollButtons} role=\"tablist\">\n            {filteredChildren}\n          </ul>\n          <button\n            className={css(styles.tabsScrollButton, isSecondary && buttonStyles.modifiers.secondary)}\n            aria-label={rightScrollAriaLabel}\n            onClick={this.scrollRight}\n            disabled={disableRightScrollButton}\n            aria-hidden={disableRightScrollButton}\n          >\n            <AngleRightIcon />\n          </button>\n          {onAdd !== undefined && (\n            <span className={css(styles.tabsAdd)}>\n              <Button variant=\"plain\" aria-label={addButtonAriaLabel || 'Add tab'} onClick={onAdd}>\n                <PlusIcon />\n              </Button>\n            </span>\n          )}\n        </Component>\n        {filteredChildren\n          .filter(\n            child =>\n              child.props.children &&\n              !(unmountOnExit && child.props.eventKey !== localActiveKey) &&\n              !(mountOnEnter && shownKeys.indexOf(child.props.eventKey) === -1)\n          )\n          .map(child => (\n            <TabContent\n              key={child.props.eventKey}\n              activeKey={localActiveKey}\n              child={child}\n              id={child.props.id || uniqueId}\n              ouiaId={child.props.ouiaId}\n            />\n          ))}\n      </TabsContextProvider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}