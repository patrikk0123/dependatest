{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/List/list';\nimport { css } from '@patternfly/react-styles';\nexport var OrderType;\n\n(function (OrderType) {\n  OrderType[\"number\"] = \"1\";\n  OrderType[\"lowercaseLetter\"] = \"a\";\n  OrderType[\"uppercaseLetter\"] = \"A\";\n  OrderType[\"lowercaseRomanNumber\"] = \"i\";\n  OrderType[\"uppercaseRomanNumber\"] = \"I\";\n})(OrderType || (OrderType = {}));\n\nexport var ListVariant;\n\n(function (ListVariant) {\n  ListVariant[\"inline\"] = \"inline\";\n})(ListVariant || (ListVariant = {}));\n\nexport var ListComponent;\n\n(function (ListComponent) {\n  ListComponent[\"ol\"] = \"ol\";\n  ListComponent[\"ul\"] = \"ul\";\n})(ListComponent || (ListComponent = {}));\n\nexport var List = function List(_a) {\n  var _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      _a$children = _a.children,\n      children = _a$children === void 0 ? null : _a$children,\n      _a$variant = _a.variant,\n      variant = _a$variant === void 0 ? null : _a$variant,\n      _a$isBordered = _a.isBordered,\n      isBordered = _a$isBordered === void 0 ? false : _a$isBordered,\n      _a$isPlain = _a.isPlain,\n      isPlain = _a$isPlain === void 0 ? false : _a$isPlain,\n      _a$iconSize = _a.iconSize,\n      iconSize = _a$iconSize === void 0 ? 'default' : _a$iconSize,\n      _a$type = _a.type,\n      type = _a$type === void 0 ? OrderType.number : _a$type,\n      _a$ref = _a.ref,\n      ref = _a$ref === void 0 ? null : _a$ref,\n      _a$component = _a.component,\n      component = _a$component === void 0 ? ListComponent.ul : _a$component,\n      props = __rest(_a, [\"className\", \"children\", \"variant\", \"isBordered\", \"isPlain\", \"iconSize\", \"type\", \"ref\", \"component\"]);\n\n  return component === ListComponent.ol ? React.createElement(\"ol\", Object.assign({\n    ref: ref,\n    type: type\n  }, props, {\n    className: css(styles.list, variant && styles.modifiers[variant], isBordered && styles.modifiers.bordered, isPlain && styles.modifiers.plain, iconSize && iconSize === 'large' && styles.modifiers.iconLg, className)\n  }), children) : React.createElement(\"ul\", Object.assign({\n    ref: ref\n  }, props, {\n    className: css(styles.list, variant && styles.modifiers[variant], isBordered && styles.modifiers.bordered, isPlain && styles.modifiers.plain, iconSize && iconSize === 'large' && styles.modifiers.iconLg, className)\n  }), children);\n};\nList.displayName = 'List';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,mDAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AAEA,WAAYC,SAAZ;;AAAA,WAAYA,SAAZ,EAAqB;EACnBA;EACAA;EACAA;EACAA;EACAA;AACD,CAND,EAAYA,SAAS,KAATA,SAAS,MAArB;;AAQA,WAAYC,WAAZ;;AAAA,WAAYA,WAAZ,EAAuB;EACrBA;AACD,CAFD,EAAYA,WAAW,KAAXA,WAAW,MAAvB;;AAIA,WAAYC,aAAZ;;AAAA,WAAYA,aAAZ,EAAyB;EACvBA;EACAA;AACD,CAHD,EAAYA,aAAa,KAAbA,aAAa,MAAzB;;AAuBA,OAAO,IAAMC,IAAI,GAAuC,SAA3CA,IAA2C,CAACC,EAAD,EAWxC;qBAFcA,GAR5BC;MAAAA,sCAAY;oBAQgBD,GAP5BE;MAAAA,oCAAW;mBAOiBF,GAN5BG;MAAAA,kCAAU;sBAMkBH,GAL5BI;MAAAA,wCAAa;mBAKeJ,GAJ5BK;MAAAA,kCAAU;oBAIkBL,GAH5BM;MAAAA,oCAAW;gBAGiBN,GAF5BO;MAAAA,4BAAOX,SAAS,CAACY;eAEWR,GAD5BS;MAAAA,0BAAM;qBACsBT,GAA5BU;MAAAA,sCAAYZ,aAAa,CAACa;MACvBC,QAAKC,WAV+C,qGAU/C;;EAER,gBAAS,KAAKf,aAAa,CAACgB,EAA5B,GACErB;IACEgB,GAAG,EAAEA,GADP;IAEEF,IAAI,EAAEA;EAFR,GAGMK,KAHN,EAGW;IACTX,SAAS,EAAEN,GAAG,CACZD,MAAM,CAACqB,IADK,EAEZZ,OAAO,IAAIT,MAAM,CAACsB,SAAP,CAAiBb,OAAjB,CAFC,EAGZC,UAAU,IAAIV,MAAM,CAACsB,SAAP,CAAiBC,QAHnB,EAIZZ,OAAO,IAAIX,MAAM,CAACsB,SAAP,CAAiBE,KAJhB,EAKZZ,QAAQ,IAAIA,QAAQ,KAAK,OAAzB,IAAoCZ,MAAM,CAACsB,SAAP,CAAiBG,MALzC,EAMZlB,SANY;EADL,CAHX,GAaGC,QAbH,CADF,GAiBET;IACEgB,GAAG,EAAEA;EADP,GAEMG,KAFN,EAEW;IACTX,SAAS,EAAEN,GAAG,CACZD,MAAM,CAACqB,IADK,EAEZZ,OAAO,IAAIT,MAAM,CAACsB,SAAP,CAAiBb,OAAjB,CAFC,EAGZC,UAAU,IAAIV,MAAM,CAACsB,SAAP,CAAiBC,QAHnB,EAIZZ,OAAO,IAAIX,MAAM,CAACsB,SAAP,CAAiBE,KAJhB,EAKZZ,QAAQ,IAAIA,QAAQ,KAAK,OAAzB,IAAoCZ,MAAM,CAACsB,SAAP,CAAiBG,MALzC,EAMZlB,SANY;EADL,CAFX,GAYGC,QAZH,CAjBF;AA+BC,CA3CI;AA4CPH,IAAI,CAACqB,WAAL,GAAmB,MAAnB","names":["React","styles","css","OrderType","ListVariant","ListComponent","List","_a","className","children","variant","isBordered","isPlain","iconSize","type","number","ref","component","ul","props","__rest","ol","list","modifiers","bordered","plain","iconLg","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/List/List.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/List/list';\nimport { css } from '@patternfly/react-styles';\n\nexport enum OrderType {\n  number = '1',\n  lowercaseLetter = 'a',\n  uppercaseLetter = 'A',\n  lowercaseRomanNumber = 'i',\n  uppercaseRomanNumber = 'I'\n}\n\nexport enum ListVariant {\n  inline = 'inline'\n}\n\nexport enum ListComponent {\n  ol = 'ol',\n  ul = 'ul'\n}\n\nexport interface ListProps extends Omit<React.HTMLProps<HTMLUListElement | HTMLOListElement>, 'type'> {\n  /** Anything that can be rendered inside of the list */\n  children?: React.ReactNode;\n  /** Additional classes added to the list */\n  className?: string;\n  /** Adds list variant styles */\n  variant?: ListVariant.inline;\n  /** Modifies the list to add borders between items */\n  isBordered?: boolean;\n  /** Modifies the list to include plain styling */\n  isPlain?: boolean;\n  /** Modifies the size of the icons in the list */\n  iconSize?: 'default' | 'large';\n  /** Sets the way items are numbered if variant is set to ordered */\n  type?: OrderType;\n  component?: 'ol' | 'ul';\n}\n\nexport const List: React.FunctionComponent<ListProps> = ({\n  className = '',\n  children = null,\n  variant = null,\n  isBordered = false,\n  isPlain = false,\n  iconSize = 'default',\n  type = OrderType.number,\n  ref = null,\n  component = ListComponent.ul,\n  ...props\n}: ListProps) =>\n  component === ListComponent.ol ? (\n    <ol\n      ref={ref as React.LegacyRef<HTMLOListElement>}\n      type={type}\n      {...props}\n      className={css(\n        styles.list,\n        variant && styles.modifiers[variant],\n        isBordered && styles.modifiers.bordered,\n        isPlain && styles.modifiers.plain,\n        iconSize && iconSize === 'large' && styles.modifiers.iconLg,\n        className\n      )}\n    >\n      {children}\n    </ol>\n  ) : (\n    <ul\n      ref={ref as React.LegacyRef<HTMLUListElement>}\n      {...props}\n      className={css(\n        styles.list,\n        variant && styles.modifiers[variant],\n        isBordered && styles.modifiers.bordered,\n        isPlain && styles.modifiers.plain,\n        iconSize && iconSize === 'large' && styles.modifiers.iconLg,\n        className\n      )}\n    >\n      {children}\n    </ul>\n  );\nList.displayName = 'List';\n"]},"metadata":{},"sourceType":"module"}