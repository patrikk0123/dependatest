{"ast":null,"code":"import _classCallCheck from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { keyHandler, formatBreakpointMods } from '../../helpers/util';\nimport { DropdownPosition, DropdownArrowContext, DropdownContext } from './dropdownConstants';\nexport var DropdownMenu = /*#__PURE__*/function (_React$Component) {\n  _inherits(DropdownMenu, _React$Component);\n\n  var _super = _createSuper(DropdownMenu);\n\n  function DropdownMenu() {\n    var _this;\n\n    _classCallCheck(this, DropdownMenu);\n\n    _this = _super.apply(this, arguments);\n    _this.refsCollection = [];\n\n    _this.componentWillUnmount = function () {\n      document.removeEventListener('keydown', _this.onKeyDown);\n    };\n\n    _this.onKeyDown = function (event) {\n      if (!_this.props.isOpen || !Array.from(document.activeElement.classList).find(function (className) {\n        return DropdownMenu.validToggleClasses.concat(_this.context.toggleClass).includes(className);\n      })) {\n        return;\n      }\n\n      var refs = _this.refsCollection;\n\n      if (event.key === 'ArrowDown') {\n        var firstFocusTargetCollection = refs.find(function (ref) {\n          return ref && ref[0] && !ref[0].hasAttribute('disabled');\n        });\n        DropdownMenu.focusFirstRef(firstFocusTargetCollection);\n        event.stopPropagation();\n      } else if (event.key === 'ArrowUp') {\n        var collectionLength = refs.length;\n        var lastFocusTargetCollection = refs.slice(collectionLength - 1, collectionLength);\n        var lastFocusTarget = lastFocusTargetCollection && lastFocusTargetCollection[0];\n        DropdownMenu.focusFirstRef(lastFocusTarget);\n        event.stopPropagation();\n      }\n    };\n\n    _this.childKeyHandler = function (index, innerIndex, position) {\n      var custom = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      keyHandler(index, innerIndex, position, _this.refsCollection, _this.props.isGrouped ? _this.refsCollection : React.Children.toArray(_this.props.children), custom);\n    };\n\n    _this.sendRef = function (index, nodes, isDisabled, isSeparator) {\n      _this.refsCollection[index] = [];\n      nodes.map(function (node, innerIndex) {\n        if (!node) {\n          _this.refsCollection[index][innerIndex] = null;\n        } else if (!node.getAttribute) {\n          // eslint-disable-next-line react/no-find-dom-node\n          _this.refsCollection[index][innerIndex] = ReactDOM.findDOMNode(node);\n        } else if (isSeparator) {\n          _this.refsCollection[index][innerIndex] = null;\n        } else {\n          _this.refsCollection[index][innerIndex] = node;\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(DropdownMenu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('keydown', this.onKeyDown);\n      var autoFocus = this.props.autoFocus;\n\n      if (autoFocus) {\n        // Focus first non-disabled element\n        var focusTargetCollection = this.refsCollection.find(function (ref) {\n          return ref && ref[0] && !ref[0].hasAttribute('disabled');\n        });\n        var focusTarget = focusTargetCollection && focusTargetCollection[0];\n\n        if (focusTarget && focusTarget.focus) {\n          setTimeout(function () {\n            return focusTarget.focus();\n          });\n        }\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      // reset refsCollection before updating to account for child removal between mounts\n      this.refsCollection = [];\n      return true;\n    }\n  }, {\n    key: \"extendChildren\",\n    value: function extendChildren() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          isGrouped = _this$props.isGrouped;\n\n      if (isGrouped) {\n        var index = 0;\n        return React.Children.map(children, function (groupedChildren) {\n          var group = groupedChildren;\n          var props = {};\n\n          if (group.props && group.props.children) {\n            if (Array.isArray(group.props.children)) {\n              props.children = React.Children.map(group.props.children, function (option) {\n                return React.cloneElement(option, {\n                  index: index++\n                });\n              });\n            } else {\n              props.children = React.cloneElement(group.props.children, {\n                index: index++\n              });\n            }\n          }\n\n          return React.cloneElement(group, props);\n        });\n      }\n\n      return React.Children.map(children, function (child, index) {\n        return React.cloneElement(child, {\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _a = this.props,\n          className = _a.className,\n          isOpen = _a.isOpen,\n          position = _a.position,\n          children = _a.children,\n          component = _a.component,\n          isGrouped = _a.isGrouped,\n          setMenuComponentRef = _a.setMenuComponentRef,\n          openedOnEnter = _a.openedOnEnter,\n          alignments = _a.alignments,\n          props = __rest(_a, [\"className\", \"isOpen\", \"position\", \"children\", \"component\", \"isGrouped\", \"setMenuComponentRef\", \"openedOnEnter\", \"alignments\"]);\n\n      return React.createElement(DropdownArrowContext.Provider, {\n        value: {\n          keyHandler: this.childKeyHandler,\n          sendRef: this.sendRef\n        }\n      }, component === 'div' ? React.createElement(DropdownContext.Consumer, null, function (_ref) {\n        var onSelect = _ref.onSelect,\n            menuClass = _ref.menuClass;\n        return React.createElement(\"div\", {\n          className: css(menuClass, position === DropdownPosition.right && styles.modifiers.alignRight, formatBreakpointMods(alignments, styles, 'align-'), className),\n          hidden: !isOpen,\n          onClick: function onClick(event) {\n            return onSelect && onSelect(event);\n          },\n          ref: setMenuComponentRef\n        }, children);\n      }) : isGrouped && React.createElement(DropdownContext.Consumer, null, function (_ref2) {\n        var menuClass = _ref2.menuClass,\n            menuComponent = _ref2.menuComponent;\n        var MenuComponent = menuComponent || 'div';\n        return React.createElement(MenuComponent, Object.assign({}, props, {\n          className: css(menuClass, position === DropdownPosition.right && styles.modifiers.alignRight, formatBreakpointMods(alignments, styles, 'align-'), className),\n          hidden: !isOpen,\n          role: \"menu\",\n          ref: setMenuComponentRef\n        }), _this2.extendChildren());\n      }) || React.createElement(DropdownContext.Consumer, null, function (_ref3) {\n        var menuClass = _ref3.menuClass,\n            menuComponent = _ref3.menuComponent;\n        var MenuComponent = menuComponent || component;\n        return React.createElement(MenuComponent, Object.assign({}, props, {\n          className: css(menuClass, position === DropdownPosition.right && styles.modifiers.alignRight, formatBreakpointMods(alignments, styles, 'align-'), className),\n          hidden: !isOpen,\n          role: \"menu\",\n          ref: setMenuComponentRef\n        }), _this2.extendChildren());\n      }));\n    }\n  }]);\n\n  return DropdownMenu;\n}(React.Component);\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = {\n  className: '',\n  isOpen: true,\n  openedOnEnter: false,\n  autoFocus: true,\n  position: DropdownPosition.left,\n  component: 'ul',\n  isGrouped: false,\n  setMenuComponentRef: null\n};\nDropdownMenu.validToggleClasses = [styles.dropdownToggle, styles.dropdownToggleButton];\n\nDropdownMenu.focusFirstRef = function (refCollection) {\n  if (refCollection && refCollection[0] && refCollection[0].focus) {\n    setTimeout(function () {\n      return refCollection[0].focus();\n    });\n  }\n};\n\nDropdownMenu.contextType = DropdownContext;","map":{"version":3,"mappings":"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","names":["React","ReactDOM","styles","css","keyHandler","formatBreakpointMods","DropdownPosition","DropdownArrowContext","DropdownContext","DropdownMenu","document","removeEventListener","onKeyDown","event","props","isOpen","Array","from","activeElement","classList","find","validToggleClasses","concat","context","toggleClass","includes","className","refs","refsCollection","key","firstFocusTargetCollection","ref","hasAttribute","focusFirstRef","stopPropagation","collectionLength","length","lastFocusTargetCollection","slice","lastFocusTarget","index","innerIndex","position","custom","isGrouped","Children","toArray","children","nodes","isDisabled","isSeparator","map","node","getAttribute","findDOMNode","addEventListener","autoFocus","focusTargetCollection","focusTarget","focus","setTimeout","group","groupedChildren","isArray","cloneElement","option","child","_a","component","setMenuComponentRef","openedOnEnter","alignments","__rest","Provider","value","childKeyHandler","sendRef","Consumer","onSelect","menuClass","right","modifiers","alignRight","hidden","onClick","menuComponent","MenuComponent","Object","role","extendChildren","Component","left","dropdownToggle","dropdownToggleButton","refCollection","contextType"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Dropdown/DropdownMenu.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { keyHandler, formatBreakpointMods } from '../../helpers/util';\nimport { DropdownPosition, DropdownArrowContext, DropdownContext } from './dropdownConstants';\n\nexport interface DropdownMenuProps {\n  /** Anything which can be rendered as dropdown items */\n  children?: React.ReactNode;\n  /** Classess applied to root element of dropdown menu */\n  className?: string;\n  /** Flag to indicate if menu is opened */\n  isOpen?: boolean;\n  /** @deprecated - no longer used */\n  openedOnEnter?: boolean;\n  /** Flag to indicate if the first dropdown item should gain initial focus, set false when adding\n   * a specific auto-focus item (like a current selection) otherwise leave as true\n   */\n  autoFocus?: boolean;\n  /** Indicates which component will be used as dropdown menu */\n  component?: React.ReactNode;\n  /** Indicates where menu will be alligned horizontally */\n  position?: DropdownPosition | 'right' | 'left';\n  /** Indicates how the menu will align at screen size breakpoints */\n  alignments?: {\n    sm?: 'right' | 'left';\n    md?: 'right' | 'left';\n    lg?: 'right' | 'left';\n    xl?: 'right' | 'left';\n    '2xl'?: 'right' | 'left';\n  };\n  /** Flag to indicate if menu is grouped */\n  isGrouped?: boolean;\n  // Function to call on component mount\n  setMenuComponentRef?: any;\n}\n\nexport interface DropdownMenuItem extends React.HTMLAttributes<any> {\n  isDisabled: boolean;\n  disabled: boolean;\n  isHovered: boolean;\n  ref: HTMLElement;\n}\n\nexport class DropdownMenu extends React.Component<DropdownMenuProps> {\n  static displayName = 'DropdownMenu';\n  context!: React.ContextType<typeof DropdownContext>;\n  refsCollection = [] as HTMLElement[][];\n\n  static defaultProps: DropdownMenuProps = {\n    className: '',\n    isOpen: true,\n    openedOnEnter: false,\n    autoFocus: true,\n    position: DropdownPosition.left,\n    component: 'ul',\n    isGrouped: false,\n    setMenuComponentRef: null\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.onKeyDown);\n    const { autoFocus } = this.props;\n\n    if (autoFocus) {\n      // Focus first non-disabled element\n      const focusTargetCollection = this.refsCollection.find(ref => ref && ref[0] && !ref[0].hasAttribute('disabled'));\n      const focusTarget = focusTargetCollection && focusTargetCollection[0];\n      if (focusTarget && focusTarget.focus) {\n        setTimeout(() => focusTarget.focus());\n      }\n    }\n  }\n\n  componentWillUnmount = () => {\n    document.removeEventListener('keydown', this.onKeyDown);\n  };\n\n  static validToggleClasses = [styles.dropdownToggle, styles.dropdownToggleButton] as string[];\n  static focusFirstRef = (refCollection: HTMLElement[]) => {\n    if (refCollection && refCollection[0] && refCollection[0].focus) {\n      setTimeout(() => refCollection[0].focus());\n    }\n  };\n\n  onKeyDown = (event: any) => {\n    if (\n      !this.props.isOpen ||\n      !Array.from(document.activeElement.classList).find(className =>\n        DropdownMenu.validToggleClasses.concat(this.context.toggleClass).includes(className)\n      )\n    ) {\n      return;\n    }\n    const refs = this.refsCollection;\n    if (event.key === 'ArrowDown') {\n      const firstFocusTargetCollection = refs.find(ref => ref && ref[0] && !ref[0].hasAttribute('disabled'));\n      DropdownMenu.focusFirstRef(firstFocusTargetCollection);\n      event.stopPropagation();\n    } else if (event.key === 'ArrowUp') {\n      const collectionLength = refs.length;\n      const lastFocusTargetCollection = refs.slice(collectionLength - 1, collectionLength);\n      const lastFocusTarget = lastFocusTargetCollection && lastFocusTargetCollection[0];\n      DropdownMenu.focusFirstRef(lastFocusTarget);\n      event.stopPropagation();\n    }\n  };\n\n  shouldComponentUpdate() {\n    // reset refsCollection before updating to account for child removal between mounts\n    this.refsCollection = [] as HTMLElement[][];\n    return true;\n  }\n\n  childKeyHandler = (index: number, innerIndex: number, position: string, custom = false) => {\n    keyHandler(\n      index,\n      innerIndex,\n      position,\n      this.refsCollection,\n      this.props.isGrouped ? this.refsCollection : React.Children.toArray(this.props.children),\n      custom\n    );\n  };\n\n  sendRef = (index: number, nodes: any[], isDisabled: boolean, isSeparator: boolean) => {\n    this.refsCollection[index] = [];\n    nodes.map((node, innerIndex) => {\n      if (!node) {\n        this.refsCollection[index][innerIndex] = null;\n      } else if (!node.getAttribute) {\n        // eslint-disable-next-line react/no-find-dom-node\n        this.refsCollection[index][innerIndex] = ReactDOM.findDOMNode(node) as HTMLElement;\n      } else if (isSeparator) {\n        this.refsCollection[index][innerIndex] = null;\n      } else {\n        this.refsCollection[index][innerIndex] = node;\n      }\n    });\n  };\n\n  extendChildren() {\n    const { children, isGrouped } = this.props;\n    if (isGrouped) {\n      let index = 0;\n      return React.Children.map(children, groupedChildren => {\n        const group = groupedChildren as React.ReactElement;\n        const props: { children?: React.ReactNode } = {};\n        if (group.props && group.props.children) {\n          if (Array.isArray(group.props.children)) {\n            props.children = React.Children.map(group.props.children, option =>\n              React.cloneElement(option as React.ReactElement, {\n                index: index++\n              })\n            );\n          } else {\n            props.children = React.cloneElement(group.props.children as React.ReactElement, {\n              index: index++\n            });\n          }\n        }\n        return React.cloneElement(group, props);\n      });\n    }\n    return React.Children.map(children, (child, index) =>\n      React.cloneElement(child as React.ReactElement, {\n        index\n      })\n    );\n  }\n\n  render() {\n    const {\n      className,\n      isOpen,\n      position,\n      children,\n      component,\n      isGrouped,\n      setMenuComponentRef,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      openedOnEnter,\n      alignments,\n      ...props\n    } = this.props;\n    return (\n      <DropdownArrowContext.Provider\n        value={{\n          keyHandler: this.childKeyHandler,\n          sendRef: this.sendRef\n        }}\n      >\n        {component === 'div' ? (\n          <DropdownContext.Consumer>\n            {({ onSelect, menuClass }) => (\n              <div\n                className={css(\n                  menuClass,\n                  position === DropdownPosition.right && styles.modifiers.alignRight,\n                  formatBreakpointMods(alignments, styles, 'align-'),\n                  className\n                )}\n                hidden={!isOpen}\n                onClick={event => onSelect && onSelect(event)}\n                ref={setMenuComponentRef}\n              >\n                {children}\n              </div>\n            )}\n          </DropdownContext.Consumer>\n        ) : (\n          (isGrouped && (\n            <DropdownContext.Consumer>\n              {({ menuClass, menuComponent }) => {\n                const MenuComponent = (menuComponent || 'div') as any;\n                return (\n                  <MenuComponent\n                    {...props}\n                    className={css(\n                      menuClass,\n                      position === DropdownPosition.right && styles.modifiers.alignRight,\n                      formatBreakpointMods(alignments, styles, 'align-'),\n                      className\n                    )}\n                    hidden={!isOpen}\n                    role=\"menu\"\n                    ref={setMenuComponentRef}\n                  >\n                    {this.extendChildren()}\n                  </MenuComponent>\n                );\n              }}\n            </DropdownContext.Consumer>\n          )) || (\n            <DropdownContext.Consumer>\n              {({ menuClass, menuComponent }) => {\n                const MenuComponent = (menuComponent || component) as any;\n                return (\n                  <MenuComponent\n                    {...props}\n                    className={css(\n                      menuClass,\n                      position === DropdownPosition.right && styles.modifiers.alignRight,\n                      formatBreakpointMods(alignments, styles, 'align-'),\n                      className\n                    )}\n                    hidden={!isOpen}\n                    role=\"menu\"\n                    ref={setMenuComponentRef}\n                  >\n                    {this.extendChildren()}\n                  </MenuComponent>\n                );\n              }}\n            </DropdownContext.Consumer>\n          )\n        )}\n      </DropdownArrowContext.Provider>\n    );\n  }\n}\n\nDropdownMenu.contextType = DropdownContext;\n"]},"metadata":{},"sourceType":"module"}