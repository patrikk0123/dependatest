{"ast":null,"code":"import _classCallCheck from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { canUseDOM, KEY_CODES } from '../../helpers';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Backdrop/backdrop';\nimport { ModalContent } from './ModalContent';\nimport { getDefaultOUIAId } from '../../helpers';\nexport var ModalVariant;\n\n(function (ModalVariant) {\n  ModalVariant[\"small\"] = \"small\";\n  ModalVariant[\"medium\"] = \"medium\";\n  ModalVariant[\"large\"] = \"large\";\n  ModalVariant[\"default\"] = \"default\";\n})(ModalVariant || (ModalVariant = {}));\n\nexport var Modal = /*#__PURE__*/function (_React$Component) {\n  _inherits(Modal, _React$Component);\n\n  var _super = _createSuper(Modal);\n\n  function Modal(props) {\n    var _this;\n\n    _classCallCheck(this, Modal);\n\n    _this = _super.call(this, props);\n    _this.boxId = '';\n    _this.labelId = '';\n    _this.descriptorId = '';\n\n    _this.handleEscKeyClick = function (event) {\n      var onEscapePress = _this.props.onEscapePress;\n\n      if (event.keyCode === KEY_CODES.ESCAPE_KEY && _this.props.isOpen) {\n        onEscapePress ? onEscapePress(event) : _this.props.onClose();\n      }\n    };\n\n    _this.getElement = function (appendTo) {\n      if (typeof appendTo === 'function') {\n        return appendTo();\n      }\n\n      return appendTo || document.body;\n    };\n\n    _this.toggleSiblingsFromScreenReaders = function (hide) {\n      var appendTo = _this.props.appendTo;\n\n      var target = _this.getElement(appendTo);\n\n      var bodyChildren = target.children;\n\n      for (var _i = 0, _Array$from = Array.from(bodyChildren); _i < _Array$from.length; _i++) {\n        var child = _Array$from[_i];\n\n        if (child !== _this.state.container) {\n          hide ? child.setAttribute('aria-hidden', '' + hide) : child.removeAttribute('aria-hidden');\n        }\n      }\n    };\n\n    _this.isEmpty = function (value) {\n      return value === null || value === undefined || value === '';\n    };\n\n    var boxIdNum = Modal.currentId++;\n    var labelIdNum = boxIdNum + 1;\n    var descriptorIdNum = boxIdNum + 2;\n    _this.boxId = props.id || \"pf-modal-part-\".concat(boxIdNum);\n    _this.labelId = \"pf-modal-part-\".concat(labelIdNum);\n    _this.descriptorId = \"pf-modal-part-\".concat(descriptorIdNum);\n    _this.state = {\n      container: undefined,\n      ouiaStateId: getDefaultOUIAId(Modal.displayName, props.variant)\n    };\n    return _this;\n  }\n\n  _createClass(Modal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          appendTo = _this$props.appendTo,\n          title = _this$props.title,\n          ariaLabel = _this$props['aria-label'],\n          ariaLabelledby = _this$props['aria-labelledby'],\n          hasNoBodyWrapper = _this$props.hasNoBodyWrapper,\n          header = _this$props.header;\n      var target = this.getElement(appendTo);\n      var container = document.createElement('div');\n      this.setState({\n        container: container\n      });\n      target.appendChild(container);\n      target.addEventListener('keydown', this.handleEscKeyClick, false);\n\n      if (this.props.isOpen) {\n        target.classList.add(css(styles.backdropOpen));\n      } else {\n        target.classList.remove(css(styles.backdropOpen));\n      }\n\n      if (this.isEmpty(title) && this.isEmpty(ariaLabel) && this.isEmpty(ariaLabelledby)) {\n        // eslint-disable-next-line no-console\n        console.error('Modal: Specify at least one of: title, aria-label, aria-labelledby.');\n      }\n\n      if (this.isEmpty(ariaLabel) && this.isEmpty(ariaLabelledby) && (hasNoBodyWrapper || header)) {\n        // eslint-disable-next-line no-console\n        console.error('Modal: When using hasNoBodyWrapper or setting a custom header, ensure you assign an accessible name to the the modal container with aria-label or aria-labelledby.');\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var appendTo = this.props.appendTo;\n      var target = this.getElement(appendTo);\n\n      if (this.props.isOpen) {\n        target.classList.add(css(styles.backdropOpen));\n        this.toggleSiblingsFromScreenReaders(true);\n      } else {\n        target.classList.remove(css(styles.backdropOpen));\n        this.toggleSiblingsFromScreenReaders(false);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var appendTo = this.props.appendTo;\n      var target = this.getElement(appendTo);\n\n      if (this.state.container) {\n        target.removeChild(this.state.container);\n      }\n\n      target.removeEventListener('keydown', this.handleEscKeyClick, false);\n      target.classList.remove(css(styles.backdropOpen));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          appendTo = _a.appendTo,\n          onEscapePress = _a.onEscapePress,\n          ariaLabelledby = _a['aria-labelledby'],\n          ariaLabel = _a['aria-label'],\n          ariaDescribedby = _a['aria-describedby'],\n          bodyAriaLabel = _a.bodyAriaLabel,\n          bodyAriaRole = _a.bodyAriaRole,\n          title = _a.title,\n          titleIconVariant = _a.titleIconVariant,\n          titleLabel = _a.titleLabel,\n          ouiaId = _a.ouiaId,\n          ouiaSafe = _a.ouiaSafe,\n          props = __rest(_a, [\"appendTo\", \"onEscapePress\", 'aria-labelledby', 'aria-label', 'aria-describedby', \"bodyAriaLabel\", \"bodyAriaRole\", \"title\", \"titleIconVariant\", \"titleLabel\", \"ouiaId\", \"ouiaSafe\"]);\n\n      var container = this.state.container;\n\n      if (!canUseDOM || !container) {\n        return null;\n      }\n\n      return ReactDOM.createPortal(React.createElement(ModalContent, Object.assign({}, props, {\n        boxId: this.boxId,\n        labelId: this.labelId,\n        descriptorId: this.descriptorId,\n        title: title,\n        titleIconVariant: titleIconVariant,\n        titleLabel: titleLabel,\n        \"aria-label\": ariaLabel,\n        \"aria-describedby\": ariaDescribedby,\n        \"aria-labelledby\": ariaLabelledby,\n        bodyAriaLabel: bodyAriaLabel,\n        bodyAriaRole: bodyAriaRole,\n        ouiaId: ouiaId !== undefined ? ouiaId : this.state.ouiaStateId,\n        ouiaSafe: ouiaSafe\n      })), container);\n    }\n  }]);\n\n  return Modal;\n}(React.Component);\nModal.displayName = 'Modal';\nModal.currentId = 0;\nModal.defaultProps = {\n  className: '',\n  isOpen: false,\n  title: '',\n  titleIconVariant: null,\n  titleLabel: '',\n  'aria-label': '',\n  showClose: true,\n  'aria-describedby': '',\n  'aria-labelledby': '',\n  id: undefined,\n  actions: [],\n  onClose: function onClose() {\n    return undefined;\n  },\n  variant: 'default',\n  hasNoBodyWrapper: false,\n  appendTo: function appendTo() {\n    return document.body;\n  },\n  ouiaSafe: true\n};","map":{"version":3,"mappings":"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","names":["React","ReactDOM","canUseDOM","KEY_CODES","css","styles","ModalContent","getDefaultOUIAId","ModalVariant","Modal","props","event","onEscapePress","keyCode","ESCAPE_KEY","isOpen","onClose","appendTo","document","body","hide","target","getElement","bodyChildren","children","Array","from","child","state","container","setAttribute","removeAttribute","value","undefined","boxIdNum","currentId","labelIdNum","descriptorIdNum","boxId","id","labelId","descriptorId","ouiaStateId","displayName","variant","title","ariaLabel","ariaLabelledby","hasNoBodyWrapper","header","createElement","setState","appendChild","addEventListener","handleEscKeyClick","classList","add","backdropOpen","remove","isEmpty","console","error","toggleSiblingsFromScreenReaders","removeChild","removeEventListener","_a","ariaDescribedby","bodyAriaLabel","bodyAriaRole","titleIconVariant","titleLabel","ouiaId","ouiaSafe","__rest","createPortal","Object","Component","className","showClose","actions"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Modal/Modal.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { canUseDOM, KEY_CODES, PickOptional } from '../../helpers';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Backdrop/backdrop';\nimport { ModalContent } from './ModalContent';\nimport { OUIAProps, getDefaultOUIAId } from '../../helpers';\n\nexport interface ModalProps extends React.HTMLProps<HTMLDivElement>, OUIAProps {\n  /** Content rendered inside the Modal. */\n  children: React.ReactNode;\n  /** Additional classes added to the Modal */\n  className?: string;\n  /** Flag to show the modal */\n  isOpen?: boolean;\n  /** Complex header (more than just text), supersedes title for header content */\n  header?: React.ReactNode;\n  /** Optional help section for the Modal Header */\n  help?: React.ReactNode;\n  /** Simple text content of the Modal Header, also used for aria-label on the body */\n  title?: string;\n  /** Optional alert icon (or other) to show before the title of the Modal Header\n   * When the predefined alert types are used the default styling\n   * will be automatically applied */\n  titleIconVariant?: 'success' | 'danger' | 'warning' | 'info' | 'default' | React.ComponentType<any>;\n  /** Optional title label text for screen readers */\n  titleLabel?: string;\n  /** Id to use for Modal Box label */\n  'aria-labelledby'?: string | null;\n  /** Accessible descriptor of modal */\n  'aria-label'?: string;\n  /** Id to use for Modal Box descriptor */\n  'aria-describedby'?: string;\n  /** Accessible label applied to the modal box body. This should be used to communicate important information about the modal box body div if needed, such as that it is scrollable */\n  bodyAriaLabel?: string;\n  /** Accessible role applied to the modal box body. This will default to region if a body aria label is applied. Set to a more appropriate role as applicable based on the modal content and context */\n  bodyAriaRole?: string;\n  /** Flag to show the close button in the header area of the modal */\n  showClose?: boolean;\n  /** Custom footer */\n  footer?: React.ReactNode;\n  /** Action buttons to add to the standard Modal Footer, ignored if `footer` is given */\n  actions?: any;\n  /** A callback for when the close button is clicked */\n  onClose?: () => void;\n  /** Default width of the Modal. */\n  width?: number | string;\n  /** The parent container to append the modal to. Defaults to document.body */\n  appendTo?: HTMLElement | (() => HTMLElement);\n  /** Flag to disable focus trap */\n  disableFocusTrap?: boolean;\n  /** Description of the modal */\n  description?: React.ReactNode;\n  /** Variant of the modal */\n  variant?: 'small' | 'medium' | 'large' | 'default';\n  /** Alternate position of the modal */\n  position?: 'top';\n  /** Offset from alternate position. Can be any valid CSS length/percentage */\n  positionOffset?: string;\n  /** Flag indicating if modal content should be placed in a modal box body wrapper */\n  hasNoBodyWrapper?: boolean;\n  /** An ID to use for the ModalBox container */\n  id?: string;\n  /** Modal handles pressing of the Escape key and closes the modal. If you want to handle this yourself you can use this callback function */\n  onEscapePress?: (event: KeyboardEvent) => void;\n}\n\nexport enum ModalVariant {\n  small = 'small',\n  medium = 'medium',\n  large = 'large',\n  default = 'default'\n}\n\ninterface ModalState {\n  container: HTMLElement;\n  ouiaStateId: string;\n}\n\nexport class Modal extends React.Component<ModalProps, ModalState> {\n  static displayName = 'Modal';\n  static currentId = 0;\n  boxId = '';\n  labelId = '';\n  descriptorId = '';\n\n  static defaultProps: PickOptional<ModalProps> = {\n    className: '',\n    isOpen: false,\n    title: '',\n    titleIconVariant: null,\n    titleLabel: '',\n    'aria-label': '',\n    showClose: true,\n    'aria-describedby': '',\n    'aria-labelledby': '',\n    id: undefined,\n    actions: [] as any[],\n    onClose: () => undefined as any,\n    variant: 'default',\n    hasNoBodyWrapper: false,\n    appendTo: () => document.body,\n    ouiaSafe: true\n  };\n\n  constructor(props: ModalProps) {\n    super(props);\n    const boxIdNum = Modal.currentId++;\n    const labelIdNum = boxIdNum + 1;\n    const descriptorIdNum = boxIdNum + 2;\n    this.boxId = props.id || `pf-modal-part-${boxIdNum}`;\n    this.labelId = `pf-modal-part-${labelIdNum}`;\n    this.descriptorId = `pf-modal-part-${descriptorIdNum}`;\n\n    this.state = {\n      container: undefined,\n      ouiaStateId: getDefaultOUIAId(Modal.displayName, props.variant)\n    };\n  }\n\n  handleEscKeyClick = (event: KeyboardEvent): void => {\n    const { onEscapePress } = this.props;\n    if (event.keyCode === KEY_CODES.ESCAPE_KEY && this.props.isOpen) {\n      onEscapePress ? onEscapePress(event) : this.props.onClose();\n    }\n  };\n\n  getElement = (appendTo: HTMLElement | (() => HTMLElement)) => {\n    if (typeof appendTo === 'function') {\n      return appendTo();\n    }\n    return appendTo || document.body;\n  };\n\n  toggleSiblingsFromScreenReaders = (hide: boolean) => {\n    const { appendTo } = this.props;\n    const target: HTMLElement = this.getElement(appendTo);\n    const bodyChildren = target.children;\n    for (const child of Array.from(bodyChildren)) {\n      if (child !== this.state.container) {\n        hide ? child.setAttribute('aria-hidden', '' + hide) : child.removeAttribute('aria-hidden');\n      }\n    }\n  };\n\n  isEmpty = (value: string | null) => value === null || value === undefined || value === '';\n\n  componentDidMount() {\n    const {\n      appendTo,\n      title,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledby,\n      hasNoBodyWrapper,\n      header\n    } = this.props;\n    const target: HTMLElement = this.getElement(appendTo);\n    const container = document.createElement('div');\n    this.setState({ container });\n    target.appendChild(container);\n    target.addEventListener('keydown', this.handleEscKeyClick, false);\n\n    if (this.props.isOpen) {\n      target.classList.add(css(styles.backdropOpen));\n    } else {\n      target.classList.remove(css(styles.backdropOpen));\n    }\n\n    if (this.isEmpty(title) && this.isEmpty(ariaLabel) && this.isEmpty(ariaLabelledby)) {\n      // eslint-disable-next-line no-console\n      console.error('Modal: Specify at least one of: title, aria-label, aria-labelledby.');\n    }\n\n    if (this.isEmpty(ariaLabel) && this.isEmpty(ariaLabelledby) && (hasNoBodyWrapper || header)) {\n      // eslint-disable-next-line no-console\n      console.error(\n        'Modal: When using hasNoBodyWrapper or setting a custom header, ensure you assign an accessible name to the the modal container with aria-label or aria-labelledby.'\n      );\n    }\n  }\n\n  componentDidUpdate() {\n    const { appendTo } = this.props;\n    const target: HTMLElement = this.getElement(appendTo);\n    if (this.props.isOpen) {\n      target.classList.add(css(styles.backdropOpen));\n      this.toggleSiblingsFromScreenReaders(true);\n    } else {\n      target.classList.remove(css(styles.backdropOpen));\n      this.toggleSiblingsFromScreenReaders(false);\n    }\n  }\n\n  componentWillUnmount() {\n    const { appendTo } = this.props;\n    const target: HTMLElement = this.getElement(appendTo);\n    if (this.state.container) {\n      target.removeChild(this.state.container);\n    }\n    target.removeEventListener('keydown', this.handleEscKeyClick, false);\n    target.classList.remove(css(styles.backdropOpen));\n  }\n\n  render() {\n    const {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      appendTo,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onEscapePress,\n      'aria-labelledby': ariaLabelledby,\n      'aria-label': ariaLabel,\n      'aria-describedby': ariaDescribedby,\n      bodyAriaLabel,\n      bodyAriaRole,\n      title,\n      titleIconVariant,\n      titleLabel,\n      ouiaId,\n      ouiaSafe,\n      ...props\n    } = this.props;\n    const { container } = this.state;\n\n    if (!canUseDOM || !container) {\n      return null;\n    }\n\n    return ReactDOM.createPortal(\n      <ModalContent\n        {...props}\n        boxId={this.boxId}\n        labelId={this.labelId}\n        descriptorId={this.descriptorId}\n        title={title}\n        titleIconVariant={titleIconVariant}\n        titleLabel={titleLabel}\n        aria-label={ariaLabel}\n        aria-describedby={ariaDescribedby}\n        aria-labelledby={ariaLabelledby}\n        bodyAriaLabel={bodyAriaLabel}\n        bodyAriaRole={bodyAriaRole}\n        ouiaId={ouiaId !== undefined ? ouiaId : this.state.ouiaStateId}\n        ouiaSafe={ouiaSafe}\n      />,\n      container\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}