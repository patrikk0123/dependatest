{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Drawer/drawer';\nimport { css } from '@patternfly/react-styles';\nimport { DrawerMain } from './DrawerMain';\nimport { DrawerColorVariant } from './Drawer';\nexport const DrawerContent = _a => {\n  var {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    className = '',\n    children,\n    panelContent,\n    colorVariant = DrawerColorVariant.default\n  } = _a,\n      props = __rest(_a, [\"className\", \"children\", \"panelContent\", \"colorVariant\"]);\n\n  const drawerContentRef = React.useRef();\n  return React.createElement(DrawerMain, null, React.createElement(\"div\", Object.assign({\n    className: css(styles.drawerContent, colorVariant === DrawerColorVariant.light200 && styles.modifiers.light_200, className),\n    ref: drawerContentRef\n  }, props), children), panelContent && React.cloneElement(panelContent, {\n    drawerContentRef\n  }));\n};\nDrawerContent.displayName = 'DrawerContent';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,uDAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,kBAAT,QAAmC,UAAnC;AAaA,OAAO,MAAMC,aAAa,GAAiDC,EAAD,IAOjD;MAPkD;IACzE;IACAC,SAAS,GAAG,EAF6D;IAGzEC,QAHyE;IAIzEC,YAJyE;IAKzEC,YAAY,GAAGN,kBAAkB,CAACO;EALuC,IAKhCL;MACtCM,KAAK,cANiE,yDAMjE;;EAER,MAAMC,gBAAgB,GAAGb,KAAK,CAACc,MAAN,EAAzB;EACA,OACEd,oBAACG,UAAD,EAAW,IAAX,EACEH;IACEO,SAAS,EAAEL,GAAG,CACZD,MAAM,CAACc,aADK,EAEZL,YAAY,KAAKN,kBAAkB,CAACY,QAApC,IAAgDf,MAAM,CAACgB,SAAP,CAAiBC,SAFrD,EAGZX,SAHY,CADhB;IAMEY,GAAG,EAAEN;EANP,GAOMD,KAPN,GASGJ,QATH,CADF,EAYGC,YAAY,IAAIT,KAAK,CAACoB,YAAN,CAAmBX,YAAnB,EAAuD;IAAEI;EAAF,CAAvD,CAZnB,CADF;AAgBD,CAzBM;AA0BPR,aAAa,CAACgB,WAAd,GAA4B,eAA5B","names":["React","styles","css","DrawerMain","DrawerColorVariant","DrawerContent","_a","className","children","panelContent","colorVariant","default","props","drawerContentRef","useRef","drawerContent","light200","modifiers","light_200","ref","cloneElement","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Drawer/DrawerContent.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Drawer/drawer';\nimport { css } from '@patternfly/react-styles';\nimport { DrawerMain } from './DrawerMain';\nimport { DrawerColorVariant } from './Drawer';\n\nexport interface DrawerContentProps extends React.HTMLProps<HTMLDivElement> {\n  /** Additional classes added to the Drawer. */\n  className?: string;\n  /** Content to be rendered in the drawer. */\n  children?: React.ReactNode;\n  /** Content rendered in the drawer panel. */\n  panelContent: React.ReactNode;\n  /** Color variant of the background of the drawer panel */\n  colorVariant?: DrawerColorVariant | 'light-200' | 'default';\n}\n\nexport const DrawerContent: React.FunctionComponent<DrawerContentProps> = ({\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  className = '',\n  children,\n  panelContent,\n  colorVariant = DrawerColorVariant.default,\n  ...props\n}: DrawerContentProps) => {\n  const drawerContentRef = React.useRef<HTMLDivElement>();\n  return (\n    <DrawerMain>\n      <div\n        className={css(\n          styles.drawerContent,\n          colorVariant === DrawerColorVariant.light200 && styles.modifiers.light_200,\n          className\n        )}\n        ref={drawerContentRef}\n        {...props}\n      >\n        {children}\n      </div>\n      {panelContent && React.cloneElement(panelContent as React.ReactElement, { drawerContentRef })}\n    </DrawerMain>\n  );\n};\nDrawerContent.displayName = 'DrawerContent';\n"]},"metadata":{},"sourceType":"module"}