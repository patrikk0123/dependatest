{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/layouts/Flex/flex';\nimport * as flexToken from '@patternfly/react-tokens/dist/esm/l_flex_item_Order';\nimport { formatBreakpointMods, setBreakpointCssVars } from '../../helpers/util';\nexport var Flex = function Flex(_a) {\n  var _a$children = _a.children,\n      children = _a$children === void 0 ? null : _a$children,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      _a$component = _a.component,\n      component = _a$component === void 0 ? 'div' : _a$component,\n      spacer = _a.spacer,\n      spaceItems = _a.spaceItems,\n      grow = _a.grow,\n      shrink = _a.shrink,\n      flex = _a.flex,\n      direction = _a.direction,\n      alignItems = _a.alignItems,\n      alignContent = _a.alignContent,\n      alignSelf = _a.alignSelf,\n      align = _a.align,\n      justifyContent = _a.justifyContent,\n      display = _a.display,\n      fullWidth = _a.fullWidth,\n      flexWrap = _a.flexWrap,\n      order = _a.order,\n      style = _a.style,\n      props = __rest(_a, [\"children\", \"className\", \"component\", \"spacer\", \"spaceItems\", \"grow\", \"shrink\", \"flex\", \"direction\", \"alignItems\", \"alignContent\", \"alignSelf\", \"align\", \"justifyContent\", \"display\", \"fullWidth\", \"flexWrap\", \"order\", \"style\"]);\n\n  var Component = component;\n  return React.createElement(Component, Object.assign({\n    className: css(styles.flex, formatBreakpointMods(spacer, styles), formatBreakpointMods(spaceItems, styles), formatBreakpointMods(grow, styles), formatBreakpointMods(shrink, styles), formatBreakpointMods(flex, styles), formatBreakpointMods(direction, styles), formatBreakpointMods(alignItems, styles), formatBreakpointMods(alignContent, styles), formatBreakpointMods(alignSelf, styles), formatBreakpointMods(align, styles), formatBreakpointMods(justifyContent, styles), formatBreakpointMods(display, styles), formatBreakpointMods(fullWidth, styles), formatBreakpointMods(flexWrap, styles), className),\n    style: style || order ? Object.assign(Object.assign({}, style), setBreakpointCssVars(order, flexToken.l_flex_item_Order.name)) : undefined\n  }, props), children);\n};\nFlex.displayName = 'Flex';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,gDAAnB;AACA,OAAO,KAAKC,SAAZ,MAA2B,qDAA3B;AAEA,SAASC,oBAAT,EAA+BC,oBAA/B,QAA2D,oBAA3D;AA+UA,OAAO,IAAMC,IAAI,GAAuC,SAA3CA,IAA2C,CAACC,EAAD,EAqBxC;oBAFTA,GAlBLC;MAAAA,oCAAW;qBAkBND,GAjBLE;MAAAA,sCAAY;qBAiBPF,GAhBLG;MAAAA,sCAAY;MACZC,SAeKJ,GAfLI;MACAC,aAcKL,GAdLK;MACAC,OAaKN,GAbLM;MACAC,SAYKP,GAZLO;MACAC,OAWKR,GAXLQ;MACAC,YAUKT,GAVLS;MACAC,aASKV,GATLU;MACAC,eAQKX,GARLW;MACAC,YAOKZ,GAPLY;MACAC,QAMKb,GANLa;MACAC,iBAKKd,GALLc;MACAC,UAIKf,GAJLe;MACAC,YAGKhB,GAHLgB;MACAC,WAEKjB,GAFLiB;MACAC,QACKlB,GADLkB;MACAC,QAAKnB,GAALmB;MACGC,QAAKC,WApB+C,iOAoB/C;;EAER,IAAMC,SAAS,GAAQnB,SAAvB;EAEA,OACEV,oBAAC6B,SAAD,EAAUC;IACRrB,SAAS,EAAER,GAAG,CACZC,MAAM,CAACa,IADK,EAEZX,oBAAoB,CAACO,MAAD,EAAST,MAAT,CAFR,EAGZE,oBAAoB,CAACQ,UAAD,EAAaV,MAAb,CAHR,EAIZE,oBAAoB,CAACS,IAAD,EAAOX,MAAP,CAJR,EAKZE,oBAAoB,CAACU,MAAD,EAASZ,MAAT,CALR,EAMZE,oBAAoB,CAACW,IAAD,EAAOb,MAAP,CANR,EAOZE,oBAAoB,CAACY,SAAD,EAAYd,MAAZ,CAPR,EAQZE,oBAAoB,CAACa,UAAD,EAAaf,MAAb,CARR,EASZE,oBAAoB,CAACc,YAAD,EAAehB,MAAf,CATR,EAUZE,oBAAoB,CAACe,SAAD,EAAYjB,MAAZ,CAVR,EAWZE,oBAAoB,CAACgB,KAAD,EAAQlB,MAAR,CAXR,EAYZE,oBAAoB,CAACiB,cAAD,EAAiBnB,MAAjB,CAZR,EAaZE,oBAAoB,CAACkB,OAAD,EAAUpB,MAAV,CAbR,EAcZE,oBAAoB,CAACmB,SAAD,EAAYrB,MAAZ,CAdR,EAeZE,oBAAoB,CAACoB,QAAD,EAAWtB,MAAX,CAfR,EAgBZO,SAhBY,CADN;IAmBRiB,KAAK,EACHA,KAAK,IAAID,KAAT,GAAgBK,gCAAMJ,KAAN,GAAgBrB,oBAAoB,CAACoB,KAAD,EAAQtB,SAAS,CAAC4B,iBAAV,CAA4BC,IAApC,CAApC,CAAhB,GAAkGC;EApB5F,GAsBJN,KAtBI,CAAV,EAwBGnB,QAxBH,CADF;AA4BD,CApDM;AAqDPF,IAAI,CAAC4B,WAAL,GAAmB,MAAnB","names":["React","css","styles","flexToken","formatBreakpointMods","setBreakpointCssVars","Flex","_a","children","className","component","spacer","spaceItems","grow","shrink","flex","direction","alignItems","alignContent","alignSelf","align","justifyContent","display","fullWidth","flexWrap","order","style","props","__rest","Component","Object","l_flex_item_Order","name","undefined","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/layouts/Flex/Flex.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/layouts/Flex/flex';\nimport * as flexToken from '@patternfly/react-tokens/dist/esm/l_flex_item_Order';\n\nimport { formatBreakpointMods, setBreakpointCssVars } from '../../helpers/util';\n\nexport interface FlexProps extends React.HTMLProps<HTMLDivElement> {\n  /** content rendered inside the Flex layout */\n  children?: React.ReactNode;\n  /** additional classes added to the Flex layout */\n  className?: string;\n  /** Spacers at various breakpoints */\n  spacer?: {\n    default?:\n      | 'spacerNone'\n      | 'spacerXs'\n      | 'spacerSm'\n      | 'spacerMd'\n      | 'spacerLg'\n      | 'spacerXl'\n      | 'spacer2xl'\n      | 'spacer3xl'\n      | 'spacer4xl';\n    sm?:\n      | 'spacerNone'\n      | 'spacerXs'\n      | 'spacerSm'\n      | 'spacerMd'\n      | 'spacerLg'\n      | 'spacerXl'\n      | 'spacer2xl'\n      | 'spacer3xl'\n      | 'spacer4xl';\n    md?:\n      | 'spacerNone'\n      | 'spacerXs'\n      | 'spacerSm'\n      | 'spacerMd'\n      | 'spacerLg'\n      | 'spacerXl'\n      | 'spacer2xl'\n      | 'spacer3xl'\n      | 'spacer4xl';\n    lg?:\n      | 'spacerNone'\n      | 'spacerXs'\n      | 'spacerSm'\n      | 'spacerMd'\n      | 'spacerLg'\n      | 'spacerXl'\n      | 'spacer2xl'\n      | 'spacer3xl'\n      | 'spacer4xl';\n    xl?:\n      | 'spacerNone'\n      | 'spacerXs'\n      | 'spacerSm'\n      | 'spacerMd'\n      | 'spacerLg'\n      | 'spacerXl'\n      | 'spacer2xl'\n      | 'spacer3xl'\n      | 'spacer4xl';\n    '2xl'?:\n      | 'spacerNone'\n      | 'spacerXs'\n      | 'spacerSm'\n      | 'spacerMd'\n      | 'spacerLg'\n      | 'spacerXl'\n      | 'spacer2xl'\n      | 'spacer3xl'\n      | 'spacer4xl';\n  };\n  /** Space items at various breakpoints */\n  spaceItems?: {\n    default?:\n      | 'spaceItemsNone'\n      | 'spaceItemsXs'\n      | 'spaceItemsSm'\n      | 'spaceItemsMd'\n      | 'spaceItemsLg'\n      | 'spaceItemsXl'\n      | 'spaceItems2xl'\n      | 'spaceItems3xl'\n      | 'spaceItems4xl';\n    sm?:\n      | 'spaceItemsNone'\n      | 'spaceItemsXs'\n      | 'spaceItemsSm'\n      | 'spaceItemsMd'\n      | 'spaceItemsLg'\n      | 'spaceItemsXl'\n      | 'spaceItems2xl'\n      | 'spaceItems3xl'\n      | 'spaceItems4xl';\n    md?:\n      | 'spaceItemsNone'\n      | 'spaceItemsXs'\n      | 'spaceItemsSm'\n      | 'spaceItemsMd'\n      | 'spaceItemsLg'\n      | 'spaceItemsXl'\n      | 'spaceItems2xl'\n      | 'spaceItems3xl'\n      | 'spaceItems4xl';\n    lg?:\n      | 'spaceItemsNone'\n      | 'spaceItemsXs'\n      | 'spaceItemsSm'\n      | 'spaceItemsMd'\n      | 'spaceItemsLg'\n      | 'spaceItemsXl'\n      | 'spaceItems2xl'\n      | 'spaceItems3xl'\n      | 'spaceItems4xl';\n    xl?:\n      | 'spaceItemsNone'\n      | 'spaceItemsXs'\n      | 'spaceItemsSm'\n      | 'spaceItemsMd'\n      | 'spaceItemsLg'\n      | 'spaceItemsXl'\n      | 'spaceItems2xl'\n      | 'spaceItems3xl'\n      | 'spaceItems4xl';\n    '2xl'?:\n      | 'spaceItemsNone'\n      | 'spaceItemsXs'\n      | 'spaceItemsSm'\n      | 'spaceItemsMd'\n      | 'spaceItemsLg'\n      | 'spaceItemsXl'\n      | 'spaceItems2xl'\n      | 'spaceItems3xl'\n      | 'spaceItems4xl';\n  };\n  /** Whether to add flex: grow at various breakpoints */\n  grow?: {\n    default?: 'grow';\n    sm?: 'grow';\n    md?: 'grow';\n    lg?: 'grow';\n    xl?: 'grow';\n    '2xl'?: 'grow';\n  };\n  /** Whether to add flex: shrink at various breakpoints */\n  shrink?: {\n    default?: 'shrink';\n    sm?: 'shrink';\n    md?: 'shrink';\n    lg?: 'shrink';\n    xl?: 'shrink';\n    '2xl'?: 'shrink';\n  };\n  /** Value to add for flex property at various breakpoints */\n  flex?: {\n    default?: 'flexDefault' | 'flexNone' | 'flex_1' | 'flex_2' | 'flex_3' | 'flex_4';\n    sm?: 'flexDefault' | 'flexNone' | 'flex_1' | 'flex_2' | 'flex_3' | 'flex_4';\n    md?: 'flexDefault' | 'flexNone' | 'flex_1' | 'flex_2' | 'flex_3' | 'flex_4';\n    lg?: 'flexDefault' | 'flexNone' | 'flex_1' | 'flex_2' | 'flex_3' | 'flex_4';\n    xl?: 'flexDefault' | 'flexNone' | 'flex_1' | 'flex_2' | 'flex_3' | 'flex_4';\n    '2xl'?: 'flexDefault' | 'flexNone' | 'flex_1' | 'flex_2' | 'flex_3' | 'flex_4';\n  };\n  /** Value to add for flex-direction property at various breakpoints */\n  direction?: {\n    default?: 'column' | 'columnReverse' | 'row' | 'rowReverse';\n    sm?: 'column' | 'columnReverse' | 'row' | 'rowReverse';\n    md?: 'column' | 'columnReverse' | 'row' | 'rowReverse';\n    lg?: 'column' | 'columnReverse' | 'row' | 'rowReverse';\n    xl?: 'column' | 'columnReverse' | 'row' | 'rowReverse';\n    '2xl'?: 'column' | 'columnReverse' | 'row' | 'rowReverse';\n  };\n  /** Value to add for align-items property at various breakpoints */\n  alignItems?: {\n    default?:\n      | 'alignItemsFlexStart'\n      | 'alignItemsFlexEnd'\n      | 'alignItemsCenter'\n      | 'alignItemsStretch'\n      | 'alignItemsBaseline';\n    sm?: 'alignItemsFlexStart' | 'alignItemsFlexEnd' | 'alignItemsCenter' | 'alignItemsStretch' | 'alignItemsBaseline';\n    md?: 'alignItemsFlexStart' | 'alignItemsFlexEnd' | 'alignItemsCenter' | 'alignItemsStretch' | 'alignItemsBaseline';\n    lg?: 'alignItemsFlexStart' | 'alignItemsFlexEnd' | 'alignItemsCenter' | 'alignItemsStretch' | 'alignItemsBaseline';\n    xl?: 'alignItemsFlexStart' | 'alignItemsFlexEnd' | 'alignItemsCenter' | 'alignItemsStretch' | 'alignItemsBaseline';\n    '2xl'?:\n      | 'alignItemsFlexStart'\n      | 'alignItemsFlexEnd'\n      | 'alignItemsCenter'\n      | 'alignItemsStretch'\n      | 'alignItemsBaseline';\n  };\n  /** Value to add for align-content property at various breakpoints */\n  alignContent?: {\n    default?:\n      | 'alignContentFlexStart'\n      | 'alignContentFlexEnd'\n      | 'alignContentCenter'\n      | 'alignContentStretch'\n      | 'alignContentSpaceBetween'\n      | 'alignContentSpaceAround';\n    sm?:\n      | 'alignContentFlexStart'\n      | 'alignContentFlexEnd'\n      | 'alignContentCenter'\n      | 'alignContentStretch'\n      | 'alignContentSpaceBetween'\n      | 'alignContentSpaceAround';\n    md?:\n      | 'alignContentFlexStart'\n      | 'alignContentFlexEnd'\n      | 'alignContentCenter'\n      | 'alignContentStretch'\n      | 'alignContentSpaceBetween'\n      | 'alignContentSpaceAround';\n    lg?:\n      | 'alignContentFlexStart'\n      | 'alignContentFlexEnd'\n      | 'alignContentCenter'\n      | 'alignContentStretch'\n      | 'alignContentSpaceBetween'\n      | 'alignContentSpaceAround';\n    xl?:\n      | 'alignContentFlexStart'\n      | 'alignContentFlexEnd'\n      | 'alignContentCenter'\n      | 'alignContentStretch'\n      | 'alignContentSpaceBetween'\n      | 'alignContentSpaceAround';\n    '2xl'?:\n      | 'alignContentFlexStart'\n      | 'alignContentFlexEnd'\n      | 'alignContentCenter'\n      | 'alignContentStretch'\n      | 'alignContentSpaceBetween'\n      | 'alignContentSpaceAround';\n  };\n  /** Value to add for align-self property at various breakpoints */\n  alignSelf?: {\n    default?: 'alignSelfFlexStart' | 'alignSelfFlexEnd' | 'alignSelfCenter' | 'alignSelfStretch' | 'alignSelfBaseline';\n    sm?: 'alignSelfFlexStart' | 'alignSelfFlexEnd' | 'alignSelfCenter' | 'alignSelfStretch' | 'alignSelfBaseline';\n    md?: 'alignSelfFlexStart' | 'alignSelfFlexEnd' | 'alignSelfCenter' | 'alignSelfStretch' | 'alignSelfBaseline';\n    lg?: 'alignSelfFlexStart' | 'alignSelfFlexEnd' | 'alignSelfCenter' | 'alignSelfStretch' | 'alignSelfBaseline';\n    xl?: 'alignSelfFlexStart' | 'alignSelfFlexEnd' | 'alignSelfCenter' | 'alignSelfStretch' | 'alignSelfBaseline';\n    '2xl'?: 'alignSelfFlexStart' | 'alignSelfFlexEnd' | 'alignSelfCenter' | 'alignSelfStretch' | 'alignSelfBaseline';\n  };\n  /** Value to use for margin: auto at various breakpoints */\n  align?: {\n    default?: 'alignLeft' | 'alignRight';\n    sm?: 'alignLeft' | 'alignRight';\n    md?: 'alignLeft' | 'alignRight';\n    lg?: 'alignLeft' | 'alignRight';\n    xl?: 'alignLeft' | 'alignRight';\n    '2xl'?: 'alignLeft' | 'alignRight';\n  };\n  /** Value to add for justify-content property at various breakpoints */\n  justifyContent?: {\n    default?:\n      | 'justifyContentFlexStart'\n      | 'justifyContentFlexEnd'\n      | 'justifyContentCenter'\n      | 'justifyContentSpaceBetween'\n      | 'justifyContentSpaceAround'\n      | 'justifyContentSpaceEvenly';\n    sm?:\n      | 'justifyContentFlexStart'\n      | 'justifyContentFlexEnd'\n      | 'justifyContentCenter'\n      | 'justifyContentSpaceBetween'\n      | 'justifyContentSpaceAround'\n      | 'justifyContentSpaceEvenly';\n    md?:\n      | 'justifyContentFlexStart'\n      | 'justifyContentFlexEnd'\n      | 'justifyContentCenter'\n      | 'justifyContentSpaceBetween'\n      | 'justifyContentSpaceAround'\n      | 'justifyContentSpaceEvenly';\n    lg?:\n      | 'justifyContentFlexStart'\n      | 'justifyContentFlexEnd'\n      | 'justifyContentCenter'\n      | 'justifyContentSpaceBetween'\n      | 'justifyContentSpaceAround'\n      | 'justifyContentSpaceEvenly';\n    xl?:\n      | 'justifyContentFlexStart'\n      | 'justifyContentFlexEnd'\n      | 'justifyContentCenter'\n      | 'justifyContentSpaceBetween'\n      | 'justifyContentSpaceAround'\n      | 'justifyContentSpaceEvenly';\n    '2xl'?:\n      | 'justifyContentFlexStart'\n      | 'justifyContentFlexEnd'\n      | 'justifyContentCenter'\n      | 'justifyContentSpaceBetween'\n      | 'justifyContentSpaceAround'\n      | 'justifyContentSpaceEvenly';\n  };\n  /** Value to set to display property at various breakpoints */\n  display?: {\n    default?: 'inlineFlex';\n    sm?: 'flex' | 'inlineFlex';\n    md?: 'flex' | 'inlineFlex';\n    lg?: 'flex' | 'inlineFlex';\n    xl?: 'flex' | 'inlineFlex';\n    '2xl'?: 'flex' | 'inlineFlex';\n  };\n  /** Whether to set width: 100% at various breakpoints */\n  fullWidth?: {\n    default?: 'fullWidth';\n    sm?: 'fullWidth';\n    md?: 'fullWidth';\n    lg?: 'fullWidth';\n    xl?: 'fullWidth';\n    '2xl'?: 'fullWidth';\n  };\n  /** Value to set for flex-wrap property at various breakpoints */\n  flexWrap?: {\n    default?: 'wrap' | 'wrapReverse' | 'nowrap';\n    sm?: 'wrap' | 'wrapReverse' | 'nowrap';\n    md?: 'wrap' | 'wrapReverse' | 'nowrap';\n    lg?: 'wrap' | 'wrapReverse' | 'nowrap';\n    xl?: 'wrap' | 'wrapReverse' | 'nowrap';\n    '2xl'?: 'wrap' | 'wrapReverse' | 'nowrap';\n  };\n  /** Modifies the flex layout element order property */\n  order?: {\n    default?: string;\n    md?: string;\n    lg?: string;\n    xl?: string;\n    '2xl'?: string;\n  };\n  /** Sets the base component to render. defaults to div */\n  component?: React.ElementType<any> | React.ComponentType<any>;\n}\n\nexport const Flex: React.FunctionComponent<FlexProps> = ({\n  children = null,\n  className = '',\n  component = 'div',\n  spacer,\n  spaceItems,\n  grow,\n  shrink,\n  flex,\n  direction,\n  alignItems,\n  alignContent,\n  alignSelf,\n  align,\n  justifyContent,\n  display,\n  fullWidth,\n  flexWrap,\n  order,\n  style,\n  ...props\n}: FlexProps) => {\n  const Component: any = component;\n\n  return (\n    <Component\n      className={css(\n        styles.flex,\n        formatBreakpointMods(spacer, styles),\n        formatBreakpointMods(spaceItems, styles),\n        formatBreakpointMods(grow, styles),\n        formatBreakpointMods(shrink, styles),\n        formatBreakpointMods(flex, styles),\n        formatBreakpointMods(direction, styles),\n        formatBreakpointMods(alignItems, styles),\n        formatBreakpointMods(alignContent, styles),\n        formatBreakpointMods(alignSelf, styles),\n        formatBreakpointMods(align, styles),\n        formatBreakpointMods(justifyContent, styles),\n        formatBreakpointMods(display, styles),\n        formatBreakpointMods(fullWidth, styles),\n        formatBreakpointMods(flexWrap, styles),\n        className\n      )}\n      style={\n        style || order ? { ...style, ...setBreakpointCssVars(order, flexToken.l_flex_item_Order.name) } : undefined\n      }\n      {...props}\n    >\n      {children}\n    </Component>\n  );\n};\nFlex.displayName = 'Flex';\n"]},"metadata":{},"sourceType":"module"}