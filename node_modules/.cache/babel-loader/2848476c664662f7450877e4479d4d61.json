{"ast":null,"code":"import _slicedToArray from\"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from'react';import{StateCard}from'./StateCard';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Spinner=function Spinner(){return/*#__PURE__*/_jsxs(\"span\",{className:\"pf-c-spinner\",role:\"progressbar\",\"aria-valuetext\":\"Loading...\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"pf-c-spinner__clipper\"}),/*#__PURE__*/_jsx(\"span\",{className:\"pf-c-spinner__lead-ball\"}),/*#__PURE__*/_jsx(\"span\",{className:\"pf-c-spinner__tail-ball\"})]});};/**\n * Loading State component with delayed render. It will be displayed after defined waiting time\n * to prevent flashing user experience when spinner is displayed and almost immediately replaced.\n *\n * @param delayMilliseconds - Waiting time before component gets rendered\n * @param title - Title subject, for example \"Project List\"\n */export var LoadingStateCard=function LoadingStateCard(_ref){var _ref$delayMillisecond=_ref.delayMilliseconds,delayMilliseconds=_ref$delayMillisecond===void 0?750:_ref$delayMillisecond,title=_ref.title;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),show=_useState2[0],setShow=_useState2[1];useEffect(function(){var timer=setTimeout(function(){return setShow(true);},delayMilliseconds);return function(){return clearTimeout(timer);};},[delayMilliseconds]);if(show){return/*#__PURE__*/_jsx(StateCard,{title:\"Loading \".concat(title),icon:Spinner});}return null;};","map":{"version":3,"names":["useEffect","useState","StateCard","Spinner","LoadingStateCard","delayMilliseconds","title","show","setShow","timer","setTimeout","clearTimeout"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/EmptyStates/LoadingStateCard.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { StateCard } from './StateCard';\n\nconst Spinner = () => (\n  <span className=\"pf-c-spinner\" role=\"progressbar\" aria-valuetext=\"Loading...\">\n    <span className=\"pf-c-spinner__clipper\" />\n    <span className=\"pf-c-spinner__lead-ball\" />\n    <span className=\"pf-c-spinner__tail-ball\" />\n  </span>\n);\n\ninterface ILoadingStateCard {\n  delayMilliseconds?: number;\n  title: string;\n}\n\n/**\n * Loading State component with delayed render. It will be displayed after defined waiting time\n * to prevent flashing user experience when spinner is displayed and almost immediately replaced.\n *\n * @param delayMilliseconds - Waiting time before component gets rendered\n * @param title - Title subject, for example \"Project List\"\n */\nexport const LoadingStateCard = ({ delayMilliseconds = 750, title }: ILoadingStateCard) => {\n  const [show, setShow] = useState<boolean>(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setShow(true), delayMilliseconds);\n\n    return () => clearTimeout(timer);\n  }, [delayMilliseconds]);\n\n  if (show) {\n    return <StateCard title={`Loading ${title}`} icon={Spinner}></StateCard>;\n  }\n  return null;\n};\n"],"mappings":"qIAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,SAAT,KAA0B,aAA1B,C,wFAEA,GAAMC,QAAO,CAAG,QAAVA,QAAU,sBACd,cAAM,SAAS,CAAC,cAAhB,CAA+B,IAAI,CAAC,aAApC,CAAkD,iBAAe,YAAjE,wBACE,aAAM,SAAS,CAAC,uBAAhB,EADF,cAEE,aAAM,SAAS,CAAC,yBAAhB,EAFF,cAGE,aAAM,SAAS,CAAC,yBAAhB,EAHF,GADc,EAAhB,CAaA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMC,iBAAgB,CAAG,QAAnBA,iBAAmB,MAA2D,gCAAxDC,iBAAwD,CAAxDA,iBAAwD,gCAApC,GAAoC,uBAA/BC,KAA+B,MAA/BA,KAA+B,CACzF,cAAwBL,QAAQ,CAAU,KAAV,CAAhC,wCAAOM,IAAP,eAAaC,OAAb,eAEAR,SAAS,CAAC,UAAM,CACd,GAAMS,MAAK,CAAGC,UAAU,CAAC,iBAAMF,QAAO,CAAC,IAAD,CAAb,EAAD,CAAsBH,iBAAtB,CAAxB,CAEA,MAAO,kBAAMM,aAAY,CAACF,KAAD,CAAlB,EAAP,CACD,CAJQ,CAIN,CAACJ,iBAAD,CAJM,CAAT,CAMA,GAAIE,IAAJ,CAAU,CACR,mBAAO,KAAC,SAAD,EAAW,KAAK,mBAAaD,KAAb,CAAhB,CAAsC,IAAI,CAAEH,OAA5C,EAAP,CACD,CACD,MAAO,KAAP,CACD,CAbM"},"metadata":{},"sourceType":"module"}