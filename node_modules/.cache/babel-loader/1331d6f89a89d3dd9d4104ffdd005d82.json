{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ContextSelector/context-selector';\nimport { css } from '@patternfly/react-styles';\nexport class ContextSelectorMenuList extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.refsCollection = [];\n\n    this.sendRef = (index, ref) => {\n      this.refsCollection[index] = ref;\n    };\n\n    this.render = () => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const _a = this.props,\n            {\n        className,\n        isOpen,\n        children\n      } = _a,\n            props = __rest(_a, [\"className\", \"isOpen\", \"children\"]);\n\n      return React.createElement(\"ul\", Object.assign({\n        className: css(styles.contextSelectorMenuList, className),\n        hidden: !isOpen,\n        role: \"menu\"\n      }, props), this.extendChildren());\n    };\n  }\n\n  extendChildren() {\n    return React.Children.map(this.props.children, (child, index) => React.cloneElement(child, {\n      sendRef: this.sendRef,\n      index\n    }));\n  }\n\n}\nContextSelectorMenuList.displayName = 'ContextSelectorMenuList';\nContextSelectorMenuList.defaultProps = {\n  children: null,\n  className: '',\n  isOpen: true\n};","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,0EAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AAWA,OAAM,MAAOC,uBAAP,SAAuCH,KAAK,CAACI,SAA7C,CAAoF;EAA1FC;;IAQE,sBAAiB,EAAjB;;IAEA,eAAU,CAACC,KAAD,EAAgBC,GAAhB,KAA4B;MACpC,KAAKC,cAAL,CAAoBF,KAApB,IAA6BC,GAA7B;IACD,CAFD;;IAaA,cAAS,MAAK;MACZ;MACA,MAAME,KAA4C,KAAKC,KAAvD;MAAA,MAAM;QAAEC,SAAF;QAAaC,MAAb;QAAqBC;MAArB,IAA6BJ,EAAnC;MAAA,MAAwCC,KAAK,cAAvC,mCAAuC,CAA7C;;MACA,OACEV;QAAIW,SAAS,EAAET,GAAG,CAACD,MAAM,CAACa,uBAAR,EAAiCH,SAAjC,CAAlB;QAA+DI,MAAM,EAAE,CAACH,MAAxE;QAAgFI,IAAI,EAAC;MAArF,GAAgGN,KAAhG,GACG,KAAKO,cAAL,EADH,CADF;IAKD,CARD;EASD;;EAlBCA,cAAc;IACZ,OAAOjB,KAAK,CAACkB,QAAN,CAAeC,GAAf,CAAmB,KAAKT,KAAL,CAAWG,QAA9B,EAAwC,CAACO,KAAD,EAAQd,KAAR,KAC7CN,KAAK,CAACqB,YAAN,CAAmBD,KAAnB,EAAqD;MACnDE,OAAO,EAAE,KAAKA,OADqC;MAEnDhB;IAFmD,CAArD,CADK,CAAP;EAMD;;AArBuF;AACjFH,sCAAc,yBAAd;AACAA,uCAA6C;EAClDU,QAAQ,EAAE,IADwC;EAElDF,SAAS,EAAE,EAFuC;EAGlDC,MAAM,EAAE;AAH0C,CAA7C","names":["React","styles","css","ContextSelectorMenuList","Component","constructor","index","ref","refsCollection","_a","props","className","isOpen","children","contextSelectorMenuList","hidden","role","extendChildren","Children","map","child","cloneElement","sendRef"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/ContextSelector/ContextSelectorMenuList.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ContextSelector/context-selector';\nimport { css } from '@patternfly/react-styles';\n\nexport interface ContextSelectorMenuListProps {\n  /** Content rendered inside the Context Selector Menu */\n  children?: React.ReactNode;\n  /** Classess applied to root element of Context Selector menu */\n  className?: string;\n  /** Flag to indicate if Context Selector menu is opened */\n  isOpen?: boolean;\n}\n\nexport class ContextSelectorMenuList extends React.Component<ContextSelectorMenuListProps> {\n  static displayName = 'ContextSelectorMenuList';\n  static defaultProps: ContextSelectorMenuListProps = {\n    children: null as React.ReactNode,\n    className: '',\n    isOpen: true\n  };\n\n  refsCollection = [] as any;\n\n  sendRef = (index: number, ref: any) => {\n    this.refsCollection[index] = ref;\n  };\n\n  extendChildren() {\n    return React.Children.map(this.props.children, (child, index) =>\n      React.cloneElement(child as React.ReactElement<any>, {\n        sendRef: this.sendRef,\n        index\n      })\n    );\n  }\n\n  render = () => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { className, isOpen, children, ...props } = this.props;\n    return (\n      <ul className={css(styles.contextSelectorMenuList, className)} hidden={!isOpen} role=\"menu\" {...props}>\n        {this.extendChildren()}\n      </ul>\n    );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}