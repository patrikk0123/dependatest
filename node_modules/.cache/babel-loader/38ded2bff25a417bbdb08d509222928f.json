{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/HelperText/helper-text';\nimport { css } from '@patternfly/react-styles';\nexport const HelperText = _a => {\n  var {\n    children,\n    className,\n    component = 'div',\n    id,\n    isLiveRegion = false\n  } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"component\", \"id\", \"isLiveRegion\"]);\n\n  const Component = component;\n  return React.createElement(Component, Object.assign({\n    id: id,\n    className: css(styles.helperText, className)\n  }, isLiveRegion && {\n    'aria-live': 'polite'\n  }, props), children);\n};\nHelperText.displayName = 'HelperText';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,gEAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AAoBA,OAAO,MAAMC,UAAU,GAA8CC,EAAD,IAO9C;MAP+C;IACnEC,QADmE;IAEnEC,SAFmE;IAGnEC,SAAS,GAAG,KAHuD;IAInEC,EAJmE;IAKnEC,YAAY,GAAG;EALoD,IAK/CL;MACjBM,KAAK,cAN2D,4DAM3D;;EAER,MAAMC,SAAS,GAAGJ,SAAlB;EACA,OACEP,oBAACW,SAAD,EAAUC;IACRJ,EAAE,EAAEA,EADI;IAERF,SAAS,EAAEJ,GAAG,CAACD,MAAM,CAACY,UAAR,EAAoBP,SAApB;EAFN,GAGHG,YAAY,IAAI;IAAE,aAAa;EAAf,CAHb,EAIJC,KAJI,CAAV,EAMGL,QANH,CADF;AAUD,CAnBM;AAoBPF,UAAU,CAACW,WAAX,GAAyB,YAAzB","names":["React","styles","css","HelperText","_a","children","className","component","id","isLiveRegion","props","Component","Object","helperText","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/HelperText/HelperText.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/HelperText/helper-text';\nimport { css } from '@patternfly/react-styles';\n\nexport interface HelperTextProps extends React.HTMLProps<HTMLDivElement | HTMLUListElement> {\n  /** Content rendered inside the helper text container. */\n  children?: React.ReactNode;\n  /** Additional classes applied to the helper text container. */\n  className?: string;\n  /** Component type of the helper text container */\n  component?: 'div' | 'ul';\n  /** ID for the helper text container. The value of this prop can be passed into a form component's\n   * aria-describedby prop when you intend for all helper text items to be announced to\n   * assistive technologies.\n   */\n  id?: string;\n  /** Flag for indicating whether the helper text container is a live region. Use this prop when you\n   * expect or intend for any helper text items within the container to be dynamically updated.\n   */\n  isLiveRegion?: boolean;\n}\n\nexport const HelperText: React.FunctionComponent<HelperTextProps> = ({\n  children,\n  className,\n  component = 'div',\n  id,\n  isLiveRegion = false,\n  ...props\n}: HelperTextProps) => {\n  const Component = component as any;\n  return (\n    <Component\n      id={id}\n      className={css(styles.helperText, className)}\n      {...(isLiveRegion && { 'aria-live': 'polite' })}\n      {...props}\n    >\n      {children}\n    </Component>\n  );\n};\nHelperText.displayName = 'HelperText';\n"]},"metadata":{},"sourceType":"module"}