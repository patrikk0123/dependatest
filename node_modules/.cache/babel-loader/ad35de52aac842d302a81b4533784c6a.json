{"ast":null,"code":"import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Wizard/wizard';\nimport { css } from '@patternfly/react-styles';\nexport var WizardNav = function WizardNav(_ref) {\n  var children = _ref.children,\n      ariaLabel = _ref['aria-label'],\n      ariaLabelledBy = _ref['aria-labelledby'],\n      _ref$isOpen = _ref.isOpen,\n      isOpen = _ref$isOpen === void 0 ? false : _ref$isOpen,\n      _ref$returnList = _ref.returnList,\n      returnList = _ref$returnList === void 0 ? false : _ref$returnList;\n  var innerList = React.createElement(\"ol\", {\n    className: css(styles.wizardNavList)\n  }, children);\n\n  if (returnList) {\n    return innerList;\n  }\n\n  return React.createElement(\"nav\", {\n    className: css(styles.wizardNav, isOpen && styles.modifiers.expanded),\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy\n  }, React.createElement(\"ol\", {\n    className: css(styles.wizardNavList)\n  }, children));\n};\nWizardNav.displayName = 'WizardNav';","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,uDAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AAeA,OAAO,IAAMC,SAAS,GAA4C,SAArDA,SAAqD,OAM7C;EAAA,IALnBC,QAKmB,QALnBA,QAKmB;EAAA,IAJLC,SAIK,QAJnB,YAImB;EAAA,IAHAC,cAGA,QAHnB,iBAGmB;EAAA,uBAFnBC,MAEmB;EAAA,IAFnBA,MAEmB,4BAFV,KAEU;EAAA,2BADnBC,UACmB;EAAA,IADnBA,UACmB,gCADN,KACM;EACnB,IAAMC,SAAS,GAAGT;IAAIU,SAAS,EAAER,GAAG,CAACD,MAAM,CAACU,aAAR;EAAlB,GAA2CP,QAA3C,CAAlB;;EAEA,IAAII,UAAJ,EAAgB;IACd,OAAOC,SAAP;EACD;;EAED,OACET;IACEU,SAAS,EAAER,GAAG,CAACD,MAAM,CAACW,SAAR,EAAmBL,MAAM,IAAIN,MAAM,CAACY,SAAP,CAAiBC,QAA9C,CADhB;IACuE,cACzDT,SAFd;IAEuB,mBACJC;EAHnB,GAKEN;IAAIU,SAAS,EAAER,GAAG,CAACD,MAAM,CAACU,aAAR;EAAlB,GAA2CP,QAA3C,CALF,CADF;AASD,CAtBM;AAuBPD,SAAS,CAACY,WAAV,GAAwB,WAAxB","names":["React","styles","css","WizardNav","children","ariaLabel","ariaLabelledBy","isOpen","returnList","innerList","className","wizardNavList","wizardNav","modifiers","expanded","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Wizard/WizardNav.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Wizard/wizard';\nimport { css } from '@patternfly/react-styles';\n\nexport interface WizardNavProps {\n  /** children should be WizardNavItem components */\n  children?: any;\n  /** Aria-label applied to the nav element */\n  'aria-label'?: string;\n  /** Sets the aria-labelledby attribute on the nav element */\n  'aria-labelledby'?: string;\n  /** Whether the nav is expanded */\n  isOpen?: boolean;\n  /** True to return the inner list without the wrapping nav element */\n  returnList?: boolean;\n}\n\nexport const WizardNav: React.FunctionComponent<WizardNavProps> = ({\n  children,\n  'aria-label': ariaLabel,\n  'aria-labelledby': ariaLabelledBy,\n  isOpen = false,\n  returnList = false\n}: WizardNavProps) => {\n  const innerList = <ol className={css(styles.wizardNavList)}>{children}</ol>;\n\n  if (returnList) {\n    return innerList;\n  }\n\n  return (\n    <nav\n      className={css(styles.wizardNav, isOpen && styles.modifiers.expanded)}\n      aria-label={ariaLabel}\n      aria-labelledby={ariaLabelledBy}\n    >\n      <ol className={css(styles.wizardNavList)}>{children}</ol>\n    </nav>\n  );\n};\nWizardNav.displayName = 'WizardNav';\n"]},"metadata":{},"sourceType":"module"}