{"ast":null,"code":"var _jsxFileName = \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/SearchSelect/SearchSelect.tsx\";\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchSelect = _ref => {\n  let {\n    callback\n  } = _ref;\n  const defaultSelectOptions = [{\n    value: 'Build'\n  }, {\n    value: 'Option'\n  }, {\n    value: 'Project'\n  }, {\n    value: 'Version'\n  }];\n  const [selectOptions, setSelectOptions] = useState(defaultSelectOptions);\n  const [isSelectOpen, setIsSelectOpen] = useState(false);\n  const [selected, setSelected] = useState();\n  useEffect(() => {\n    callback({}).then(response => {\n      console.log(response.data);\n    });\n  }, [callback]);\n\n  const clearSelection = () => {\n    setIsSelectOpen(false);\n    setSelectOptions(defaultSelectOptions);\n    setSelected('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Select, {\n    variant: SelectVariant.typeahead,\n    onToggle: isOpen => {\n      setIsSelectOpen(isOpen);\n    },\n    onSelect: (event, selection, isPlaceholder) => {\n      if (isPlaceholder) clearSelection();else {\n        setSelected(selection);\n        setIsSelectOpen(false);\n      }\n    },\n    onClear: clearSelection,\n    selections: selected,\n    isOpen: isSelectOpen,\n    children: selectOptions.map((option, index) => /*#__PURE__*/_jsxDEV(SelectOption, {\n      value: option.value\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["Select","SelectOption","SelectVariant","useEffect","useState","SearchSelect","callback","defaultSelectOptions","value","selectOptions","setSelectOptions","isSelectOpen","setIsSelectOpen","selected","setSelected","then","response","console","log","data","clearSelection","typeahead","isOpen","event","selection","isPlaceholder","map","option","index"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/SearchSelect/SearchSelect.tsx"],"sourcesContent":["import { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { useEffect, useState } from 'react';\n\ninterface ISearchSelect {\n  callback: Function;\n}\n\nexport const SearchSelect = ({ callback }: ISearchSelect) => {\n  const defaultSelectOptions = [{ value: 'Build' }, { value: 'Option' }, { value: 'Project' }, { value: 'Version' }];\n  const [selectOptions, setSelectOptions] = useState<any>(defaultSelectOptions);\n  const [isSelectOpen, setIsSelectOpen] = useState<boolean>(false);\n  const [selected, setSelected] = useState<any>();\n\n  useEffect(() => {\n    callback({}).then((response: any) => {\n      console.log(response.data);\n    });\n  }, [callback]);\n\n  const clearSelection = () => {\n    setIsSelectOpen(false);\n    setSelectOptions(defaultSelectOptions);\n    setSelected('');\n  };\n\n  return (\n    <Select\n      variant={SelectVariant.typeahead}\n      onToggle={(isOpen) => {\n        setIsSelectOpen(isOpen);\n      }}\n      onSelect={(event, selection, isPlaceholder) => {\n        if (isPlaceholder) clearSelection();\n        else {\n          setSelected(selection);\n          setIsSelectOpen(false);\n        }\n      }}\n      onClear={clearSelection}\n      selections={selected}\n      isOpen={isSelectOpen}\n    >\n      {selectOptions.map((option: any, index: any) => (\n        <SelectOption key={index} value={option.value} />\n      ))}\n    </Select>\n  );\n};\n"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,YAAjB,EAA+BC,aAA/B,QAAoD,wBAApD;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAMA,OAAO,MAAMC,YAAY,GAAG,QAAiC;EAAA,IAAhC;IAAEC;EAAF,CAAgC;EAC3D,MAAMC,oBAAoB,GAAG,CAAC;IAAEC,KAAK,EAAE;EAAT,CAAD,EAAqB;IAAEA,KAAK,EAAE;EAAT,CAArB,EAA0C;IAAEA,KAAK,EAAE;EAAT,CAA1C,EAAgE;IAAEA,KAAK,EAAE;EAAT,CAAhE,CAA7B;EACA,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAMG,oBAAN,CAAlD;EACA,MAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAU,KAAV,CAAhD;EACA,MAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,EAAxC;EAEAD,SAAS,CAAC,MAAM;IACdG,QAAQ,CAAC,EAAD,CAAR,CAAaS,IAAb,CAAmBC,QAAD,IAAmB;MACnCC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;IACD,CAFD;EAGD,CAJQ,EAIN,CAACb,QAAD,CAJM,CAAT;;EAMA,MAAMc,cAAc,GAAG,MAAM;IAC3BR,eAAe,CAAC,KAAD,CAAf;IACAF,gBAAgB,CAACH,oBAAD,CAAhB;IACAO,WAAW,CAAC,EAAD,CAAX;EACD,CAJD;;EAMA,oBACE,QAAC,MAAD;IACE,OAAO,EAAEZ,aAAa,CAACmB,SADzB;IAEE,QAAQ,EAAGC,MAAD,IAAY;MACpBV,eAAe,CAACU,MAAD,CAAf;IACD,CAJH;IAKE,QAAQ,EAAE,CAACC,KAAD,EAAQC,SAAR,EAAmBC,aAAnB,KAAqC;MAC7C,IAAIA,aAAJ,EAAmBL,cAAc,GAAjC,KACK;QACHN,WAAW,CAACU,SAAD,CAAX;QACAZ,eAAe,CAAC,KAAD,CAAf;MACD;IACF,CAXH;IAYE,OAAO,EAAEQ,cAZX;IAaE,UAAU,EAAEP,QAbd;IAcE,MAAM,EAAEF,YAdV;IAAA,UAgBGF,aAAa,CAACiB,GAAd,CAAkB,CAACC,MAAD,EAAcC,KAAd,kBACjB,QAAC,YAAD;MAA0B,KAAK,EAAED,MAAM,CAACnB;IAAxC,GAAmBoB,KAAnB;MAAA;MAAA;MAAA;IAAA,QADD;EAhBH;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CAxCM"},"metadata":{},"sourceType":"module"}