{"ast":null,"code":"import * as React from 'react';\nexport var AccordionItem = function AccordionItem(_ref) {\n  var _ref$children = _ref.children,\n      children = _ref$children === void 0 ? null : _ref$children;\n  return React.createElement(React.Fragment, null, children);\n};\nAccordionItem.displayName = 'AccordionItem';","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAOA,OAAO,IAAMC,aAAa,GAAgD,SAA7DA,aAA6D;EAAA,yBAAGC,QAAH;EAAA,IAAGA,QAAH,8BAAc,IAAd;EAAA,OACxEF,oBAACA,KAAK,CAACG,QAAP,EAAe,IAAf,EAAiBD,QAAjB,CADwE;AAAA,CAAnE;AAGPD,aAAa,CAACG,WAAd,GAA4B,eAA5B","names":["React","AccordionItem","children","Fragment","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Accordion/AccordionItem.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport interface AccordionItemProps {\n  /** Content rendered inside the Accordion item  */\n  children?: React.ReactNode;\n}\n\nexport const AccordionItem: React.FunctionComponent<AccordionItemProps> = ({ children = null }: AccordionItemProps) => (\n  <React.Fragment>{children}</React.Fragment>\n);\nAccordionItem.displayName = 'AccordionItem';\n"]},"metadata":{},"sourceType":"module"}