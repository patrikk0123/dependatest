{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport { css } from '@patternfly/react-styles';\nimport StarIcon from '@patternfly/react-icons/dist/esm/icons/star-icon';\nimport { MenuContext, MenuItemContext } from './MenuContext';\n\nvar MenuItemActionBase = function MenuItemActionBase(_a) {\n  var _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      icon = _a.icon,\n      onClick = _a.onClick,\n      ariaLabel = _a['aria-label'],\n      _a$isFavorited = _a.isFavorited,\n      isFavorited = _a$isFavorited === void 0 ? null : _a$isFavorited,\n      isDisabled = _a.isDisabled,\n      actionId = _a.actionId,\n      innerRef = _a.innerRef,\n      props = __rest(_a, [\"className\", \"icon\", \"onClick\", 'aria-label', \"isFavorited\", \"isDisabled\", \"actionId\", \"innerRef\"]);\n\n  return React.createElement(MenuContext.Consumer, null, function (_ref) {\n    var onActionClick = _ref.onActionClick;\n    return React.createElement(MenuItemContext.Consumer, null, function (_ref2) {\n      var itemId = _ref2.itemId,\n          isDisabledContext = _ref2.isDisabled;\n\n      var onClickButton = function onClickButton(event) {\n        // event specified on the MenuItemAction\n        onClick && onClick(event); // event specified on the Menu\n\n        onActionClick && onActionClick(event, itemId, actionId);\n      };\n\n      return React.createElement(\"button\", Object.assign({\n        className: css(styles.menuItemAction, isFavorited !== null && styles.modifiers.favorite, isFavorited && styles.modifiers.favorited, className),\n        \"aria-label\": ariaLabel,\n        onClick: onClickButton\n      }, (isDisabled === true || isDisabledContext === true) && {\n        disabled: true\n      }, {\n        ref: innerRef,\n        tabIndex: -1\n      }, props), React.createElement(\"span\", {\n        className: css(styles.menuItemActionIcon)\n      }, icon === 'favorites' || isFavorited !== null ? React.createElement(StarIcon, {\n        \"aria-hidden\": true\n      }) : icon));\n    });\n  });\n};\n\nexport var MenuItemAction = React.forwardRef(function (props, ref) {\n  return React.createElement(MenuItemActionBase, Object.assign({}, props, {\n    innerRef: ref\n  }));\n});\nMenuItemAction.displayName = 'MenuItemAction';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,mDAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,QAAP,MAAqB,kDAArB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,eAA7C;;AAqBA,IAAMC,kBAAkB,GAAiD,SAAnEA,kBAAmE,CAACC,EAAD,EAU/C;qBAFhBA,GAPRC;MAAAA,sCAAY;MACZC,OAMQF,GANRE;MACAC,UAKQH,GALRG;MACcC,YAINJ,GAJR;uBAIQA,GAHRK;MAAAA,0CAAc;MACdC,aAEQN,GAFRM;MACAC,WACQP,GADRO;MACAC,WAAQR,GAARQ;MACGC,QAAKC,WATgE,mGAShE;;EACiB,OACzBjB,oBAACI,WAAW,CAACc,QAAb,EAAqB,IAArB,EACG;IAAA,IAAGC,aAAH,QAAGA,aAAH;IAAA,OACCnB,oBAACK,eAAe,CAACa,QAAjB,EAAyB,IAAzB,EACG,iBAA8C;MAAA,IAA3CE,MAA2C,SAA3CA,MAA2C;MAAA,IAAvBC,iBAAuB,SAAnCR,UAAmC;;MAC7C,IAAMS,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAe;QACnC;QACAb,OAAO,IAAIA,OAAO,CAACa,KAAD,CAAlB,CAFmC,CAGnC;;QACAJ,aAAa,IAAIA,aAAa,CAACI,KAAD,EAAQH,MAAR,EAAgBN,QAAhB,CAA9B;MACD,CALD;;MAMA,OACEd;QACEQ,SAAS,EAAEN,GAAG,CACZD,MAAM,CAACuB,cADK,EAEZZ,WAAW,KAAK,IAAhB,IAAwBX,MAAM,CAACwB,SAAP,CAAiBC,QAF7B,EAGZd,WAAW,IAAIX,MAAM,CAACwB,SAAP,CAAiBE,SAHpB,EAIZnB,SAJY,CADhB;QAMG,cACWG,SAPd;QAQED,OAAO,EAAEY;MARX,GASO,CAACT,UAAU,KAAK,IAAf,IAAuBQ,iBAAiB,KAAK,IAA9C,KAAuD;QAAEO,QAAQ,EAAE;MAAZ,CAT9D,EASiF;QAC/EC,GAAG,EAAEd,QAD0E;QAE/Ee,QAAQ,EAAE,CAAC;MAFoE,CATjF,EAYMd,KAZN,GAcEhB;QAAMQ,SAAS,EAAEN,GAAG,CAACD,MAAM,CAAC8B,kBAAR;MAApB,GACGtB,IAAI,KAAK,WAAT,IAAwBG,WAAW,KAAK,IAAxC,GAA+CZ,oBAACG,QAAD,EAAS;QAAA;MAAA,CAAT,CAA/C,GAA0EM,IAD7E,CAdF,CADF;IAoBD,CA5BH,CADD;EAAA,CADH,CADyB;AAmC1B,CA7CD;;AA+CA,OAAO,IAAMuB,cAAc,GAAGhC,KAAK,CAACiC,UAAN,CAAiB,UAACjB,KAAD,EAA6Ba,GAA7B;EAAA,OAC7C7B,oBAACM,kBAAD,EAAmB4B,kBAAKlB,KAAL,EAAU;IAAED,QAAQ,EAAEc;EAAZ,CAAV,CAAnB,CAD6C;AAAA,CAAjB,CAAvB;AAGPG,cAAc,CAACG,WAAf,GAA6B,gBAA7B","names":["React","styles","css","StarIcon","MenuContext","MenuItemContext","MenuItemActionBase","_a","className","icon","onClick","ariaLabel","isFavorited","isDisabled","actionId","innerRef","props","__rest","Consumer","onActionClick","itemId","isDisabledContext","onClickButton","event","menuItemAction","modifiers","favorite","favorited","disabled","ref","tabIndex","menuItemActionIcon","MenuItemAction","forwardRef","Object","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Menu/MenuItemAction.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport { css } from '@patternfly/react-styles';\nimport StarIcon from '@patternfly/react-icons/dist/esm/icons/star-icon';\nimport { MenuContext, MenuItemContext } from './MenuContext';\n\nexport interface MenuItemActionProps extends Omit<React.HTMLProps<HTMLButtonElement>, 'type' | 'ref'> {\n  /** Additional classes added to the action button */\n  className?: string;\n  /** The action icon to use */\n  icon?: 'favorites' | React.ReactNode;\n  /** Callback on action click, can also specify onActionClick on the Menu instead */\n  onClick?: (event?: any) => void;\n  /** Accessibility label */\n  'aria-label'?: string;\n  /** Flag indicating if the item is favorited */\n  isFavorited?: boolean;\n  /** Disables action, can also be specified on the MenuItem instead */\n  isDisabled?: boolean;\n  /** Identifies the action item in the onActionClick on the Menu */\n  actionId?: any;\n  /** Forwarded ref */\n  innerRef?: React.Ref<any>;\n}\n\nconst MenuItemActionBase: React.FunctionComponent<MenuItemActionProps> = ({\n  className = '',\n  icon,\n  onClick,\n  'aria-label': ariaLabel,\n  isFavorited = null,\n  isDisabled,\n  actionId,\n  innerRef,\n  ...props\n}: MenuItemActionProps) => (\n  <MenuContext.Consumer>\n    {({ onActionClick }) => (\n      <MenuItemContext.Consumer>\n        {({ itemId, isDisabled: isDisabledContext }) => {\n          const onClickButton = (event: any) => {\n            // event specified on the MenuItemAction\n            onClick && onClick(event);\n            // event specified on the Menu\n            onActionClick && onActionClick(event, itemId, actionId);\n          };\n          return (\n            <button\n              className={css(\n                styles.menuItemAction,\n                isFavorited !== null && styles.modifiers.favorite,\n                isFavorited && styles.modifiers.favorited,\n                className\n              )}\n              aria-label={ariaLabel}\n              onClick={onClickButton}\n              {...((isDisabled === true || isDisabledContext === true) && { disabled: true })}\n              ref={innerRef}\n              tabIndex={-1}\n              {...props}\n            >\n              <span className={css(styles.menuItemActionIcon)}>\n                {icon === 'favorites' || isFavorited !== null ? <StarIcon aria-hidden /> : icon}\n              </span>\n            </button>\n          );\n        }}\n      </MenuItemContext.Consumer>\n    )}\n  </MenuContext.Consumer>\n);\n\nexport const MenuItemAction = React.forwardRef((props: MenuItemActionProps, ref: React.Ref<HTMLButtonElement>) => (\n  <MenuItemActionBase {...props} innerRef={ref} />\n));\nMenuItemAction.displayName = 'MenuItemAction';\n"]},"metadata":{},"sourceType":"module"}