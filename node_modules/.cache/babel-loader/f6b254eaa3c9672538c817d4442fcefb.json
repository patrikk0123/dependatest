{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ContextSelector/context-selector';\nimport { css } from '@patternfly/react-styles';\nimport { ContextSelectorContext } from './contextSelectorConstants';\nexport class ContextSelectorItem extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.ref = React.createRef();\n  }\n\n  componentDidMount() {\n    /* eslint-disable-next-line */\n    this.props.sendRef(this.props.index, this.ref.current);\n  }\n\n  render() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const _a = this.props,\n          {\n      className,\n      children,\n      onClick,\n      isDisabled,\n      index,\n      sendRef,\n      href\n    } = _a,\n          props = __rest(_a, [\"className\", \"children\", \"onClick\", \"isDisabled\", \"index\", \"sendRef\", \"href\"]);\n\n    const Component = href ? 'a' : 'button';\n    const isDisabledLink = href && isDisabled;\n    return React.createElement(ContextSelectorContext.Consumer, null, _ref => {\n      let {\n        onSelect\n      } = _ref;\n      return React.createElement(\"li\", {\n        role: \"none\"\n      }, React.createElement(Component, Object.assign({\n        className: css(styles.contextSelectorMenuListItem, isDisabledLink && styles.modifiers.disabled, className),\n        ref: this.ref,\n        onClick: event => {\n          if (!isDisabled) {\n            onClick(event);\n            onSelect(event, children);\n          }\n        },\n        disabled: isDisabled && !href,\n        href: href\n      }, isDisabledLink && {\n        'aria-disabled': true,\n        tabIndex: -1\n      }, props), children));\n    });\n  }\n\n}\nContextSelectorItem.displayName = 'ContextSelectorItem';\nContextSelectorItem.defaultProps = {\n  children: null,\n  className: '',\n  isDisabled: false,\n  onClick: () => undefined,\n  index: undefined,\n  sendRef: () => {},\n  href: null\n};","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,0EAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,SAASC,sBAAT,QAAuC,4BAAvC;AAmBA,OAAM,MAAOC,mBAAP,SAAmCJ,KAAK,CAACK,SAAzC,CAA4E;EAAlFC;;IAYE,WAA8DN,KAAK,CAACO,SAAN,EAA9D;EAyCD;;EAvCCC,iBAAiB;IACf;IACA,KAAKC,KAAL,CAAWC,OAAX,CAAmB,KAAKD,KAAL,CAAWE,KAA9B,EAAqC,KAAKC,GAAL,CAASC,OAA9C;EACD;;EAEDC,MAAM;IACJ;IACA,MAAMC,KAA+E,KAAKN,KAA1F;IAAA,MAAM;MAAEO,SAAF;MAAaC,QAAb;MAAuBC,OAAvB;MAAgCC,UAAhC;MAA4CR,KAA5C;MAAmDD,OAAnD;MAA4DU;IAA5D,IAAgEL,EAAtE;IAAA,MAA2EN,KAAK,cAA1E,8EAA0E,CAAhF;;IACA,MAAMJ,SAAS,GAAGe,IAAI,GAAG,GAAH,GAAS,QAA/B;IACA,MAAMC,cAAc,GAAGD,IAAI,IAAID,UAA/B;IACA,OACEnB,oBAACG,sBAAsB,CAACmB,QAAxB,EAAgC,IAAhC,EACG;MAAA,IAAC;QAAEC;MAAF,CAAD;MAAA,OACCvB;QAAIwB,IAAI,EAAC;MAAT,GACExB,oBAACK,SAAD,EAAUoB;QACRT,SAAS,EAAEd,GAAG,CACZD,MAAM,CAACyB,2BADK,EAEZL,cAAc,IAAIpB,MAAM,CAAC0B,SAAP,CAAiBC,QAFvB,EAGZZ,SAHY,CADN;QAMRJ,GAAG,EAAE,KAAKA,GANF;QAORM,OAAO,EAAEW,KAAK,IAAG;UACf,IAAI,CAACV,UAAL,EAAiB;YACfD,OAAO,CAACW,KAAD,CAAP;YACAN,QAAQ,CAACM,KAAD,EAAQZ,QAAR,CAAR;UACD;QACF,CAZO;QAaRW,QAAQ,EAAET,UAAU,IAAI,CAACC,IAbjB;QAcRA,IAAI,EAAEA;MAdE,GAeHC,cAAc,IAAI;QAAE,iBAAiB,IAAnB;QAAyBS,QAAQ,EAAE,CAAC;MAApC,CAff,EAgBJrB,KAhBI,CAAV,EAkBGQ,QAlBH,CADF,CADD;IAAA,CADH,CADF;EA4BD;;AApD+E;AACzEb,kCAAc,qBAAd;AACAA,mCAAyC;EAC9Ca,QAAQ,EAAE,IADoC;EAE9CD,SAAS,EAAE,EAFmC;EAG9CG,UAAU,EAAE,KAHkC;EAI9CD,OAAO,EAAE,MAAWa,SAJ0B;EAK9CpB,KAAK,EAAEoB,SALuC;EAM9CrB,OAAO,EAAE,MAAK,CAAG,CAN6B;EAO9CU,IAAI,EAAE;AAPwC,CAAzC","names":["React","styles","css","ContextSelectorContext","ContextSelectorItem","Component","constructor","createRef","componentDidMount","props","sendRef","index","ref","current","render","_a","className","children","onClick","isDisabled","href","isDisabledLink","Consumer","onSelect","role","Object","contextSelectorMenuListItem","modifiers","disabled","event","tabIndex","undefined"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/ContextSelector/ContextSelectorItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ContextSelector/context-selector';\nimport { css } from '@patternfly/react-styles';\nimport { ContextSelectorContext } from './contextSelectorConstants';\n\nexport interface ContextSelectorItemProps {\n  /** Anything which can be rendered as Context Selector item */\n  children?: React.ReactNode;\n  /** Classes applied to root element of the Context Selector item */\n  className?: string;\n  /** Render Context  Selector item as disabled */\n  isDisabled?: boolean;\n  /** Callback for click event */\n  onClick: (event: React.MouseEvent) => void;\n  /** @hide internal index of the item */\n  index: number;\n  /** Internal callback for ref tracking */\n  sendRef: (index: number, current: any) => void;\n  /** Link href, indicates item should render as anchor tag */\n  href?: string;\n}\n\nexport class ContextSelectorItem extends React.Component<ContextSelectorItemProps> {\n  static displayName = 'ContextSelectorItem';\n  static defaultProps: ContextSelectorItemProps = {\n    children: null as React.ReactNode,\n    className: '',\n    isDisabled: false,\n    onClick: (): any => undefined,\n    index: undefined as number,\n    sendRef: () => {},\n    href: null as string\n  };\n\n  ref: React.RefObject<HTMLButtonElement & HTMLAnchorElement> = React.createRef();\n\n  componentDidMount() {\n    /* eslint-disable-next-line */\n    this.props.sendRef(this.props.index, this.ref.current);\n  }\n\n  render() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { className, children, onClick, isDisabled, index, sendRef, href, ...props } = this.props;\n    const Component = href ? 'a' : 'button';\n    const isDisabledLink = href && isDisabled;\n    return (\n      <ContextSelectorContext.Consumer>\n        {({ onSelect }) => (\n          <li role=\"none\">\n            <Component\n              className={css(\n                styles.contextSelectorMenuListItem,\n                isDisabledLink && styles.modifiers.disabled,\n                className\n              )}\n              ref={this.ref}\n              onClick={event => {\n                if (!isDisabled) {\n                  onClick(event);\n                  onSelect(event, children);\n                }\n              }}\n              disabled={isDisabled && !href}\n              href={href}\n              {...(isDisabledLink && { 'aria-disabled': true, tabIndex: -1 })}\n              {...props}\n            >\n              {children}\n            </Component>\n          </li>\n        )}\n      </ContextSelectorContext.Consumer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}