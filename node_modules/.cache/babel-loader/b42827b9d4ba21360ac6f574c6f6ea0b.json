{"ast":null,"code":"import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { ActionsColumn } from '../../ActionsColumn';\n\nconst resolveOrDefault = (resolver, defaultValue, rowData, extraData) => typeof resolver === 'function' ? resolver(rowData, extraData) : defaultValue;\n\nexport const cellActions = (actions, actionResolver, areActionsDisabled) => (label, _ref) => {\n  let {\n    rowData,\n    column,\n    rowIndex,\n    columnIndex,\n    column: {\n      extraParams: {\n        dropdownPosition,\n        dropdownDirection,\n        actionsToggle\n      }\n    },\n    property\n  } = _ref;\n  const extraData = {\n    rowIndex,\n    columnIndex,\n    column,\n    property\n  };\n  const resolvedActions = resolveOrDefault(actionResolver, actions, rowData, extraData);\n  const resolvedIsDisabled = resolveOrDefault(areActionsDisabled, rowData && rowData.disableActions, rowData, extraData);\n  const renderProps = resolvedActions && resolvedActions.length > 0 ? {\n    children: React.createElement(ActionsColumn, {\n      items: resolvedActions,\n      dropdownPosition: dropdownPosition,\n      dropdownDirection: dropdownDirection,\n      isDisabled: resolvedIsDisabled,\n      rowData: rowData,\n      extraData: extraData,\n      actionsToggle: actionsToggle\n    }, label)\n  } : {};\n  return Object.assign({\n    className: css(styles.tableAction),\n    style: {\n      paddingRight: 0\n    },\n    isVisible: true\n  }, renderProps);\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,qDAAnB;AACA,SAASC,aAAT,QAA8B,qBAA9B;;AAaA,MAAMC,gBAAgB,GAAG,CACvBC,QADuB,EAEvBC,YAFuB,EAGvBC,OAHuB,EAIvBC,SAJuB,KAKnB,OAAOH,QAAP,KAAoB,UAApB,GAAiCA,QAAQ,CAACE,OAAD,EAAUC,SAAV,CAAzC,GAAgEF,YALtE;;AAOA,OAAO,MAAMG,WAAW,GAAG,CACzBC,OADyB,EAEzBC,cAFyB,EAGzBC,kBAHyB,KAIV,CACfC,KADe,WAYb;EAAA,IAVF;IACEN,OADF;IAEEO,MAFF;IAGEC,QAHF;IAIEC,WAJF;IAKEF,MAAM,EAAE;MACNG,WAAW,EAAE;QAAEC,gBAAF;QAAoBC,iBAApB;QAAuCC;MAAvC;IADP,CALV;IAQEC;EARF,CAUE;EACF,MAAMb,SAAS,GAAG;IAChBO,QADgB;IAEhBC,WAFgB;IAGhBF,MAHgB;IAIhBO;EAJgB,CAAlB;EAMA,MAAMC,eAAe,GAAGlB,gBAAgB,CAACO,cAAD,EAAiBD,OAAjB,EAA0BH,OAA1B,EAAmCC,SAAnC,CAAxC;EACA,MAAMe,kBAAkB,GAAGnB,gBAAgB,CACzCQ,kBADyC,EAEzCL,OAAO,IAAIA,OAAO,CAACiB,cAFsB,EAGzCjB,OAHyC,EAIzCC,SAJyC,CAA3C;EAOA,MAAMiB,WAAW,GACfH,eAAe,IAAKA,eAAsB,CAACI,MAAvB,GAAgC,CAApD,GACI;IACEC,QAAQ,EACN3B,oBAACG,aAAD,EAAc;MACZyB,KAAK,EAAEN,eADK;MAEZJ,gBAAgB,EAAEA,gBAFN;MAGZC,iBAAiB,EAAEA,iBAHP;MAIZU,UAAU,EAAEN,kBAJA;MAKZhB,OAAO,EAAEA,OALG;MAMZC,SAAS,EAAEA,SANC;MAOZY,aAAa,EAAEA;IAPH,CAAd,EASGP,KATH;EAFJ,CADJ,GAgBI,EAjBN;EAmBA;IACEiB,SAAS,EAAE7B,GAAG,CAACC,MAAM,CAAC6B,WAAR,CADhB;IAEEC,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAhB,CAFT;IAGEC,SAAS,EAAE;EAHb,GAIKT,WAJL;AAMD,CAxDM","names":["React","css","styles","ActionsColumn","resolveOrDefault","resolver","defaultValue","rowData","extraData","cellActions","actions","actionResolver","areActionsDisabled","label","column","rowIndex","columnIndex","extraParams","dropdownPosition","dropdownDirection","actionsToggle","property","resolvedActions","resolvedIsDisabled","disableActions","renderProps","length","children","items","isDisabled","className","tableAction","style","paddingRight","isVisible"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-table/src/components/Table/utils/decorators/cellActions.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { ActionsColumn } from '../../ActionsColumn';\nimport {\n  IActions,\n  IAction,\n  IActionsResolver,\n  IAreActionsDisabled,\n  IExtra,\n  IExtraData,\n  IFormatterValueType,\n  IRowData,\n  ITransform\n} from '../../TableTypes';\n\nconst resolveOrDefault = (\n  resolver: IActionsResolver | IAreActionsDisabled,\n  defaultValue: IActions | boolean,\n  rowData: IRowData,\n  extraData: IExtraData\n) => (typeof resolver === 'function' ? resolver(rowData, extraData) : defaultValue);\n\nexport const cellActions = (\n  actions: IActions,\n  actionResolver: IActionsResolver,\n  areActionsDisabled: IAreActionsDisabled\n): ITransform => (\n  label: IFormatterValueType,\n  {\n    rowData,\n    column,\n    rowIndex,\n    columnIndex,\n    column: {\n      extraParams: { dropdownPosition, dropdownDirection, actionsToggle }\n    },\n    property\n  }: IExtra\n) => {\n  const extraData = {\n    rowIndex,\n    columnIndex,\n    column,\n    property\n  };\n  const resolvedActions = resolveOrDefault(actionResolver, actions, rowData, extraData) as IAction[];\n  const resolvedIsDisabled = resolveOrDefault(\n    areActionsDisabled,\n    rowData && rowData.disableActions,\n    rowData,\n    extraData\n  ) as boolean;\n\n  const renderProps =\n    resolvedActions && (resolvedActions as []).length > 0\n      ? {\n          children: (\n            <ActionsColumn\n              items={resolvedActions}\n              dropdownPosition={dropdownPosition}\n              dropdownDirection={dropdownDirection}\n              isDisabled={resolvedIsDisabled}\n              rowData={rowData}\n              extraData={extraData}\n              actionsToggle={actionsToggle}\n            >\n              {label}\n            </ActionsColumn>\n          )\n        }\n      : {};\n\n  return {\n    className: css(styles.tableAction),\n    style: { paddingRight: 0 },\n    isVisible: true,\n    ...renderProps\n  };\n};\n"]},"metadata":{},"sourceType":"module"}