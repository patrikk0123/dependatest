{"ast":null,"code":"import * as React from 'react';\nimport { ApplicationLauncherSeparator } from '../components/ApplicationLauncher/ApplicationLauncherSeparator';\nimport { Divider } from '../components/Divider/Divider';\n/**\n * This function is a helper for creating an array of renderable favorite items for the Application launcher or Select\n *\n * @param {object} items The items rendered in Select or Application aLauncher\n * @param {boolean} isGrouped Flag indicating if items are grouped\n * @param {any[]} favorites Array of ids of favorited items\n * @param {boolean} isEnterTriggersArrowDown Flag indicating if we should add isEnterTriggersArrowDown to favorited item\n */\n\nexport var createRenderableFavorites = function createRenderableFavorites(items, isGrouped, favorites, isEnterTriggersArrowDown) {\n  if (isGrouped) {\n    var favoriteItems = [];\n    items.forEach(function (group) {\n      if (favorites.length > 0) {\n        return group.props.children && group.props.children.filter(function (item) {\n          return favorites.includes(item.props.id);\n        }).map(function (item) {\n          if (isEnterTriggersArrowDown) {\n            return favoriteItems.push(React.cloneElement(item, {\n              isFavorite: true,\n              enterTriggersArrowDown: isEnterTriggersArrowDown,\n              id: \"favorite-\".concat(item.props.id)\n            }));\n          } else {\n            return favoriteItems.push(React.cloneElement(item, {\n              isFavorite: true,\n              id: \"favorite-\".concat(item.props.id)\n            }));\n          }\n        });\n      }\n    });\n    return favoriteItems;\n  }\n\n  return items.filter(function (item) {\n    return favorites.includes(item.props.id);\n  }).map(function (item) {\n    return React.cloneElement(item, {\n      isFavorite: true,\n      enterTriggersArrowDown: isEnterTriggersArrowDown\n    });\n  });\n};\n/**\n * This function is a helper for extending the array of renderable favorite with the select/application launcher items to  render in the Application launcher or Select\n *\n * @param {object} items The items rendered in Select or Application aLauncher\n * @param {boolean} isGrouped Flag indicating if items are grouped\n * @param {any[]} favorites Array of ids of favorited items\n */\n\nexport var extendItemsWithFavorite = function extendItemsWithFavorite(items, isGrouped, favorites) {\n  if (isGrouped) {\n    return items.map(function (group) {\n      return React.cloneElement(group, {\n        children: React.Children.map(group.props.children, function (item) {\n          if (item.type === ApplicationLauncherSeparator || item.type === Divider) {\n            return item;\n          }\n\n          return React.cloneElement(item, {\n            isFavorite: favorites.some(function (favoriteId) {\n              return favoriteId === item.props.id || \"favorite-\".concat(favoriteId) === item.props.id;\n            })\n          });\n        })\n      });\n    });\n  }\n\n  return items.map(function (item) {\n    return React.cloneElement(item, {\n      isFavorite: favorites.some(function (favoriteId) {\n        return favoriteId === item.props.id;\n      })\n    });\n  });\n};","map":{"version":3,"mappings":"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","names":["React","ApplicationLauncherSeparator","Divider","createRenderableFavorites","items","isGrouped","favorites","isEnterTriggersArrowDown","favoriteItems","forEach","length","group","props","children","filter","includes","item","id","map","push","cloneElement","isFavorite","enterTriggersArrowDown","extendItemsWithFavorite","Children","type","some","favoriteId"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/helpers/favorites.ts"],"sourcesContent":["import * as React from 'react';\nimport { ApplicationLauncherSeparator } from '../components/ApplicationLauncher/ApplicationLauncherSeparator';\nimport { Divider } from '../components/Divider/Divider';\n\n/**\n * This function is a helper for creating an array of renderable favorite items for the Application launcher or Select\n *\n * @param {object} items The items rendered in Select or Application aLauncher\n * @param {boolean} isGrouped Flag indicating if items are grouped\n * @param {any[]} favorites Array of ids of favorited items\n * @param {boolean} isEnterTriggersArrowDown Flag indicating if we should add isEnterTriggersArrowDown to favorited item\n */\nexport const createRenderableFavorites = (\n  items: object,\n  isGrouped: boolean,\n  favorites: any[],\n  isEnterTriggersArrowDown?: boolean\n) => {\n  if (isGrouped) {\n    const favoriteItems: React.ReactNode[] = [];\n    (items as React.ReactElement[]).forEach(group => {\n      if (favorites.length > 0) {\n        return (\n          group.props.children &&\n          (group.props.children as React.ReactElement[])\n            .filter(item => favorites.includes(item.props.id))\n            .map(item => {\n              if (isEnterTriggersArrowDown) {\n                return favoriteItems.push(\n                  React.cloneElement(item, {\n                    isFavorite: true,\n                    enterTriggersArrowDown: isEnterTriggersArrowDown,\n                    id: `favorite-${item.props.id}`\n                  })\n                );\n              } else {\n                return favoriteItems.push(\n                  React.cloneElement(item, { isFavorite: true, id: `favorite-${item.props.id}` })\n                );\n              }\n            })\n        );\n      }\n    });\n    return favoriteItems;\n  }\n  return (items as React.ReactElement[])\n    .filter(item => favorites.includes(item.props.id))\n    .map(item => React.cloneElement(item, { isFavorite: true, enterTriggersArrowDown: isEnterTriggersArrowDown }));\n};\n\n/**\n * This function is a helper for extending the array of renderable favorite with the select/application launcher items to  render in the Application launcher or Select\n *\n * @param {object} items The items rendered in Select or Application aLauncher\n * @param {boolean} isGrouped Flag indicating if items are grouped\n * @param {any[]} favorites Array of ids of favorited items\n */\nexport const extendItemsWithFavorite = (items: object, isGrouped: boolean, favorites: any[]) => {\n  if (isGrouped) {\n    return (items as React.ReactElement[]).map(group =>\n      React.cloneElement(group, {\n        children: React.Children.map(group.props.children as React.ReactElement[], item => {\n          if (item.type === ApplicationLauncherSeparator || item.type === Divider) {\n            return item;\n          }\n          return React.cloneElement(item, {\n            isFavorite: favorites.some(\n              favoriteId => favoriteId === item.props.id || `favorite-${favoriteId}` === item.props.id\n            )\n          });\n        })\n      })\n    );\n  }\n  return (items as React.ReactElement[]).map(item =>\n    React.cloneElement(item, {\n      isFavorite: favorites.some(favoriteId => favoriteId === item.props.id)\n    })\n  );\n};\n"]},"metadata":{},"sourceType":"module"}