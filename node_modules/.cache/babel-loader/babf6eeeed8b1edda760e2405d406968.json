{"ast":null,"code":"var _jsxFileName = \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/ProjectCreateEditPage/ProjectCreateEditPage.tsx\";\nimport { ActionGroup, Button, Card, CardBody, Flex, FlexItem, Form, FormGroup, FormHelperText, Label, TextArea, TextInput } from '@patternfly/react-core';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { PageTitles } from '../../utils/PageTitles';\nimport { DataContainer } from '../../containers/DataContainer/DataContainer';\nimport { ServiceContainerCreating } from '../../containers/DataContainer/ServiceContainerCreating';\nimport { useDataContainer } from '../../containers/DataContainer/useDataContainer';\nimport { useTitle } from '../../containers/useTitle';\nimport { projectService } from '../../services/projectService';\nimport { PageLayout } from '../PageLayout/PageLayout';\nimport { useForm } from '../../containers/useForm';\nimport { validateProjectName } from '../../utils/formValidationHelpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ProjectCreateEditPage = _ref => {\n  let {\n    editPage = false\n  } = _ref;\n  const flexDirection = {\n    default: 'column'\n  };\n  const {\n    fieldValues,\n    onChange\n  } = useForm({\n    name: '',\n    description: '',\n    projectUrl: '',\n    engineeringTeam: '',\n    technicalLeader: ''\n  }, {\n    name: validateProjectName\n  }); // edit page\n\n  const [id, setId] = useState('');\n  const navigate = useNavigate();\n  const urlPathParams = useParams(); // FORM VALIDNESS\n\n  const [isFormValid, setIsFormValid] = useState(false); // FIELDS\n\n  const [name, setName] = useState('');\n  const [nameTouched, setNameTouched] = useState(false);\n  const [nameValidated, setNameValidated] = useState('default');\n  const [description, setDescription] = useState('');\n  const [projectUrl, setProjectUrl] = useState('');\n  const [projectUrlTouched, setProjectUrlTouched] = useState(false);\n  const [projectUrlValidated, setProjectUrlValidated] = useState('default');\n  const [issueTrackerUrl, setIssueTrackerUrl] = useState('');\n  const [issueTrackerUrlTouched, setIssueTrackerUrlTouched] = useState(false);\n  const [issueTrackerUrlValidated, setIssueTrackerUrlValidated] = useState('default');\n  const [engineeringTeam, setEngineeringTeam] = useState('');\n  const [technicalLeader, setTechnicalLeader] = useState(''); // create page\n\n  const dataContainerCreate = useDataContainer(_ref2 => {\n    let {\n      serviceData\n    } = _ref2;\n    return projectService.createProject(serviceData);\n  }, {\n    initLoadingState: false\n  });\n  console.log(dataContainerCreate.error); // edit page\n\n  const dataContainerCreateEdit = useDataContainer(useCallback(_ref3 => {\n    let {\n      serviceData\n    } = _ref3;\n    return projectService.getProject(serviceData);\n  }, []));\n  const editRefresh = dataContainerCreateEdit.refresh;\n  useTitle(editPage ? `Edit | ${PageTitles.projects}` : `Create | ${PageTitles.projects}`);\n  useEffect(() => {\n    if (editPage) {\n      if (urlPathParams.projectId) {\n        editRefresh({\n          serviceData: {\n            id: urlPathParams.projectId\n          }\n        }).then(response => {\n          const project = response.data;\n          setId(project.id);\n          setName(project.name || '');\n          setDescription(project.description || '');\n          setProjectUrl(project.projectUrl || '');\n          setIssueTrackerUrl(project.issueTrackerUrl || '');\n          setEngineeringTeam(project.engineeringTeam || '');\n          setTechnicalLeader(project.technicalLeader || '');\n          setIsFormValid(true);\n        });\n      } else {\n        throw new Error(`Invalid projectId: ${urlPathParams.projectId}`);\n      }\n    }\n  }, [editPage, urlPathParams.projectId, editRefresh]);\n  useEffect(() => {\n    if (name !== '' && isUrlValid(projectUrl) && isUrlValid(issueTrackerUrl)) {\n      setIsFormValid(true);\n    } else {\n      setIsFormValid(false);\n    }\n  }, [name, projectUrl, issueTrackerUrl]);\n\n  const validateName = name => {\n    if (name !== '') {\n      setNameValidated('success');\n    } else {\n      setNameValidated('error');\n    }\n  };\n\n  const urlRegex = /^https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)$/;\n\n  const isUrlValid = url => url === '' || url.match(urlRegex);\n\n  const validateProjectUrl = url => {\n    if (isUrlValid(url)) {\n      setProjectUrlValidated('success');\n    } else {\n      setProjectUrlValidated('error');\n    }\n  };\n\n  const validateIssueTrackerUrl = url => {\n    if (isUrlValid(url)) {\n      setIssueTrackerUrlValidated('success');\n    } else {\n      setIssueTrackerUrlValidated('error');\n    }\n  };\n\n  const submitCreate = () => {\n    dataContainerCreate.refresh({\n      serviceData: {\n        name,\n        description,\n        projectUrl,\n        issueTrackerUrl,\n        engineeringTeam,\n        technicalLeader\n      }\n    }).then(response => {\n      var _response$data;\n\n      const projectId = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.id;\n\n      if (!projectId) {\n        throw new Error(`Invalid projectId coming from Orch POST response: ${projectId}`);\n      } // temporarily navigate to edit page until detail page is finished\n\n\n      navigate(`/projects/${projectId}/edit`, {\n        replace: true\n      });\n    });\n  };\n\n  const submitUpdate = () => {\n    // PATCH method should be used\n    console.log('not implemented yet', {\n      id,\n      name,\n      description,\n      projectUrl,\n      issueTrackerUrl,\n      engineeringTeam,\n      technicalLeader\n    });\n  };\n\n  const formComponent = /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-70\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: e => {\n            e.preventDefault();\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            isRequired: true,\n            label: \"Name\",\n            fieldId: \"name\",\n            helperText: /*#__PURE__*/_jsxDEV(FormHelperText, {\n              isHidden: nameValidated !== 'error',\n              isError: true,\n              children: \"Required field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(TextInput, {\n              isRequired: true,\n              validated: nameValidated,\n              type: \"text\",\n              id: \"name\",\n              name: \"name\",\n              value: fieldValues.name,\n              autoComplete: \"off\",\n              onChange: (name, event) => {\n                onChange(event);\n              },\n              onBlur: () => {\n                if (!nameTouched) {\n                  setNameTouched(true);\n                  validateName(name);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            label: \"Description\",\n            fieldId: \"description\",\n            children: /*#__PURE__*/_jsxDEV(TextArea, {\n              id: \"description\",\n              name: \"description\",\n              value: description,\n              onChange: setDescription,\n              autoResize: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            label: \"Project URL\",\n            fieldId: \"projectUrl\",\n            helperText: /*#__PURE__*/_jsxDEV(FormHelperText, {\n              isHidden: projectUrlValidated !== 'error',\n              isError: true,\n              children: \"Enter valid URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(TextInput, {\n              validated: projectUrlValidated,\n              type: \"url\",\n              id: \"projectUrl\",\n              name: \"projectUrl\",\n              autoComplete: \"off\",\n              value: projectUrl,\n              onChange: url => {\n                setProjectUrl(url);\n\n                if (projectUrlTouched) {\n                  validateProjectUrl(url);\n                }\n              },\n              onBlur: () => {\n                if (!projectUrlTouched) {\n                  setProjectUrlTouched(true);\n                  validateProjectUrl(projectUrl);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            label: \"Issue Tracker URL\",\n            fieldId: \"issueTrackerUrl\",\n            helperText: /*#__PURE__*/_jsxDEV(FormHelperText, {\n              isHidden: issueTrackerUrl !== 'error',\n              isError: true,\n              children: \"Enter valid URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(TextInput, {\n              validated: issueTrackerUrlValidated,\n              type: \"url\",\n              id: \"issueTrackerUrl\",\n              name: \"issueTrackerUrl\",\n              autoComplete: \"off\",\n              value: issueTrackerUrl,\n              onChange: url => {\n                setIssueTrackerUrl(url);\n\n                if (issueTrackerUrlTouched) {\n                  validateIssueTrackerUrl(url);\n                }\n              },\n              onBlur: () => {\n                if (!issueTrackerUrlTouched) {\n                  setIssueTrackerUrlTouched(true);\n                  validateIssueTrackerUrl(issueTrackerUrl);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            label: \"Engineering Team\",\n            fieldId: \"engineeringTeam\",\n            children: /*#__PURE__*/_jsxDEV(TextInput, {\n              type: \"text\",\n              id: \"engineeringTeam\",\n              name: \"engineeringTeam\",\n              autoComplete: \"off\",\n              value: engineeringTeam,\n              onChange: setEngineeringTeam\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            label: \"Technical Leader\",\n            fieldId: \"technicalLeader\",\n            children: /*#__PURE__*/_jsxDEV(TextInput, {\n              type: \"text\",\n              id: \"technicalLeader\",\n              name: \"technicalLeader\",\n              autoComplete: \"off\",\n              value: technicalLeader,\n              onChange: setTechnicalLeader\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ActionGroup, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              isDisabled: !isFormValid,\n              onClick: () => {\n                if (editPage) {\n                  submitUpdate();\n                } else {\n                  submitCreate();\n                }\n              },\n              children: editPage ? 'Update' : 'Create'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(PageLayout, {\n    title: editPage ? 'Update Project' : 'Create Project',\n    description: editPage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"You can update current project attributes below.\"\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"You can create a standalone project like \", /*#__PURE__*/_jsxDEV(Label, {\n        children: \"Hibernate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 54\n      }, this), \" or \", /*#__PURE__*/_jsxDEV(Label, {\n        children: \"JBoss Modules\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 82\n      }, this), \", usually a project represents one SCM repository and one project may contain multiple Build Configs.\"]\n    }, void 0, true),\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      direction: flexDirection,\n      children: /*#__PURE__*/_jsxDEV(FlexItem, {\n        children: editPage ? /*#__PURE__*/_jsxDEV(DataContainer, { ...dataContainerCreateEdit,\n          title: \"Edit Project\",\n          children: formComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(ServiceContainerCreating, { ...dataContainerCreate,\n          title: \"Create Project\",\n          children: formComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 326,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["ActionGroup","Button","Card","CardBody","Flex","FlexItem","Form","FormGroup","FormHelperText","Label","TextArea","TextInput","useCallback","useEffect","useState","useNavigate","useParams","PageTitles","DataContainer","ServiceContainerCreating","useDataContainer","useTitle","projectService","PageLayout","useForm","validateProjectName","ProjectCreateEditPage","editPage","flexDirection","default","fieldValues","onChange","name","description","projectUrl","engineeringTeam","technicalLeader","id","setId","navigate","urlPathParams","isFormValid","setIsFormValid","setName","nameTouched","setNameTouched","nameValidated","setNameValidated","setDescription","setProjectUrl","projectUrlTouched","setProjectUrlTouched","projectUrlValidated","setProjectUrlValidated","issueTrackerUrl","setIssueTrackerUrl","issueTrackerUrlTouched","setIssueTrackerUrlTouched","issueTrackerUrlValidated","setIssueTrackerUrlValidated","setEngineeringTeam","setTechnicalLeader","dataContainerCreate","serviceData","createProject","initLoadingState","console","log","error","dataContainerCreateEdit","getProject","editRefresh","refresh","projects","projectId","then","response","project","data","Error","isUrlValid","validateName","urlRegex","url","match","validateProjectUrl","validateIssueTrackerUrl","submitCreate","replace","submitUpdate","formComponent","e","preventDefault","event"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/ProjectCreateEditPage/ProjectCreateEditPage.tsx"],"sourcesContent":["import {\n  ActionGroup,\n  Button,\n  Card,\n  CardBody,\n  Flex,\n  FlexItem,\n  FlexProps,\n  Form,\n  FormGroup,\n  FormHelperText,\n  Label,\n  TextArea,\n  TextInput,\n  TextInputProps,\n} from '@patternfly/react-core';\nimport { Project } from 'pnc-api-types-ts';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { PageTitles } from '../../utils/PageTitles';\nimport { DataContainer } from '../../containers/DataContainer/DataContainer';\nimport { ServiceContainerCreating } from '../../containers/DataContainer/ServiceContainerCreating';\nimport { IService, useDataContainer } from '../../containers/DataContainer/useDataContainer';\nimport { useTitle } from '../../containers/useTitle';\nimport { projectService } from '../../services/projectService';\nimport { PageLayout } from '../PageLayout/PageLayout';\nimport { useForm } from '../../containers/useForm';\nimport { validateProjectName } from '../../utils/formValidationHelpers';\n\ninterface IProjectCreateEditPageProps {\n  editPage?: boolean;\n}\n\nexport const ProjectCreateEditPage = ({ editPage = false }: IProjectCreateEditPageProps) => {\n  const flexDirection: FlexProps['direction'] = { default: 'column' };\n\n  const { fieldValues, onChange } = useForm(\n    {\n      name: '',\n      description: '',\n      projectUrl: '',\n      engineeringTeam: '',\n      technicalLeader: '',\n    },\n    {\n      name: validateProjectName,\n    }\n  );\n\n  // edit page\n  const [id, setId] = useState<string>('');\n  const navigate = useNavigate();\n  const urlPathParams = useParams();\n\n  // FORM VALIDNESS\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n\n  // FIELDS\n  const [name, setName] = useState<string>('');\n  const [nameTouched, setNameTouched] = useState<boolean>(false);\n  const [nameValidated, setNameValidated] = useState<TextInputProps['validated']>('default');\n  const [description, setDescription] = useState<string>('');\n  const [projectUrl, setProjectUrl] = useState<string>('');\n  const [projectUrlTouched, setProjectUrlTouched] = useState<boolean>(false);\n  const [projectUrlValidated, setProjectUrlValidated] = useState<TextInputProps['validated']>('default');\n  const [issueTrackerUrl, setIssueTrackerUrl] = useState<string>('');\n  const [issueTrackerUrlTouched, setIssueTrackerUrlTouched] = useState<boolean>(false);\n  const [issueTrackerUrlValidated, setIssueTrackerUrlValidated] = useState<TextInputProps['validated']>('default');\n  const [engineeringTeam, setEngineeringTeam] = useState<string>('');\n  const [technicalLeader, setTechnicalLeader] = useState<string>('');\n\n  // create page\n  const dataContainerCreate = useDataContainer(\n    ({ serviceData }: IService<Omit<Project, 'id'>>) => projectService.createProject(serviceData!),\n    {\n      initLoadingState: false,\n    }\n  );\n\n  console.log(dataContainerCreate.error);\n\n  // edit page\n  const dataContainerCreateEdit = useDataContainer(\n    useCallback(({ serviceData }: IService<Project>) => {\n      return projectService.getProject(serviceData!);\n    }, [])\n  );\n  const editRefresh = dataContainerCreateEdit.refresh;\n\n  useTitle(editPage ? `Edit | ${PageTitles.projects}` : `Create | ${PageTitles.projects}`);\n\n  useEffect(() => {\n    if (editPage) {\n      if (urlPathParams.projectId) {\n        editRefresh({ serviceData: { id: urlPathParams.projectId } }).then((response: any) => {\n          const project: Project = response.data;\n\n          setId(project.id);\n          setName(project.name || '');\n          setDescription(project.description || '');\n          setProjectUrl(project.projectUrl || '');\n          setIssueTrackerUrl(project.issueTrackerUrl || '');\n          setEngineeringTeam(project.engineeringTeam || '');\n          setTechnicalLeader(project.technicalLeader || '');\n          setIsFormValid(true);\n        });\n      } else {\n        throw new Error(`Invalid projectId: ${urlPathParams.projectId}`);\n      }\n    }\n  }, [editPage, urlPathParams.projectId, editRefresh]);\n\n  useEffect(() => {\n    if (name !== '' && isUrlValid(projectUrl) && isUrlValid(issueTrackerUrl)) {\n      setIsFormValid(true);\n    } else {\n      setIsFormValid(false);\n    }\n  }, [name, projectUrl, issueTrackerUrl]);\n\n  const validateName = (name: String) => {\n    if (name !== '') {\n      setNameValidated('success');\n    } else {\n      setNameValidated('error');\n    }\n  };\n\n  const urlRegex = /^https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)$/;\n  const isUrlValid = (url: String) => url === '' || url.match(urlRegex);\n\n  const validateProjectUrl = (url: String) => {\n    if (isUrlValid(url)) {\n      setProjectUrlValidated('success');\n    } else {\n      setProjectUrlValidated('error');\n    }\n  };\n\n  const validateIssueTrackerUrl = (url: String) => {\n    if (isUrlValid(url)) {\n      setIssueTrackerUrlValidated('success');\n    } else {\n      setIssueTrackerUrlValidated('error');\n    }\n  };\n\n  const submitCreate = () => {\n    dataContainerCreate\n      .refresh({\n        serviceData: {\n          name,\n          description,\n          projectUrl,\n          issueTrackerUrl,\n          engineeringTeam,\n          technicalLeader,\n        },\n      })\n      .then((response: any) => {\n        const projectId = response?.data?.id;\n        if (!projectId) {\n          throw new Error(`Invalid projectId coming from Orch POST response: ${projectId}`);\n        }\n        // temporarily navigate to edit page until detail page is finished\n        navigate(`/projects/${projectId}/edit`, { replace: true });\n      });\n  };\n\n  const submitUpdate = () => {\n    // PATCH method should be used\n    console.log('not implemented yet', {\n      id,\n      name,\n      description,\n      projectUrl,\n      issueTrackerUrl,\n      engineeringTeam,\n      technicalLeader,\n    });\n  };\n\n  const formComponent = (\n    <Card>\n      <CardBody>\n        <div className=\"w-70\">\n          <Form\n            onSubmit={(e) => {\n              e.preventDefault();\n            }}\n          >\n            <FormGroup\n              isRequired\n              label=\"Name\"\n              fieldId=\"name\"\n              helperText={\n                <FormHelperText isHidden={nameValidated !== 'error'} isError>\n                  Required field\n                </FormHelperText>\n              }\n            >\n              <TextInput\n                isRequired\n                validated={nameValidated}\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                value={fieldValues.name}\n                autoComplete=\"off\"\n                onChange={(name, event) => {\n                  onChange(event);\n                }}\n                onBlur={() => {\n                  if (!nameTouched) {\n                    setNameTouched(true);\n                    validateName(name);\n                  }\n                }}\n              />\n            </FormGroup>\n            <FormGroup label=\"Description\" fieldId=\"description\">\n              <TextArea id=\"description\" name=\"description\" value={description} onChange={setDescription} autoResize />\n            </FormGroup>\n            <FormGroup\n              label=\"Project URL\"\n              fieldId=\"projectUrl\"\n              helperText={\n                <FormHelperText isHidden={projectUrlValidated !== 'error'} isError>\n                  Enter valid URL\n                </FormHelperText>\n              }\n            >\n              <TextInput\n                validated={projectUrlValidated}\n                type=\"url\"\n                id=\"projectUrl\"\n                name=\"projectUrl\"\n                autoComplete=\"off\"\n                value={projectUrl}\n                onChange={(url) => {\n                  setProjectUrl(url);\n                  if (projectUrlTouched) {\n                    validateProjectUrl(url);\n                  }\n                }}\n                onBlur={() => {\n                  if (!projectUrlTouched) {\n                    setProjectUrlTouched(true);\n                    validateProjectUrl(projectUrl);\n                  }\n                }}\n              />\n            </FormGroup>\n            <FormGroup\n              label=\"Issue Tracker URL\"\n              fieldId=\"issueTrackerUrl\"\n              helperText={\n                <FormHelperText isHidden={issueTrackerUrl !== 'error'} isError>\n                  Enter valid URL\n                </FormHelperText>\n              }\n            >\n              <TextInput\n                validated={issueTrackerUrlValidated}\n                type=\"url\"\n                id=\"issueTrackerUrl\"\n                name=\"issueTrackerUrl\"\n                autoComplete=\"off\"\n                value={issueTrackerUrl}\n                onChange={(url) => {\n                  setIssueTrackerUrl(url);\n                  if (issueTrackerUrlTouched) {\n                    validateIssueTrackerUrl(url);\n                  }\n                }}\n                onBlur={() => {\n                  if (!issueTrackerUrlTouched) {\n                    setIssueTrackerUrlTouched(true);\n                    validateIssueTrackerUrl(issueTrackerUrl);\n                  }\n                }}\n              />\n            </FormGroup>\n            <FormGroup label=\"Engineering Team\" fieldId=\"engineeringTeam\">\n              <TextInput\n                type=\"text\"\n                id=\"engineeringTeam\"\n                name=\"engineeringTeam\"\n                autoComplete=\"off\"\n                value={engineeringTeam}\n                onChange={setEngineeringTeam}\n              />\n            </FormGroup>\n            <FormGroup label=\"Technical Leader\" fieldId=\"technicalLeader\">\n              <TextInput\n                type=\"text\"\n                id=\"technicalLeader\"\n                name=\"technicalLeader\"\n                autoComplete=\"off\"\n                value={technicalLeader}\n                onChange={setTechnicalLeader}\n              />\n            </FormGroup>\n            <ActionGroup>\n              <Button\n                variant=\"primary\"\n                isDisabled={!isFormValid}\n                onClick={() => {\n                  if (editPage) {\n                    submitUpdate();\n                  } else {\n                    submitCreate();\n                  }\n                }}\n              >\n                {editPage ? 'Update' : 'Create'}\n              </Button>\n            </ActionGroup>\n          </Form>\n        </div>\n      </CardBody>\n    </Card>\n  );\n\n  return (\n    <PageLayout\n      title={editPage ? 'Update Project' : 'Create Project'}\n      description={\n        editPage ? (\n          <>You can update current project attributes below.</>\n        ) : (\n          <>\n            You can create a standalone project like <Label>Hibernate</Label> or <Label>JBoss Modules</Label>, usually a project\n            represents one SCM repository and one project may contain multiple Build Configs.\n          </>\n        )\n      }\n    >\n      <Flex direction={flexDirection}>\n        <FlexItem>\n          {editPage ? (\n            <DataContainer {...dataContainerCreateEdit} title=\"Edit Project\">\n              {formComponent}\n            </DataContainer>\n          ) : (\n            <ServiceContainerCreating {...dataContainerCreate} title=\"Create Project\">\n              {formComponent}\n            </ServiceContainerCreating>\n          )}\n        </FlexItem>\n      </Flex>\n    </PageLayout>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}