{"ast":null,"code":"import _classCallCheck from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport checkStyles from '@patternfly/react-styles/css/components/Check/check';\nimport { css } from '@patternfly/react-styles';\nimport CheckIcon from '@patternfly/react-icons/dist/esm/icons/check-icon';\nimport { SelectConsumer, SelectVariant } from './selectConstants';\nimport StarIcon from '@patternfly/react-icons/dist/esm/icons/star-icon';\nimport { getUniqueId } from '../../helpers/util';\nimport { KeyTypes } from '../../helpers/constants';\nexport var SelectOption = /*#__PURE__*/function (_React$Component) {\n  _inherits(SelectOption, _React$Component);\n\n  var _super = _createSuper(SelectOption);\n\n  function SelectOption() {\n    var _this;\n\n    _classCallCheck(this, SelectOption);\n\n    _this = _super.apply(this, arguments);\n    _this.ref = React.createRef();\n    _this.liRef = React.createRef();\n    _this.favoriteRef = React.createRef();\n\n    _this.onKeyDown = function (event, innerIndex, onEnter, isCheckbox) {\n      var _this$props = _this.props,\n          index = _this$props.index,\n          keyHandler = _this$props.keyHandler,\n          isLastOptionBeforeFooter = _this$props.isLastOptionBeforeFooter;\n      var isLastItemBeforeFooter = false;\n\n      if (isLastOptionBeforeFooter !== undefined) {\n        isLastItemBeforeFooter = isLastOptionBeforeFooter(index);\n      }\n\n      if (event.key === KeyTypes.Tab) {\n        // More modal-like experience for checkboxes\n        if (isCheckbox && !isLastItemBeforeFooter) {\n          if (event.shiftKey) {\n            keyHandler(index, innerIndex, 'up');\n          } else {\n            keyHandler(index, innerIndex, 'down');\n          }\n\n          event.stopPropagation();\n        } else {\n          if (event.shiftKey) {\n            keyHandler(index, innerIndex, 'up');\n          } else {\n            keyHandler(index, innerIndex, 'tab');\n          }\n        }\n      }\n\n      event.preventDefault();\n\n      if (event.key === KeyTypes.ArrowUp) {\n        keyHandler(index, innerIndex, 'up');\n      } else if (event.key === KeyTypes.ArrowDown) {\n        keyHandler(index, innerIndex, 'down');\n      } else if (event.key === KeyTypes.ArrowLeft) {\n        keyHandler(index, innerIndex, 'left');\n      } else if (event.key === KeyTypes.ArrowRight) {\n        keyHandler(index, innerIndex, 'right');\n      } else if (event.key === KeyTypes.Enter) {\n        if (onEnter !== undefined) {\n          onEnter();\n        } else {\n          _this.ref.current.click();\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(SelectOption, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.sendRef(this.props.isDisabled ? null : this.ref.current, this.props.isDisabled ? null : this.favoriteRef.current, this.props.isDisabled ? null : this.liRef.current, this.props.index);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.props.sendRef(this.props.isDisabled ? null : this.ref.current, this.props.isDisabled ? null : this.favoriteRef.current, this.props.isDisabled ? null : this.liRef.current, this.props.index);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      var _a = this.props,\n          children = _a.children,\n          className = _a.className,\n          id = _a.id,\n          description = _a.description,\n          itemCount = _a.itemCount,\n          value = _a.value,\n          _onClick = _a.onClick,\n          isDisabled = _a.isDisabled,\n          isPlaceholder = _a.isPlaceholder,\n          isNoResultsOption = _a.isNoResultsOption,\n          isSelected = _a.isSelected,\n          isChecked = _a.isChecked,\n          isFocused = _a.isFocused,\n          sendRef = _a.sendRef,\n          keyHandler = _a.keyHandler,\n          index = _a.index,\n          component = _a.component,\n          inputId = _a.inputId,\n          isFavorite = _a.isFavorite,\n          _a$ariaIsFavoriteLabe = _a.ariaIsFavoriteLabel,\n          ariaIsFavoriteLabel = _a$ariaIsFavoriteLabe === void 0 ? 'starred' : _a$ariaIsFavoriteLabe,\n          _a$ariaIsNotFavoriteL = _a.ariaIsNotFavoriteLabel,\n          ariaIsNotFavoriteLabel = _a$ariaIsNotFavoriteL === void 0 ? 'not starred' : _a$ariaIsNotFavoriteL,\n          isLoad = _a.isLoad,\n          isLoading = _a.isLoading,\n          setViewMoreNextIndex = _a.setViewMoreNextIndex,\n          isLastOptionBeforeFooter = _a.isLastOptionBeforeFooter,\n          _a$isGrouped = _a.isGrouped,\n          isGrouped = _a$isGrouped === void 0 ? false : _a$isGrouped,\n          props = __rest(_a, [\"children\", \"className\", \"id\", \"description\", \"itemCount\", \"value\", \"onClick\", \"isDisabled\", \"isPlaceholder\", \"isNoResultsOption\", \"isSelected\", \"isChecked\", \"isFocused\", \"sendRef\", \"keyHandler\", \"index\", \"component\", \"inputId\", \"isFavorite\", \"ariaIsFavoriteLabel\", \"ariaIsNotFavoriteLabel\", \"isLoad\", \"isLoading\", \"setViewMoreNextIndex\", \"isLastOptionBeforeFooter\", \"isGrouped\"]);\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n      var Component = component;\n\n      if (!id && isFavorite !== null) {\n        // eslint-disable-next-line no-console\n        console.error('Please provide an id to use the favorites feature.');\n      }\n\n      var generatedId = id || getUniqueId('select-option');\n\n      var favoriteButton = function favoriteButton(onFavorite) {\n        return React.createElement(\"button\", {\n          className: css(styles.selectMenuItem, styles.modifiers.action, styles.modifiers.favoriteAction),\n          \"aria-label\": isFavorite ? ariaIsFavoriteLabel : ariaIsNotFavoriteLabel,\n          onClick: function onClick() {\n            onFavorite(generatedId.replace('favorite-', ''), isFavorite);\n          },\n          onKeyDown: function onKeyDown(event) {\n            _this2.onKeyDown(event, 1, function () {\n              return onFavorite(generatedId.replace('favorite-', ''), isFavorite);\n            });\n          },\n          ref: _this2.favoriteRef\n        }, React.createElement(\"span\", {\n          className: css(styles.selectMenuItemActionIcon)\n        }, React.createElement(StarIcon, null)));\n      };\n\n      var itemDisplay = itemCount ? React.createElement(\"span\", {\n        className: css(styles.selectMenuItemRow)\n      }, React.createElement(\"span\", {\n        className: css(styles.selectMenuItemText)\n      }, children || value && value.toString && value.toString()), React.createElement(\"span\", {\n        className: css(styles.selectMenuItemCount)\n      }, itemCount)) : children || value.toString();\n\n      var onViewMoreClick = function onViewMoreClick(event) {\n        // Set the index for the next item to focus after view more clicked, then call view more callback\n        setViewMoreNextIndex();\n\n        _onClick(event);\n      };\n\n      var renderOption = function renderOption(onSelect, onClose, variant, inputIdPrefix, onFavorite, shouldResetOnSelect) {\n        if (variant !== SelectVariant.checkbox && isLoading && isGrouped) {\n          return React.createElement(\"div\", {\n            role: \"presentation\",\n            className: css(styles.selectListItem, isLoading && styles.modifiers.loading, className)\n          }, children);\n        } else if (variant !== SelectVariant.checkbox && isLoad && isGrouped) {\n          return React.createElement(\"div\", null, React.createElement(\"button\", Object.assign({}, props, {\n            role: \"presentation\",\n            className: css(styles.selectMenuItem, styles.modifiers.load, className),\n            onClick: function onClick(event) {\n              onViewMoreClick(event);\n              event.stopPropagation();\n            },\n            ref: _this2.ref,\n            type: \"button\"\n          }), children || value.toString()));\n        } else if (variant !== SelectVariant.checkbox) {\n          return React.createElement(\"li\", {\n            id: generatedId,\n            role: \"presentation\",\n            className: css(isLoading && styles.selectListItem, !isLoading && styles.selectMenuWrapper, isFavorite && styles.modifiers.favorite, isFocused && styles.modifiers.focus, isLoading && styles.modifiers.loading),\n            ref: _this2.liRef\n          }, isLoading && children, isLoad && !isGrouped && React.createElement(\"button\", Object.assign({}, props, {\n            className: css(styles.selectMenuItem, styles.modifiers.load, className),\n            onClick: function onClick(event) {\n              onViewMoreClick(event);\n              event.stopPropagation();\n            },\n            ref: _this2.ref,\n            onKeyDown: function onKeyDown(event) {\n              _this2.onKeyDown(event, 0);\n            },\n            type: \"button\"\n          }), itemDisplay), !isLoading && !isLoad && React.createElement(React.Fragment, null, React.createElement(Component, Object.assign({}, props, {\n            className: css(styles.selectMenuItem, isLoad && styles.modifiers.load, isSelected && styles.modifiers.selected, isDisabled && styles.modifiers.disabled, description && styles.modifiers.description, isFavorite !== null && styles.modifiers.link, className),\n            onClick: function onClick(event) {\n              if (!isDisabled) {\n                _onClick(event);\n\n                onSelect(event, value, isPlaceholder);\n                shouldResetOnSelect && onClose();\n              }\n            },\n            role: \"option\",\n            \"aria-selected\": isSelected || null,\n            ref: _this2.ref,\n            onKeyDown: function onKeyDown(event) {\n              _this2.onKeyDown(event, 0);\n            },\n            type: \"button\"\n          }), description && React.createElement(React.Fragment, null, React.createElement(\"span\", {\n            className: css(styles.selectMenuItemMain)\n          }, itemDisplay, isSelected && React.createElement(\"span\", {\n            className: css(styles.selectMenuItemIcon)\n          }, React.createElement(CheckIcon, {\n            \"aria-hidden\": true\n          }))), React.createElement(\"span\", {\n            className: css(styles.selectMenuItemDescription)\n          }, description)), !description && React.createElement(React.Fragment, null, itemDisplay, isSelected && React.createElement(\"span\", {\n            className: css(styles.selectMenuItemIcon)\n          }, React.createElement(CheckIcon, {\n            \"aria-hidden\": true\n          })))), isFavorite !== null && id && favoriteButton(onFavorite)));\n        } else if (variant === SelectVariant.checkbox && isLoad) {\n          return React.createElement(\"button\", {\n            className: css(styles.selectMenuItem, styles.modifiers.load, isFocused && styles.modifiers.focus, className),\n            onKeyDown: function onKeyDown(event) {\n              _this2.onKeyDown(event, 0, undefined, true);\n            },\n            onClick: function onClick(event) {\n              onViewMoreClick(event);\n              event.stopPropagation();\n            },\n            ref: _this2.ref\n          }, children || value && value.toString && value.toString());\n        } else if (variant === SelectVariant.checkbox && isLoading) {\n          return React.createElement(\"div\", {\n            className: css(styles.selectListItem, isLoading && styles.modifiers.loading, className)\n          }, children);\n        } else if (variant === SelectVariant.checkbox && !isNoResultsOption && !isLoading && !isLoad) {\n          return React.createElement(\"label\", Object.assign({}, props, {\n            className: css(checkStyles.check, styles.selectMenuItem, isDisabled && styles.modifiers.disabled, description && styles.modifiers.description, className),\n            onKeyDown: function onKeyDown(event) {\n              _this2.onKeyDown(event, 0, undefined, true);\n            }\n          }), React.createElement(\"input\", {\n            id: inputId || \"\".concat(inputIdPrefix, \"-\").concat(value.toString()),\n            className: css(checkStyles.checkInput),\n            type: \"checkbox\",\n            onChange: function onChange(event) {\n              if (!isDisabled) {\n                _onClick(event);\n\n                onSelect(event, value);\n              }\n            },\n            ref: _this2.ref,\n            checked: isChecked || false,\n            disabled: isDisabled\n          }), React.createElement(\"span\", {\n            className: css(checkStyles.checkLabel, isDisabled && styles.modifiers.disabled)\n          }, itemDisplay), description && React.createElement(\"div\", {\n            className: css(checkStyles.checkDescription)\n          }, description));\n        } else if (variant === SelectVariant.checkbox && isNoResultsOption && !isLoading && !isLoad) {\n          return React.createElement(\"div\", null, React.createElement(Component, Object.assign({}, props, {\n            className: css(styles.selectMenuItem, isSelected && styles.modifiers.selected, isDisabled && styles.modifiers.disabled, className),\n            role: \"option\",\n            \"aria-selected\": isSelected || null,\n            ref: _this2.ref,\n            onKeyDown: function onKeyDown(event) {\n              _this2.onKeyDown(event, 0, undefined, true);\n            },\n            type: \"button\"\n          }), itemDisplay));\n        }\n      };\n\n      return React.createElement(SelectConsumer, null, function (_ref) {\n        var onSelect = _ref.onSelect,\n            onClose = _ref.onClose,\n            variant = _ref.variant,\n            inputIdPrefix = _ref.inputIdPrefix,\n            onFavorite = _ref.onFavorite,\n            shouldResetOnSelect = _ref.shouldResetOnSelect;\n        return React.createElement(React.Fragment, null, renderOption(onSelect, onClose, variant, inputIdPrefix, onFavorite, shouldResetOnSelect));\n      });\n    }\n  }]);\n\n  return SelectOption;\n}(React.Component);\nSelectOption.displayName = 'SelectOption';\nSelectOption.defaultProps = {\n  className: '',\n  value: '',\n  index: 0,\n  isDisabled: false,\n  isPlaceholder: false,\n  isSelected: false,\n  isChecked: false,\n  isNoResultsOption: false,\n  component: 'button',\n  onClick: function onClick() {},\n  sendRef: function sendRef() {},\n  keyHandler: function keyHandler() {},\n  inputId: '',\n  isFavorite: null,\n  isLoad: false,\n  isLoading: false,\n  setViewMoreNextIndex: function setViewMoreNextIndex() {},\n  isLastOptionBeforeFooter: function isLastOptionBeforeFooter() {\n    return false;\n  }\n};","map":{"version":3,"mappings":"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","names":["React","styles","checkStyles","css","CheckIcon","SelectConsumer","SelectVariant","StarIcon","getUniqueId","KeyTypes","SelectOption","createRef","event","innerIndex","onEnter","isCheckbox","props","index","keyHandler","isLastOptionBeforeFooter","isLastItemBeforeFooter","undefined","key","Tab","shiftKey","stopPropagation","preventDefault","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","Enter","ref","current","click","sendRef","isDisabled","favoriteRef","liRef","children","_a","className","id","description","itemCount","value","onClick","isPlaceholder","isNoResultsOption","isSelected","isChecked","isFocused","component","inputId","isFavorite","ariaIsFavoriteLabel","ariaIsNotFavoriteLabel","isLoad","isLoading","setViewMoreNextIndex","isGrouped","__rest","Component","console","error","generatedId","favoriteButton","onFavorite","selectMenuItem","modifiers","action","favoriteAction","replace","onKeyDown","selectMenuItemActionIcon","itemDisplay","selectMenuItemRow","selectMenuItemText","toString","selectMenuItemCount","onViewMoreClick","renderOption","onSelect","onClose","variant","inputIdPrefix","shouldResetOnSelect","checkbox","role","selectListItem","loading","load","type","selectMenuWrapper","favorite","focus","Object","selected","disabled","link","Fragment","selectMenuItemMain","selectMenuItemIcon","selectMenuItemDescription","check","checkInput","onChange","checked","checkLabel","checkDescription"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Select/SelectOption.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport checkStyles from '@patternfly/react-styles/css/components/Check/check';\nimport { css } from '@patternfly/react-styles';\nimport CheckIcon from '@patternfly/react-icons/dist/esm/icons/check-icon';\nimport { SelectConsumer, SelectVariant } from './selectConstants';\nimport StarIcon from '@patternfly/react-icons/dist/esm/icons/star-icon';\nimport { getUniqueId } from '../../helpers/util';\nimport { KeyTypes } from '../../helpers/constants';\n\nexport interface SelectOptionObject {\n  /** Function returns a string to represent the select option object */\n  toString(): string;\n  /** Function returns a true if the passed in select option is equal to this select option object, false otherwise */\n  compareTo?(selectOption: any): boolean;\n}\nexport interface SelectOptionProps extends Omit<React.HTMLProps<HTMLElement>, 'type' | 'ref' | 'value'> {\n  /** Optional alternate display for the option */\n  children?: React.ReactNode;\n  /** Additional classes added to the Select Option */\n  className?: string;\n  /** Description of the item for single and both typeahead select variants */\n  description?: React.ReactNode;\n  /** Number of items matching the option */\n  itemCount?: number;\n  /** @hide Internal index of the option */\n  index?: number;\n  /** Indicates which component will be used as select item */\n  component?: React.ReactNode;\n  /** The value for the option, can be a string or select option object */\n  value: string | SelectOptionObject;\n  /** Flag indicating if the option is disabled */\n  isDisabled?: boolean;\n  /** Flag indicating if the option acts as a placeholder */\n  isPlaceholder?: boolean;\n  /** Flag indicating if the option acts as a \"no results\" indicator */\n  isNoResultsOption?: boolean;\n  /** @hide Internal flag indicating if the option is selected */\n  isSelected?: boolean;\n  /** @hide Internal flag indicating if the option is checked */\n  isChecked?: boolean;\n  /** Flag forcing the focused state */\n  isFocused?: boolean;\n  /** @hide Internal callback for ref tracking */\n  sendRef?: (\n    ref: React.ReactNode,\n    favoriteRef: React.ReactNode,\n    optionContainerRef: React.ReactNode,\n    index: number\n  ) => void;\n  /** @hide Internal callback for keyboard navigation */\n  keyHandler?: (index: number, innerIndex: number, position: string) => void;\n  /** Optional callback for click event */\n  onClick?: (event: React.MouseEvent | React.ChangeEvent) => void;\n  /** Id of the checkbox input */\n  inputId?: string;\n  /** @hide Internal Flag indicating if the option is favorited */\n  isFavorite?: boolean;\n  /** Aria label text for favoritable button when favorited */\n  ariaIsFavoriteLabel?: string;\n  /** Aria label text for favoritable button when not favorited */\n  ariaIsNotFavoriteLabel?: string;\n  /** ID of the item. Required for tracking favorites */\n  id?: string;\n  /** @hide Internal flag to apply the load styling to view more option */\n  isLoad?: boolean;\n  /** @hide Internal flag to apply the loading styling to spinner */\n  isLoading?: boolean;\n  /** @hide Internal callback for the setting the index of the next item to focus after view more is clicked */\n  setViewMoreNextIndex?: () => void;\n  /** @hide Flag indicating this is the last option when there is a footer */\n  isLastOptionBeforeFooter?: (index: number) => boolean;\n  /** @hide Flag indicating that the the option loading variant is in a grouped select */\n  isGrouped?: boolean;\n}\n\nexport class SelectOption extends React.Component<SelectOptionProps> {\n  static displayName = 'SelectOption';\n  private ref = React.createRef<any>();\n  private liRef = React.createRef<any>();\n  private favoriteRef = React.createRef<any>();\n  static defaultProps: SelectOptionProps = {\n    className: '',\n    value: '',\n    index: 0,\n    isDisabled: false,\n    isPlaceholder: false,\n    isSelected: false,\n    isChecked: false,\n    isNoResultsOption: false,\n    component: 'button',\n    onClick: () => {},\n    sendRef: () => {},\n    keyHandler: () => {},\n    inputId: '',\n    isFavorite: null,\n    isLoad: false,\n    isLoading: false,\n    setViewMoreNextIndex: () => {},\n    isLastOptionBeforeFooter: () => false\n  };\n\n  componentDidMount() {\n    this.props.sendRef(\n      this.props.isDisabled ? null : this.ref.current,\n      this.props.isDisabled ? null : this.favoriteRef.current,\n      this.props.isDisabled ? null : this.liRef.current,\n      this.props.index\n    );\n  }\n\n  componentDidUpdate() {\n    this.props.sendRef(\n      this.props.isDisabled ? null : this.ref.current,\n      this.props.isDisabled ? null : this.favoriteRef.current,\n      this.props.isDisabled ? null : this.liRef.current,\n      this.props.index\n    );\n  }\n\n  onKeyDown = (event: React.KeyboardEvent, innerIndex: number, onEnter?: any, isCheckbox?: boolean) => {\n    const { index, keyHandler, isLastOptionBeforeFooter } = this.props;\n    let isLastItemBeforeFooter = false;\n    if (isLastOptionBeforeFooter !== undefined) {\n      isLastItemBeforeFooter = isLastOptionBeforeFooter(index);\n    }\n\n    if (event.key === KeyTypes.Tab) {\n      // More modal-like experience for checkboxes\n      if (isCheckbox && !isLastItemBeforeFooter) {\n        if (event.shiftKey) {\n          keyHandler(index, innerIndex, 'up');\n        } else {\n          keyHandler(index, innerIndex, 'down');\n        }\n        event.stopPropagation();\n      } else {\n        if (event.shiftKey) {\n          keyHandler(index, innerIndex, 'up');\n        } else {\n          keyHandler(index, innerIndex, 'tab');\n        }\n      }\n    }\n    event.preventDefault();\n    if (event.key === KeyTypes.ArrowUp) {\n      keyHandler(index, innerIndex, 'up');\n    } else if (event.key === KeyTypes.ArrowDown) {\n      keyHandler(index, innerIndex, 'down');\n    } else if (event.key === KeyTypes.ArrowLeft) {\n      keyHandler(index, innerIndex, 'left');\n    } else if (event.key === KeyTypes.ArrowRight) {\n      keyHandler(index, innerIndex, 'right');\n    } else if (event.key === KeyTypes.Enter) {\n      if (onEnter !== undefined) {\n        onEnter();\n      } else {\n        this.ref.current.click();\n      }\n    }\n  };\n\n  render() {\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    const {\n      children,\n      className,\n      id,\n      description,\n      itemCount,\n      value,\n      onClick,\n      isDisabled,\n      isPlaceholder,\n      isNoResultsOption,\n      isSelected,\n      isChecked,\n      isFocused,\n      sendRef,\n      keyHandler,\n      index,\n      component,\n      inputId,\n      isFavorite,\n      ariaIsFavoriteLabel = 'starred',\n      ariaIsNotFavoriteLabel = 'not starred',\n      isLoad,\n      isLoading,\n      setViewMoreNextIndex,\n      // eslint-disable-next-line no-console\n      isLastOptionBeforeFooter,\n      isGrouped = false,\n      ...props\n    } = this.props;\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    const Component = component as any;\n\n    if (!id && isFavorite !== null) {\n      // eslint-disable-next-line no-console\n      console.error('Please provide an id to use the favorites feature.');\n    }\n\n    const generatedId = id || getUniqueId('select-option');\n    const favoriteButton = (onFavorite: any) => (\n      <button\n        className={css(styles.selectMenuItem, styles.modifiers.action, styles.modifiers.favoriteAction)}\n        aria-label={isFavorite ? ariaIsFavoriteLabel : ariaIsNotFavoriteLabel}\n        onClick={() => {\n          onFavorite(generatedId.replace('favorite-', ''), isFavorite);\n        }}\n        onKeyDown={event => {\n          this.onKeyDown(event, 1, () => onFavorite(generatedId.replace('favorite-', ''), isFavorite));\n        }}\n        ref={this.favoriteRef}\n      >\n        <span className={css(styles.selectMenuItemActionIcon)}>\n          <StarIcon />\n        </span>\n      </button>\n    );\n\n    const itemDisplay = itemCount ? (\n      <span className={css(styles.selectMenuItemRow)}>\n        <span className={css(styles.selectMenuItemText)}>\n          {children || (value && value.toString && value.toString())}\n        </span>\n        <span className={css(styles.selectMenuItemCount)}>{itemCount}</span>\n      </span>\n    ) : (\n      children || value.toString()\n    );\n\n    const onViewMoreClick = (event: any) => {\n      // Set the index for the next item to focus after view more clicked, then call view more callback\n      setViewMoreNextIndex();\n      onClick(event);\n    };\n\n    const renderOption = (\n      onSelect: (\n        event: React.MouseEvent<any, MouseEvent> | React.ChangeEvent<HTMLInputElement>,\n        value: string | SelectOptionObject,\n        isPlaceholder?: boolean\n      ) => void,\n      onClose: () => void,\n      variant: string,\n      inputIdPrefix: string,\n      onFavorite: (itemId: string, isFavorite: boolean) => void,\n      shouldResetOnSelect: boolean\n    ) => {\n      if (variant !== SelectVariant.checkbox && isLoading && isGrouped) {\n        return (\n          <div\n            role=\"presentation\"\n            className={css(styles.selectListItem, isLoading && styles.modifiers.loading, className)}\n          >\n            {children}\n          </div>\n        );\n      } else if (variant !== SelectVariant.checkbox && isLoad && isGrouped) {\n        return (\n          <div>\n            <button\n              {...props}\n              role=\"presentation\"\n              className={css(styles.selectMenuItem, styles.modifiers.load, className)}\n              onClick={(event: any) => {\n                onViewMoreClick(event);\n                event.stopPropagation();\n              }}\n              ref={this.ref}\n              type=\"button\"\n            >\n              {children || value.toString()}\n            </button>\n          </div>\n        );\n      } else if (variant !== SelectVariant.checkbox) {\n        return (\n          <li\n            id={generatedId}\n            role=\"presentation\"\n            className={css(\n              isLoading && styles.selectListItem,\n              !isLoading && styles.selectMenuWrapper,\n              isFavorite && styles.modifiers.favorite,\n              isFocused && styles.modifiers.focus,\n              isLoading && styles.modifiers.loading\n            )}\n            ref={this.liRef}\n          >\n            {isLoading && children}\n            {isLoad && !isGrouped && (\n              <button\n                {...props}\n                className={css(styles.selectMenuItem, styles.modifiers.load, className)}\n                onClick={(event: any) => {\n                  onViewMoreClick(event);\n                  event.stopPropagation();\n                }}\n                ref={this.ref}\n                onKeyDown={(event: React.KeyboardEvent) => {\n                  this.onKeyDown(event, 0);\n                }}\n                type=\"button\"\n              >\n                {itemDisplay}\n              </button>\n            )}\n            {!isLoading && !isLoad && (\n              <>\n                <Component\n                  {...props}\n                  className={css(\n                    styles.selectMenuItem,\n                    isLoad && styles.modifiers.load,\n                    isSelected && styles.modifiers.selected,\n                    isDisabled && styles.modifiers.disabled,\n                    description && styles.modifiers.description,\n                    isFavorite !== null && styles.modifiers.link,\n                    className\n                  )}\n                  onClick={(event: any) => {\n                    if (!isDisabled) {\n                      onClick(event);\n                      onSelect(event, value, isPlaceholder);\n                      shouldResetOnSelect && onClose();\n                    }\n                  }}\n                  role=\"option\"\n                  aria-selected={isSelected || null}\n                  ref={this.ref}\n                  onKeyDown={(event: React.KeyboardEvent) => {\n                    this.onKeyDown(event, 0);\n                  }}\n                  type=\"button\"\n                >\n                  {description && (\n                    <React.Fragment>\n                      <span className={css(styles.selectMenuItemMain)}>\n                        {itemDisplay}\n                        {isSelected && (\n                          <span className={css(styles.selectMenuItemIcon)}>\n                            <CheckIcon aria-hidden />\n                          </span>\n                        )}\n                      </span>\n                      <span className={css(styles.selectMenuItemDescription)}>{description}</span>\n                    </React.Fragment>\n                  )}\n                  {!description && (\n                    <React.Fragment>\n                      {itemDisplay}\n                      {isSelected && (\n                        <span className={css(styles.selectMenuItemIcon)}>\n                          <CheckIcon aria-hidden />\n                        </span>\n                      )}\n                    </React.Fragment>\n                  )}\n                </Component>\n                {isFavorite !== null && id && favoriteButton(onFavorite)}\n              </>\n            )}\n          </li>\n        );\n      } else if (variant === SelectVariant.checkbox && isLoad) {\n        return (\n          <button\n            className={css(\n              styles.selectMenuItem,\n              styles.modifiers.load,\n              isFocused && styles.modifiers.focus,\n              className\n            )}\n            onKeyDown={(event: React.KeyboardEvent) => {\n              this.onKeyDown(event, 0, undefined, true);\n            }}\n            onClick={(event: any) => {\n              onViewMoreClick(event);\n              event.stopPropagation();\n            }}\n            ref={this.ref}\n          >\n            {children || (value && value.toString && value.toString())}\n          </button>\n        );\n      } else if (variant === SelectVariant.checkbox && isLoading) {\n        return (\n          <div className={css(styles.selectListItem, isLoading && styles.modifiers.loading, className)}>{children}</div>\n        );\n      } else if (variant === SelectVariant.checkbox && !isNoResultsOption && !isLoading && !isLoad) {\n        return (\n          <label\n            {...props}\n            className={css(\n              checkStyles.check,\n              styles.selectMenuItem,\n              isDisabled && styles.modifiers.disabled,\n              description && styles.modifiers.description,\n              className\n            )}\n            onKeyDown={(event: React.KeyboardEvent) => {\n              this.onKeyDown(event, 0, undefined, true);\n            }}\n          >\n            <input\n              id={inputId || `${inputIdPrefix}-${value.toString()}`}\n              className={css(checkStyles.checkInput)}\n              type=\"checkbox\"\n              onChange={event => {\n                if (!isDisabled) {\n                  onClick(event);\n                  onSelect(event, value);\n                }\n              }}\n              ref={this.ref}\n              checked={isChecked || false}\n              disabled={isDisabled}\n            />\n            <span className={css(checkStyles.checkLabel, isDisabled && styles.modifiers.disabled)}>{itemDisplay}</span>\n            {description && <div className={css(checkStyles.checkDescription)}>{description}</div>}\n          </label>\n        );\n      } else if (variant === SelectVariant.checkbox && isNoResultsOption && !isLoading && !isLoad) {\n        return (\n          <div>\n            <Component\n              {...props}\n              className={css(\n                styles.selectMenuItem,\n                isSelected && styles.modifiers.selected,\n                isDisabled && styles.modifiers.disabled,\n                className\n              )}\n              role=\"option\"\n              aria-selected={isSelected || null}\n              ref={this.ref}\n              onKeyDown={(event: React.KeyboardEvent) => {\n                this.onKeyDown(event, 0, undefined, true);\n              }}\n              type=\"button\"\n            >\n              {itemDisplay}\n            </Component>\n          </div>\n        );\n      }\n    };\n\n    return (\n      <SelectConsumer>\n        {({ onSelect, onClose, variant, inputIdPrefix, onFavorite, shouldResetOnSelect }) => (\n          <React.Fragment>\n            {renderOption(onSelect, onClose, variant, inputIdPrefix, onFavorite, shouldResetOnSelect)}\n          </React.Fragment>\n        )}\n      </SelectConsumer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}