{"ast":null,"code":"import getDocumentElement from './getDocumentElement';\nimport getComputedStyle from './getComputedStyle';\nimport getWindowScrollBarX from './getWindowScrollBarX';\nimport getWindowScroll from './getWindowScroll'; // Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\n/**\n * @param element\n */\n\nexport default function getDocumentRect(element) {\n  var html = getDocumentElement(element);\n  var winScroll = getWindowScroll(element);\n  var body = element.ownerDocument.body;\n  var width = Math.max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  var height = Math.max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n  var y = -winScroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += Math.max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}","map":{"version":3,"mappings":"AAEA,OAAOA,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,eAAP,MAA4B,mBAA5B,C,CAEA;AACA;;AACA;;;;AAGA,eAAc,SAAUC,eAAV,CAA0BC,OAA1B,EAA8C;EAC1D,IAAMC,IAAI,GAAGN,kBAAkB,CAACK,OAAD,CAA/B;EACA,IAAME,SAAS,GAAGJ,eAAe,CAACE,OAAD,CAAjC;EACA,IAAMG,IAAI,GAAGH,OAAO,CAACI,aAAR,CAAsBD,IAAnC;EAEA,IAAME,KAAK,GAAGC,IAAI,CAACC,GAAL,CAASN,IAAI,CAACO,WAAd,EAA2BP,IAAI,CAACQ,WAAhC,EAA6CN,IAAI,GAAGA,IAAI,CAACK,WAAR,GAAsB,CAAvE,EAA0EL,IAAI,GAAGA,IAAI,CAACM,WAAR,GAAsB,CAApG,CAAd;EACA,IAAMC,MAAM,GAAGJ,IAAI,CAACC,GAAL,CACbN,IAAI,CAACU,YADQ,EAEbV,IAAI,CAACW,YAFQ,EAGbT,IAAI,GAAGA,IAAI,CAACQ,YAAR,GAAuB,CAHd,EAIbR,IAAI,GAAGA,IAAI,CAACS,YAAR,GAAuB,CAJd,CAAf;EAOA,IAAIC,CAAC,GAAG,CAACX,SAAS,CAACY,UAAX,GAAwBjB,mBAAmB,CAACG,OAAD,CAAnD;EACA,IAAMe,CAAC,GAAG,CAACb,SAAS,CAACc,SAArB;;EAEA,IAAIpB,gBAAgB,CAACO,IAAI,IAAIF,IAAT,CAAhB,CAA+BgB,SAA/B,KAA6C,KAAjD,EAAwD;IACtDJ,CAAC,IAAIP,IAAI,CAACC,GAAL,CAASN,IAAI,CAACQ,WAAd,EAA2BN,IAAI,GAAGA,IAAI,CAACM,WAAR,GAAsB,CAArD,IAA0DJ,KAA/D;EACD;;EAED,OAAO;IAAEA,KAAK,EAALA,KAAF;IAASK,MAAM,EAANA,MAAT;IAAiBG,CAAC,EAADA,CAAjB;IAAoBE,CAAC,EAADA;EAApB,CAAP;AACD","names":["getDocumentElement","getComputedStyle","getWindowScrollBarX","getWindowScroll","getDocumentRect","element","html","winScroll","body","ownerDocument","width","Math","max","scrollWidth","clientWidth","height","scrollHeight","clientHeight","x","scrollLeft","y","scrollTop","direction"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/dom-utils/getDocumentRect.ts"],"sourcesContent":["// @ts-nocheck\nimport { Rect } from '../types';\nimport getDocumentElement from './getDocumentElement';\nimport getComputedStyle from './getComputedStyle';\nimport getWindowScrollBarX from './getWindowScrollBarX';\nimport getWindowScroll from './getWindowScroll';\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n/**\n * @param element\n */\nexport default function getDocumentRect(element: HTMLElement): Rect {\n  const html = getDocumentElement(element);\n  const winScroll = getWindowScroll(element);\n  const body = element.ownerDocument.body;\n\n  const width = Math.max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = Math.max(\n    html.scrollHeight,\n    html.clientHeight,\n    body ? body.scrollHeight : 0,\n    body ? body.clientHeight : 0\n  );\n\n  let x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -winScroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += Math.max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return { width, height, x, y };\n}\n"]},"metadata":{},"sourceType":"module"}