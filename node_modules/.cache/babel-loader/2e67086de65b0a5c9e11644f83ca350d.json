{"ast":null,"code":"// @ts-nocheck\nimport { isElement } from './instanceOf';\n/**\n * @param element\n */\n\nexport default function getDocumentElement(element) {\n  // $FlowFixMe: assume body is always available\n  return (isElement(element) ? element.ownerDocument : element.document).documentElement;\n}","map":{"version":3,"mappings":"AAAA;AACA,SAASA,SAAT,QAA0B,cAA1B;AAGA;;;;AAGA,eAAc,SAAUC,kBAAV,CAA6BC,OAA7B,EAAsD;EAClE;EACA,OAAO,CAACF,SAAS,CAACE,OAAD,CAAT,GAAqBA,OAAO,CAACC,aAA7B,GAA6CD,OAAO,CAACE,QAAtD,EAAgEC,eAAvE;AACD","names":["isElement","getDocumentElement","element","ownerDocument","document","documentElement"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/helpers/Popper/thirdparty/popper-core/dom-utils/getDocumentElement.ts"],"sourcesContent":["// @ts-nocheck\nimport { isElement } from './instanceOf';\nimport { Window } from '../types';\n\n/**\n * @param element\n */\nexport default function getDocumentElement(element: Element | Window): HTMLElement {\n  // $FlowFixMe: assume body is always available\n  return (isElement(element) ? element.ownerDocument : element.document).documentElement;\n}\n"]},"metadata":{},"sourceType":"module"}