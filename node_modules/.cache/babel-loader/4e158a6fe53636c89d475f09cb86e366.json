{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/InputGroup/input-group';\nimport { css } from '@patternfly/react-styles';\nimport { FormSelect } from '../FormSelect';\nimport { TextArea } from '../TextArea';\nimport { TextInput } from '../TextInput';\nexport var InputGroup = function InputGroup(_a) {\n  var _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      children = _a.children,\n      innerRef = _a.innerRef,\n      props = __rest(_a, [\"className\", \"children\", \"innerRef\"]);\n\n  var formCtrls = [FormSelect, TextArea, TextInput].map(function (comp) {\n    return comp.displayName;\n  });\n  var idItem = React.Children.toArray(children).find(function (child) {\n    return !formCtrls.includes(child.type.displayName) && child.props.id;\n  });\n  var inputGroupRef = innerRef || React.useRef(null);\n  return React.createElement(\"div\", Object.assign({\n    ref: inputGroupRef,\n    className: css(styles.inputGroup, className)\n  }, props), idItem ? React.Children.map(children, function (child) {\n    return formCtrls.includes(child.type.displayName) ? React.cloneElement(child, {\n      'aria-describedby': idItem.props.id\n    }) : child;\n  }) : children);\n};\nInputGroup.displayName = 'InputGroup';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,gEAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,SAAT,QAA0B,cAA1B;AAWA,OAAO,IAAMC,UAAU,GAA6C,SAAvDA,UAAuD,CAACC,EAAD,EAK9C;qBAFZA,GAFRC;MAAAA,sCAAY;MACZC,WACQF,GADRE;MACAC,WAAQH,GAARG;MACGC,QAAKC,WAJ2D,qCAI3D;;EAER,IAAMC,SAAS,GAAG,CAACV,UAAD,EAAaC,QAAb,EAAuBC,SAAvB,EAAkCS,GAAlC,CAAsC,cAAI;IAAA,OAAIC,IAAI,CAACC,WAAT;EAAA,CAA1C,CAAlB;EACA,IAAMC,MAAM,GAAGjB,KAAK,CAACkB,QAAN,CAAeC,OAAf,CAAuBV,QAAvB,EAAiCW,IAAjC,CACb,UAACC,KAAD;IAAA,OAAgB,CAACR,SAAS,CAACS,QAAV,CAAmBD,KAAK,CAACE,IAAN,CAAWP,WAA9B,CAAD,IAA+CK,KAAK,CAACV,KAAN,CAAYa,EAA3E;EAAA,CADa,CAAf;EAIA,IAAMC,aAAa,GAAGf,QAAQ,IAAIV,KAAK,CAAC0B,MAAN,CAAa,IAAb,CAAlC;EAEA,OACE1B;IAAK2B,GAAG,EAAEF,aAAV;IAAyBjB,SAAS,EAAEN,GAAG,CAACD,MAAM,CAAC2B,UAAR,EAAoBpB,SAApB;EAAvC,GAA2EG,KAA3E,GACGM,MAAM,GACHjB,KAAK,CAACkB,QAAN,CAAeJ,GAAf,CAAmBL,QAAnB,EAA6B,UAACY,KAAD;IAAA,OAC3BR,SAAS,CAACS,QAAV,CAAmBD,KAAK,CAACE,IAAN,CAAWP,WAA9B,IACIhB,KAAK,CAAC6B,YAAN,CAAmBR,KAAnB,EAA0B;MAAE,oBAAoBJ,MAAM,CAACN,KAAP,CAAaa;IAAnC,CAA1B,CADJ,GAEIH,KAHuB;EAAA,CAA7B,CADG,GAMHZ,QAPN,CADF;AAWD,CAxBM;AAyBPH,UAAU,CAACU,WAAX,GAAyB,YAAzB","names":["React","styles","css","FormSelect","TextArea","TextInput","InputGroup","_a","className","children","innerRef","props","__rest","formCtrls","map","comp","displayName","idItem","Children","toArray","find","child","includes","type","id","inputGroupRef","useRef","ref","inputGroup","cloneElement"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/InputGroup/InputGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/InputGroup/input-group';\nimport { css } from '@patternfly/react-styles';\nimport { FormSelect } from '../FormSelect';\nimport { TextArea } from '../TextArea';\nimport { TextInput } from '../TextInput';\n\nexport interface InputGroupProps extends React.HTMLProps<HTMLDivElement> {\n  /** Additional classes added to the input group. */\n  className?: string;\n  /** Content rendered inside the input group. */\n  children: React.ReactNode;\n  /** @hide A reference object to attach to the input box */\n  innerRef?: React.RefObject<any>;\n}\n\nexport const InputGroup: React.FunctionComponent<InputGroupProps> = ({\n  className = '',\n  children,\n  innerRef,\n  ...props\n}: InputGroupProps) => {\n  const formCtrls = [FormSelect, TextArea, TextInput].map(comp => comp.displayName);\n  const idItem = React.Children.toArray(children).find(\n    (child: any) => !formCtrls.includes(child.type.displayName) && child.props.id\n  ) as React.ReactElement<{ id: string }>;\n\n  const inputGroupRef = innerRef || React.useRef(null);\n\n  return (\n    <div ref={inputGroupRef} className={css(styles.inputGroup, className)} {...props}>\n      {idItem\n        ? React.Children.map(children, (child: any) =>\n            formCtrls.includes(child.type.displayName)\n              ? React.cloneElement(child, { 'aria-describedby': idItem.props.id })\n              : child\n          )\n        : children}\n    </div>\n  );\n};\nInputGroup.displayName = 'InputGroup';\n"]},"metadata":{},"sourceType":"module"}