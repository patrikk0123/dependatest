{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport styles from '@patternfly/react-styles/css/components/Breadcrumb/breadcrumb';\nimport { css } from '@patternfly/react-styles';\nexport var BreadcrumbItem = function BreadcrumbItem(_a) {\n  var _a$children = _a.children,\n      children = _a$children === void 0 ? null : _a$children,\n      _a$className = _a.className,\n      classNameProp = _a$className === void 0 ? '' : _a$className,\n      _a$to = _a.to,\n      to = _a$to === void 0 ? undefined : _a$to,\n      _a$isActive = _a.isActive,\n      isActive = _a$isActive === void 0 ? false : _a$isActive,\n      _a$isDropdown = _a.isDropdown,\n      isDropdown = _a$isDropdown === void 0 ? false : _a$isDropdown,\n      showDivider = _a.showDivider,\n      _a$target = _a.target,\n      target = _a$target === void 0 ? undefined : _a$target,\n      _a$component = _a.component,\n      component = _a$component === void 0 ? 'a' : _a$component,\n      _a$render = _a.render,\n      render = _a$render === void 0 ? undefined : _a$render,\n      props = __rest(_a, [\"children\", \"className\", \"to\", \"isActive\", \"isDropdown\", \"showDivider\", \"target\", \"component\", \"render\"]);\n\n  var Component = component;\n  var ariaCurrent = isActive ? 'page' : undefined;\n  var className = css(styles.breadcrumbLink, isActive && styles.modifiers.current);\n  return React.createElement(\"li\", Object.assign({}, props, {\n    className: css(styles.breadcrumbItem, classNameProp)\n  }), showDivider && React.createElement(\"span\", {\n    className: styles.breadcrumbItemDivider\n  }, React.createElement(AngleRightIcon, null)), component === 'button' && React.createElement(\"button\", {\n    className: className,\n    \"aria-current\": ariaCurrent,\n    type: \"button\"\n  }, children), isDropdown && React.createElement(\"span\", {\n    className: css(styles.breadcrumbDropdown)\n  }, children), render && render({\n    className: className,\n    ariaCurrent: ariaCurrent\n  }), to && !render && React.createElement(Component, {\n    href: to,\n    target: target,\n    className: className,\n    \"aria-current\": ariaCurrent\n  }, children), !to && component !== 'button' && !isDropdown && children);\n};\nBreadcrumbItem.displayName = 'BreadcrumbItem';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,cAAP,MAA2B,yDAA3B;AACA,OAAOC,MAAP,MAAmB,+DAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AA4BA,OAAO,IAAMC,cAAc,GAAiD,SAA/DA,cAA+D,CAACC,EAAD,EAWlD;oBAFNA,GARlBC;MAAAA,oCAAW;qBAQOD,GAPlBE;MAAWC,0CAAgB;cAOTH,GANlBI;MAAAA,wBAAKC;oBAMaL,GALlBM;MAAAA,oCAAW;sBAKON,GAJlBO;MAAAA,wCAAa;MACbC,cAGkBR,GAHlBQ;kBAGkBR,GAFlBS;MAAAA,gCAASJ;qBAESL,GADlBU;MAAAA,sCAAY;kBACMV,GAAlBW;MAAAA,gCAASN;MACNO,QAAKC,WAVmE,yGAUnE;;EAER,IAAMC,SAAS,GAAGJ,SAAlB;EACA,IAAMK,WAAW,GAAGT,QAAQ,GAAG,MAAH,GAAYD,SAAxC;EACA,IAAMH,SAAS,GAAGJ,GAAG,CAACD,MAAM,CAACmB,cAAR,EAAwBV,QAAQ,IAAIT,MAAM,CAACoB,SAAP,CAAiBC,OAArD,CAArB;EACA,OACEvB,4CAAQiB,KAAR,EAAa;IAAEV,SAAS,EAAEJ,GAAG,CAACD,MAAM,CAACsB,cAAR,EAAwBhB,aAAxB;EAAhB,CAAb,GACGK,WAAW,IACVb;IAAMO,SAAS,EAAEL,MAAM,CAACuB;EAAxB,GACEzB,oBAACC,cAAD,EAAe,IAAf,CADF,CAFJ,EAMGc,SAAS,KAAK,QAAd,IACCf;IAAQO,SAAS,EAAEA,SAAnB;IAA4B,gBAAgBa,WAA5C;IAAyDM,IAAI,EAAC;EAA9D,GACGpB,QADH,CAPJ,EAWGM,UAAU,IAAIZ;IAAMO,SAAS,EAAEJ,GAAG,CAACD,MAAM,CAACyB,kBAAR;EAApB,GAAkDrB,QAAlD,CAXjB,EAYGU,MAAM,IAAIA,MAAM,CAAC;IAAET,SAAS,EAATA,SAAF;IAAaa,WAAW,EAAXA;EAAb,CAAD,CAZnB,EAaGX,EAAE,IAAI,CAACO,MAAP,IACChB,oBAACmB,SAAD,EAAU;IAACS,IAAI,EAAEnB,EAAP;IAAWK,MAAM,EAAEA,MAAnB;IAA2BP,SAAS,EAAEA,SAAtC;IAA+C,gBAAgBa;EAA/D,CAAV,EACGd,QADH,CAdJ,EAkBG,CAACG,EAAD,IAAOM,SAAS,KAAK,QAArB,IAAiC,CAACH,UAAlC,IAAgDN,QAlBnD,CADF;AAsBD,CArCM;AAsCPF,cAAc,CAACyB,WAAf,GAA6B,gBAA7B","names":["React","AngleRightIcon","styles","css","BreadcrumbItem","_a","children","className","classNameProp","to","undefined","isActive","isDropdown","showDivider","target","component","render","props","__rest","Component","ariaCurrent","breadcrumbLink","modifiers","current","breadcrumbItem","breadcrumbItemDivider","type","breadcrumbDropdown","href","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Breadcrumb/BreadcrumbItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport styles from '@patternfly/react-styles/css/components/Breadcrumb/breadcrumb';\nimport { css } from '@patternfly/react-styles';\n\nexport interface BreadcrumbItemRenderArgs {\n  className: string;\n  ariaCurrent: 'page' | undefined;\n}\n\nexport interface BreadcrumbItemProps extends React.HTMLProps<HTMLLIElement> {\n  /** Content rendered inside the breadcrumb item. */\n  children?: React.ReactNode;\n  /** Additional classes added to the breadcrumb item. */\n  className?: string;\n  /** HREF for breadcrumb link. */\n  to?: string;\n  /** Flag indicating whether the item is active. */\n  isActive?: boolean;\n  /** Flag indicating whether the item contains a dropdown. */\n  isDropdown?: boolean;\n  /** Internal prop set by Breadcrumb on all but the first crumb */\n  showDivider?: boolean;\n  /** Target for breadcrumb link. */\n  target?: string;\n  /** Sets the base component to render. Defaults to <a> */\n  component?: React.ElementType;\n  /** A render function to render the component inside the breadcrumb item. */\n  render?: (props: BreadcrumbItemRenderArgs) => React.ReactNode;\n}\n\nexport const BreadcrumbItem: React.FunctionComponent<BreadcrumbItemProps> = ({\n  children = null,\n  className: classNameProp = '',\n  to = undefined,\n  isActive = false,\n  isDropdown = false,\n  showDivider,\n  target = undefined,\n  component = 'a',\n  render = undefined,\n  ...props\n}: BreadcrumbItemProps) => {\n  const Component = component;\n  const ariaCurrent = isActive ? 'page' : undefined;\n  const className = css(styles.breadcrumbLink, isActive && styles.modifiers.current);\n  return (\n    <li {...props} className={css(styles.breadcrumbItem, classNameProp)}>\n      {showDivider && (\n        <span className={styles.breadcrumbItemDivider}>\n          <AngleRightIcon />\n        </span>\n      )}\n      {component === 'button' && (\n        <button className={className} aria-current={ariaCurrent} type=\"button\">\n          {children}\n        </button>\n      )}\n      {isDropdown && <span className={css(styles.breadcrumbDropdown)}>{children}</span>}\n      {render && render({ className, ariaCurrent })}\n      {to && !render && (\n        <Component href={to} target={target} className={className} aria-current={ariaCurrent}>\n          {children}\n        </Component>\n      )}\n      {!to && component !== 'button' && !isDropdown && children}\n    </li>\n  );\n};\nBreadcrumbItem.displayName = 'BreadcrumbItem';\n"]},"metadata":{},"sourceType":"module"}