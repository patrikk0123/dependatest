{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/ToggleGroup/toggle-group';\nimport { ToggleGroupItem } from './ToggleGroupItem';\nexport const ToggleGroup = _a => {\n  var {\n    className,\n    children,\n    isCompact = false,\n    areAllGroupsDisabled = false,\n    'aria-label': ariaLabel\n  } = _a,\n      props = __rest(_a, [\"className\", \"children\", \"isCompact\", \"areAllGroupsDisabled\", 'aria-label']);\n\n  const toggleGroupItemList = React.Children.map(children, child => {\n    const childCompName = child.type.name;\n    return childCompName !== ToggleGroupItem.name ? child : React.cloneElement(child, areAllGroupsDisabled ? {\n      isDisabled: true\n    } : {});\n  });\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.toggleGroup, isCompact && styles.modifiers.compact, className),\n    role: \"group\",\n    \"aria-label\": ariaLabel\n  }, props), toggleGroupItemList);\n};\nToggleGroup.displayName = 'ToggleGroup';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,kEAAnB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAeA,OAAO,MAAMC,WAAW,GAA+CC,EAAD,IAO/C;MAPgD;IACrEC,SADqE;IAErEC,QAFqE;IAGrEC,SAAS,GAAG,KAHyD;IAIrEC,oBAAoB,GAAG,KAJ8C;IAKrE,cAAcC;EALuD,IAK9CL;MACpBM,KAAK,cAN6D,4EAM7D;;EAER,MAAMC,mBAAmB,GAAGZ,KAAK,CAACa,QAAN,CAAeC,GAAf,CAAmBP,QAAnB,EAA6BQ,KAAK,IAAG;IAC/D,MAAMC,aAAa,GAAID,KAAa,CAACE,IAAd,CAAmBC,IAA1C;IACA,OAAOF,aAAa,KAAKb,eAAe,CAACe,IAAlC,GACHH,KADG,GAEHf,KAAK,CAACmB,YAAN,CAAmBJ,KAAnB,EAAgDN,oBAAoB,GAAG;MAAEW,UAAU,EAAE;IAAd,CAAH,GAA0B,EAA9F,CAFJ;EAGD,CAL2B,CAA5B;EAOA,OACEpB;IACEM,SAAS,EAAEL,GAAG,CAACC,MAAM,CAACmB,WAAR,EAAqBb,SAAS,IAAIN,MAAM,CAACoB,SAAP,CAAiBC,OAAnD,EAA4DjB,SAA5D,CADhB;IAEEkB,IAAI,EAAC,OAFP;IAEc,cACAd;EAHd,GAIMC,KAJN,GAMGC,mBANH,CADF;AAUD,CAzBM;AA0BPR,WAAW,CAACqB,WAAZ,GAA0B,aAA1B","names":["React","css","styles","ToggleGroupItem","ToggleGroup","_a","className","children","isCompact","areAllGroupsDisabled","ariaLabel","props","toggleGroupItemList","Children","map","child","childCompName","type","name","cloneElement","isDisabled","toggleGroup","modifiers","compact","role","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/ToggleGroup/ToggleGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/ToggleGroup/toggle-group';\nimport { ToggleGroupItem } from './ToggleGroupItem';\n\nexport interface ToggleGroupProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content rendered inside the toggle group */\n  children?: React.ReactNode;\n  /** Additional classes added to the toggle group */\n  className?: string;\n  /** Modifies the toggle group to include compact styling. */\n  isCompact?: boolean;\n  /** Disable all toggle group items under this component. */\n  areAllGroupsDisabled?: boolean;\n  /** Accessible label for the toggle group */\n  'aria-label'?: string;\n}\n\nexport const ToggleGroup: React.FunctionComponent<ToggleGroupProps> = ({\n  className,\n  children,\n  isCompact = false,\n  areAllGroupsDisabled = false,\n  'aria-label': ariaLabel,\n  ...props\n}: ToggleGroupProps) => {\n  const toggleGroupItemList = React.Children.map(children, child => {\n    const childCompName = (child as any).type.name;\n    return childCompName !== ToggleGroupItem.name\n      ? child\n      : React.cloneElement(child as React.ReactElement, areAllGroupsDisabled ? { isDisabled: true } : {});\n  });\n\n  return (\n    <div\n      className={css(styles.toggleGroup, isCompact && styles.modifiers.compact, className)}\n      role=\"group\"\n      aria-label={ariaLabel}\n      {...props}\n    >\n      {toggleGroupItemList}\n    </div>\n  );\n};\nToggleGroup.displayName = 'ToggleGroup';\n"]},"metadata":{},"sourceType":"module"}