{"ast":null,"code":"/**\n * resolve-row-key.ts\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\n\n/**\n * @param {{rowData: RowType, rowIndex: number, rowKey: RowKeyType}} rowData - row data\n */\nexport function resolveRowKey(_ref) {\n  var rowData = _ref.rowData,\n      rowIndex = _ref.rowIndex,\n      rowKey = _ref.rowKey;\n\n  if (typeof rowKey === 'function') {\n    return \"\".concat(rowKey({\n      rowData: rowData,\n      rowIndex: rowIndex\n    }), \"-row\");\n  } else if (process.env.NODE_ENV !== 'production') {\n    // Arrays cannot have rowKeys by definition so we have to go by index there.\n    if (!Array.isArray(rowData) && rowData[rowKey] === undefined) {\n      // eslint-disable-next-line no-console\n      console.warn('Table.Body - Missing valid rowKey!', rowData, rowKey);\n    }\n  }\n\n  if (rowData[rowKey] === 0) {\n    return \"\".concat(rowData[rowKey], \"-row\");\n  }\n\n  return \"\".concat(rowData[rowKey] || rowIndex, \"-row\");\n}","map":{"version":3,"mappings":"AAAA;;;;;;;AASA;;;AAGA,OAAM,SAAUA,aAAV,OAQL;EAAA,IAPCC,OAOD,QAPCA,OAOD;EAAA,IANCC,QAMD,QANCA,QAMD;EAAA,IALCC,MAKD,QALCA,MAKD;;EACC,IAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;IAChC,iBAAUA,MAAM,CAAC;MAAEF,OAAO,EAAPA,OAAF;MAAWC,QAAQ,EAARA;IAAX,CAAD,CAAhB;EACD,CAFD,MAEO,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IAChD;IACA,IAAI,CAACC,KAAK,CAACC,OAAN,CAAcP,OAAd,CAAD,IAA4BA,OAAe,CAACE,MAAD,CAAf,KAA4BM,SAA5D,EAAuE;MACrE;MACAC,OAAO,CAACC,IAAR,CAAa,oCAAb,EAAmDV,OAAnD,EAA4DE,MAA5D;IACD;EACF;;EAED,IAAKF,OAAe,CAACE,MAAD,CAAf,KAA4B,CAAjC,EAAoC;IAClC,iBAAWF,OAAe,CAACE,MAAD,CAA1B;EACD;;EAED,iBAAYF,OAAe,CAACE,MAAD,CAAf,IAAsCD,QAAlD;AACD","names":["resolveRowKey","rowData","rowIndex","rowKey","process","env","NODE_ENV","Array","isArray","undefined","console","warn"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-table/src/components/Table/base/resolve-row-key.ts"],"sourcesContent":["/**\n * resolve-row-key.ts\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\n\nimport { RowType, RowKeyType } from './types';\n\n/**\n * @param {{rowData: RowType, rowIndex: number, rowKey: RowKeyType}} rowData - row data\n */\nexport function resolveRowKey({\n  rowData,\n  rowIndex,\n  rowKey\n}: {\n  rowData: RowType;\n  rowIndex: number;\n  rowKey: RowKeyType;\n}) {\n  if (typeof rowKey === 'function') {\n    return `${rowKey({ rowData, rowIndex })}-row`;\n  } else if (process.env.NODE_ENV !== 'production') {\n    // Arrays cannot have rowKeys by definition so we have to go by index there.\n    if (!Array.isArray(rowData) && (rowData as any)[rowKey] === undefined) {\n      // eslint-disable-next-line no-console\n      console.warn('Table.Body - Missing valid rowKey!', rowData, rowKey);\n    }\n  }\n\n  if ((rowData as any)[rowKey] === 0) {\n    return `${(rowData as any)[rowKey] as string}-row`;\n  }\n\n  return `${((rowData as any)[rowKey] as string) || rowIndex}-row`;\n}\n"]},"metadata":{},"sourceType":"module"}