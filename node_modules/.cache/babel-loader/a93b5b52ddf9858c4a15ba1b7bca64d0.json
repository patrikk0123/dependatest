{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Form/form';\nexport var FormHelperText = function FormHelperText(_a) {\n  var _a$children = _a.children,\n      children = _a$children === void 0 ? null : _a$children,\n      _a$isError = _a.isError,\n      isError = _a$isError === void 0 ? false : _a$isError,\n      _a$isHidden = _a.isHidden,\n      isHidden = _a$isHidden === void 0 ? true : _a$isHidden,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      _a$icon = _a.icon,\n      icon = _a$icon === void 0 ? null : _a$icon,\n      _a$component = _a.component,\n      component = _a$component === void 0 ? 'p' : _a$component,\n      props = __rest(_a, [\"children\", \"isError\", \"isHidden\", \"className\", \"icon\", \"component\"]);\n\n  var Component = component;\n  return React.createElement(Component, Object.assign({\n    className: css(styles.formHelperText, isError && styles.modifiers.error, isHidden && styles.modifiers.hidden, className)\n  }, props), icon && React.createElement(\"span\", {\n    className: css(styles.formHelperTextIcon)\n  }, icon), children);\n};\nFormHelperText.displayName = 'FormHelperText';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,mDAAnB;AAiBA,OAAO,IAAMC,cAAc,GAAiD,SAA/DA,cAA+D,CAACC,EAAD,EAQlD;oBAFTA,GALfC;MAAAA,oCAAW;mBAKID,GAJfE;MAAAA,kCAAU;oBAIKF,GAHfG;MAAAA,oCAAW;qBAGIH,GAFfI;MAAAA,sCAAY;gBAEGJ,GADfK;MAAAA,4BAAO;qBACQL,GAAfM;MAAAA,sCAAY;MACTC,QAAKC,WAPmE,qEAOnE;;EAER,IAAMC,SAAS,GAAGH,SAAlB;EACA,OACEV,oBAACa,SAAD,EAAUC;IACRN,SAAS,EAAEP,GAAG,CACZC,MAAM,CAACa,cADK,EAEZT,OAAO,IAAIJ,MAAM,CAACc,SAAP,CAAiBC,KAFhB,EAGZV,QAAQ,IAAIL,MAAM,CAACc,SAAP,CAAiBE,MAHjB,EAIZV,SAJY;EADN,GAOJG,KAPI,CAAV,EASGF,IAAI,IAAIT;IAAMQ,SAAS,EAAEP,GAAG,CAACC,MAAM,CAACiB,kBAAR;EAApB,GAAkDV,IAAlD,CATX,EAUGJ,QAVH,CADF;AAcD,CAxBM;AAyBPF,cAAc,CAACiB,WAAf,GAA6B,gBAA7B","names":["React","css","styles","FormHelperText","_a","children","isError","isHidden","className","icon","component","props","__rest","Component","Object","formHelperText","modifiers","error","hidden","formHelperTextIcon","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Form/FormHelperText.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Form/form';\n\nexport interface FormHelperTextProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content rendered inside the Helper Text Item */\n  children?: React.ReactNode;\n  /** Adds error styling to the Helper Text  * */\n  isError?: boolean;\n  /** Hides the helper text * */\n  isHidden?: boolean;\n  /** Additional classes added to the Helper Text Item  */\n  className?: string;\n  /** Icon displayed to the left of the helper text. */\n  icon?: React.ReactNode;\n  /** Component type of the form helper text */\n  component?: 'p' | 'div';\n}\n\nexport const FormHelperText: React.FunctionComponent<FormHelperTextProps> = ({\n  children = null,\n  isError = false,\n  isHidden = true,\n  className = '',\n  icon = null,\n  component = 'p',\n  ...props\n}: FormHelperTextProps) => {\n  const Component = component as any;\n  return (\n    <Component\n      className={css(\n        styles.formHelperText,\n        isError && styles.modifiers.error,\n        isHidden && styles.modifiers.hidden,\n        className\n      )}\n      {...props}\n    >\n      {icon && <span className={css(styles.formHelperTextIcon)}>{icon}</span>}\n      {children}\n    </Component>\n  );\n};\nFormHelperText.displayName = 'FormHelperText';\n"]},"metadata":{},"sourceType":"module"}