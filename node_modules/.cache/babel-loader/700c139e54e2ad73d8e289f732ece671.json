{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Button, ButtonVariant } from '../Button';\nexport const AlertActionLink = _a => {\n  var {\n    className = '',\n    children\n  } = _a,\n      props = __rest(_a, [\"className\", \"children\"]);\n\n  return React.createElement(Button, Object.assign({\n    variant: ButtonVariant.link,\n    isInline: true,\n    className: className\n  }, props), children);\n};\nAlertActionLink.displayName = 'AlertActionLink';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,EAAiBC,aAAjB,QAAmD,WAAnD;AASA,OAAO,MAAMC,eAAe,GAAmDC,EAAD,IAInD;MAJoD;IAC7EC,SAAS,GAAG,EADiE;IAE7EC;EAF6E,IAErEF;MACLG,KAAK,cAHqE,yBAGrE;;EACkB,OAC1BP,oBAACC,MAAD,EAAOO;IAACC,OAAO,EAAEP,aAAa,CAACQ,IAAxB;IAA8BC,QAAQ,MAAtC;IAAuCN,SAAS,EAAEA;EAAlD,GAAiEE,KAAjE,CAAP,EACGD,QADH,CAD0B;AAI3B,CARM;AASPH,eAAe,CAACS,WAAhB,GAA8B,iBAA9B","names":["React","Button","ButtonVariant","AlertActionLink","_a","className","children","props","Object","variant","link","isInline","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Alert/AlertActionLink.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Button, ButtonVariant, ButtonProps } from '../Button';\n\nexport interface AlertActionLinkProps extends ButtonProps {\n  /** Content rendered inside the AlertLinkAction  */\n  children?: string;\n  /** Additional classes added to the AlertActionLink  */\n  className?: string;\n}\n\nexport const AlertActionLink: React.FunctionComponent<AlertActionLinkProps> = ({\n  className = '',\n  children,\n  ...props\n}: AlertActionLinkProps) => (\n  <Button variant={ButtonVariant.link} isInline className={className} {...props}>\n    {children}\n  </Button>\n);\nAlertActionLink.displayName = 'AlertActionLink';\n"]},"metadata":{},"sourceType":"module"}