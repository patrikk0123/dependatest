{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/NotificationDrawer/notification-drawer';\nexport var NotificationDrawerListItem = function NotificationDrawerListItem(_a) {\n  var _a$children = _a.children,\n      children = _a$children === void 0 ? null : _a$children,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      _a$isHoverable = _a.isHoverable,\n      isHoverable = _a$isHoverable === void 0 ? true : _a$isHoverable,\n      _a$isRead = _a.isRead,\n      isRead = _a$isRead === void 0 ? false : _a$isRead,\n      _a$onClick = _a.onClick,\n      _onClick = _a$onClick === void 0 ? function (event) {\n    return undefined;\n  } : _a$onClick,\n      _a$tabIndex = _a.tabIndex,\n      tabIndex = _a$tabIndex === void 0 ? 0 : _a$tabIndex,\n      _a$variant = _a.variant,\n      variant = _a$variant === void 0 ? 'default' : _a$variant,\n      props = __rest(_a, [\"children\", \"className\", \"isHoverable\", \"isRead\", \"onClick\", \"tabIndex\", \"variant\"]);\n\n  var onKeyDown = function onKeyDown(event) {\n    // Accessibility function. Click on the list item when pressing Enter or Space on it.\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.target.click();\n    }\n  };\n\n  return React.createElement(\"li\", Object.assign({}, props, {\n    className: css(styles.notificationDrawerListItem, isHoverable && styles.modifiers.hoverable, styles.modifiers[variant], isRead && styles.modifiers.read, className),\n    tabIndex: tabIndex,\n    onClick: function onClick(e) {\n      return _onClick(e);\n    },\n    onKeyDown: onKeyDown\n  }), children);\n};\nNotificationDrawerListItem.displayName = 'NotificationDrawerListItem';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,gFAAnB;AAmBA,OAAO,IAAMC,0BAA0B,GAA6D,SAAvFA,0BAAuF,CAACC,EAAD,EAU9D;oBAFjBA,GAPnBC;MAAAA,oCAAW;qBAOQD,GANnBE;MAAAA,sCAAY;uBAMOF,GALnBG;MAAAA,0CAAc;kBAKKH,GAJnBI;MAAAA,gCAAS;mBAIUJ,GAFnBK;MAAAA,mCAAU,UAACC,KAAD;IAAA,OAA6BC,SAA7B;EAAA;oBAESP,GADnBQ;MAAAA,oCAAW;mBACQR,GAAnBS;MAAAA,kCAAU;MACPC,QAAKC,WAT2F,oFAS3F;;EAER,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACN,KAAD,EAA+B;IAC/C;IACA,IAAIA,KAAK,CAACO,GAAN,KAAc,OAAd,IAAyBP,KAAK,CAACO,GAAN,KAAc,GAA3C,EAAgD;MAC7CP,KAAK,CAACQ,MAAN,CAA6BC,KAA7B;IACF;EACF,CALD;;EAMA,OACEnB,4CACMc,KADN,EACW;IACTR,SAAS,EAAEL,GAAG,CACZC,MAAM,CAACkB,0BADK,EAEZb,WAAW,IAAIL,MAAM,CAACmB,SAAP,CAAiBC,SAFpB,EAGZpB,MAAM,CAACmB,SAAP,CAAiBR,OAAjB,CAHY,EAIZL,MAAM,IAAIN,MAAM,CAACmB,SAAP,CAAiBE,IAJf,EAKZjB,SALY,CADL;IAQTM,QAAQ,EAAEA,QARD;IASTH,OAAO,EAAE,kBAAC;MAAA,OAAIA,QAAO,CAACe,CAAD,CAAX;IAAA,CATD;IAUTR,SAAS,EAAEA;EAVF,CADX,GAaGX,QAbH,CADF;AAiBD,CAlCM;AAmCPF,0BAA0B,CAACsB,WAA3B,GAAyC,4BAAzC","names":["React","css","styles","NotificationDrawerListItem","_a","children","className","isHoverable","isRead","onClick","event","undefined","tabIndex","variant","props","__rest","onKeyDown","key","target","click","notificationDrawerListItem","modifiers","hoverable","read","e","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/NotificationDrawer/NotificationDrawerListItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/NotificationDrawer/notification-drawer';\n\nexport interface NotificationDrawerListItemProps extends React.HTMLProps<HTMLLIElement> {\n  /**  Content rendered inside the list item */\n  children?: React.ReactNode;\n  /**  Additional classes added to the list item */\n  className?: string;\n  /**  Modifies the list item to include hover styles on :hover */\n  isHoverable?: boolean;\n  /**  Adds styling to the list item to indicate it has been read */\n  isRead?: boolean;\n  /**  Callback for when a list item is clicked */\n  onClick?: (event: any) => void;\n  /**  Tab index for the list item */\n  tabIndex?: number;\n  /**  Variant indicates the severity level */\n  variant?: 'default' | 'success' | 'danger' | 'warning' | 'info';\n}\n\nexport const NotificationDrawerListItem: React.FunctionComponent<NotificationDrawerListItemProps> = ({\n  children = null,\n  className = '',\n  isHoverable = true,\n  isRead = false,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onClick = (event: React.MouseEvent) => undefined as any,\n  tabIndex = 0,\n  variant = 'default',\n  ...props\n}: NotificationDrawerListItemProps) => {\n  const onKeyDown = (event: React.KeyboardEvent) => {\n    // Accessibility function. Click on the list item when pressing Enter or Space on it.\n    if (event.key === 'Enter' || event.key === ' ') {\n      (event.target as HTMLElement).click();\n    }\n  };\n  return (\n    <li\n      {...props}\n      className={css(\n        styles.notificationDrawerListItem,\n        isHoverable && styles.modifiers.hoverable,\n        styles.modifiers[variant],\n        isRead && styles.modifiers.read,\n        className\n      )}\n      tabIndex={tabIndex}\n      onClick={e => onClick(e)}\n      onKeyDown={onKeyDown}\n    >\n      {children}\n    </li>\n  );\n};\nNotificationDrawerListItem.displayName = 'NotificationDrawerListItem';\n"]},"metadata":{},"sourceType":"module"}