{"ast":null,"code":"import _classCallCheck from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ContextSelector/context-selector';\nimport { css } from '@patternfly/react-styles';\nexport var ContextSelectorMenuList = /*#__PURE__*/function (_React$Component) {\n  _inherits(ContextSelectorMenuList, _React$Component);\n\n  var _super = _createSuper(ContextSelectorMenuList);\n\n  function ContextSelectorMenuList() {\n    var _this;\n\n    _classCallCheck(this, ContextSelectorMenuList);\n\n    _this = _super.apply(this, arguments);\n    _this.refsCollection = [];\n\n    _this.sendRef = function (index, ref) {\n      _this.refsCollection[index] = ref;\n    };\n\n    _this.render = function () {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      var _a = _this.props,\n          className = _a.className,\n          isOpen = _a.isOpen,\n          children = _a.children,\n          props = __rest(_a, [\"className\", \"isOpen\", \"children\"]);\n\n      return React.createElement(\"ul\", Object.assign({\n        className: css(styles.contextSelectorMenuList, className),\n        hidden: !isOpen,\n        role: \"menu\"\n      }, props), _this.extendChildren());\n    };\n\n    return _this;\n  }\n\n  _createClass(ContextSelectorMenuList, [{\n    key: \"extendChildren\",\n    value: function extendChildren() {\n      var _this2 = this;\n\n      return React.Children.map(this.props.children, function (child, index) {\n        return React.cloneElement(child, {\n          sendRef: _this2.sendRef,\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return ContextSelectorMenuList;\n}(React.Component);\nContextSelectorMenuList.displayName = 'ContextSelectorMenuList';\nContextSelectorMenuList.defaultProps = {\n  children: null,\n  className: '',\n  isOpen: true\n};","map":{"version":3,"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,0EAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AAWA,WAAaC,uBAAb;EAAA;;EAAA;;EAAA;IAAA;;IAAA;;;IAQE,uBAAiB,EAAjB;;IAEA,gBAAU,UAACC,KAAD,EAAgBC,GAAhB,EAA4B;MACpC,MAAKC,cAAL,CAAoBF,KAApB,IAA6BC,GAA7B;IACD,CAFD;;IAaA,eAAS,YAAK;MACZ;MACM,SAA4C,MAAKE,KAAjD;MAAA,IAAEC,SAAF,GAA6BC,EAA7B,CAAED,SAAF;MAAA,IAAaE,MAAb,GAA6BD,EAA7B,CAAaC,MAAb;MAAA,IAAqBC,QAArB,GAA6BF,EAA7B,CAAqBE,QAArB;MAAA,IAAkCJ,KAAlC,GAAuCK,WAAvC,mCAAuC,CAAvC;;MACN,OACEZ;QAAIQ,SAAS,EAAEN,GAAG,CAACD,MAAM,CAACY,uBAAR,EAAiCL,SAAjC,CAAlB;QAA+DM,MAAM,EAAE,CAACJ,MAAxE;QAAgFK,IAAI,EAAC;MAArF,GAAgGR,KAAhG,GACG,MAAKS,cAAL,EADH,CADF;IAKD,CARD;;IAvBF;EAgCC;;EAhCD;IAAA;IAAA,OAcE,0BAAc;MAAA;;MACZ,OAAOhB,KAAK,CAACiB,QAAN,CAAeC,GAAf,CAAmB,KAAKX,KAAL,CAAWI,QAA9B,EAAwC,UAACQ,KAAD,EAAQf,KAAR;QAAA,OAC7CJ,KAAK,CAACoB,YAAN,CAAmBD,KAAnB,EAAqD;UACnDE,OAAO,EAAE,MAAI,CAACA,OADqC;UAEnDjB,KAAK,EAALA;QAFmD,CAArD,CAD6C;MAAA,CAAxC,CAAP;IAMD;EArBH;;EAAA;AAAA,EAA6CJ,KAAK,CAACsB,SAAnD;AACSnB,sCAAc,yBAAd;AACAA,uCAA6C;EAClDQ,QAAQ,EAAE,IADwC;EAElDH,SAAS,EAAE,EAFuC;EAGlDE,MAAM,EAAE;AAH0C,CAA7C","names":["React","styles","css","ContextSelectorMenuList","index","ref","refsCollection","props","className","_a","isOpen","children","__rest","contextSelectorMenuList","hidden","role","extendChildren","Children","map","child","cloneElement","sendRef","Component"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/ContextSelector/ContextSelectorMenuList.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ContextSelector/context-selector';\nimport { css } from '@patternfly/react-styles';\n\nexport interface ContextSelectorMenuListProps {\n  /** Content rendered inside the Context Selector Menu */\n  children?: React.ReactNode;\n  /** Classess applied to root element of Context Selector menu */\n  className?: string;\n  /** Flag to indicate if Context Selector menu is opened */\n  isOpen?: boolean;\n}\n\nexport class ContextSelectorMenuList extends React.Component<ContextSelectorMenuListProps> {\n  static displayName = 'ContextSelectorMenuList';\n  static defaultProps: ContextSelectorMenuListProps = {\n    children: null as React.ReactNode,\n    className: '',\n    isOpen: true\n  };\n\n  refsCollection = [] as any;\n\n  sendRef = (index: number, ref: any) => {\n    this.refsCollection[index] = ref;\n  };\n\n  extendChildren() {\n    return React.Children.map(this.props.children, (child, index) =>\n      React.cloneElement(child as React.ReactElement<any>, {\n        sendRef: this.sendRef,\n        index\n      })\n    );\n  }\n\n  render = () => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { className, isOpen, children, ...props } = this.props;\n    return (\n      <ul className={css(styles.contextSelectorMenuList, className)} hidden={!isOpen} role=\"menu\" {...props}>\n        {this.extendChildren()}\n      </ul>\n    );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}