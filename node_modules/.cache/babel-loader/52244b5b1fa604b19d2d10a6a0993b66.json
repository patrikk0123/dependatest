{"ast":null,"code":"import _classCallCheck from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport { css } from '@patternfly/react-styles';\nimport { ValidatedOptions } from '../../helpers/constants';\nimport { trimLeft } from '../../helpers/util';\nimport { getDefaultOUIAId, getOUIAProps } from '../../helpers';\nimport { getResizeObserver } from '../../helpers/resizeObserver';\nexport var TextInputTypes;\n\n(function (TextInputTypes) {\n  TextInputTypes[\"text\"] = \"text\";\n  TextInputTypes[\"date\"] = \"date\";\n  TextInputTypes[\"datetimeLocal\"] = \"datetime-local\";\n  TextInputTypes[\"email\"] = \"email\";\n  TextInputTypes[\"month\"] = \"month\";\n  TextInputTypes[\"number\"] = \"number\";\n  TextInputTypes[\"password\"] = \"password\";\n  TextInputTypes[\"search\"] = \"search\";\n  TextInputTypes[\"tel\"] = \"tel\";\n  TextInputTypes[\"time\"] = \"time\";\n  TextInputTypes[\"url\"] = \"url\";\n})(TextInputTypes || (TextInputTypes = {}));\n\nexport var TextInputBase = /*#__PURE__*/function (_React$Component) {\n  _inherits(TextInputBase, _React$Component);\n\n  var _super = _createSuper(TextInputBase);\n\n  function TextInputBase(props) {\n    var _this;\n\n    _classCallCheck(this, TextInputBase);\n\n    _this = _super.call(this, props);\n    _this.inputRef = React.createRef();\n\n    _this.observer = function () {};\n\n    _this.handleChange = function (event) {\n      if (_this.props.onChange) {\n        _this.props.onChange(event.currentTarget.value, event);\n      }\n    };\n\n    _this.handleResize = function () {\n      var inputRef = _this.props.innerRef || _this.inputRef;\n\n      if (inputRef && inputRef.current) {\n        trimLeft(inputRef.current, String(_this.props.value));\n      }\n    };\n\n    _this.restoreText = function () {\n      var inputRef = _this.props.innerRef || _this.inputRef; // restore the value\n\n      inputRef.current.value = String(_this.props.value); // make sure we still see the rightmost value to preserve cursor click position\n\n      inputRef.current.scrollLeft = inputRef.current.scrollWidth;\n    };\n\n    _this.onFocus = function (event) {\n      var _this$props = _this.props,\n          isLeftTruncated = _this$props.isLeftTruncated,\n          onFocus = _this$props.onFocus;\n\n      if (isLeftTruncated) {\n        _this.restoreText();\n      }\n\n      onFocus && onFocus(event);\n    };\n\n    _this.onBlur = function (event) {\n      var _this$props2 = _this.props,\n          isLeftTruncated = _this$props2.isLeftTruncated,\n          onBlur = _this$props2.onBlur;\n\n      if (isLeftTruncated) {\n        _this.handleResize();\n      }\n\n      onBlur && onBlur(event);\n    };\n\n    _this.sanitizeInputValue = function (value) {\n      return typeof value === 'string' ? value.replace(/\\n/g, ' ') : value;\n    };\n\n    if (!props.id && !props['aria-label'] && !props['aria-labelledby']) {\n      // eslint-disable-next-line no-console\n      console.error('Text input:', 'Text input requires either an id or aria-label to be specified');\n    }\n\n    _this.state = {\n      ouiaStateId: getDefaultOUIAId(TextInputBase.displayName)\n    };\n    return _this;\n  }\n\n  _createClass(TextInputBase, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.isLeftTruncated) {\n        var inputRef = this.props.innerRef || this.inputRef;\n        this.observer = getResizeObserver(inputRef.current, this.handleResize);\n        this.handleResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.props.isLeftTruncated) {\n        this.observer();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          innerRef = _a.innerRef,\n          className = _a.className,\n          type = _a.type,\n          value = _a.value,\n          validated = _a.validated,\n          onChange = _a.onChange,\n          onFocus = _a.onFocus,\n          onBlur = _a.onBlur,\n          isLeftTruncated = _a.isLeftTruncated,\n          isReadOnly = _a.isReadOnly,\n          isRequired = _a.isRequired,\n          isDisabled = _a.isDisabled,\n          isIconSprite = _a.isIconSprite,\n          iconVariant = _a.iconVariant,\n          customIconUrl = _a.customIconUrl,\n          customIconDimensions = _a.customIconDimensions,\n          ouiaId = _a.ouiaId,\n          ouiaSafe = _a.ouiaSafe,\n          props = __rest(_a, [\"innerRef\", \"className\", \"type\", \"value\", \"validated\", \"onChange\", \"onFocus\", \"onBlur\", \"isLeftTruncated\", \"isReadOnly\", \"isRequired\", \"isDisabled\", \"isIconSprite\", \"iconVariant\", \"customIconUrl\", \"customIconDimensions\", \"ouiaId\", \"ouiaSafe\"]);\n\n      var customIconStyle = {};\n\n      if (customIconUrl) {\n        customIconStyle.backgroundImage = \"url('\".concat(customIconUrl, \"')\");\n      }\n\n      if (customIconDimensions) {\n        customIconStyle.backgroundSize = customIconDimensions;\n      }\n\n      return React.createElement(\"input\", Object.assign({}, props, {\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        className: css(styles.formControl, isIconSprite && styles.modifiers.iconSprite, validated === ValidatedOptions.success && styles.modifiers.success, validated === ValidatedOptions.warning && styles.modifiers.warning, (iconVariant && iconVariant !== 'search' || customIconUrl) && styles.modifiers.icon, iconVariant && styles.modifiers[iconVariant], className),\n        onChange: this.handleChange,\n        type: type,\n        value: this.sanitizeInputValue(value),\n        \"aria-invalid\": props['aria-invalid'] ? props['aria-invalid'] : validated === ValidatedOptions.error,\n        required: isRequired,\n        disabled: isDisabled,\n        readOnly: isReadOnly,\n        ref: innerRef || this.inputRef\n      }, (customIconUrl || customIconDimensions) && {\n        style: customIconStyle\n      }, getOUIAProps(TextInput.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)));\n    }\n  }]);\n\n  return TextInputBase;\n}(React.Component);\nTextInputBase.displayName = 'TextInputBase';\nTextInputBase.defaultProps = {\n  'aria-label': null,\n  className: '',\n  isRequired: false,\n  validated: 'default',\n  isDisabled: false,\n  isReadOnly: false,\n  isIconSprite: false,\n  type: TextInputTypes.text,\n  isLeftTruncated: false,\n  onChange: function onChange() {\n    return undefined;\n  },\n  ouiaSafe: true\n};\nexport var TextInput = React.forwardRef(function (props, ref) {\n  return React.createElement(TextInputBase, Object.assign({}, props, {\n    innerRef: ref\n  }));\n});\nTextInput.displayName = 'TextInput';","map":{"version":3,"mappings":"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","names":["React","styles","css","ValidatedOptions","trimLeft","getDefaultOUIAId","getOUIAProps","getResizeObserver","TextInputTypes","TextInputBase","props","createRef","event","onChange","currentTarget","value","inputRef","innerRef","current","String","scrollLeft","scrollWidth","isLeftTruncated","onFocus","restoreText","onBlur","handleResize","replace","id","console","error","state","ouiaStateId","displayName","observer","_a","className","type","validated","isReadOnly","isRequired","isDisabled","isIconSprite","iconVariant","customIconUrl","customIconDimensions","ouiaId","ouiaSafe","__rest","customIconStyle","backgroundImage","backgroundSize","formControl","modifiers","iconSprite","success","warning","icon","handleChange","sanitizeInputValue","required","disabled","readOnly","ref","style","TextInput","undefined","Component","text","forwardRef","Object"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/TextInput/TextInput.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport { css } from '@patternfly/react-styles';\nimport { ValidatedOptions } from '../../helpers/constants';\nimport { trimLeft } from '../../helpers/util';\nimport { getDefaultOUIAId, getOUIAProps, OUIAProps } from '../../helpers';\nimport { getResizeObserver } from '../../helpers/resizeObserver';\n\nexport enum TextInputTypes {\n  text = 'text',\n  date = 'date',\n  datetimeLocal = 'datetime-local',\n  email = 'email',\n  month = 'month',\n  number = 'number',\n  password = 'password',\n  search = 'search',\n  tel = 'tel',\n  time = 'time',\n  url = 'url'\n}\n\nexport interface TextInputProps\n  extends Omit<React.HTMLProps<HTMLInputElement>, 'onChange' | 'onFocus' | 'onBlur' | 'disabled' | 'ref'>,\n    OUIAProps {\n  /** Additional classes added to the TextInput. */\n  className?: string;\n  /** Flag to show if the input is disabled. */\n  isDisabled?: boolean;\n  /** Flag to show if the input is read only. */\n  isReadOnly?: boolean;\n  /** Flag to show if the input is required. */\n  isRequired?: boolean;\n  /** Value to indicate if the input is modified to show that validation state.\n   * If set to success, input will be modified to indicate valid state.\n   * If set to error,  input will be modified to indicate error state.\n   */\n  validated?: 'success' | 'warning' | 'error' | 'default';\n  /** A callback for when the input value changes. */\n  onChange?: (value: string, event: React.FormEvent<HTMLInputElement>) => void;\n  /** Type that the input accepts. */\n  type?:\n    | 'text'\n    | 'date'\n    | 'datetime-local'\n    | 'email'\n    | 'month'\n    | 'number'\n    | 'password'\n    | 'search'\n    | 'tel'\n    | 'time'\n    | 'url';\n  /** Value of the input. */\n  value?: string | number;\n  /** Aria-label. The input requires an associated id or aria-label. */\n  'aria-label'?: string;\n  /** A reference object to attach to the input box. */\n  innerRef?: React.RefObject<any>;\n  /** Trim text on left */\n  isLeftTruncated?: boolean;\n  /** Callback function when input is focused */\n  onFocus?: (event?: any) => void;\n  /** Callback function when input is blurred (focus leaves) */\n  onBlur?: (event?: any) => void;\n  /** icon variant */\n  iconVariant?: 'calendar' | 'clock' | 'search';\n  /** Use the external file instead of a data URI */\n  isIconSprite?: boolean;\n  /** Custom icon url to set as the input's background-image */\n  customIconUrl?: string;\n  /** Dimensions for the custom icon set as the input's background-size */\n  customIconDimensions?: string;\n}\n\ninterface TextInputState {\n  ouiaStateId: string;\n}\n\nexport class TextInputBase extends React.Component<TextInputProps, TextInputState> {\n  static displayName = 'TextInputBase';\n  static defaultProps: TextInputProps = {\n    'aria-label': null,\n    className: '',\n    isRequired: false,\n    validated: 'default' as 'success' | 'warning' | 'error' | 'default',\n    isDisabled: false,\n    isReadOnly: false,\n    isIconSprite: false,\n    type: TextInputTypes.text,\n    isLeftTruncated: false,\n    onChange: (): any => undefined,\n    ouiaSafe: true\n  };\n  inputRef = React.createRef<HTMLInputElement>();\n  observer: any = () => {};\n\n  constructor(props: TextInputProps) {\n    super(props);\n    if (!props.id && !props['aria-label'] && !props['aria-labelledby']) {\n      // eslint-disable-next-line no-console\n      console.error('Text input:', 'Text input requires either an id or aria-label to be specified');\n    }\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(TextInputBase.displayName)\n    };\n  }\n\n  handleChange = (event: React.FormEvent<HTMLInputElement>) => {\n    if (this.props.onChange) {\n      this.props.onChange(event.currentTarget.value, event);\n    }\n  };\n\n  componentDidMount() {\n    if (this.props.isLeftTruncated) {\n      const inputRef = this.props.innerRef || this.inputRef;\n      this.observer = getResizeObserver(inputRef.current, this.handleResize);\n      this.handleResize();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.isLeftTruncated) {\n      this.observer();\n    }\n  }\n\n  handleResize = () => {\n    const inputRef = this.props.innerRef || this.inputRef;\n    if (inputRef && inputRef.current) {\n      trimLeft(inputRef.current, String(this.props.value));\n    }\n  };\n\n  restoreText = () => {\n    const inputRef = this.props.innerRef || this.inputRef;\n    // restore the value\n    (inputRef.current as HTMLInputElement).value = String(this.props.value);\n    // make sure we still see the rightmost value to preserve cursor click position\n    inputRef.current.scrollLeft = inputRef.current.scrollWidth;\n  };\n\n  onFocus = (event?: any) => {\n    const { isLeftTruncated, onFocus } = this.props;\n    if (isLeftTruncated) {\n      this.restoreText();\n    }\n    onFocus && onFocus(event);\n  };\n\n  onBlur = (event?: any) => {\n    const { isLeftTruncated, onBlur } = this.props;\n    if (isLeftTruncated) {\n      this.handleResize();\n    }\n    onBlur && onBlur(event);\n  };\n\n  render() {\n    const {\n      innerRef,\n      className,\n      type,\n      value,\n      validated,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      onChange,\n      onFocus,\n      onBlur,\n      isLeftTruncated,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      isReadOnly,\n      isRequired,\n      isDisabled,\n      isIconSprite,\n      iconVariant,\n      customIconUrl,\n      customIconDimensions,\n      ouiaId,\n      ouiaSafe,\n      ...props\n    } = this.props;\n\n    const customIconStyle = {} as any;\n    if (customIconUrl) {\n      customIconStyle.backgroundImage = `url('${customIconUrl}')`;\n    }\n    if (customIconDimensions) {\n      customIconStyle.backgroundSize = customIconDimensions;\n    }\n\n    return (\n      <input\n        {...props}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        className={css(\n          styles.formControl,\n          isIconSprite && styles.modifiers.iconSprite,\n          validated === ValidatedOptions.success && styles.modifiers.success,\n          validated === ValidatedOptions.warning && styles.modifiers.warning,\n          ((iconVariant && iconVariant !== 'search') || customIconUrl) && styles.modifiers.icon,\n          iconVariant && styles.modifiers[iconVariant],\n          className\n        )}\n        onChange={this.handleChange}\n        type={type}\n        value={this.sanitizeInputValue(value)}\n        aria-invalid={props['aria-invalid'] ? props['aria-invalid'] : validated === ValidatedOptions.error}\n        required={isRequired}\n        disabled={isDisabled}\n        readOnly={isReadOnly}\n        ref={innerRef || this.inputRef}\n        {...((customIconUrl || customIconDimensions) && { style: customIconStyle })}\n        {...getOUIAProps(TextInput.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n      />\n    );\n  }\n\n  private sanitizeInputValue = (value: string | number) =>\n    typeof value === 'string' ? value.replace(/\\n/g, ' ') : value;\n}\n\nexport const TextInput = React.forwardRef((props: TextInputProps, ref: React.Ref<HTMLInputElement>) => (\n  <TextInputBase {...props} innerRef={ref as React.MutableRefObject<any>} />\n));\nTextInput.displayName = 'TextInput';\n"]},"metadata":{},"sourceType":"module"}