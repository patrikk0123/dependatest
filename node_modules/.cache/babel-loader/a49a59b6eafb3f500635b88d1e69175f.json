{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/NumberInput/number-input';\nimport { css } from '@patternfly/react-styles';\nimport MinusIcon from '@patternfly/react-icons/dist/esm/icons/minus-icon';\nimport PlusIcon from '@patternfly/react-icons/dist/esm/icons/plus-icon';\nimport { InputGroup } from '../InputGroup';\nimport { Button } from '../Button';\nimport { KEY_CODES } from '../../helpers';\n\nvar defaultKeyDownHandler = function defaultKeyDownHandler(args) {\n  return function (event) {\n    if (KEY_CODES.ARROW_UP === event.keyCode && args.onPlus) {\n      event.preventDefault();\n      args.onPlus(null, args.inputName);\n    }\n\n    if (KEY_CODES.ARROW_DOWN === event.keyCode && args.onMinus) {\n      event.preventDefault();\n      args.onMinus(null, args.inputName);\n    }\n  };\n};\n\nexport var NumberInput = function NumberInput(_a) {\n  var _a$value = _a.value,\n      value = _a$value === void 0 ? 0 : _a$value,\n      className = _a.className,\n      widthChars = _a.widthChars,\n      _a$isDisabled = _a.isDisabled,\n      isDisabled = _a$isDisabled === void 0 ? false : _a$isDisabled,\n      _a$onMinus = _a.onMinus,\n      onMinus = _a$onMinus === void 0 ? function () {} : _a$onMinus,\n      onChange = _a.onChange,\n      onBlur = _a.onBlur,\n      _a$onPlus = _a.onPlus,\n      onPlus = _a$onPlus === void 0 ? function () {} : _a$onPlus,\n      unit = _a.unit,\n      _a$unitPosition = _a.unitPosition,\n      unitPosition = _a$unitPosition === void 0 ? 'after' : _a$unitPosition,\n      min = _a.min,\n      max = _a.max,\n      inputName = _a.inputName,\n      _a$inputAriaLabel = _a.inputAriaLabel,\n      inputAriaLabel = _a$inputAriaLabel === void 0 ? 'Input' : _a$inputAriaLabel,\n      _a$minusBtnAriaLabel = _a.minusBtnAriaLabel,\n      minusBtnAriaLabel = _a$minusBtnAriaLabel === void 0 ? 'Minus' : _a$minusBtnAriaLabel,\n      _a$plusBtnAriaLabel = _a.plusBtnAriaLabel,\n      plusBtnAriaLabel = _a$plusBtnAriaLabel === void 0 ? 'Plus' : _a$plusBtnAriaLabel,\n      inputProps = _a.inputProps,\n      minusBtnProps = _a.minusBtnProps,\n      plusBtnProps = _a.plusBtnProps,\n      props = __rest(_a, [\"value\", \"className\", \"widthChars\", \"isDisabled\", \"onMinus\", \"onChange\", \"onBlur\", \"onPlus\", \"unit\", \"unitPosition\", \"min\", \"max\", \"inputName\", \"inputAriaLabel\", \"minusBtnAriaLabel\", \"plusBtnAriaLabel\", \"inputProps\", \"minusBtnProps\", \"plusBtnProps\"]);\n\n  var numberInputUnit = React.createElement(\"div\", {\n    className: css(styles.numberInputUnit)\n  }, unit);\n  var keyDownHandler = inputProps && inputProps.onKeyDown ? inputProps.onKeyDown : defaultKeyDownHandler({\n    inputName: inputName,\n    onMinus: onMinus,\n    onPlus: onPlus\n  });\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.numberInput, className)\n  }, widthChars && {\n    style: Object.assign({\n      '--pf-c-number-input--c-form-control--width-chars': widthChars\n    }, props.style)\n  }, props), unit && unitPosition === 'before' && numberInputUnit, React.createElement(InputGroup, null, React.createElement(Button, Object.assign({\n    variant: \"control\",\n    \"aria-label\": minusBtnAriaLabel,\n    isDisabled: isDisabled || value <= min,\n    onClick: function onClick(evt) {\n      return onMinus(evt, inputName);\n    }\n  }, minusBtnProps), React.createElement(\"span\", {\n    className: css(styles.numberInputIcon)\n  }, React.createElement(MinusIcon, {\n    \"aria-hidden\": \"true\"\n  }))), React.createElement(\"input\", Object.assign({\n    className: css(styles.formControl),\n    type: \"number\",\n    value: value,\n    name: inputName,\n    \"aria-label\": inputAriaLabel\n  }, isDisabled && {\n    disabled: isDisabled\n  }, onChange && {\n    onChange: onChange\n  }, onBlur && {\n    onBlur: onBlur\n  }, !onChange && {\n    readOnly: true\n  }, inputProps, {\n    onKeyDown: keyDownHandler\n  })), React.createElement(Button, Object.assign({\n    variant: \"control\",\n    \"aria-label\": plusBtnAriaLabel,\n    isDisabled: isDisabled || value >= max,\n    onClick: function onClick(evt) {\n      return onPlus(evt, inputName);\n    }\n  }, plusBtnProps), React.createElement(\"span\", {\n    className: css(styles.numberInputIcon)\n  }, React.createElement(PlusIcon, {\n    \"aria-hidden\": \"true\"\n  })))), unit && unitPosition === 'after' && numberInputUnit);\n};\nNumberInput.displayName = 'NumberInput';","map":{"version":3,"mappings":"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","names":["React","styles","css","MinusIcon","PlusIcon","InputGroup","Button","KEY_CODES","defaultKeyDownHandler","args","event","ARROW_UP","keyCode","onPlus","preventDefault","inputName","ARROW_DOWN","onMinus","NumberInput","_a","value","className","widthChars","isDisabled","onChange","onBlur","unit","unitPosition","min","max","inputAriaLabel","minusBtnAriaLabel","plusBtnAriaLabel","inputProps","minusBtnProps","plusBtnProps","props","__rest","numberInputUnit","keyDownHandler","onKeyDown","numberInput","style","Object","variant","onClick","evt","numberInputIcon","formControl","type","name","disabled","readOnly","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/NumberInput/NumberInput.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/NumberInput/number-input';\nimport { css } from '@patternfly/react-styles';\nimport MinusIcon from '@patternfly/react-icons/dist/esm/icons/minus-icon';\nimport PlusIcon from '@patternfly/react-icons/dist/esm/icons/plus-icon';\nimport { InputGroup } from '../InputGroup';\nimport { Button, ButtonProps } from '../Button';\nimport { KEY_CODES } from '../../helpers';\n\nexport interface NumberInputProps extends React.HTMLProps<HTMLDivElement> {\n  /** Value of the number input */\n  value?: number;\n  /** Additional classes added to the number input */\n  className?: string;\n  /** Sets the width of the number input to a number of characters */\n  widthChars?: number;\n  /** Indicates the whole number input should be disabled */\n  isDisabled?: boolean;\n  /** Callback for the minus button */\n  onMinus?: (event: React.MouseEvent, name?: string) => void;\n  /** Callback for the text input changing */\n  onChange?: (event: React.FormEvent<HTMLInputElement>) => void;\n  /** Callback function when text input is blurred (focus leaves) */\n  onBlur?: (event?: any) => void;\n  /** Callback for the plus button */\n  onPlus?: (event: React.MouseEvent, name?: string) => void;\n  /** Adds the given unit to the number input */\n  unit?: React.ReactNode;\n  /** Position of the number input unit in relation to the number input */\n  unitPosition?: 'before' | 'after';\n  /** Minimum value of the number input, disabling the minus button when reached */\n  min?: number;\n  /** Maximum value of the number input, disabling the plus button when reached */\n  max?: number;\n  /** Name of the input */\n  inputName?: string;\n  /** Aria label of the input */\n  inputAriaLabel?: string;\n  /** Aria label of the minus button */\n  minusBtnAriaLabel?: string;\n  /** Aria label of the plus button */\n  plusBtnAriaLabel?: string;\n  /** Additional properties added to the text input */\n  inputProps?: any;\n  /** Additional properties added to the minus button */\n  minusBtnProps?: ButtonProps;\n  /** Additional properties added to the plus button */\n  plusBtnProps?: ButtonProps;\n}\n\ntype DefaultKeyDownHandlerArgs = Pick<NumberInputProps, 'inputName' | 'onMinus' | 'onPlus'>;\n\nconst defaultKeyDownHandler = (args: DefaultKeyDownHandlerArgs) => (event: React.KeyboardEvent<HTMLInputElement>) => {\n  if (KEY_CODES.ARROW_UP === event.keyCode && args.onPlus) {\n    event.preventDefault();\n    args.onPlus(null, args.inputName);\n  }\n  if (KEY_CODES.ARROW_DOWN === event.keyCode && args.onMinus) {\n    event.preventDefault();\n    args.onMinus(null, args.inputName);\n  }\n};\n\nexport const NumberInput: React.FunctionComponent<NumberInputProps> = ({\n  value = 0,\n  className,\n  widthChars,\n  isDisabled = false,\n  onMinus = () => {},\n  onChange,\n  onBlur,\n  onPlus = () => {},\n  unit,\n  unitPosition = 'after',\n  min,\n  max,\n  inputName,\n  inputAriaLabel = 'Input',\n  minusBtnAriaLabel = 'Minus',\n  plusBtnAriaLabel = 'Plus',\n  inputProps,\n  minusBtnProps,\n  plusBtnProps,\n  ...props\n}: NumberInputProps) => {\n  const numberInputUnit = <div className={css(styles.numberInputUnit)}>{unit}</div>;\n  const keyDownHandler =\n    inputProps && inputProps.onKeyDown ? inputProps.onKeyDown : defaultKeyDownHandler({ inputName, onMinus, onPlus });\n\n  return (\n    <div\n      className={css(styles.numberInput, className)}\n      {...(widthChars && {\n        style: {\n          '--pf-c-number-input--c-form-control--width-chars': widthChars,\n          ...props.style\n        } as React.CSSProperties\n      })}\n      {...props}\n    >\n      {unit && unitPosition === 'before' && numberInputUnit}\n      <InputGroup>\n        <Button\n          variant=\"control\"\n          aria-label={minusBtnAriaLabel}\n          isDisabled={isDisabled || value <= min}\n          onClick={evt => onMinus(evt, inputName)}\n          {...minusBtnProps}\n        >\n          <span className={css(styles.numberInputIcon)}>\n            <MinusIcon aria-hidden=\"true\" />\n          </span>\n        </Button>\n        <input\n          className={css(styles.formControl)}\n          type=\"number\"\n          value={value}\n          name={inputName}\n          aria-label={inputAriaLabel}\n          {...(isDisabled && { disabled: isDisabled })}\n          {...(onChange && { onChange })}\n          {...(onBlur && { onBlur })}\n          {...(!onChange && { readOnly: true })}\n          {...inputProps}\n          onKeyDown={keyDownHandler}\n        />\n        <Button\n          variant=\"control\"\n          aria-label={plusBtnAriaLabel}\n          isDisabled={isDisabled || value >= max}\n          onClick={evt => onPlus(evt, inputName)}\n          {...plusBtnProps}\n        >\n          <span className={css(styles.numberInputIcon)}>\n            <PlusIcon aria-hidden=\"true\" />\n          </span>\n        </Button>\n      </InputGroup>\n      {unit && unitPosition === 'after' && numberInputUnit}\n    </div>\n  );\n};\nNumberInput.displayName = 'NumberInput';\n"]},"metadata":{},"sourceType":"module"}