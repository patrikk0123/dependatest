{"ast":null,"code":"import _classCallCheck from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/OverflowMenu/overflow-menu';\nimport { css } from '@patternfly/react-styles';\nimport { OverflowMenuContext } from './OverflowMenuContext';\nimport mdBreakpoint from '@patternfly/react-tokens/dist/esm/global_breakpoint_md';\nimport lgBreakpoint from '@patternfly/react-tokens/dist/esm/global_breakpoint_lg';\nimport xlBreakpoint from '@patternfly/react-tokens/dist/esm/global_breakpoint_xl';\nimport xl2Breakpoint from '@patternfly/react-tokens/dist/esm/global_breakpoint_2xl';\nimport { debounce, canUseDOM } from '../../helpers/util';\nvar breakpoints = {\n  md: mdBreakpoint,\n  lg: lgBreakpoint,\n  xl: xlBreakpoint,\n  '2xl': xl2Breakpoint\n};\nexport var OverflowMenu = /*#__PURE__*/function (_React$Component) {\n  _inherits(OverflowMenu, _React$Component);\n\n  var _super = _createSuper(OverflowMenu);\n\n  function OverflowMenu(props) {\n    var _this;\n\n    _classCallCheck(this, OverflowMenu);\n\n    _this = _super.call(this, props);\n\n    _this.handleResize = function () {\n      var breakpointPx = breakpoints[_this.props.breakpoint];\n\n      if (!breakpointPx) {\n        // eslint-disable-next-line no-console\n        console.error('OverflowMenu will not be visible without a valid breakpoint.');\n        return;\n      }\n\n      var breakpointWidth = Number(breakpointPx.value.replace('px', ''));\n      var isBelowBreakpoint = window.innerWidth < breakpointWidth;\n\n      _this.setState({\n        isBelowBreakpoint: isBelowBreakpoint\n      });\n    };\n\n    _this.state = {\n      isBelowBreakpoint: false\n    };\n    return _this;\n  }\n\n  _createClass(OverflowMenu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handleResize();\n\n      if (canUseDOM) {\n        window.addEventListener('resize', debounce(this.handleResize, 250));\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (canUseDOM) {\n        window.removeEventListener('resize', debounce(this.handleResize, 250));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      var _a = this.props,\n          className = _a.className,\n          breakpoint = _a.breakpoint,\n          children = _a.children,\n          props = __rest(_a, [\"className\", \"breakpoint\", \"children\"]);\n\n      return React.createElement(\"div\", Object.assign({}, props, {\n        className: css(styles.overflowMenu, className)\n      }), React.createElement(OverflowMenuContext.Provider, {\n        value: {\n          isBelowBreakpoint: this.state.isBelowBreakpoint\n        }\n      }, children));\n    }\n  }]);\n\n  return OverflowMenu;\n}(React.Component);\nOverflowMenu.displayName = 'OverflowMenu';\nOverflowMenu.contextType = OverflowMenuContext;","map":{"version":3,"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,oEAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,OAAOC,aAAP,MAA0B,yDAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,oBAApC;AAEA,IAAMC,WAAW,GAAG;EAClBC,EAAE,EAAEP,YADc;EAElBQ,EAAE,EAAEP,YAFc;EAGlBQ,EAAE,EAAEP,YAHc;EAIlB,OAAOC;AAJW,CAApB;AAoBA,WAAaO,YAAb;EAAA;;EAAA;;EAEE,sBAAYC,KAAZ,EAAoC;IAAA;;IAAA;;IAClC,0BAAMA,KAAN;;IAmBF,qBAAe,YAAK;MAClB,IAAMC,YAAY,GAAGN,WAAW,CAAC,MAAKK,KAAL,CAAWE,UAAZ,CAAhC;;MACA,IAAI,CAACD,YAAL,EAAmB;QACjB;QACAE,OAAO,CAACC,KAAR,CAAc,8DAAd;QACA;MACD;;MACD,IAAMC,eAAe,GAAGC,MAAM,CAACL,YAAY,CAACM,KAAb,CAAmBC,OAAnB,CAA2B,IAA3B,EAAiC,EAAjC,CAAD,CAA9B;MACA,IAAMC,iBAAiB,GAAGC,MAAM,CAACC,UAAP,GAAoBN,eAA9C;;MACA,MAAKO,QAAL,CAAc;QAAEH,iBAAiB,EAAjBA;MAAF,CAAd;IACD,CAVD;;IAlBE,MAAKI,KAAL,GAAa;MACXJ,iBAAiB,EAAE;IADR,CAAb;IAFkC;EAKnC;;EAPH;IAAA;IAAA,OASE,6BAAiB;MACf,KAAKK,YAAL;;MACA,IAAIpB,SAAJ,EAAe;QACbgB,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkCtB,QAAQ,CAAC,KAAKqB,YAAN,EAAoB,GAApB,CAA1C;MACD;IACF;EAdH;IAAA;IAAA,OAgBE,gCAAoB;MAClB,IAAIpB,SAAJ,EAAe;QACbgB,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCvB,QAAQ,CAAC,KAAKqB,YAAN,EAAoB,GAApB,CAA7C;MACD;IACF;EApBH;IAAA;IAAA,OAkCE,kBAAM;MACJ;MACM,SAAgD,KAAKd,KAArD;MAAA,IAAEiB,SAAF,GAAiCC,EAAjC,CAAED,SAAF;MAAA,IAAaf,UAAb,GAAiCgB,EAAjC,CAAahB,UAAb;MAAA,IAAyBiB,QAAzB,GAAiCD,EAAjC,CAAyBC,QAAzB;MAAA,IAAsCnB,KAAtC,GAA2CoB,WAA3C,uCAA2C,CAA3C;;MAEN,OACEnC,6CAASe,KAAT,EAAc;QAAEiB,SAAS,EAAE9B,GAAG,CAACD,MAAM,CAACmC,YAAR,EAAsBJ,SAAtB;MAAhB,CAAd,GACEhC,oBAACG,mBAAmB,CAACkC,QAArB,EAA6B;QAACf,KAAK,EAAE;UAAEE,iBAAiB,EAAE,KAAKI,KAAL,CAAWJ;QAAhC;MAAR,CAA7B,EACGU,QADH,CADF,CADF;IAOD;EA7CH;;EAAA;AAAA,EAAkClC,KAAK,CAACsC,SAAxC;AACSxB,2BAAc,cAAd;AA+CTA,YAAY,CAACyB,WAAb,GAA2BpC,mBAA3B","names":["React","styles","css","OverflowMenuContext","mdBreakpoint","lgBreakpoint","xlBreakpoint","xl2Breakpoint","debounce","canUseDOM","breakpoints","md","lg","xl","OverflowMenu","props","breakpointPx","breakpoint","console","error","breakpointWidth","Number","value","replace","isBelowBreakpoint","window","innerWidth","setState","state","handleResize","addEventListener","removeEventListener","className","_a","children","__rest","overflowMenu","Provider","Component","contextType"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/OverflowMenu/OverflowMenu.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/OverflowMenu/overflow-menu';\nimport { css } from '@patternfly/react-styles';\nimport { OverflowMenuContext } from './OverflowMenuContext';\nimport mdBreakpoint from '@patternfly/react-tokens/dist/esm/global_breakpoint_md';\nimport lgBreakpoint from '@patternfly/react-tokens/dist/esm/global_breakpoint_lg';\nimport xlBreakpoint from '@patternfly/react-tokens/dist/esm/global_breakpoint_xl';\nimport xl2Breakpoint from '@patternfly/react-tokens/dist/esm/global_breakpoint_2xl';\nimport { debounce, canUseDOM } from '../../helpers/util';\n\nconst breakpoints = {\n  md: mdBreakpoint,\n  lg: lgBreakpoint,\n  xl: xlBreakpoint,\n  '2xl': xl2Breakpoint\n};\n\nexport interface OverflowMenuProps extends React.HTMLProps<HTMLDivElement> {\n  /** Any elements that can be rendered in the menu */\n  children?: any;\n  /** Additional classes added to the OverflowMenu. */\n  className?: string;\n  /** Indicates breakpoint at which to switch between horizontal menu and vertical dropdown */\n  breakpoint: 'md' | 'lg' | 'xl' | '2xl';\n}\n\nexport interface OverflowMenuState extends React.HTMLProps<HTMLDivElement> {\n  isBelowBreakpoint: boolean;\n}\n\nexport class OverflowMenu extends React.Component<OverflowMenuProps, OverflowMenuState> {\n  static displayName = 'OverflowMenu';\n  constructor(props: OverflowMenuProps) {\n    super(props);\n    this.state = {\n      isBelowBreakpoint: false\n    };\n  }\n\n  componentDidMount() {\n    this.handleResize();\n    if (canUseDOM) {\n      window.addEventListener('resize', debounce(this.handleResize, 250));\n    }\n  }\n\n  componentWillUnmount() {\n    if (canUseDOM) {\n      window.removeEventListener('resize', debounce(this.handleResize, 250));\n    }\n  }\n\n  handleResize = () => {\n    const breakpointPx = breakpoints[this.props.breakpoint];\n    if (!breakpointPx) {\n      // eslint-disable-next-line no-console\n      console.error('OverflowMenu will not be visible without a valid breakpoint.');\n      return;\n    }\n    const breakpointWidth = Number(breakpointPx.value.replace('px', ''));\n    const isBelowBreakpoint = window.innerWidth < breakpointWidth;\n    this.setState({ isBelowBreakpoint });\n  };\n\n  render() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { className, breakpoint, children, ...props } = this.props;\n\n    return (\n      <div {...props} className={css(styles.overflowMenu, className)}>\n        <OverflowMenuContext.Provider value={{ isBelowBreakpoint: this.state.isBelowBreakpoint }}>\n          {children}\n        </OverflowMenuContext.Provider>\n      </div>\n    );\n  }\n}\n\nOverflowMenu.contextType = OverflowMenuContext;\n"]},"metadata":{},"sourceType":"module"}