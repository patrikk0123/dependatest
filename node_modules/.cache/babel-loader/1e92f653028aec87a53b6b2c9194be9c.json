{"ast":null,"code":"import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { TableText } from '../../TableText';\nexport var compoundExpand = function compoundExpand(value, _ref) {\n  var rowIndex = _ref.rowIndex,\n      columnIndex = _ref.columnIndex,\n      rowData = _ref.rowData,\n      column = _ref.column,\n      property = _ref.property;\n\n  if (!value) {\n    return null;\n  }\n\n  var title = value.title,\n      props = value.props;\n  var onExpand = column.extraParams.onExpand;\n  var extraData = {\n    rowIndex: rowIndex,\n    columnIndex: columnIndex,\n    column: column,\n    property: property\n  };\n  /**\n   * @param {React.MouseEvent} event - Mouse event\n   */\n\n  function onToggle(event) {\n    // tslint:disable-next-line:no-unused-expression\n    onExpand && onExpand(event, rowIndex, columnIndex, props.isOpen, rowData, extraData);\n  }\n\n  return {\n    className: css(styles.tableCompoundExpansionToggle, props.isOpen && styles.modifiers.expanded),\n    children: props.isOpen !== undefined && React.createElement(\"button\", {\n      type: \"button\",\n      className: css(styles.tableButton),\n      onClick: onToggle,\n      \"aria-expanded\": props.isOpen,\n      \"aria-controls\": props.ariaControls\n    }, React.createElement(TableText, null, title))\n  };\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,qDAAnB;AAEA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,OAAO,IAAMC,cAAc,GAAe,SAA7BA,cAA6B,CACxCC,KADwC,QAGtC;EAAA,IADAC,QACA,QADAA,QACA;EAAA,IADUC,WACV,QADUA,WACV;EAAA,IADuBC,OACvB,QADuBA,OACvB;EAAA,IADgCC,MAChC,QADgCA,MAChC;EAAA,IADwCC,QACxC,QADwCA,QACxC;;EACF,IAAI,CAACL,KAAL,EAAY;IACV,OAAO,IAAP;EACD;;EACD,IAAQM,KAAR,GAAyBN,KAAzB,CAAQM,KAAR;EAAA,IAAeC,KAAf,GAAyBP,KAAzB,CAAeO,KAAf;EACA,IACiBC,QADjB,GAEIJ,MAFJ,CACEK,WADF,CACiBD,QADjB;EAGA,IAAME,SAAS,GAAG;IAChBT,QAAQ,EAARA,QADgB;IAEhBC,WAAW,EAAXA,WAFgB;IAGhBE,MAAM,EAANA,MAHgB;IAIhBC,QAAQ,EAARA;EAJgB,CAAlB;EAOA;;;;EAGA,SAASM,QAAT,CAAkBC,KAAlB,EAAyC;IACvC;IACAJ,QAAQ,IAAIA,QAAQ,CAACI,KAAD,EAAQX,QAAR,EAAkBC,WAAlB,EAA+BK,KAAK,CAACM,MAArC,EAA6CV,OAA7C,EAAsDO,SAAtD,CAApB;EACD;;EACD,OAAO;IACLI,SAAS,EAAElB,GAAG,CAACC,MAAM,CAACkB,4BAAR,EAAsCR,KAAK,CAACM,MAAN,IAAgBhB,MAAM,CAACmB,SAAP,CAAiBC,QAAvE,CADT;IAELC,QAAQ,EAAEX,KAAK,CAACM,MAAN,KAAiBM,SAAjB,IACRxB;MACEyB,IAAI,EAAC,QADP;MAEEN,SAAS,EAAElB,GAAG,CAACC,MAAM,CAACwB,WAAR,CAFhB;MAGEC,OAAO,EAAEX,QAHX;MAGmB,iBACFJ,KAAK,CAACM,MAJvB;MAI6B,iBACZN,KAAK,CAACgB;IALvB,GAOE5B,oBAACG,SAAD,EAAU,IAAV,EAAYQ,KAAZ,CAPF;EAHG,CAAP;AAcD,CAvCM","names":["React","css","styles","TableText","compoundExpand","value","rowIndex","columnIndex","rowData","column","property","title","props","onExpand","extraParams","extraData","onToggle","event","isOpen","className","tableCompoundExpansionToggle","modifiers","expanded","children","undefined","type","tableButton","onClick","ariaControls"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-table/src/components/Table/utils/decorators/compoundExpand.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { IExtra, IFormatterValueType, ITransform } from '../../TableTypes';\nimport { TableText } from '../../TableText';\n\nexport const compoundExpand: ITransform = (\n  value: IFormatterValueType,\n  { rowIndex, columnIndex, rowData, column, property }: IExtra\n) => {\n  if (!value) {\n    return null;\n  }\n  const { title, props } = value;\n  const {\n    extraParams: { onExpand }\n  } = column;\n  const extraData = {\n    rowIndex,\n    columnIndex,\n    column,\n    property\n  };\n\n  /**\n   * @param {React.MouseEvent} event - Mouse event\n   */\n  function onToggle(event: React.MouseEvent) {\n    // tslint:disable-next-line:no-unused-expression\n    onExpand && onExpand(event, rowIndex, columnIndex, props.isOpen, rowData, extraData);\n  }\n  return {\n    className: css(styles.tableCompoundExpansionToggle, props.isOpen && styles.modifiers.expanded),\n    children: props.isOpen !== undefined && (\n      <button\n        type=\"button\"\n        className={css(styles.tableButton)}\n        onClick={onToggle}\n        aria-expanded={props.isOpen}\n        aria-controls={props.ariaControls}\n      >\n        <TableText>{title}</TableText>\n      </button>\n    )\n  };\n};\n"]},"metadata":{},"sourceType":"module"}