{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport class DropdownToggleCheckbox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.props.onChange(event.target.checked, event);\n    };\n\n    this.calculateChecked = () => {\n      const {\n        isChecked,\n        checked\n      } = this.props;\n\n      if (isChecked === null) {\n        // return false here and the indeterminate state will be set to true through the ref\n        return false;\n      } else if (isChecked !== undefined) {\n        return isChecked;\n      }\n\n      return checked;\n    };\n\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(DropdownToggleCheckbox.displayName)\n    };\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      className,\n      isValid,\n      isDisabled,\n      isChecked,\n      children,\n      ouiaId,\n      ouiaSafe,\n\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      onChange,\n      checked\n    } = _a,\n\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    props = __rest(_a, [\"className\", \"isValid\", \"isDisabled\", \"isChecked\", \"children\", \"ouiaId\", \"ouiaSafe\", \"onChange\", \"checked\"]);\n\n    const text = children && React.createElement(\"span\", {\n      className: css(styles.dropdownToggleText, className),\n      \"aria-hidden\": \"true\",\n      id: `${props.id}-text`\n    }, children);\n    return React.createElement(\"label\", {\n      className: css(styles.dropdownToggleCheck, className),\n      htmlFor: props.id\n    }, React.createElement(\"input\", Object.assign({}, props, this.calculateChecked() !== undefined && {\n      onChange: this.handleChange\n    }, {\n      type: \"checkbox\",\n      ref: elem => elem && (elem.indeterminate = isChecked === null),\n      \"aria-invalid\": !isValid,\n      disabled: isDisabled,\n      checked: this.calculateChecked()\n    }, getOUIAProps(DropdownToggleCheckbox.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe))), text);\n  }\n\n}\nDropdownToggleCheckbox.displayName = 'DropdownToggleCheckbox';\nDropdownToggleCheckbox.defaultProps = {\n  className: '',\n  isValid: true,\n  isDisabled: false,\n  onChange: () => undefined\n};","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,2DAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AAEA,SAASC,YAAT,EAAkCC,gBAAlC,QAA0D,eAA1D;AAyBA,OAAM,MAAOC,sBAAP,SAAsCL,KAAK,CAACM,SAA5C,CAA2G;EAS/GC,YAAYC,KAAZ,EAA8C;IAC5C,MAAMA,KAAN;;IAMF,oBAAgBC,KAAD,IAA6C;MAC1D,KAAKD,KAAL,CAAWE,QAAX,CAAqBD,KAAK,CAACE,MAAN,CAAkCC,OAAvD,EAAgEH,KAAhE;IACD,CAFD;;IAIA,wBAAmB,MAAK;MACtB,MAAM;QAAEI,SAAF;QAAaD;MAAb,IAAyB,KAAKJ,KAApC;;MACA,IAAIK,SAAS,KAAK,IAAlB,EAAwB;QACtB;QACA,OAAO,KAAP;MACD,CAHD,MAGO,IAAIA,SAAS,KAAKC,SAAlB,EAA6B;QAClC,OAAOD,SAAP;MACD;;MACD,OAAOD,OAAP;IACD,CATD;;IATE,KAAKG,KAAL,GAAa;MACXC,WAAW,EAAEZ,gBAAgB,CAACC,sBAAsB,CAACY,WAAxB;IADlB,CAAb;EAGD;;EAiBDC,MAAM;IACJ,MAAMC,KAaF,KAAKX,KAbT;IAAA,MAAM;MACJY,SADI;MAEJC,OAFI;MAGJC,UAHI;MAIJT,SAJI;MAKJU,QALI;MAMJC,MANI;MAOJC,QAPI;;MAQJ;MACAf,QATI;MAUJE;IAVI,IAUGO,EAVT;;IAWE;IACGX,KAAK,cAZJ,4GAYI,CAZV;;IAcA,MAAMkB,IAAI,GAAGH,QAAQ,IACnBvB;MAAMoB,SAAS,EAAElB,GAAG,CAACD,MAAM,CAAC0B,kBAAR,EAA4BP,SAA5B,CAApB;MAA0D,eAAc,MAAxE;MAA+EQ,EAAE,EAAE,GAAGpB,KAAK,CAACoB,EAAE;IAA9F,GACGL,QADH,CADF;IAKA,OACEvB;MAAOoB,SAAS,EAAElB,GAAG,CAACD,MAAM,CAAC4B,mBAAR,EAA6BT,SAA7B,CAArB;MAA8DU,OAAO,EAAEtB,KAAK,CAACoB;IAA7E,GACE5B,+CACMQ,KADN,EAEO,KAAKuB,gBAAL,OAA4BjB,SAA5B,IAAyC;MAAEJ,QAAQ,EAAE,KAAKsB;IAAjB,CAFhD,EAEgF;MAC9EC,IAAI,EAAC,UADyE;MAE9EC,GAAG,EAAEC,IAAI,IAAIA,IAAI,KAAKA,IAAI,CAACC,aAAL,GAAqBvB,SAAS,KAAK,IAAxC,CAF6D;MAEhB,gBAChD,CAACQ,OAH+D;MAI9EgB,QAAQ,EAAEf,UAJoE;MAK9EV,OAAO,EAAE,KAAKmB,gBAAL;IALqE,CAFhF,EAQM5B,YAAY,CACdE,sBAAsB,CAACY,WADT,EAEdO,MAAM,KAAKV,SAAX,GAAuBU,MAAvB,GAAgC,KAAKT,KAAL,CAAWC,WAF7B,EAGdS,QAHc,CARlB,EADF,EAeGC,IAfH,CADF;EAmBD;;AAtE8G;AACxGrB,qCAAc,wBAAd;AACAA,sCAA0D;EAC/De,SAAS,EAAE,EADoD;EAE/DC,OAAO,EAAE,IAFsD;EAG/DC,UAAU,EAAE,KAHmD;EAI/DZ,QAAQ,EAAE,MAAMI;AAJ+C,CAA1D","names":["React","styles","css","getOUIAProps","getDefaultOUIAId","DropdownToggleCheckbox","Component","constructor","props","event","onChange","target","checked","isChecked","undefined","state","ouiaStateId","displayName","render","_a","className","isValid","isDisabled","children","ouiaId","ouiaSafe","text","dropdownToggleText","id","dropdownToggleCheck","htmlFor","calculateChecked","handleChange","type","ref","elem","indeterminate","disabled"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Dropdown/DropdownToggleCheckbox.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { PickOptional } from '../../helpers/typeUtils';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId } from '../../helpers';\n\nexport interface DropdownToggleCheckboxProps\n  extends Omit<React.HTMLProps<HTMLInputElement>, 'type' | 'onChange' | 'disabled' | 'checked'>,\n    OUIAProps {\n  /** Additional classes added to the DropdownToggleCheckbox */\n  className?: string;\n  /** Flag to show if the checkbox selection is valid or invalid */\n  isValid?: boolean;\n  /** Flag to show if the checkbox is disabled */\n  isDisabled?: boolean;\n  /** Flag to show if the checkbox is checked */\n  isChecked?: boolean | null;\n  /** Alternate Flag to show if the checkbox is checked */\n  checked?: boolean | null;\n  /** A callback for when the checkbox selection changes */\n  onChange?: (checked: boolean, event: React.FormEvent<HTMLInputElement>) => void;\n  /** Element to be rendered inside the <span> */\n  children?: React.ReactNode;\n  /** Id of the checkbox */\n  id: string;\n  /** Aria-label of the checkbox */\n  'aria-label': string;\n}\n\nexport class DropdownToggleCheckbox extends React.Component<DropdownToggleCheckboxProps, { ouiaStateId: string }> {\n  static displayName = 'DropdownToggleCheckbox';\n  static defaultProps: PickOptional<DropdownToggleCheckboxProps> = {\n    className: '',\n    isValid: true,\n    isDisabled: false,\n    onChange: () => undefined as any\n  };\n\n  constructor(props: DropdownToggleCheckboxProps) {\n    super(props);\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(DropdownToggleCheckbox.displayName)\n    };\n  }\n\n  handleChange = (event: React.FormEvent<HTMLInputElement>) => {\n    this.props.onChange((event.target as HTMLInputElement).checked, event);\n  };\n\n  calculateChecked = () => {\n    const { isChecked, checked } = this.props;\n    if (isChecked === null) {\n      // return false here and the indeterminate state will be set to true through the ref\n      return false;\n    } else if (isChecked !== undefined) {\n      return isChecked;\n    }\n    return checked;\n  };\n\n  render() {\n    const {\n      className,\n      isValid,\n      isDisabled,\n      isChecked,\n      children,\n      ouiaId,\n      ouiaSafe,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      onChange,\n      checked,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      ...props\n    } = this.props;\n    const text = children && (\n      <span className={css(styles.dropdownToggleText, className)} aria-hidden=\"true\" id={`${props.id}-text`}>\n        {children}\n      </span>\n    );\n    return (\n      <label className={css(styles.dropdownToggleCheck, className)} htmlFor={props.id}>\n        <input\n          {...props}\n          {...(this.calculateChecked() !== undefined && { onChange: this.handleChange })}\n          type=\"checkbox\"\n          ref={elem => elem && (elem.indeterminate = isChecked === null)}\n          aria-invalid={!isValid}\n          disabled={isDisabled}\n          checked={this.calculateChecked()}\n          {...getOUIAProps(\n            DropdownToggleCheckbox.displayName,\n            ouiaId !== undefined ? ouiaId : this.state.ouiaStateId,\n            ouiaSafe\n          )}\n        />\n        {text}\n      </label>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}