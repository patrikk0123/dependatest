{"ast":null,"code":"import _classCallCheck from\"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";import{kafkaClient}from'./kafkaClient';import{pncClient}from'./pncClient';var BuildService=/*#__PURE__*/function(){function BuildService(){_classCallCheck(this,BuildService);this.path='/builds';}_createClass(BuildService,[{key:\"getBuildMetrics\",value:/**\n   * Gets Build Metrics by a list of build Ids.\n   *\n   * @returns BuildMetrics\n   */function getBuildMetrics(buildIds){var requestConfig=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(buildIds){return kafkaClient.getHttpClient().post(\"\".concat(this.path),{buildIds:buildIds},requestConfig);}}/**\n   * Gets Build Counts for enqueued, running, and waiting for dependencies builds.\n   *\n   * @returns numbers for \"enqueued\", \"running\", \"waitingForDependencies\"\n   */},{key:\"getBuildCount\",value:function getBuildCount(){var requestConfig=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return pncClient.getHttpClient().get(\"\".concat(this.path,\"/count\"),requestConfig);}}]);return BuildService;}();/**\n * Instance of BuildService providing group of Build related API operations.\n */export var buildService=new BuildService();","map":{"version":3,"names":["kafkaClient","pncClient","BuildService","path","buildIds","requestConfig","getHttpClient","post","get","buildService"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/services/buildService.ts"],"sourcesContent":["import { AxiosRequestConfig } from 'axios';\nimport { kafkaClient } from './kafkaClient';\nimport { pncClient } from './pncClient';\n\nclass BuildService {\n  path = '/builds';\n\n  /**\n   * Gets Build Metrics by a list of build Ids.\n   *\n   * @returns BuildMetrics\n   */\n  public getBuildMetrics(buildIds?: Array<string>, requestConfig: AxiosRequestConfig = {}) {\n    if (buildIds) {\n      return kafkaClient.getHttpClient().post(`${this.path}`, { buildIds }, requestConfig);\n    }\n  }\n\n  /**\n   * Gets Build Counts for enqueued, running, and waiting for dependencies builds.\n   *\n   * @returns numbers for \"enqueued\", \"running\", \"waitingForDependencies\"\n   */\n  public getBuildCount(requestConfig: AxiosRequestConfig = {}) {\n    return pncClient.getHttpClient().get(`${this.path}/count`, requestConfig);\n  }\n}\n\n/**\n * Instance of BuildService providing group of Build related API operations.\n */\nexport const buildService = new BuildService();\n"],"mappings":"wQACA,OAASA,WAAT,KAA4B,eAA5B,CACA,OAASC,SAAT,KAA0B,aAA1B,C,GAEMC,a,yFACJC,I,CAAO,S,0DAEP;AACF;AACA;AACA;AACA,KACE,yBAAuBC,QAAvB,CAAyF,IAAxCC,cAAwC,2DAAJ,EAAI,CACvF,GAAID,QAAJ,CAAc,CACZ,MAAOJ,YAAW,CAACM,aAAZ,GAA4BC,IAA5B,WAAoC,KAAKJ,IAAzC,EAAiD,CAAEC,QAAQ,CAARA,QAAF,CAAjD,CAA+DC,aAA/D,CAAP,CACD,CACF,CAED;AACF;AACA;AACA;AACA,K,6BACE,wBAA6D,IAAxCA,cAAwC,2DAAJ,EAAI,CAC3D,MAAOJ,UAAS,CAACK,aAAV,GAA0BE,GAA1B,WAAiC,KAAKL,IAAtC,WAAoDE,aAApD,CAAP,CACD,C,4BAGH;AACA;AACA,GACA,MAAO,IAAMI,aAAY,CAAG,GAAIP,aAAJ,EAArB"},"metadata":{},"sourceType":"module"}