{"ast":null,"code":"import _classCallCheck from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/SimpleList/simple-list';\nimport { SimpleListGroup } from './SimpleListGroup';\nexport var SimpleListContext = React.createContext({});\nexport var SimpleList = /*#__PURE__*/function (_React$Component) {\n  _inherits(SimpleList, _React$Component);\n\n  var _super = _createSuper(SimpleList);\n\n  function SimpleList() {\n    var _this;\n\n    _classCallCheck(this, SimpleList);\n\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      currentRef: null\n    };\n\n    _this.handleCurrentUpdate = function (newCurrentRef, itemProps) {\n      _this.setState({\n        currentRef: newCurrentRef\n      });\n\n      var onSelect = _this.props.onSelect;\n      onSelect && onSelect(newCurrentRef, itemProps);\n    };\n\n    return _this;\n  }\n\n  _createClass(SimpleList, [{\n    key: \"render\",\n    value: function render() {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      var _a = this.props,\n          children = _a.children,\n          className = _a.className,\n          onSelect = _a.onSelect,\n          isControlled = _a.isControlled,\n          props = __rest(_a, [\"children\", \"className\", \"onSelect\", \"isControlled\"]);\n\n      var isGrouped = false;\n\n      if (children) {\n        isGrouped = React.Children.toArray(children)[0].type === SimpleListGroup;\n      }\n\n      return React.createElement(SimpleListContext.Provider, {\n        value: {\n          currentRef: this.state.currentRef,\n          updateCurrentRef: this.handleCurrentUpdate,\n          isControlled: isControlled\n        }\n      }, React.createElement(\"div\", Object.assign({\n        className: css(styles.simpleList, className)\n      }, props), isGrouped && children, !isGrouped && React.createElement(\"ul\", null, children)));\n    }\n  }]);\n\n  return SimpleList;\n}(React.Component);\nSimpleList.displayName = 'SimpleList';\nSimpleList.defaultProps = {\n  children: null,\n  className: '',\n  isControlled: true\n};","map":{"version":3,"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,gEAAnB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AA+BA,OAAO,IAAMC,iBAAiB,GAAGJ,KAAK,CAACK,aAAN,CAAqD,EAArD,CAA1B;AAEP,WAAaC,UAAb;EAAA;;EAAA;;EAAA;IAAA;;IAAA;;;IAEE,cAAQ;MACNC,UAAU,EAAE;IADN,CAAR;;IAUA,4BAAsB,UACpBC,aADoB,EAEpBC,SAFoB,EAGlB;MACF,MAAKC,QAAL,CAAc;QAAEH,UAAU,EAAEC;MAAd,CAAd;;MACA,IAAQG,QAAR,GAAqB,MAAKC,KAA1B,CAAQD,QAAR;MACAA,QAAQ,IAAIA,QAAQ,CAACH,aAAD,EAAgBC,SAAhB,CAApB;IACD,CAPD;;IAZF;EA6CC;;EA7CD;IAAA;IAAA,OAqBE,kBAAM;MACJ;MACM,SAA4D,KAAKG,KAAjE;MAAA,IAAEC,QAAF,GAA6CC,EAA7C,CAAED,QAAF;MAAA,IAAYE,SAAZ,GAA6CD,EAA7C,CAAYC,SAAZ;MAAA,IAAuBJ,QAAvB,GAA6CG,EAA7C,CAAuBH,QAAvB;MAAA,IAAiCK,YAAjC,GAA6CF,EAA7C,CAAiCE,YAAjC;MAAA,IAAkDJ,KAAlD,GAAuDK,WAAvD,qDAAuD,CAAvD;;MAEN,IAAIC,SAAS,GAAG,KAAhB;;MACA,IAAIL,QAAJ,EAAc;QACZK,SAAS,GAAIlB,KAAK,CAACmB,QAAN,CAAeC,OAAf,CAAuBP,QAAvB,EAAiC,CAAjC,EAA2DQ,IAA3D,KAAoElB,eAAjF;MACD;;MAED,OACEH,oBAACI,iBAAiB,CAACkB,QAAnB,EAA2B;QACzBC,KAAK,EAAE;UACLhB,UAAU,EAAE,KAAKiB,KAAL,CAAWjB,UADlB;UAELkB,gBAAgB,EAAE,KAAKC,mBAFlB;UAGLV,YAAY,EAAZA;QAHK;MADkB,CAA3B,EAOEhB;QAAKe,SAAS,EAAEd,GAAG,CAACC,MAAM,CAACyB,UAAR,EAAoBZ,SAApB;MAAnB,GAAuDH,KAAvD,GACGM,SAAS,IAAIL,QADhB,EAEG,CAACK,SAAD,IAAclB,gCAAKa,QAAL,CAFjB,CAPF,CADF;IAcD;EA5CH;;EAAA;AAAA,EAAgCb,KAAK,CAAC4B,SAAtC;AACStB,yBAAc,YAAd;AAKAA,0BAAgC;EACrCO,QAAQ,EAAE,IAD2B;EAErCE,SAAS,EAAE,EAF0B;EAGrCC,YAAY,EAAE;AAHuB,CAAhC","names":["React","css","styles","SimpleListGroup","SimpleListContext","createContext","SimpleList","currentRef","newCurrentRef","itemProps","setState","onSelect","props","children","_a","className","isControlled","__rest","isGrouped","Children","toArray","type","Provider","value","state","updateCurrentRef","handleCurrentUpdate","simpleList","Component"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/SimpleList/SimpleList.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/SimpleList/simple-list';\nimport { SimpleListGroup } from './SimpleListGroup';\nimport { SimpleListItemProps } from './SimpleListItem';\n\nexport interface SimpleListProps extends Omit<React.HTMLProps<HTMLDivElement>, 'onSelect'> {\n  /** Content rendered inside the SimpleList */\n  children?: React.ReactNode;\n  /** Additional classes added to the SimpleList container */\n  className?: string;\n  /** Callback when an item is selected */\n  onSelect?: (\n    ref: React.RefObject<HTMLButtonElement> | React.RefObject<HTMLAnchorElement>,\n    props: SimpleListItemProps\n  ) => void;\n  /** Indicates whether component is controlled by its internal state */\n  isControlled?: boolean;\n}\n\nexport interface SimpleListState {\n  /** Ref of the current SimpleListItem */\n  currentRef: React.RefObject<HTMLButtonElement> | React.RefObject<HTMLAnchorElement>;\n}\n\ninterface SimpleListContextProps {\n  currentRef: React.RefObject<HTMLButtonElement> | React.RefObject<HTMLAnchorElement>;\n  updateCurrentRef: (\n    id: React.RefObject<HTMLButtonElement> | React.RefObject<HTMLAnchorElement>,\n    props: SimpleListItemProps\n  ) => void;\n  isControlled: boolean;\n}\n\nexport const SimpleListContext = React.createContext<Partial<SimpleListContextProps>>({});\n\nexport class SimpleList extends React.Component<SimpleListProps, SimpleListState> {\n  static displayName = 'SimpleList';\n  state = {\n    currentRef: null as React.RefObject<HTMLButtonElement> | React.RefObject<HTMLAnchorElement>\n  };\n\n  static defaultProps: SimpleListProps = {\n    children: null as React.ReactNode,\n    className: '',\n    isControlled: true\n  };\n\n  handleCurrentUpdate = (\n    newCurrentRef: React.RefObject<HTMLButtonElement> | React.RefObject<HTMLAnchorElement>,\n    itemProps: SimpleListItemProps\n  ) => {\n    this.setState({ currentRef: newCurrentRef });\n    const { onSelect } = this.props;\n    onSelect && onSelect(newCurrentRef, itemProps);\n  };\n\n  render() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { children, className, onSelect, isControlled, ...props } = this.props;\n\n    let isGrouped = false;\n    if (children) {\n      isGrouped = (React.Children.toArray(children)[0] as React.ReactElement).type === SimpleListGroup;\n    }\n\n    return (\n      <SimpleListContext.Provider\n        value={{\n          currentRef: this.state.currentRef,\n          updateCurrentRef: this.handleCurrentUpdate,\n          isControlled\n        }}\n      >\n        <div className={css(styles.simpleList, className)} {...props}>\n          {isGrouped && children}\n          {!isGrouped && <ul>{children}</ul>}\n        </div>\n      </SimpleListContext.Provider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}