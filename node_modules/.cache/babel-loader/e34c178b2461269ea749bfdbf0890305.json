{"ast":null,"code":"import _classCallCheck from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { DropdownContext } from './dropdownConstants';\nimport { KEYHANDLER_DIRECTION } from '../../helpers/constants';\nimport { preventedEvents } from '../../helpers/util';\nimport { Tooltip } from '../Tooltip';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nexport var InternalDropdownItem = /*#__PURE__*/function (_React$Component) {\n  _inherits(InternalDropdownItem, _React$Component);\n\n  var _super = _createSuper(InternalDropdownItem);\n\n  function InternalDropdownItem() {\n    var _this;\n\n    _classCallCheck(this, InternalDropdownItem);\n\n    _this = _super.apply(this, arguments);\n    _this.ref = React.createRef();\n    _this.additionalRef = React.createRef();\n\n    _this.getInnerNode = function (node) {\n      return node && node.childNodes && node.childNodes.length ? node.childNodes[0] : node;\n    };\n\n    _this.onKeyDown = function (event) {\n      // Detected key press on this item, notify the menu parent so that the appropriate item can be focused\n      var innerIndex = event.target === _this.ref.current ? 0 : 1;\n\n      if (!_this.props.customChild) {\n        event.preventDefault();\n      }\n\n      if (event.key === 'ArrowUp') {\n        _this.props.context.keyHandler(_this.props.index, innerIndex, KEYHANDLER_DIRECTION.UP);\n\n        event.stopPropagation();\n      } else if (event.key === 'ArrowDown') {\n        _this.props.context.keyHandler(_this.props.index, innerIndex, KEYHANDLER_DIRECTION.DOWN);\n\n        event.stopPropagation();\n      } else if (event.key === 'ArrowRight') {\n        _this.props.context.keyHandler(_this.props.index, innerIndex, KEYHANDLER_DIRECTION.RIGHT);\n\n        event.stopPropagation();\n      } else if (event.key === 'ArrowLeft') {\n        _this.props.context.keyHandler(_this.props.index, innerIndex, KEYHANDLER_DIRECTION.LEFT);\n\n        event.stopPropagation();\n      } else if (event.key === 'Enter' || event.key === ' ') {\n        event.target.click();\n        _this.props.enterTriggersArrowDown && _this.props.context.keyHandler(_this.props.index, innerIndex, KEYHANDLER_DIRECTION.DOWN);\n      }\n    };\n\n    _this.componentRef = function (element) {\n      _this.ref.current = element;\n      var component = _this.props.component;\n      var ref = component.ref;\n\n      if (ref) {\n        if (typeof ref === 'function') {\n          ref(element);\n        } else {\n          ref.current = element;\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(InternalDropdownItem, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          context = _this$props.context,\n          index = _this$props.index,\n          isDisabled = _this$props.isDisabled,\n          role = _this$props.role,\n          customChild = _this$props.customChild,\n          autoFocus = _this$props.autoFocus;\n      var customRef = customChild ? this.getInnerNode(this.ref.current) : this.ref.current;\n      context.sendRef(index, [customRef, customChild ? customRef : this.additionalRef.current], isDisabled, role === 'separator');\n      autoFocus && setTimeout(function () {\n        return customRef.focus();\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this$props2 = this.props,\n          context = _this$props2.context,\n          index = _this$props2.index,\n          isDisabled = _this$props2.isDisabled,\n          role = _this$props2.role,\n          customChild = _this$props2.customChild;\n      var customRef = customChild ? this.getInnerNode(this.ref.current) : this.ref.current;\n      context.sendRef(index, [customRef, customChild ? customRef : this.additionalRef.current], isDisabled, role === 'separator');\n    }\n  }, {\n    key: \"extendAdditionalChildRef\",\n    value: function extendAdditionalChildRef() {\n      var additionalChild = this.props.additionalChild;\n      return React.cloneElement(additionalChild, {\n        ref: this.additionalRef\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      var _a = this.props,\n          className = _a.className,\n          children = _a.children,\n          isHovered = _a.isHovered,\n          context = _a.context,\n          _onClick = _a.onClick,\n          component = _a.component,\n          role = _a.role,\n          isDisabled = _a.isDisabled,\n          isAriaDisabled = _a.isAriaDisabled,\n          isPlainText = _a.isPlainText,\n          index = _a.index,\n          href = _a.href,\n          tooltip = _a.tooltip,\n          tooltipProps = _a.tooltipProps,\n          id = _a.id,\n          componentID = _a.componentID,\n          listItemClassName = _a.listItemClassName,\n          additionalChild = _a.additionalChild,\n          customChild = _a.customChild,\n          enterTriggersArrowDown = _a.enterTriggersArrowDown,\n          icon = _a.icon,\n          autoFocus = _a.autoFocus,\n          styleChildren = _a.styleChildren,\n          description = _a.description,\n          inoperableEvents = _a.inoperableEvents,\n          additionalProps = __rest(_a, [\"className\", \"children\", \"isHovered\", \"context\", \"onClick\", \"component\", \"role\", \"isDisabled\", \"isAriaDisabled\", \"isPlainText\", \"index\", \"href\", \"tooltip\", \"tooltipProps\", \"id\", \"componentID\", \"listItemClassName\", \"additionalChild\", \"customChild\", \"enterTriggersArrowDown\", \"icon\", \"autoFocus\", \"styleChildren\", \"description\", \"inoperableEvents\"]);\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n      var classes = css(icon && styles.modifiers.icon, isAriaDisabled && styles.modifiers.ariaDisabled, className);\n\n      if (component === 'a') {\n        additionalProps['aria-disabled'] = isDisabled || isAriaDisabled;\n      } else if (component === 'button') {\n        additionalProps['aria-disabled'] = isDisabled || isAriaDisabled;\n        additionalProps.type = additionalProps.type || 'button';\n      }\n\n      var renderWithTooltip = function renderWithTooltip(childNode) {\n        return tooltip ? React.createElement(Tooltip, Object.assign({\n          content: tooltip\n        }, tooltipProps), childNode) : childNode;\n      };\n\n      var renderClonedComponent = function renderClonedComponent(element) {\n        return React.cloneElement(element, Object.assign(Object.assign({}, styleChildren && {\n          className: css(element.props.className, classes)\n        }), _this2.props.role !== 'separator' && {\n          ref: _this2.componentRef\n        }));\n      };\n\n      var renderDefaultComponent = function renderDefaultComponent(tag) {\n        var Component = tag;\n        var componentContent = description ? React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          className: styles.dropdownMenuItemMain\n        }, icon && React.createElement(\"span\", {\n          className: css(styles.dropdownMenuItemIcon)\n        }, icon), children), React.createElement(\"div\", {\n          className: styles.dropdownMenuItemDescription\n        }, description)) : React.createElement(React.Fragment, null, icon && React.createElement(\"span\", {\n          className: css(styles.dropdownMenuItemIcon)\n        }, icon), children);\n        return React.createElement(Component, Object.assign({}, additionalProps, isDisabled || isAriaDisabled ? preventedEvents(inoperableEvents) : null, {\n          href: href,\n          ref: _this2.ref,\n          className: classes,\n          id: componentID\n        }), componentContent);\n      };\n\n      return React.createElement(DropdownContext.Consumer, null, function (_ref) {\n        var onSelect = _ref.onSelect,\n            itemClass = _ref.itemClass,\n            disabledClass = _ref.disabledClass,\n            plainTextClass = _ref.plainTextClass;\n\n        if (_this2.props.role !== 'separator') {\n          classes = css(classes, isDisabled && disabledClass, isPlainText && plainTextClass, itemClass, description && styles.modifiers.description);\n        }\n\n        if (customChild) {\n          return React.cloneElement(customChild, {\n            ref: _this2.ref,\n            onKeyDown: _this2.onKeyDown\n          });\n        }\n\n        return React.createElement(\"li\", {\n          className: listItemClassName || null,\n          role: role,\n          onKeyDown: _this2.onKeyDown,\n          onClick: function onClick(event) {\n            if (!isDisabled && !isAriaDisabled) {\n              _onClick(event);\n\n              onSelect(event);\n            }\n          },\n          id: id\n        }, renderWithTooltip(React.isValidElement(component) ? renderClonedComponent(component) : renderDefaultComponent(component)), additionalChild && _this2.extendAdditionalChildRef());\n      });\n    }\n  }]);\n\n  return InternalDropdownItem;\n}(React.Component);\nInternalDropdownItem.displayName = 'InternalDropdownItem';\nInternalDropdownItem.defaultProps = {\n  className: '',\n  isHovered: false,\n  component: 'a',\n  role: 'none',\n  isDisabled: false,\n  isPlainText: false,\n  tooltipProps: {},\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onClick: function onClick(event) {\n    return undefined;\n  },\n  index: -1,\n  context: {\n    keyHandler: function keyHandler() {},\n    sendRef: function sendRef() {}\n  },\n  enterTriggersArrowDown: false,\n  icon: null,\n  styleChildren: true,\n  description: null,\n  inoperableEvents: ['onClick', 'onKeyPress']\n};","map":{"version":3,"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,MAAP,MAAmB,2DAAnB;AAwDA,WAAaC,oBAAb;EAAA;;EAAA;;EAAA;IAAA;;IAAA;;;IAEE,YAAMP,KAAK,CAACQ,SAAN,EAAN;IACA,sBAAgBR,KAAK,CAACQ,SAAN,EAAhB;;IA+CA,qBAAe,UAACC,IAAD;MAAA,OAAgBA,IAAI,IAAIA,IAAI,CAACC,UAAb,IAA2BD,IAAI,CAACC,UAAL,CAAgBC,MAA3C,GAAoDF,IAAI,CAACC,UAAL,CAAgB,CAAhB,CAApD,GAAyED,IAAzF;IAAA,CAAf;;IAEA,kBAAY,UAACG,KAAD,EAAe;MACzB;MACA,IAAMC,UAAU,GAAGD,KAAK,CAACE,MAAN,KAAiB,MAAKC,GAAL,CAASC,OAA1B,GAAoC,CAApC,GAAwC,CAA3D;;MACA,IAAI,CAAC,MAAKC,KAAL,CAAWC,WAAhB,EAA6B;QAC3BN,KAAK,CAACO,cAAN;MACD;;MACD,IAAIP,KAAK,CAACQ,GAAN,KAAc,SAAlB,EAA6B;QAC3B,MAAKH,KAAL,CAAWI,OAAX,CAAmBC,UAAnB,CAA8B,MAAKL,KAAL,CAAWM,KAAzC,EAAgDV,UAAhD,EAA4DV,oBAAoB,CAACqB,EAAjF;;QACAZ,KAAK,CAACa,eAAN;MACD,CAHD,MAGO,IAAIb,KAAK,CAACQ,GAAN,KAAc,WAAlB,EAA+B;QACpC,MAAKH,KAAL,CAAWI,OAAX,CAAmBC,UAAnB,CAA8B,MAAKL,KAAL,CAAWM,KAAzC,EAAgDV,UAAhD,EAA4DV,oBAAoB,CAACuB,IAAjF;;QACAd,KAAK,CAACa,eAAN;MACD,CAHM,MAGA,IAAIb,KAAK,CAACQ,GAAN,KAAc,YAAlB,EAAgC;QACrC,MAAKH,KAAL,CAAWI,OAAX,CAAmBC,UAAnB,CAA8B,MAAKL,KAAL,CAAWM,KAAzC,EAAgDV,UAAhD,EAA4DV,oBAAoB,CAACwB,KAAjF;;QACAf,KAAK,CAACa,eAAN;MACD,CAHM,MAGA,IAAIb,KAAK,CAACQ,GAAN,KAAc,WAAlB,EAA+B;QACpC,MAAKH,KAAL,CAAWI,OAAX,CAAmBC,UAAnB,CAA8B,MAAKL,KAAL,CAAWM,KAAzC,EAAgDV,UAAhD,EAA4DV,oBAAoB,CAACyB,IAAjF;;QACAhB,KAAK,CAACa,eAAN;MACD,CAHM,MAGA,IAAIb,KAAK,CAACQ,GAAN,KAAc,OAAd,IAAyBR,KAAK,CAACQ,GAAN,KAAc,GAA3C,EAAgD;QACrDR,KAAK,CAACE,MAAN,CAAae,KAAb;QACA,MAAKZ,KAAL,CAAWa,sBAAX,IACE,MAAKb,KAAL,CAAWI,OAAX,CAAmBC,UAAnB,CAA8B,MAAKL,KAAL,CAAWM,KAAzC,EAAgDV,UAAhD,EAA4DV,oBAAoB,CAACuB,IAAjF,CADF;MAED;IACF,CAvBD;;IAiCA,qBAAe,UAACK,OAAD,EAA2B;MACvC,MAAKhB,GAAL,CAAyCC,OAAzC,GAAmDe,OAAnD;MACD,IAAQC,SAAR,GAAsB,MAAKf,KAA3B,CAAQe,SAAR;MACA,IAAMjB,GAAG,GAAIiB,SAAiB,CAACjB,GAA/B;;MACA,IAAIA,GAAJ,EAAS;QACP,IAAI,OAAOA,GAAP,KAAe,UAAnB,EAA+B;UAC7BA,GAAG,CAACgB,OAAD,CAAH;QACD,CAFD,MAEO;UACJhB,GAAmC,CAACC,OAApC,GAA8Ce,OAA9C;QACF;MACF;IACF,CAXD;;IArFF;EAsOC;;EAtOD;IAAA;IAAA,OA2BE,6BAAiB;MACf,kBAAqE,KAAKd,KAA1E;MAAA,IAAQI,OAAR,eAAQA,OAAR;MAAA,IAAiBE,KAAjB,eAAiBA,KAAjB;MAAA,IAAwBU,UAAxB,eAAwBA,UAAxB;MAAA,IAAoCC,IAApC,eAAoCA,IAApC;MAAA,IAA0ChB,WAA1C,eAA0CA,WAA1C;MAAA,IAAuDiB,SAAvD,eAAuDA,SAAvD;MACA,IAAMC,SAAS,GAAGlB,WAAW,GAAG,KAAKmB,YAAL,CAAkB,KAAKtB,GAAL,CAASC,OAA3B,CAAH,GAAyC,KAAKD,GAAL,CAASC,OAA/E;MACAK,OAAO,CAACiB,OAAR,CACEf,KADF,EAEE,CAACa,SAAD,EAAYlB,WAAW,GAAGkB,SAAH,GAAe,KAAKG,aAAL,CAAmBvB,OAAzD,CAFF,EAGEiB,UAHF,EAIEC,IAAI,KAAK,WAJX;MAMAC,SAAS,IAAIK,UAAU,CAAC;QAAA,OAAMJ,SAAS,CAACK,KAAV,EAAN;MAAA,CAAD,CAAvB;IACD;EArCH;IAAA;IAAA,OAuCE,8BAAkB;MAChB,mBAA0D,KAAKxB,KAA/D;MAAA,IAAQI,OAAR,gBAAQA,OAAR;MAAA,IAAiBE,KAAjB,gBAAiBA,KAAjB;MAAA,IAAwBU,UAAxB,gBAAwBA,UAAxB;MAAA,IAAoCC,IAApC,gBAAoCA,IAApC;MAAA,IAA0ChB,WAA1C,gBAA0CA,WAA1C;MACA,IAAMkB,SAAS,GAAGlB,WAAW,GAAG,KAAKmB,YAAL,CAAkB,KAAKtB,GAAL,CAASC,OAA3B,CAAH,GAAyC,KAAKD,GAAL,CAASC,OAA/E;MACAK,OAAO,CAACiB,OAAR,CACEf,KADF,EAEE,CAACa,SAAD,EAAYlB,WAAW,GAAGkB,SAAH,GAAe,KAAKG,aAAL,CAAmBvB,OAAzD,CAFF,EAGEiB,UAHF,EAIEC,IAAI,KAAK,WAJX;IAMD;EAhDH;IAAA;IAAA,OA6EE,oCAAwB;MACtB,IAAQQ,eAAR,GAA4B,KAAKzB,KAAjC,CAAQyB,eAAR;MAEA,OAAO1C,KAAK,CAAC2C,YAAN,CAAmBD,eAAnB,EAA+D;QACpE3B,GAAG,EAAE,KAAKwB;MAD0D,CAA/D,CAAP;IAGD;EAnFH;IAAA;IAAA,OAkGE,kBAAM;MAAA;;MACJ;MACM,SA2BF,KAAKtB,KA3BH;MAAA,IACJ2B,SADI,GAyBYC,EAzBZ,CACJD,SADI;MAAA,IAEJE,QAFI,GAyBYD,EAzBZ,CAEJC,QAFI;MAAA,IAGJC,SAHI,GAyBYF,EAzBZ,CAGJE,SAHI;MAAA,IAIJ1B,OAJI,GAyBYwB,EAzBZ,CAIJxB,OAJI;MAAA,IAKJ2B,QALI,GAyBYH,EAzBZ,CAKJG,OALI;MAAA,IAMJhB,SANI,GAyBYa,EAzBZ,CAMJb,SANI;MAAA,IAOJE,IAPI,GAyBYW,EAzBZ,CAOJX,IAPI;MAAA,IAQJD,UARI,GAyBYY,EAzBZ,CAQJZ,UARI;MAAA,IASJgB,cATI,GAyBYJ,EAzBZ,CASJI,cATI;MAAA,IAUJC,WAVI,GAyBYL,EAzBZ,CAUJK,WAVI;MAAA,IAWJ3B,KAXI,GAyBYsB,EAzBZ,CAWJtB,KAXI;MAAA,IAYJ4B,IAZI,GAyBYN,EAzBZ,CAYJM,IAZI;MAAA,IAaJC,OAbI,GAyBYP,EAzBZ,CAaJO,OAbI;MAAA,IAcJC,YAdI,GAyBYR,EAzBZ,CAcJQ,YAdI;MAAA,IAeJC,EAfI,GAyBYT,EAzBZ,CAeJS,EAfI;MAAA,IAgBJC,WAhBI,GAyBYV,EAzBZ,CAgBJU,WAhBI;MAAA,IAiBJC,iBAjBI,GAyBYX,EAzBZ,CAiBJW,iBAjBI;MAAA,IAkBJd,eAlBI,GAyBYG,EAzBZ,CAkBJH,eAlBI;MAAA,IAmBJxB,WAnBI,GAyBY2B,EAzBZ,CAmBJ3B,WAnBI;MAAA,IAoBJY,sBApBI,GAyBYe,EAzBZ,CAoBJf,sBApBI;MAAA,IAqBJ2B,IArBI,GAyBYZ,EAzBZ,CAqBJY,IArBI;MAAA,IAsBJtB,SAtBI,GAyBYU,EAzBZ,CAsBJV,SAtBI;MAAA,IAuBJuB,aAvBI,GAyBYb,EAzBZ,CAuBJa,aAvBI;MAAA,IAwBJC,WAxBI,GAyBYd,EAzBZ,CAwBJc,WAxBI;MAAA,IAyBJC,gBAzBI,GAyBYf,EAzBZ,CAyBJe,gBAzBI;MAAA,IA0BDC,eA1BC,GA0BcC,WA1Bd,2VA0Bc,CA1Bd;MA4BN;;;MACA,IAAIC,OAAO,GAAG9D,GAAG,CAACwD,IAAI,IAAInD,MAAM,CAAC0D,SAAP,CAAiBP,IAA1B,EAAgCR,cAAc,IAAI3C,MAAM,CAAC0D,SAAP,CAAiBC,YAAnE,EAAiFrB,SAAjF,CAAjB;;MAEA,IAAIZ,SAAS,KAAK,GAAlB,EAAuB;QACrB6B,eAAe,CAAC,eAAD,CAAf,GAAmC5B,UAAU,IAAIgB,cAAjD;MACD,CAFD,MAEO,IAAIjB,SAAS,KAAK,QAAlB,EAA4B;QACjC6B,eAAe,CAAC,eAAD,CAAf,GAAmC5B,UAAU,IAAIgB,cAAjD;QACAY,eAAe,CAACK,IAAhB,GAAuBL,eAAe,CAACK,IAAhB,IAAwB,QAA/C;MACD;;MACD,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,SAAD;QAAA,OACxBhB,OAAO,GACLpD,oBAACK,OAAD,EAAQgE;UAACC,OAAO,EAAElB;QAAV,GAAuBC,YAAvB,CAAR,EACGe,SADH,CADK,GAKLA,SANsB;MAAA,CAA1B;;MASA,IAAMG,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACxC,OAAD;QAAA,OAC5B/B,KAAK,CAAC2C,YAAN,CAAmBZ,OAAnB,EAA0BsC,gCACpBX,aAAa,IAAI;UACnBd,SAAS,EAAE3C,GAAG,CAAC8B,OAAO,CAACd,KAAR,CAAc2B,SAAf,EAA0BmB,OAA1B;QADK,CADG,GAIpB,MAAI,CAAC9C,KAAL,CAAWiB,IAAX,KAAoB,WAApB,IAAmC;UAAEnB,GAAG,EAAE,MAAI,CAACyD;QAAZ,CAJf,CAA1B,CAD4B;MAAA,CAA9B;;MAQA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,GAAD,EAAgB;QAC7C,IAAMC,SAAS,GAAGD,GAAlB;QAEA,IAAME,gBAAgB,GAAGjB,WAAW,GAClC3D,0CACEA;UAAK4C,SAAS,EAAEtC,MAAM,CAACuE;QAAvB,GACGpB,IAAI,IAAIzD;UAAM4C,SAAS,EAAE3C,GAAG,CAACK,MAAM,CAACwE,oBAAR;QAApB,GAAoDrB,IAApD,CADX,EAEGX,QAFH,CADF,EAKE9C;UAAK4C,SAAS,EAAEtC,MAAM,CAACyE;QAAvB,GAAqDpB,WAArD,CALF,CADkC,GASlC3D,0CACGyD,IAAI,IAAIzD;UAAM4C,SAAS,EAAE3C,GAAG,CAACK,MAAM,CAACwE,oBAAR;QAApB,GAAoDrB,IAApD,CADX,EAEGX,QAFH,CATF;QAeA,OACE9C,oBAAC2E,SAAD,EAAUN,kBACJR,eADI,EAEH5B,UAAU,IAAIgB,cAAd,GAA+B7C,eAAe,CAACwD,gBAAD,CAA9C,GAAmE,IAFhE,EAEqE;UAC7ET,IAAI,EAAEA,IADuE;UAE7EpC,GAAG,EAAE,MAAI,CAACA,GAFmE;UAG7E6B,SAAS,EAAEmB,OAHkE;UAI7ET,EAAE,EAAEC;QAJyE,CAFrE,CAAV,EAQGqB,gBARH,CADF;MAYD,CA9BD;;MAgCA,OACE5E,oBAACE,eAAe,CAAC8E,QAAjB,EAAyB,IAAzB,EACG,gBAA2D;QAAA,IAAxDC,QAAwD,QAAxDA,QAAwD;QAAA,IAA9CC,SAA8C,QAA9CA,SAA8C;QAAA,IAAnCC,aAAmC,QAAnCA,aAAmC;QAAA,IAApBC,cAAoB,QAApBA,cAAoB;;QAC1D,IAAI,MAAI,CAACnE,KAAL,CAAWiB,IAAX,KAAoB,WAAxB,EAAqC;UACnC6B,OAAO,GAAG9D,GAAG,CACX8D,OADW,EAEX9B,UAAU,IAAIkD,aAFH,EAGXjC,WAAW,IAAIkC,cAHJ,EAIXF,SAJW,EAKXvB,WAAW,IAAIrD,MAAM,CAAC0D,SAAP,CAAiBL,WALrB,CAAb;QAOD;;QACD,IAAIzC,WAAJ,EAAiB;UACf,OAAOlB,KAAK,CAAC2C,YAAN,CAAmBzB,WAAnB,EAA2D;YAChEH,GAAG,EAAE,MAAI,CAACA,GADsD;YAEhEsE,SAAS,EAAE,MAAI,CAACA;UAFgD,CAA3D,CAAP;QAID;;QAED,OACErF;UACE4C,SAAS,EAAEY,iBAAiB,IAAI,IADlC;UAEEtB,IAAI,EAAEA,IAFR;UAGEmD,SAAS,EAAE,MAAI,CAACA,SAHlB;UAIErC,OAAO,EAAE,iBAACpC,KAAD,EAAe;YACtB,IAAI,CAACqB,UAAD,IAAe,CAACgB,cAApB,EAAoC;cAClCD,QAAO,CAACpC,KAAD,CAAP;;cACAqE,QAAQ,CAACrE,KAAD,CAAR;YACD;UACF,CATH;UAUE0C,EAAE,EAAEA;QAVN,GAYGa,iBAAiB,CAChBnE,KAAK,CAACsF,cAAN,CAAqBtD,SAArB,IACIuC,qBAAqB,CAACvC,SAAD,CADzB,GAEIyC,sBAAsB,CAACzC,SAAD,CAHV,CAZpB,EAiBGU,eAAe,IAAI,MAAI,CAAC6C,wBAAL,EAjBtB,CADF;MAqBD,CAvCH,CADF;IA2CD;EArOH;;EAAA;AAAA,EAA0CvF,KAAK,CAAC2E,SAAhD;AACSpE,mCAAc,sBAAd;AAIAA,oCAA0C;EAC/CqC,SAAS,EAAE,EADoC;EAE/CG,SAAS,EAAE,KAFoC;EAG/Cf,SAAS,EAAE,GAHoC;EAI/CE,IAAI,EAAE,MAJyC;EAK/CD,UAAU,EAAE,KALmC;EAM/CiB,WAAW,EAAE,KANkC;EAO/CG,YAAY,EAAE,EAPiC;EAQ/C;EACAL,OAAO,EAAE,iBAACpC,KAAD;IAAA,OAAqE4E,SAArE;EAAA,CATsC;EAU/CjE,KAAK,EAAE,CAAC,CAVuC;EAW/CF,OAAO,EAAE;IACPC,UAAU,EAAE,sBAAK,CAAG,CADb;IAEPgB,OAAO,EAAE,mBAAK,CAAG;EAFV,CAXsC;EAe/CR,sBAAsB,EAAE,KAfuB;EAgB/C2B,IAAI,EAAE,IAhByC;EAiB/CC,aAAa,EAAE,IAjBgC;EAkB/CC,WAAW,EAAE,IAlBkC;EAmB/CC,gBAAgB,EAAE,CAAC,SAAD,EAAY,YAAZ;AAnB6B,CAA1C","names":["React","css","DropdownContext","KEYHANDLER_DIRECTION","preventedEvents","Tooltip","styles","InternalDropdownItem","createRef","node","childNodes","length","event","innerIndex","target","ref","current","props","customChild","preventDefault","key","context","keyHandler","index","UP","stopPropagation","DOWN","RIGHT","LEFT","click","enterTriggersArrowDown","element","component","isDisabled","role","autoFocus","customRef","getInnerNode","sendRef","additionalRef","setTimeout","focus","additionalChild","cloneElement","className","_a","children","isHovered","onClick","isAriaDisabled","isPlainText","href","tooltip","tooltipProps","id","componentID","listItemClassName","icon","styleChildren","description","inoperableEvents","additionalProps","__rest","classes","modifiers","ariaDisabled","type","renderWithTooltip","childNode","Object","content","renderClonedComponent","componentRef","renderDefaultComponent","tag","Component","componentContent","dropdownMenuItemMain","dropdownMenuItemIcon","dropdownMenuItemDescription","Consumer","onSelect","itemClass","disabledClass","plainTextClass","onKeyDown","isValidElement","extendAdditionalChildRef","undefined"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Dropdown/InternalDropdownItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { DropdownContext } from './dropdownConstants';\nimport { KEYHANDLER_DIRECTION } from '../../helpers/constants';\nimport { preventedEvents } from '../../helpers/util';\nimport { Tooltip } from '../Tooltip';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\n\nexport interface InternalDropdownItemProps extends React.HTMLProps<HTMLAnchorElement> {\n  /** Anything which can be rendered as dropdown item */\n  children?: React.ReactNode;\n  /** Whether to set className on component when React.isValidElement(component) */\n  styleChildren?: boolean;\n  /** Classes applied to root element of dropdown item */\n  className?: string;\n  /** Class applied to list element */\n  listItemClassName?: string;\n  /** Indicates which component will be used as dropdown item. Will have className injected if React.isValidElement(component) */\n  component?: React.ReactNode;\n  /** Role for the item */\n  role?: string;\n  /** Render dropdown item as disabled option */\n  isDisabled?: boolean;\n  /** Render dropdown item as aria disabled option */\n  isAriaDisabled?: boolean;\n  /** Render dropdown item as a non-interactive item */\n  isPlainText?: boolean;\n  /** Forces display of the hover state of the element */\n  isHovered?: boolean;\n  /** Default hyperlink location */\n  href?: string;\n  /** Tooltip to display when hovered over the item */\n  tooltip?: React.ReactNode;\n  /** Additional tooltip props forwarded to the Tooltip component */\n  tooltipProps?: any;\n  index?: number;\n  context?: {\n    keyHandler?: (index: number, innerIndex: number, direction: string) => void;\n    sendRef?: (index: number, ref: any, isDisabled: boolean, isSeparator: boolean) => void;\n  };\n  /** Callback for click event */\n  onClick?: (event: React.MouseEvent<any> | React.KeyboardEvent | MouseEvent) => void;\n  /** ID for the list element */\n  id?: string;\n  /** ID for the component element */\n  componentID?: string;\n  /** Additional content to include alongside item within the <li> */\n  additionalChild?: React.ReactNode;\n  /** Custom item rendering that receives the DropdownContext */\n  customChild?: React.ReactNode;\n  /** Flag indicating if hitting enter on an item also triggers an arrow down key press */\n  enterTriggersArrowDown?: boolean;\n  /** An image to display within the InternalDropdownItem, appearing before any component children */\n  icon?: React.ReactNode;\n  /** Initial focus on the item when the menu is opened (Note: Only applicable to one of the items) */\n  autoFocus?: boolean;\n  /** A short description of the dropdown item, displayed under the dropdown item content */\n  description?: React.ReactNode;\n  /** Events to prevent when the item is disabled */\n  inoperableEvents?: string[];\n}\n\nexport class InternalDropdownItem extends React.Component<InternalDropdownItemProps> {\n  static displayName = 'InternalDropdownItem';\n  ref = React.createRef<HTMLLIElement>();\n  additionalRef = React.createRef<any>();\n\n  static defaultProps: InternalDropdownItemProps = {\n    className: '',\n    isHovered: false,\n    component: 'a',\n    role: 'none',\n    isDisabled: false,\n    isPlainText: false,\n    tooltipProps: {},\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onClick: (event: React.MouseEvent<any> | React.KeyboardEvent | MouseEvent) => undefined as any,\n    index: -1,\n    context: {\n      keyHandler: () => {},\n      sendRef: () => {}\n    },\n    enterTriggersArrowDown: false,\n    icon: null,\n    styleChildren: true,\n    description: null,\n    inoperableEvents: ['onClick', 'onKeyPress']\n  };\n\n  componentDidMount() {\n    const { context, index, isDisabled, role, customChild, autoFocus } = this.props;\n    const customRef = customChild ? this.getInnerNode(this.ref.current) : this.ref.current;\n    context.sendRef(\n      index,\n      [customRef, customChild ? customRef : this.additionalRef.current],\n      isDisabled,\n      role === 'separator'\n    );\n    autoFocus && setTimeout(() => customRef.focus());\n  }\n\n  componentDidUpdate() {\n    const { context, index, isDisabled, role, customChild } = this.props;\n    const customRef = customChild ? this.getInnerNode(this.ref.current) : this.ref.current;\n    context.sendRef(\n      index,\n      [customRef, customChild ? customRef : this.additionalRef.current],\n      isDisabled,\n      role === 'separator'\n    );\n  }\n\n  getInnerNode = (node: any) => (node && node.childNodes && node.childNodes.length ? node.childNodes[0] : node);\n\n  onKeyDown = (event: any) => {\n    // Detected key press on this item, notify the menu parent so that the appropriate item can be focused\n    const innerIndex = event.target === this.ref.current ? 0 : 1;\n    if (!this.props.customChild) {\n      event.preventDefault();\n    }\n    if (event.key === 'ArrowUp') {\n      this.props.context.keyHandler(this.props.index, innerIndex, KEYHANDLER_DIRECTION.UP);\n      event.stopPropagation();\n    } else if (event.key === 'ArrowDown') {\n      this.props.context.keyHandler(this.props.index, innerIndex, KEYHANDLER_DIRECTION.DOWN);\n      event.stopPropagation();\n    } else if (event.key === 'ArrowRight') {\n      this.props.context.keyHandler(this.props.index, innerIndex, KEYHANDLER_DIRECTION.RIGHT);\n      event.stopPropagation();\n    } else if (event.key === 'ArrowLeft') {\n      this.props.context.keyHandler(this.props.index, innerIndex, KEYHANDLER_DIRECTION.LEFT);\n      event.stopPropagation();\n    } else if (event.key === 'Enter' || event.key === ' ') {\n      event.target.click();\n      this.props.enterTriggersArrowDown &&\n        this.props.context.keyHandler(this.props.index, innerIndex, KEYHANDLER_DIRECTION.DOWN);\n    }\n  };\n\n  extendAdditionalChildRef() {\n    const { additionalChild } = this.props;\n\n    return React.cloneElement(additionalChild as React.ReactElement<any>, {\n      ref: this.additionalRef\n    });\n  }\n\n  componentRef = (element: HTMLLIElement) => {\n    (this.ref as React.MutableRefObject<any>).current = element;\n    const { component } = this.props;\n    const ref = (component as any).ref;\n    if (ref) {\n      if (typeof ref === 'function') {\n        ref(element);\n      } else {\n        (ref as React.MutableRefObject<any>).current = element;\n      }\n    }\n  };\n\n  render() {\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    const {\n      className,\n      children,\n      isHovered,\n      context,\n      onClick,\n      component,\n      role,\n      isDisabled,\n      isAriaDisabled,\n      isPlainText,\n      index,\n      href,\n      tooltip,\n      tooltipProps,\n      id,\n      componentID,\n      listItemClassName,\n      additionalChild,\n      customChild,\n      enterTriggersArrowDown,\n      icon,\n      autoFocus,\n      styleChildren,\n      description,\n      inoperableEvents,\n      ...additionalProps\n    } = this.props;\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    let classes = css(icon && styles.modifiers.icon, isAriaDisabled && styles.modifiers.ariaDisabled, className);\n\n    if (component === 'a') {\n      additionalProps['aria-disabled'] = isDisabled || isAriaDisabled;\n    } else if (component === 'button') {\n      additionalProps['aria-disabled'] = isDisabled || isAriaDisabled;\n      additionalProps.type = additionalProps.type || 'button';\n    }\n    const renderWithTooltip = (childNode: React.ReactNode) =>\n      tooltip ? (\n        <Tooltip content={tooltip} {...tooltipProps}>\n          {childNode}\n        </Tooltip>\n      ) : (\n        childNode\n      );\n\n    const renderClonedComponent = (element: React.ReactElement<any>) =>\n      React.cloneElement(element, {\n        ...(styleChildren && {\n          className: css(element.props.className, classes)\n        }),\n        ...(this.props.role !== 'separator' && { ref: this.componentRef })\n      });\n\n    const renderDefaultComponent = (tag: string) => {\n      const Component = tag as any;\n\n      const componentContent = description ? (\n        <>\n          <div className={styles.dropdownMenuItemMain}>\n            {icon && <span className={css(styles.dropdownMenuItemIcon)}>{icon}</span>}\n            {children}\n          </div>\n          <div className={styles.dropdownMenuItemDescription}>{description}</div>\n        </>\n      ) : (\n        <>\n          {icon && <span className={css(styles.dropdownMenuItemIcon)}>{icon}</span>}\n          {children}\n        </>\n      );\n\n      return (\n        <Component\n          {...additionalProps}\n          {...(isDisabled || isAriaDisabled ? preventedEvents(inoperableEvents) : null)}\n          href={href}\n          ref={this.ref}\n          className={classes}\n          id={componentID}\n        >\n          {componentContent}\n        </Component>\n      );\n    };\n\n    return (\n      <DropdownContext.Consumer>\n        {({ onSelect, itemClass, disabledClass, plainTextClass }) => {\n          if (this.props.role !== 'separator') {\n            classes = css(\n              classes,\n              isDisabled && disabledClass,\n              isPlainText && plainTextClass,\n              itemClass,\n              description && styles.modifiers.description\n            );\n          }\n          if (customChild) {\n            return React.cloneElement(customChild as React.ReactElement<any>, {\n              ref: this.ref,\n              onKeyDown: this.onKeyDown\n            });\n          }\n\n          return (\n            <li\n              className={listItemClassName || null}\n              role={role}\n              onKeyDown={this.onKeyDown}\n              onClick={(event: any) => {\n                if (!isDisabled && !isAriaDisabled) {\n                  onClick(event);\n                  onSelect(event);\n                }\n              }}\n              id={id}\n            >\n              {renderWithTooltip(\n                React.isValidElement(component)\n                  ? renderClonedComponent(component)\n                  : renderDefaultComponent(component as string)\n              )}\n              {additionalChild && this.extendAdditionalChildRef()}\n            </li>\n          );\n        }}\n      </DropdownContext.Consumer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}