{"ast":null,"code":"import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/AppLauncher/app-launcher';\nimport accessibleStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { ApplicationLauncherIcon } from './ApplicationLauncherIcon';\nimport { ApplicationLauncherText } from './ApplicationLauncherText';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport { ApplicationLauncherItemContext } from './ApplicationLauncherItemContext';\nexport var ApplicationLauncherContent = function ApplicationLauncherContent(_ref) {\n  var children = _ref.children;\n  return React.createElement(ApplicationLauncherItemContext.Consumer, null, function (_ref2) {\n    var isExternal = _ref2.isExternal,\n        icon = _ref2.icon;\n    return React.createElement(React.Fragment, null, icon && React.createElement(ApplicationLauncherIcon, null, icon), icon ? React.createElement(ApplicationLauncherText, null, children) : children, isExternal && React.createElement(React.Fragment, null, React.createElement(\"span\", {\n      className: css(styles.appLauncherMenuItemExternalIcon)\n    }, React.createElement(ExternalLinkAltIcon, null)), React.createElement(\"span\", {\n      className: css(accessibleStyles.screenReader)\n    }, \"(opens new window)\")));\n  });\n};\nApplicationLauncherContent.displayName = 'ApplicationLauncherContent';","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,kEAAnB;AACA,OAAOC,gBAAP,MAA6B,oEAA7B;AACA,SAASC,uBAAT,QAAwC,2BAAxC;AACA,SAASC,uBAAT,QAAwC,2BAAxC;AACA,OAAOC,mBAAP,MAAgC,+DAAhC;AACA,SAASC,8BAAT,QAA+C,kCAA/C;AAOA,OAAO,IAAMC,0BAA0B,GAA6D,SAAvFA,0BAAuF;EAAA,IAClGC,QADkG,QAClGA,QADkG;EAAA,OAGlGT,oBAACO,8BAA8B,CAACG,QAAhC,EAAwC,IAAxC,EACG;IAAA,IAAGC,UAAH,SAAGA,UAAH;IAAA,IAAeC,IAAf,SAAeA,IAAf;IAAA,OACCZ,0CACGY,IAAI,IAAIZ,oBAACI,uBAAD,EAAwB,IAAxB,EAA0BQ,IAA1B,CADX,EAEGA,IAAI,GAAGZ,oBAACK,uBAAD,EAAwB,IAAxB,EAA0BI,QAA1B,CAAH,GAAmEA,QAF1E,EAGGE,UAAU,IACTX,0CACEA;MAAMa,SAAS,EAAEZ,GAAG,CAACC,MAAM,CAACY,+BAAR;IAApB,GACEd,oBAACM,mBAAD,EAAoB,IAApB,CADF,CADF,EAIEN;MAAMa,SAAS,EAAEZ,GAAG,CAACE,gBAAgB,CAACY,YAAlB;IAApB,GAAmD,oBAAnD,CAJF,CAJJ,CADD;EAAA,CADH,CAHkG;AAAA,CAA7F;AAoBPP,0BAA0B,CAACQ,WAA3B,GAAyC,4BAAzC","names":["React","css","styles","accessibleStyles","ApplicationLauncherIcon","ApplicationLauncherText","ExternalLinkAltIcon","ApplicationLauncherItemContext","ApplicationLauncherContent","children","Consumer","isExternal","icon","className","appLauncherMenuItemExternalIcon","screenReader","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/ApplicationLauncher/ApplicationLauncherContent.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/AppLauncher/app-launcher';\nimport accessibleStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { ApplicationLauncherIcon } from './ApplicationLauncherIcon';\nimport { ApplicationLauncherText } from './ApplicationLauncherText';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport { ApplicationLauncherItemContext } from './ApplicationLauncherItemContext';\n\nexport interface ApplicationLauncherContentProps {\n  /** Main content to be rendered */\n  children: React.ReactNode;\n}\n\nexport const ApplicationLauncherContent: React.FunctionComponent<ApplicationLauncherContentProps> = ({\n  children\n}: ApplicationLauncherContentProps) => (\n  <ApplicationLauncherItemContext.Consumer>\n    {({ isExternal, icon }) => (\n      <>\n        {icon && <ApplicationLauncherIcon>{icon}</ApplicationLauncherIcon>}\n        {icon ? <ApplicationLauncherText>{children}</ApplicationLauncherText> : children}\n        {isExternal && (\n          <>\n            <span className={css(styles.appLauncherMenuItemExternalIcon)}>\n              <ExternalLinkAltIcon />\n            </span>\n            <span className={css(accessibleStyles.screenReader)}>(opens new window)</span>\n          </>\n        )}\n      </>\n    )}\n  </ApplicationLauncherItemContext.Consumer>\n);\nApplicationLauncherContent.displayName = 'ApplicationLauncherContent';\n"]},"metadata":{},"sourceType":"module"}