{"ast":null,"code":"var _jsxFileName = \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/BuildStatus/BuildStatus.tsx\";\nimport { BuildName } from 'components/BuildName/BuildName';\nimport 'components/BuildStatus/BuildStatus.css';\nimport { BuildStatusIcon } from 'components/BuildStatusIcon/BuildStatusIcon';\nimport { isBuild } from 'utils/entityRecognition';\nimport { createDateTime } from 'utils/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/**\n * Represents a component for displaying the status and main information of a build/groupBuild.\n * There are two versions: short (default) and long.\n *\n * Long version additionally also includes the name of the build config.\n *\n * @param build - Build or GroupBuild\n * @param long - Whether the component should be of the long version\n * @param includeBuildLink - Whether the build name should be a link to the build page\n * @param includeConfigLink - Whether the build config (in the long version) should be a link to the build config page\n */\nexport const BuildStatus = _ref => {\n  var _build$user;\n\n  let {\n    build,\n    long,\n    includeBuildLink,\n    includeConfigLink\n  } = _ref;\n  let dateString, dateTitle;\n\n  if (dateString = build.endTime) {\n    dateTitle = 'End Time';\n  } else if (dateString = build.startTime) {\n    dateTitle = 'Start Time';\n  } else if (isBuild(build) && (dateString = build.submitTime)) {\n    dateTitle = 'Submit Time';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"build-status\",\n    children: [/*#__PURE__*/_jsxDEV(BuildStatusIcon, {\n      build: build\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BuildName, {\n      build: build,\n      includeBuildLink: includeBuildLink,\n      includeConfigLink: includeConfigLink,\n      long: long\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      title: dateTitle,\n      children: createDateTime({\n        date: dateString\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n      children: (_build$user = build.user) === null || _build$user === void 0 ? void 0 : _build$user.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["BuildName","BuildStatusIcon","isBuild","createDateTime","BuildStatus","build","long","includeBuildLink","includeConfigLink","dateString","dateTitle","endTime","startTime","submitTime","date","user","username"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/BuildStatus/BuildStatus.tsx"],"sourcesContent":["import { Build, GroupBuild } from 'pnc-api-types-ts';\n\nimport { BuildName } from 'components/BuildName/BuildName';\nimport 'components/BuildStatus/BuildStatus.css';\nimport { BuildStatusIcon } from 'components/BuildStatusIcon/BuildStatusIcon';\n\nimport { isBuild } from 'utils/entityRecognition';\nimport { createDateTime } from 'utils/utils';\n\ninterface IBuildStatus {\n  build: Build | GroupBuild;\n  long?: boolean;\n  includeBuildLink?: boolean;\n  includeConfigLink?: boolean;\n}\n\n/**\n * Represents a component for displaying the status and main information of a build/groupBuild.\n * There are two versions: short (default) and long.\n *\n * Long version additionally also includes the name of the build config.\n *\n * @param build - Build or GroupBuild\n * @param long - Whether the component should be of the long version\n * @param includeBuildLink - Whether the build name should be a link to the build page\n * @param includeConfigLink - Whether the build config (in the long version) should be a link to the build config page\n */\nexport const BuildStatus = ({ build, long, includeBuildLink, includeConfigLink }: IBuildStatus) => {\n  let dateString, dateTitle;\n  if ((dateString = build.endTime)) {\n    dateTitle = 'End Time';\n  } else if ((dateString = build.startTime)) {\n    dateTitle = 'Start Time';\n  } else if (isBuild(build) && (dateString = (build as Build).submitTime)) {\n    dateTitle = 'Submit Time';\n  }\n  return (\n    <div className=\"build-status\">\n      <BuildStatusIcon build={build} />\n      <BuildName build={build} includeBuildLink={includeBuildLink} includeConfigLink={includeConfigLink} long={long} />\n      <span title={dateTitle}>{createDateTime({ date: dateString! })}</span>\n      <b>{build.user?.username}</b>\n    </div>\n  );\n};\n"],"mappings":";AAEA,SAASA,SAAT,QAA0B,gCAA1B;AACA,OAAO,wCAAP;AACA,SAASC,eAAT,QAAgC,4CAAhC;AAEA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,cAAT,QAA+B,aAA/B;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAG,QAAwE;EAAA;;EAAA,IAAvE;IAAEC,KAAF;IAASC,IAAT;IAAeC,gBAAf;IAAiCC;EAAjC,CAAuE;EACjG,IAAIC,UAAJ,EAAgBC,SAAhB;;EACA,IAAKD,UAAU,GAAGJ,KAAK,CAACM,OAAxB,EAAkC;IAChCD,SAAS,GAAG,UAAZ;EACD,CAFD,MAEO,IAAKD,UAAU,GAAGJ,KAAK,CAACO,SAAxB,EAAoC;IACzCF,SAAS,GAAG,YAAZ;EACD,CAFM,MAEA,IAAIR,OAAO,CAACG,KAAD,CAAP,KAAmBI,UAAU,GAAIJ,KAAD,CAAiBQ,UAAjD,CAAJ,EAAkE;IACvEH,SAAS,GAAG,aAAZ;EACD;;EACD,oBACE;IAAK,SAAS,EAAC,cAAf;IAAA,wBACE,QAAC,eAAD;MAAiB,KAAK,EAAEL;IAAxB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,SAAD;MAAW,KAAK,EAAEA,KAAlB;MAAyB,gBAAgB,EAAEE,gBAA3C;MAA6D,iBAAiB,EAAEC,iBAAhF;MAAmG,IAAI,EAAEF;IAAzG;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAM,KAAK,EAAEI,SAAb;MAAA,UAAyBP,cAAc,CAAC;QAAEW,IAAI,EAAEL;MAAR,CAAD;IAAvC;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA,yBAAIJ,KAAK,CAACU,IAAV,gDAAI,YAAYC;IAAhB;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CAjBM"},"metadata":{},"sourceType":"module"}