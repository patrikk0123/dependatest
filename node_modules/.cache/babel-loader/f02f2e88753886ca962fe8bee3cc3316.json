{"ast":null,"code":"import _slicedToArray from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useOUIAProps } from '@patternfly/react-core';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport inlineStyles from '@patternfly/react-styles/css/components/InlineEdit/inline-edit';\nimport { css } from '@patternfly/react-styles';\nimport { TableComposableContext } from './TableComposable';\n\nvar TrBase = function TrBase(_a) {\n  var children = _a.children,\n      className = _a.className,\n      isExpanded = _a.isExpanded,\n      isEditable = _a.isEditable,\n      _a$isHidden = _a.isHidden,\n      isHidden = _a$isHidden === void 0 ? false : _a$isHidden,\n      _a$isHoverable = _a.isHoverable,\n      isHoverable = _a$isHoverable === void 0 ? false : _a$isHoverable,\n      _a$isRowSelected = _a.isRowSelected,\n      isRowSelected = _a$isRowSelected === void 0 ? false : _a$isRowSelected,\n      _a$isStriped = _a.isStriped,\n      isStriped = _a$isStriped === void 0 ? false : _a$isStriped,\n      innerRef = _a.innerRef,\n      ouiaId = _a.ouiaId,\n      _a$ouiaSafe = _a.ouiaSafe,\n      ouiaSafe = _a$ouiaSafe === void 0 ? true : _a$ouiaSafe,\n      _a$resetOffset = _a.resetOffset,\n      resetOffset = _a$resetOffset === void 0 ? false : _a$resetOffset,\n      onRowClick = _a.onRowClick,\n      isSelectable = _a.isSelectable,\n      passedAriaLabel = _a['aria-label'],\n      props = __rest(_a, [\"children\", \"className\", \"isExpanded\", \"isEditable\", \"isHidden\", \"isHoverable\", \"isRowSelected\", \"isStriped\", \"innerRef\", \"ouiaId\", \"ouiaSafe\", \"resetOffset\", \"onRowClick\", \"isSelectable\", 'aria-label']);\n\n  var ouiaProps = useOUIAProps('TableRow', ouiaId, ouiaSafe);\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      computedAriaLabel = _React$useState2[0],\n      setComputedAriaLabel = _React$useState2[1];\n\n  var onKeyDown = null;\n\n  if (onRowClick) {\n    onKeyDown = function onKeyDown(e) {\n      if (e.key === 'Enter' || e.key === ' ') {\n        onRowClick(e);\n        e.preventDefault();\n      }\n    };\n  }\n\n  var rowIsHidden = isHidden || isExpanded !== undefined && !isExpanded;\n\n  var _React$useContext = React.useContext(TableComposableContext),\n      registerSelectableRow = _React$useContext.registerSelectableRow;\n\n  React.useEffect(function () {\n    if (isSelectable && !rowIsHidden) {\n      setComputedAriaLabel(\"\".concat(isRowSelected ? 'Selected' : 'Unselected', \", selectable row.\"));\n      registerSelectableRow();\n    } else {\n      setComputedAriaLabel(undefined);\n    }\n  }, [isRowSelected, isSelectable, registerSelectableRow, rowIsHidden]);\n  var ariaLabel = passedAriaLabel || computedAriaLabel;\n  return React.createElement(React.Fragment, null, isSelectable && React.createElement(\"output\", {\n    className: \"pf-screen-reader\"\n  }, ariaLabel), React.createElement(\"tr\", Object.assign({\n    className: css(className, isExpanded !== undefined && styles.tableExpandableRow, isExpanded && styles.modifiers.expanded, isEditable && inlineStyles.modifiers.inlineEditable, isHoverable && styles.modifiers.hoverable, isRowSelected && styles.modifiers.selected, isStriped && styles.modifiers.striped, resetOffset && styles.modifiers.firstCellOffsetReset),\n    hidden: rowIsHidden\n  }, isHoverable && {\n    tabIndex: 0\n  }, {\n    \"aria-label\": ariaLabel,\n    ref: innerRef\n  }, onRowClick && {\n    onClick: onRowClick,\n    onKeyDown: onKeyDown\n  }, ouiaProps, props), children));\n};\n\nexport var Tr = React.forwardRef(function (props, ref) {\n  return React.createElement(TrBase, Object.assign({}, props, {\n    innerRef: ref\n  }));\n});\nTr.displayName = 'Tr';","map":{"version":3,"mappings":"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","names":["React","useOUIAProps","styles","inlineStyles","css","TableComposableContext","TrBase","_a","children","className","isExpanded","isEditable","isHidden","isHoverable","isRowSelected","isStriped","innerRef","ouiaId","ouiaSafe","resetOffset","onRowClick","isSelectable","passedAriaLabel","props","__rest","ouiaProps","useState","computedAriaLabel","setComputedAriaLabel","onKeyDown","e","key","preventDefault","rowIsHidden","undefined","useContext","registerSelectableRow","useEffect","ariaLabel","tableExpandableRow","modifiers","expanded","inlineEditable","hoverable","selected","striped","firstCellOffsetReset","hidden","tabIndex","ref","onClick","Tr","forwardRef","Object","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-table/src/components/TableComposable/Tr.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useOUIAProps, OUIAProps } from '@patternfly/react-core';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport inlineStyles from '@patternfly/react-styles/css/components/InlineEdit/inline-edit';\nimport { css } from '@patternfly/react-styles';\nimport { TableComposableContext } from './TableComposable';\n\nexport interface TrProps extends React.HTMLProps<HTMLTableRowElement>, OUIAProps {\n  /** Content rendered inside the <tr> row */\n  children?: React.ReactNode;\n  /** Additional classes added to the <tr> row  */\n  className?: string;\n  /** Forwarded ref */\n  innerRef?: React.Ref<any>;\n  /** Flag indicating the Tr is hidden */\n  isHidden?: boolean;\n  /** Only applicable to Tr within the Tbody: Makes the row expandable and determines if it's expanded or not */\n  isExpanded?: boolean;\n  /** Only applicable to Tr within the Tbody: Whether the row is editable */\n  isEditable?: boolean;\n  /** Flag which adds hover styles for the table row */\n  isHoverable?: boolean;\n  /** Flag indicating the row is selected - adds selected styling */\n  isRowSelected?: boolean;\n  /** Flag indicating the row is striped */\n  isStriped?: boolean;\n  /** An event handler for the row */\n  onRowClick?: (event?: React.KeyboardEvent | React.MouseEvent) => void;\n  /** Flag indicating that the row is selectable */\n  isSelectable?: boolean;\n  /** Flag indicating the spacing offset of the first cell should be reset */\n  resetOffset?: boolean;\n}\n\nconst TrBase: React.FunctionComponent<TrProps> = ({\n  children,\n  className,\n  isExpanded,\n  isEditable,\n  isHidden = false,\n  isHoverable = false,\n  isRowSelected = false,\n  isStriped = false,\n  innerRef,\n  ouiaId,\n  ouiaSafe = true,\n  resetOffset = false,\n  onRowClick,\n  isSelectable,\n  'aria-label': passedAriaLabel,\n  ...props\n}: TrProps) => {\n  const ouiaProps = useOUIAProps('TableRow', ouiaId, ouiaSafe);\n  const [computedAriaLabel, setComputedAriaLabel] = React.useState<string | undefined>('');\n\n  let onKeyDown = null;\n  if (onRowClick) {\n    onKeyDown = (e: React.KeyboardEvent) => {\n      if (e.key === 'Enter' || e.key === ' ') {\n        onRowClick(e);\n        e.preventDefault();\n      }\n    };\n  }\n\n  const rowIsHidden = isHidden || (isExpanded !== undefined && !isExpanded);\n\n  const { registerSelectableRow } = React.useContext(TableComposableContext);\n\n  React.useEffect(() => {\n    if (isSelectable && !rowIsHidden) {\n      setComputedAriaLabel(`${isRowSelected ? 'Selected' : 'Unselected'}, selectable row.`);\n      registerSelectableRow();\n    } else {\n      setComputedAriaLabel(undefined);\n    }\n  }, [isRowSelected, isSelectable, registerSelectableRow, rowIsHidden]);\n\n  const ariaLabel = passedAriaLabel || computedAriaLabel;\n\n  return (\n    <>\n      {isSelectable && <output className=\"pf-screen-reader\">{ariaLabel}</output>}\n      <tr\n        className={css(\n          className,\n          isExpanded !== undefined && styles.tableExpandableRow,\n          isExpanded && styles.modifiers.expanded,\n          isEditable && inlineStyles.modifiers.inlineEditable,\n          isHoverable && styles.modifiers.hoverable,\n          isRowSelected && styles.modifiers.selected,\n          isStriped && styles.modifiers.striped,\n          resetOffset && styles.modifiers.firstCellOffsetReset\n        )}\n        hidden={rowIsHidden}\n        {...(isHoverable && { tabIndex: 0 })}\n        aria-label={ariaLabel}\n        ref={innerRef}\n        {...(onRowClick && { onClick: onRowClick, onKeyDown })}\n        {...ouiaProps}\n        {...props}\n      >\n        {children}\n      </tr>\n    </>\n  );\n};\n\nexport const Tr = React.forwardRef((props: TrProps, ref: React.Ref<HTMLTableRowElement>) => (\n  <TrBase {...props} innerRef={ref} />\n));\nTr.displayName = 'Tr';\n"]},"metadata":{},"sourceType":"module"}