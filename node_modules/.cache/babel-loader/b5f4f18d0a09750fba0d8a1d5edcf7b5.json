{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport { css } from '@patternfly/react-styles';\nimport { ValidatedOptions } from '../../helpers/constants';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport class FormSelect extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.props.onChange(event.currentTarget.value, event);\n    };\n\n    if (!props.id && !props['aria-label']) {\n      // eslint-disable-next-line no-console\n      console.error('FormSelect requires either an id or aria-label to be specified');\n    }\n\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(FormSelect.displayName, props.validated)\n    };\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      children,\n      className,\n      value,\n      validated,\n      isDisabled,\n      isRequired,\n      isIconSprite,\n      ouiaId,\n      ouiaSafe\n    } = _a,\n          props = __rest(_a, [\"children\", \"className\", \"value\", \"validated\", \"isDisabled\", \"isRequired\", \"isIconSprite\", \"ouiaId\", \"ouiaSafe\"]);\n    /* find selected option and get placeholder flag */\n\n\n    const selectedOption = React.Children.toArray(children).find(option => option.props.value === value);\n    const isSelectedPlaceholder = selectedOption && selectedOption.props.isPlaceholder;\n    return React.createElement(\"select\", Object.assign({}, props, {\n      className: css(styles.formControl, isIconSprite && styles.modifiers.iconSprite, className, validated === ValidatedOptions.success && styles.modifiers.success, validated === ValidatedOptions.warning && styles.modifiers.warning, isSelectedPlaceholder && styles.modifiers.placeholder),\n      \"aria-invalid\": validated === ValidatedOptions.error\n    }, getOUIAProps(FormSelect.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), {\n      onChange: this.handleChange,\n      disabled: isDisabled,\n      required: isRequired,\n      value: value\n    }), children);\n  }\n\n}\nFormSelect.displayName = 'FormSelect';\nFormSelect.defaultProps = {\n  className: '',\n  value: '',\n  validated: 'default',\n  isDisabled: false,\n  isRequired: false,\n  isIconSprite: false,\n  onBlur: () => undefined,\n  onFocus: () => undefined,\n  onChange: () => undefined,\n  ouiaSafe: true\n};","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,kEAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AAEA,SAASC,gBAAT,QAAiC,yBAAjC;AACA,SAASC,YAAT,EAAkCC,gBAAlC,QAA0D,eAA1D;AAgCA,OAAM,MAAOC,UAAP,SAA0BN,KAAK,CAACO,SAAhC,CAAmF;EAEvFC,YAAYC,KAAZ,EAAkC;IAChC,MAAMA,KAAN;;IAuBF,oBAAgBC,KAAD,IAAe;MAC5B,KAAKD,KAAL,CAAWE,QAAX,CAAoBD,KAAK,CAACE,aAAN,CAAoBC,KAAxC,EAA+CH,KAA/C;IACD,CAFD;;IAtBE,IAAI,CAACD,KAAK,CAACK,EAAP,IAAa,CAACL,KAAK,CAAC,YAAD,CAAvB,EAAuC;MACrC;MACAM,OAAO,CAACC,KAAR,CAAc,gEAAd;IACD;;IACD,KAAKC,KAAL,GAAa;MACXC,WAAW,EAAEb,gBAAgB,CAACC,UAAU,CAACa,WAAZ,EAAyBV,KAAK,CAACW,SAA/B;IADlB,CAAb;EAGD;;EAmBDC,MAAM;IACJ,MAAMC,KAWF,KAAKb,KAXT;IAAA,MAAM;MACJc,QADI;MAEJC,SAFI;MAGJX,KAHI;MAIJO,SAJI;MAKJK,UALI;MAMJC,UANI;MAOJC,YAPI;MAQJC,MARI;MASJC;IATI,IASIP,EATV;IAAA,MAUKb,KAAK,cAVJ,iHAUI,CAVV;IAYA;;;IACA,MAAMqB,cAAc,GAAG9B,KAAK,CAAC+B,QAAN,CAAeC,OAAf,CAAuBT,QAAvB,EAAiCU,IAAjC,CAAuCC,MAAD,IAAiBA,MAAM,CAACzB,KAAP,CAAaI,KAAb,KAAuBA,KAA9E,CAAvB;IACA,MAAMsB,qBAAqB,GAAGL,cAAc,IAAIA,cAAc,CAACrB,KAAf,CAAqB2B,aAArE;IACA,OACEpC,gDACMS,KADN,EACW;MACTe,SAAS,EAAEtB,GAAG,CACZD,MAAM,CAACoC,WADK,EAEZV,YAAY,IAAI1B,MAAM,CAACqC,SAAP,CAAiBC,UAFrB,EAGZf,SAHY,EAIZJ,SAAS,KAAKjB,gBAAgB,CAACqC,OAA/B,IAA0CvC,MAAM,CAACqC,SAAP,CAAiBE,OAJ/C,EAKZpB,SAAS,KAAKjB,gBAAgB,CAACsC,OAA/B,IAA0CxC,MAAM,CAACqC,SAAP,CAAiBG,OAL/C,EAMZN,qBAAqB,IAAIlC,MAAM,CAACqC,SAAP,CAAiBI,WAN9B,CADL;MAQR,gBACatB,SAAS,KAAKjB,gBAAgB,CAACa;IATpC,CADX,EAWMZ,YAAY,CAACE,UAAU,CAACa,WAAZ,EAAyBS,MAAM,KAAKe,SAAX,GAAuBf,MAAvB,GAAgC,KAAKX,KAAL,CAAWC,WAApE,EAAiFW,QAAjF,CAXlB,EAW4G;MAC1GlB,QAAQ,EAAE,KAAKiC,YAD2F;MAE1GC,QAAQ,EAAEpB,UAFgG;MAG1GqB,QAAQ,EAAEpB,UAHgG;MAI1Gb,KAAK,EAAEA;IAJmG,CAX5G,GAiBGU,QAjBH,CADF;EAqBD;;AAnEsF;AAChFjB,yBAAc,YAAd;AAYAA,0BAA8C;EACnDkB,SAAS,EAAE,EADwC;EAEnDX,KAAK,EAAE,EAF4C;EAGnDO,SAAS,EAAE,SAHwC;EAInDK,UAAU,EAAE,KAJuC;EAKnDC,UAAU,EAAE,KALuC;EAMnDC,YAAY,EAAE,KANqC;EAOnDoB,MAAM,EAAE,MAAWJ,SAPgC;EAQnDK,OAAO,EAAE,MAAWL,SAR+B;EASnDhC,QAAQ,EAAE,MAAWgC,SAT8B;EAUnDd,QAAQ,EAAE;AAVyC,CAA9C","names":["React","styles","css","ValidatedOptions","getOUIAProps","getDefaultOUIAId","FormSelect","Component","constructor","props","event","onChange","currentTarget","value","id","console","error","state","ouiaStateId","displayName","validated","render","_a","children","className","isDisabled","isRequired","isIconSprite","ouiaId","ouiaSafe","selectedOption","Children","toArray","find","option","isSelectedPlaceholder","isPlaceholder","formControl","modifiers","iconSprite","success","warning","placeholder","undefined","handleChange","disabled","required","onBlur","onFocus"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/FormSelect/FormSelect.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport { css } from '@patternfly/react-styles';\nimport { PickOptional } from '../../helpers/typeUtils';\nimport { ValidatedOptions } from '../../helpers/constants';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId } from '../../helpers';\n\nexport interface FormSelectProps\n  extends Omit<React.HTMLProps<HTMLSelectElement>, 'onChange' | 'onBlur' | 'onFocus' | 'disabled'>,\n    OUIAProps {\n  /** content rendered inside the FormSelect */\n  children: React.ReactNode;\n  /** additional classes added to the FormSelect control */\n  className?: string;\n  /** value of selected option */\n  value?: any;\n  /** Value to indicate if the select is modified to show that validation state.\n   * If set to success, select will be modified to indicate valid state.\n   * If set to error, select will be modified to indicate error state.\n   */\n  validated?: 'success' | 'warning' | 'error' | 'default';\n  /** Flag indicating the FormSelect is disabled */\n  isDisabled?: boolean;\n  /** Sets the FormSelect required. */\n  isRequired?: boolean;\n  /** Use the external file instead of a data URI */\n  isIconSprite?: boolean;\n  /** Optional callback for updating when selection loses focus */\n  onBlur?: (event: React.FormEvent<HTMLSelectElement>) => void;\n  /** Optional callback for updating when selection gets focus */\n  onFocus?: (event: React.FormEvent<HTMLSelectElement>) => void;\n  /** Optional callback for updating when selection changes */\n  onChange?: (value: string, event: React.FormEvent<HTMLSelectElement>) => void;\n  /** Custom flag to show that the FormSelect requires an associated id or aria-label. */\n  'aria-label'?: string;\n}\n\nexport class FormSelect extends React.Component<FormSelectProps, { ouiaStateId: string }> {\n  static displayName = 'FormSelect';\n  constructor(props: FormSelectProps) {\n    super(props);\n    if (!props.id && !props['aria-label']) {\n      // eslint-disable-next-line no-console\n      console.error('FormSelect requires either an id or aria-label to be specified');\n    }\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(FormSelect.displayName, props.validated)\n    };\n  }\n\n  static defaultProps: PickOptional<FormSelectProps> = {\n    className: '',\n    value: '',\n    validated: 'default',\n    isDisabled: false,\n    isRequired: false,\n    isIconSprite: false,\n    onBlur: (): any => undefined,\n    onFocus: (): any => undefined,\n    onChange: (): any => undefined,\n    ouiaSafe: true\n  };\n\n  handleChange = (event: any) => {\n    this.props.onChange(event.currentTarget.value, event);\n  };\n\n  render() {\n    const {\n      children,\n      className,\n      value,\n      validated,\n      isDisabled,\n      isRequired,\n      isIconSprite,\n      ouiaId,\n      ouiaSafe,\n      ...props\n    } = this.props;\n    /* find selected option and get placeholder flag */\n    const selectedOption = React.Children.toArray(children).find((option: any) => option.props.value === value) as any;\n    const isSelectedPlaceholder = selectedOption && selectedOption.props.isPlaceholder;\n    return (\n      <select\n        {...props}\n        className={css(\n          styles.formControl,\n          isIconSprite && styles.modifiers.iconSprite,\n          className,\n          validated === ValidatedOptions.success && styles.modifiers.success,\n          validated === ValidatedOptions.warning && styles.modifiers.warning,\n          isSelectedPlaceholder && styles.modifiers.placeholder\n        )}\n        aria-invalid={validated === ValidatedOptions.error}\n        {...getOUIAProps(FormSelect.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n        onChange={this.handleChange}\n        disabled={isDisabled}\n        required={isRequired}\n        value={value}\n      >\n        {children}\n      </select>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}