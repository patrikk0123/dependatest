{"ast":null,"code":"import { compare } from 'fast-json-patch';\nimport { merge } from 'lodash';\nexport const createPatchData = data => {\n  return Object.fromEntries(Object.entries(data).filter(_ref => {\n    let [k, v] = _ref;\n    return v.value !== '';\n  }).map(_ref2 => {\n    let [k, v] = _ref2;\n    return [k, v.value];\n  }));\n}; // original Angular implementation:\n// https://github.com/project-ncl/pnc-web-ui-angularjs/blob/master/ui/app/common/pnc-client/resources/helpers/patchHelper.js#L85\n\n/**\n * Compares changes between original and modified data and creates safe JSON patch.\n *\n * Properties not present on the modified object will not cause a delete operation to be included in the patch.\n * This is useful if, for example, you have a form that is only used to edit a subset of fields of on an entity.\n *\n * @param original - original data\n * @param modified - modified data\n * @returns Array of changes in JSON patch format\n */\n\nexport const createSafePatch = (original, modified) => {\n  return compare(original, merge({}, original, modified));\n};\n/**\n * Compares changes between original and modified data and creates destructive JSON patch.\n *\n * @param original - original data\n * @param modified - modified data\n * @returns Array of changes in JSON patch format\n */\n\nexport const createDestructivePatch = (original, modified) => {\n  return compare(original, modified);\n};","map":{"version":3,"names":["compare","merge","createPatchData","data","Object","fromEntries","entries","filter","k","v","value","map","createSafePatch","original","modified","createDestructivePatch"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/utils/patchHelper.tsx"],"sourcesContent":["import { Operation, compare } from 'fast-json-patch';\nimport { merge } from 'lodash';\n\nimport { IFieldValues, IFields } from '../containers/useForm';\n\nexport const createPatchData = (data: IFields): IFieldValues => {\n  return Object.fromEntries(\n    Object.entries(data)\n      .filter(([k, v]) => v.value !== '')\n      .map(([k, v]) => {\n        return [k, v.value];\n      })\n  );\n};\n\n// original Angular implementation:\n// https://github.com/project-ncl/pnc-web-ui-angularjs/blob/master/ui/app/common/pnc-client/resources/helpers/patchHelper.js#L85\n\n/**\n * Compares changes between original and modified data and creates safe JSON patch.\n *\n * Properties not present on the modified object will not cause a delete operation to be included in the patch.\n * This is useful if, for example, you have a form that is only used to edit a subset of fields of on an entity.\n *\n * @param original - original data\n * @param modified - modified data\n * @returns Array of changes in JSON patch format\n */\nexport const createSafePatch = (original: Object | any[], modified: Object | any[]): Operation[] => {\n  return compare(original, merge({}, original, modified));\n};\n\n/**\n * Compares changes between original and modified data and creates destructive JSON patch.\n *\n * @param original - original data\n * @param modified - modified data\n * @returns Array of changes in JSON patch format\n */\nexport const createDestructivePatch = (original: Object | any[], modified: Object | any[]): Operation[] => {\n  return compare(original, modified);\n};\n"],"mappings":"AAAA,SAAoBA,OAApB,QAAmC,iBAAnC;AACA,SAASC,KAAT,QAAsB,QAAtB;AAIA,OAAO,MAAMC,eAAe,GAAIC,IAAD,IAAiC;EAC9D,OAAOC,MAAM,CAACC,WAAP,CACLD,MAAM,CAACE,OAAP,CAAeH,IAAf,EACGI,MADH,CACU;IAAA,IAAC,CAACC,CAAD,EAAIC,CAAJ,CAAD;IAAA,OAAYA,CAAC,CAACC,KAAF,KAAY,EAAxB;EAAA,CADV,EAEGC,GAFH,CAEO,SAAY;IAAA,IAAX,CAACH,CAAD,EAAIC,CAAJ,CAAW;IACf,OAAO,CAACD,CAAD,EAAIC,CAAC,CAACC,KAAN,CAAP;EACD,CAJH,CADK,CAAP;AAOD,CARM,C,CAUP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAME,eAAe,GAAG,CAACC,QAAD,EAA2BC,QAA3B,KAAqE;EAClG,OAAOd,OAAO,CAACa,QAAD,EAAWZ,KAAK,CAAC,EAAD,EAAKY,QAAL,EAAeC,QAAf,CAAhB,CAAd;AACD,CAFM;AAIP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,sBAAsB,GAAG,CAACF,QAAD,EAA2BC,QAA3B,KAAqE;EACzG,OAAOd,OAAO,CAACa,QAAD,EAAWC,QAAX,CAAd;AACD,CAFM"},"metadata":{},"sourceType":"module"}