{"ast":null,"code":"import _classCallCheck from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport { css } from '@patternfly/react-styles';\nimport { ValidatedOptions } from '../../helpers/constants';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport var FormSelect = /*#__PURE__*/function (_React$Component) {\n  _inherits(FormSelect, _React$Component);\n\n  var _super = _createSuper(FormSelect);\n\n  function FormSelect(props) {\n    var _this;\n\n    _classCallCheck(this, FormSelect);\n\n    _this = _super.call(this, props);\n\n    _this.handleChange = function (event) {\n      _this.props.onChange(event.currentTarget.value, event);\n    };\n\n    if (!props.id && !props['aria-label']) {\n      // eslint-disable-next-line no-console\n      console.error('FormSelect requires either an id or aria-label to be specified');\n    }\n\n    _this.state = {\n      ouiaStateId: getDefaultOUIAId(FormSelect.displayName, props.validated)\n    };\n    return _this;\n  }\n\n  _createClass(FormSelect, [{\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          children = _a.children,\n          className = _a.className,\n          value = _a.value,\n          validated = _a.validated,\n          isDisabled = _a.isDisabled,\n          isRequired = _a.isRequired,\n          isIconSprite = _a.isIconSprite,\n          ouiaId = _a.ouiaId,\n          ouiaSafe = _a.ouiaSafe,\n          props = __rest(_a, [\"children\", \"className\", \"value\", \"validated\", \"isDisabled\", \"isRequired\", \"isIconSprite\", \"ouiaId\", \"ouiaSafe\"]);\n      /* find selected option and get placeholder flag */\n\n\n      var selectedOption = React.Children.toArray(children).find(function (option) {\n        return option.props.value === value;\n      });\n      var isSelectedPlaceholder = selectedOption && selectedOption.props.isPlaceholder;\n      return React.createElement(\"select\", Object.assign({}, props, {\n        className: css(styles.formControl, isIconSprite && styles.modifiers.iconSprite, className, validated === ValidatedOptions.success && styles.modifiers.success, validated === ValidatedOptions.warning && styles.modifiers.warning, isSelectedPlaceholder && styles.modifiers.placeholder),\n        \"aria-invalid\": validated === ValidatedOptions.error\n      }, getOUIAProps(FormSelect.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), {\n        onChange: this.handleChange,\n        disabled: isDisabled,\n        required: isRequired,\n        value: value\n      }), children);\n    }\n  }]);\n\n  return FormSelect;\n}(React.Component);\nFormSelect.displayName = 'FormSelect';\nFormSelect.defaultProps = {\n  className: '',\n  value: '',\n  validated: 'default',\n  isDisabled: false,\n  isRequired: false,\n  isIconSprite: false,\n  onBlur: function onBlur() {\n    return undefined;\n  },\n  onFocus: function onFocus() {\n    return undefined;\n  },\n  onChange: function onChange() {\n    return undefined;\n  },\n  ouiaSafe: true\n};","map":{"version":3,"mappings":"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","names":["React","styles","css","ValidatedOptions","getOUIAProps","getDefaultOUIAId","FormSelect","props","event","onChange","currentTarget","value","id","console","error","state","ouiaStateId","displayName","validated","children","_a","className","isDisabled","isRequired","isIconSprite","ouiaId","ouiaSafe","__rest","selectedOption","Children","toArray","find","option","isSelectedPlaceholder","isPlaceholder","formControl","modifiers","iconSprite","success","warning","placeholder","undefined","handleChange","disabled","required","Component","onBlur","onFocus"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/FormSelect/FormSelect.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport { css } from '@patternfly/react-styles';\nimport { PickOptional } from '../../helpers/typeUtils';\nimport { ValidatedOptions } from '../../helpers/constants';\nimport { getOUIAProps, OUIAProps, getDefaultOUIAId } from '../../helpers';\n\nexport interface FormSelectProps\n  extends Omit<React.HTMLProps<HTMLSelectElement>, 'onChange' | 'onBlur' | 'onFocus' | 'disabled'>,\n    OUIAProps {\n  /** content rendered inside the FormSelect */\n  children: React.ReactNode;\n  /** additional classes added to the FormSelect control */\n  className?: string;\n  /** value of selected option */\n  value?: any;\n  /** Value to indicate if the select is modified to show that validation state.\n   * If set to success, select will be modified to indicate valid state.\n   * If set to error, select will be modified to indicate error state.\n   */\n  validated?: 'success' | 'warning' | 'error' | 'default';\n  /** Flag indicating the FormSelect is disabled */\n  isDisabled?: boolean;\n  /** Sets the FormSelect required. */\n  isRequired?: boolean;\n  /** Use the external file instead of a data URI */\n  isIconSprite?: boolean;\n  /** Optional callback for updating when selection loses focus */\n  onBlur?: (event: React.FormEvent<HTMLSelectElement>) => void;\n  /** Optional callback for updating when selection gets focus */\n  onFocus?: (event: React.FormEvent<HTMLSelectElement>) => void;\n  /** Optional callback for updating when selection changes */\n  onChange?: (value: string, event: React.FormEvent<HTMLSelectElement>) => void;\n  /** Custom flag to show that the FormSelect requires an associated id or aria-label. */\n  'aria-label'?: string;\n}\n\nexport class FormSelect extends React.Component<FormSelectProps, { ouiaStateId: string }> {\n  static displayName = 'FormSelect';\n  constructor(props: FormSelectProps) {\n    super(props);\n    if (!props.id && !props['aria-label']) {\n      // eslint-disable-next-line no-console\n      console.error('FormSelect requires either an id or aria-label to be specified');\n    }\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(FormSelect.displayName, props.validated)\n    };\n  }\n\n  static defaultProps: PickOptional<FormSelectProps> = {\n    className: '',\n    value: '',\n    validated: 'default',\n    isDisabled: false,\n    isRequired: false,\n    isIconSprite: false,\n    onBlur: (): any => undefined,\n    onFocus: (): any => undefined,\n    onChange: (): any => undefined,\n    ouiaSafe: true\n  };\n\n  handleChange = (event: any) => {\n    this.props.onChange(event.currentTarget.value, event);\n  };\n\n  render() {\n    const {\n      children,\n      className,\n      value,\n      validated,\n      isDisabled,\n      isRequired,\n      isIconSprite,\n      ouiaId,\n      ouiaSafe,\n      ...props\n    } = this.props;\n    /* find selected option and get placeholder flag */\n    const selectedOption = React.Children.toArray(children).find((option: any) => option.props.value === value) as any;\n    const isSelectedPlaceholder = selectedOption && selectedOption.props.isPlaceholder;\n    return (\n      <select\n        {...props}\n        className={css(\n          styles.formControl,\n          isIconSprite && styles.modifiers.iconSprite,\n          className,\n          validated === ValidatedOptions.success && styles.modifiers.success,\n          validated === ValidatedOptions.warning && styles.modifiers.warning,\n          isSelectedPlaceholder && styles.modifiers.placeholder\n        )}\n        aria-invalid={validated === ValidatedOptions.error}\n        {...getOUIAProps(FormSelect.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe)}\n        onChange={this.handleChange}\n        disabled={isDisabled}\n        required={isRequired}\n        value={value}\n      >\n        {children}\n      </select>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}