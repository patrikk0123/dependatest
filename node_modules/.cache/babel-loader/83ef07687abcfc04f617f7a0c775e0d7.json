{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport checkStyles from '@patternfly/react-styles/css/components/Check/check';\nimport { css } from '@patternfly/react-styles';\nimport CheckIcon from '@patternfly/react-icons/dist/esm/icons/check-icon';\nimport { SelectConsumer, SelectVariant } from './selectConstants';\nimport StarIcon from '@patternfly/react-icons/dist/esm/icons/star-icon';\nimport { getUniqueId } from '../../helpers/util';\nimport { KeyTypes } from '../../helpers/constants';\nexport class SelectOption extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.ref = React.createRef();\n    this.liRef = React.createRef();\n    this.favoriteRef = React.createRef();\n\n    this.onKeyDown = (event, innerIndex, onEnter, isCheckbox) => {\n      const {\n        index,\n        keyHandler,\n        isLastOptionBeforeFooter\n      } = this.props;\n      let isLastItemBeforeFooter = false;\n\n      if (isLastOptionBeforeFooter !== undefined) {\n        isLastItemBeforeFooter = isLastOptionBeforeFooter(index);\n      }\n\n      if (event.key === KeyTypes.Tab) {\n        // More modal-like experience for checkboxes\n        if (isCheckbox && !isLastItemBeforeFooter) {\n          if (event.shiftKey) {\n            keyHandler(index, innerIndex, 'up');\n          } else {\n            keyHandler(index, innerIndex, 'down');\n          }\n\n          event.stopPropagation();\n        } else {\n          if (event.shiftKey) {\n            keyHandler(index, innerIndex, 'up');\n          } else {\n            keyHandler(index, innerIndex, 'tab');\n          }\n        }\n      }\n\n      event.preventDefault();\n\n      if (event.key === KeyTypes.ArrowUp) {\n        keyHandler(index, innerIndex, 'up');\n      } else if (event.key === KeyTypes.ArrowDown) {\n        keyHandler(index, innerIndex, 'down');\n      } else if (event.key === KeyTypes.ArrowLeft) {\n        keyHandler(index, innerIndex, 'left');\n      } else if (event.key === KeyTypes.ArrowRight) {\n        keyHandler(index, innerIndex, 'right');\n      } else if (event.key === KeyTypes.Enter) {\n        if (onEnter !== undefined) {\n          onEnter();\n        } else {\n          this.ref.current.click();\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.sendRef(this.props.isDisabled ? null : this.ref.current, this.props.isDisabled ? null : this.favoriteRef.current, this.props.isDisabled ? null : this.liRef.current, this.props.index);\n  }\n\n  componentDidUpdate() {\n    this.props.sendRef(this.props.isDisabled ? null : this.ref.current, this.props.isDisabled ? null : this.favoriteRef.current, this.props.isDisabled ? null : this.liRef.current, this.props.index);\n  }\n\n  render() {\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    const _a = this.props,\n          {\n      children,\n      className,\n      id,\n      description,\n      itemCount,\n      value,\n      onClick,\n      isDisabled,\n      isPlaceholder,\n      isNoResultsOption,\n      isSelected,\n      isChecked,\n      isFocused,\n      sendRef,\n      keyHandler,\n      index,\n      component,\n      inputId,\n      isFavorite,\n      ariaIsFavoriteLabel = 'starred',\n      ariaIsNotFavoriteLabel = 'not starred',\n      isLoad,\n      isLoading,\n      setViewMoreNextIndex,\n      // eslint-disable-next-line no-console\n      isLastOptionBeforeFooter,\n      isGrouped = false\n    } = _a,\n          props = __rest(_a, [\"children\", \"className\", \"id\", \"description\", \"itemCount\", \"value\", \"onClick\", \"isDisabled\", \"isPlaceholder\", \"isNoResultsOption\", \"isSelected\", \"isChecked\", \"isFocused\", \"sendRef\", \"keyHandler\", \"index\", \"component\", \"inputId\", \"isFavorite\", \"ariaIsFavoriteLabel\", \"ariaIsNotFavoriteLabel\", \"isLoad\", \"isLoading\", \"setViewMoreNextIndex\", \"isLastOptionBeforeFooter\", \"isGrouped\"]);\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n    const Component = component;\n\n    if (!id && isFavorite !== null) {\n      // eslint-disable-next-line no-console\n      console.error('Please provide an id to use the favorites feature.');\n    }\n\n    const generatedId = id || getUniqueId('select-option');\n\n    const favoriteButton = onFavorite => React.createElement(\"button\", {\n      className: css(styles.selectMenuItem, styles.modifiers.action, styles.modifiers.favoriteAction),\n      \"aria-label\": isFavorite ? ariaIsFavoriteLabel : ariaIsNotFavoriteLabel,\n      onClick: () => {\n        onFavorite(generatedId.replace('favorite-', ''), isFavorite);\n      },\n      onKeyDown: event => {\n        this.onKeyDown(event, 1, () => onFavorite(generatedId.replace('favorite-', ''), isFavorite));\n      },\n      ref: this.favoriteRef\n    }, React.createElement(\"span\", {\n      className: css(styles.selectMenuItemActionIcon)\n    }, React.createElement(StarIcon, null)));\n\n    const itemDisplay = itemCount ? React.createElement(\"span\", {\n      className: css(styles.selectMenuItemRow)\n    }, React.createElement(\"span\", {\n      className: css(styles.selectMenuItemText)\n    }, children || value && value.toString && value.toString()), React.createElement(\"span\", {\n      className: css(styles.selectMenuItemCount)\n    }, itemCount)) : children || value.toString();\n\n    const onViewMoreClick = event => {\n      // Set the index for the next item to focus after view more clicked, then call view more callback\n      setViewMoreNextIndex();\n      onClick(event);\n    };\n\n    const renderOption = (onSelect, onClose, variant, inputIdPrefix, onFavorite, shouldResetOnSelect) => {\n      if (variant !== SelectVariant.checkbox && isLoading && isGrouped) {\n        return React.createElement(\"div\", {\n          role: \"presentation\",\n          className: css(styles.selectListItem, isLoading && styles.modifiers.loading, className)\n        }, children);\n      } else if (variant !== SelectVariant.checkbox && isLoad && isGrouped) {\n        return React.createElement(\"div\", null, React.createElement(\"button\", Object.assign({}, props, {\n          role: \"presentation\",\n          className: css(styles.selectMenuItem, styles.modifiers.load, className),\n          onClick: event => {\n            onViewMoreClick(event);\n            event.stopPropagation();\n          },\n          ref: this.ref,\n          type: \"button\"\n        }), children || value.toString()));\n      } else if (variant !== SelectVariant.checkbox) {\n        return React.createElement(\"li\", {\n          id: generatedId,\n          role: \"presentation\",\n          className: css(isLoading && styles.selectListItem, !isLoading && styles.selectMenuWrapper, isFavorite && styles.modifiers.favorite, isFocused && styles.modifiers.focus, isLoading && styles.modifiers.loading),\n          ref: this.liRef\n        }, isLoading && children, isLoad && !isGrouped && React.createElement(\"button\", Object.assign({}, props, {\n          className: css(styles.selectMenuItem, styles.modifiers.load, className),\n          onClick: event => {\n            onViewMoreClick(event);\n            event.stopPropagation();\n          },\n          ref: this.ref,\n          onKeyDown: event => {\n            this.onKeyDown(event, 0);\n          },\n          type: \"button\"\n        }), itemDisplay), !isLoading && !isLoad && React.createElement(React.Fragment, null, React.createElement(Component, Object.assign({}, props, {\n          className: css(styles.selectMenuItem, isLoad && styles.modifiers.load, isSelected && styles.modifiers.selected, isDisabled && styles.modifiers.disabled, description && styles.modifiers.description, isFavorite !== null && styles.modifiers.link, className),\n          onClick: event => {\n            if (!isDisabled) {\n              onClick(event);\n              onSelect(event, value, isPlaceholder);\n              shouldResetOnSelect && onClose();\n            }\n          },\n          role: \"option\",\n          \"aria-selected\": isSelected || null,\n          ref: this.ref,\n          onKeyDown: event => {\n            this.onKeyDown(event, 0);\n          },\n          type: \"button\"\n        }), description && React.createElement(React.Fragment, null, React.createElement(\"span\", {\n          className: css(styles.selectMenuItemMain)\n        }, itemDisplay, isSelected && React.createElement(\"span\", {\n          className: css(styles.selectMenuItemIcon)\n        }, React.createElement(CheckIcon, {\n          \"aria-hidden\": true\n        }))), React.createElement(\"span\", {\n          className: css(styles.selectMenuItemDescription)\n        }, description)), !description && React.createElement(React.Fragment, null, itemDisplay, isSelected && React.createElement(\"span\", {\n          className: css(styles.selectMenuItemIcon)\n        }, React.createElement(CheckIcon, {\n          \"aria-hidden\": true\n        })))), isFavorite !== null && id && favoriteButton(onFavorite)));\n      } else if (variant === SelectVariant.checkbox && isLoad) {\n        return React.createElement(\"button\", {\n          className: css(styles.selectMenuItem, styles.modifiers.load, isFocused && styles.modifiers.focus, className),\n          onKeyDown: event => {\n            this.onKeyDown(event, 0, undefined, true);\n          },\n          onClick: event => {\n            onViewMoreClick(event);\n            event.stopPropagation();\n          },\n          ref: this.ref\n        }, children || value && value.toString && value.toString());\n      } else if (variant === SelectVariant.checkbox && isLoading) {\n        return React.createElement(\"div\", {\n          className: css(styles.selectListItem, isLoading && styles.modifiers.loading, className)\n        }, children);\n      } else if (variant === SelectVariant.checkbox && !isNoResultsOption && !isLoading && !isLoad) {\n        return React.createElement(\"label\", Object.assign({}, props, {\n          className: css(checkStyles.check, styles.selectMenuItem, isDisabled && styles.modifiers.disabled, description && styles.modifiers.description, className),\n          onKeyDown: event => {\n            this.onKeyDown(event, 0, undefined, true);\n          }\n        }), React.createElement(\"input\", {\n          id: inputId || `${inputIdPrefix}-${value.toString()}`,\n          className: css(checkStyles.checkInput),\n          type: \"checkbox\",\n          onChange: event => {\n            if (!isDisabled) {\n              onClick(event);\n              onSelect(event, value);\n            }\n          },\n          ref: this.ref,\n          checked: isChecked || false,\n          disabled: isDisabled\n        }), React.createElement(\"span\", {\n          className: css(checkStyles.checkLabel, isDisabled && styles.modifiers.disabled)\n        }, itemDisplay), description && React.createElement(\"div\", {\n          className: css(checkStyles.checkDescription)\n        }, description));\n      } else if (variant === SelectVariant.checkbox && isNoResultsOption && !isLoading && !isLoad) {\n        return React.createElement(\"div\", null, React.createElement(Component, Object.assign({}, props, {\n          className: css(styles.selectMenuItem, isSelected && styles.modifiers.selected, isDisabled && styles.modifiers.disabled, className),\n          role: \"option\",\n          \"aria-selected\": isSelected || null,\n          ref: this.ref,\n          onKeyDown: event => {\n            this.onKeyDown(event, 0, undefined, true);\n          },\n          type: \"button\"\n        }), itemDisplay));\n      }\n    };\n\n    return React.createElement(SelectConsumer, null, _ref => {\n      let {\n        onSelect,\n        onClose,\n        variant,\n        inputIdPrefix,\n        onFavorite,\n        shouldResetOnSelect\n      } = _ref;\n      return React.createElement(React.Fragment, null, renderOption(onSelect, onClose, variant, inputIdPrefix, onFavorite, shouldResetOnSelect));\n    });\n  }\n\n}\nSelectOption.displayName = 'SelectOption';\nSelectOption.defaultProps = {\n  className: '',\n  value: '',\n  index: 0,\n  isDisabled: false,\n  isPlaceholder: false,\n  isSelected: false,\n  isChecked: false,\n  isNoResultsOption: false,\n  component: 'button',\n  onClick: () => {},\n  sendRef: () => {},\n  keyHandler: () => {},\n  inputId: '',\n  isFavorite: null,\n  isLoad: false,\n  isLoading: false,\n  setViewMoreNextIndex: () => {},\n  isLastOptionBeforeFooter: () => false\n};","map":{"version":3,"mappings":"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","names":["React","styles","checkStyles","css","CheckIcon","SelectConsumer","SelectVariant","StarIcon","getUniqueId","KeyTypes","SelectOption","Component","constructor","createRef","event","innerIndex","onEnter","isCheckbox","index","keyHandler","isLastOptionBeforeFooter","props","isLastItemBeforeFooter","undefined","key","Tab","shiftKey","stopPropagation","preventDefault","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","Enter","ref","current","click","componentDidMount","sendRef","isDisabled","favoriteRef","liRef","componentDidUpdate","render","_a","children","className","id","description","itemCount","value","onClick","isPlaceholder","isNoResultsOption","isSelected","isChecked","isFocused","component","inputId","isFavorite","ariaIsFavoriteLabel","ariaIsNotFavoriteLabel","isLoad","isLoading","setViewMoreNextIndex","isGrouped","console","error","generatedId","favoriteButton","onFavorite","selectMenuItem","modifiers","action","favoriteAction","replace","onKeyDown","selectMenuItemActionIcon","itemDisplay","selectMenuItemRow","selectMenuItemText","toString","selectMenuItemCount","onViewMoreClick","renderOption","onSelect","onClose","variant","inputIdPrefix","shouldResetOnSelect","checkbox","role","selectListItem","loading","load","type","selectMenuWrapper","favorite","focus","Object","selected","disabled","link","Fragment","selectMenuItemMain","selectMenuItemIcon","selectMenuItemDescription","check","checkInput","onChange","checked","checkLabel","checkDescription"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Select/SelectOption.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport checkStyles from '@patternfly/react-styles/css/components/Check/check';\nimport { css } from '@patternfly/react-styles';\nimport CheckIcon from '@patternfly/react-icons/dist/esm/icons/check-icon';\nimport { SelectConsumer, SelectVariant } from './selectConstants';\nimport StarIcon from '@patternfly/react-icons/dist/esm/icons/star-icon';\nimport { getUniqueId } from '../../helpers/util';\nimport { KeyTypes } from '../../helpers/constants';\n\nexport interface SelectOptionObject {\n  /** Function returns a string to represent the select option object */\n  toString(): string;\n  /** Function returns a true if the passed in select option is equal to this select option object, false otherwise */\n  compareTo?(selectOption: any): boolean;\n}\nexport interface SelectOptionProps extends Omit<React.HTMLProps<HTMLElement>, 'type' | 'ref' | 'value'> {\n  /** Optional alternate display for the option */\n  children?: React.ReactNode;\n  /** Additional classes added to the Select Option */\n  className?: string;\n  /** Description of the item for single and both typeahead select variants */\n  description?: React.ReactNode;\n  /** Number of items matching the option */\n  itemCount?: number;\n  /** @hide Internal index of the option */\n  index?: number;\n  /** Indicates which component will be used as select item */\n  component?: React.ReactNode;\n  /** The value for the option, can be a string or select option object */\n  value: string | SelectOptionObject;\n  /** Flag indicating if the option is disabled */\n  isDisabled?: boolean;\n  /** Flag indicating if the option acts as a placeholder */\n  isPlaceholder?: boolean;\n  /** Flag indicating if the option acts as a \"no results\" indicator */\n  isNoResultsOption?: boolean;\n  /** @hide Internal flag indicating if the option is selected */\n  isSelected?: boolean;\n  /** @hide Internal flag indicating if the option is checked */\n  isChecked?: boolean;\n  /** Flag forcing the focused state */\n  isFocused?: boolean;\n  /** @hide Internal callback for ref tracking */\n  sendRef?: (\n    ref: React.ReactNode,\n    favoriteRef: React.ReactNode,\n    optionContainerRef: React.ReactNode,\n    index: number\n  ) => void;\n  /** @hide Internal callback for keyboard navigation */\n  keyHandler?: (index: number, innerIndex: number, position: string) => void;\n  /** Optional callback for click event */\n  onClick?: (event: React.MouseEvent | React.ChangeEvent) => void;\n  /** Id of the checkbox input */\n  inputId?: string;\n  /** @hide Internal Flag indicating if the option is favorited */\n  isFavorite?: boolean;\n  /** Aria label text for favoritable button when favorited */\n  ariaIsFavoriteLabel?: string;\n  /** Aria label text for favoritable button when not favorited */\n  ariaIsNotFavoriteLabel?: string;\n  /** ID of the item. Required for tracking favorites */\n  id?: string;\n  /** @hide Internal flag to apply the load styling to view more option */\n  isLoad?: boolean;\n  /** @hide Internal flag to apply the loading styling to spinner */\n  isLoading?: boolean;\n  /** @hide Internal callback for the setting the index of the next item to focus after view more is clicked */\n  setViewMoreNextIndex?: () => void;\n  /** @hide Flag indicating this is the last option when there is a footer */\n  isLastOptionBeforeFooter?: (index: number) => boolean;\n  /** @hide Flag indicating that the the option loading variant is in a grouped select */\n  isGrouped?: boolean;\n}\n\nexport class SelectOption extends React.Component<SelectOptionProps> {\n  static displayName = 'SelectOption';\n  private ref = React.createRef<any>();\n  private liRef = React.createRef<any>();\n  private favoriteRef = React.createRef<any>();\n  static defaultProps: SelectOptionProps = {\n    className: '',\n    value: '',\n    index: 0,\n    isDisabled: false,\n    isPlaceholder: false,\n    isSelected: false,\n    isChecked: false,\n    isNoResultsOption: false,\n    component: 'button',\n    onClick: () => {},\n    sendRef: () => {},\n    keyHandler: () => {},\n    inputId: '',\n    isFavorite: null,\n    isLoad: false,\n    isLoading: false,\n    setViewMoreNextIndex: () => {},\n    isLastOptionBeforeFooter: () => false\n  };\n\n  componentDidMount() {\n    this.props.sendRef(\n      this.props.isDisabled ? null : this.ref.current,\n      this.props.isDisabled ? null : this.favoriteRef.current,\n      this.props.isDisabled ? null : this.liRef.current,\n      this.props.index\n    );\n  }\n\n  componentDidUpdate() {\n    this.props.sendRef(\n      this.props.isDisabled ? null : this.ref.current,\n      this.props.isDisabled ? null : this.favoriteRef.current,\n      this.props.isDisabled ? null : this.liRef.current,\n      this.props.index\n    );\n  }\n\n  onKeyDown = (event: React.KeyboardEvent, innerIndex: number, onEnter?: any, isCheckbox?: boolean) => {\n    const { index, keyHandler, isLastOptionBeforeFooter } = this.props;\n    let isLastItemBeforeFooter = false;\n    if (isLastOptionBeforeFooter !== undefined) {\n      isLastItemBeforeFooter = isLastOptionBeforeFooter(index);\n    }\n\n    if (event.key === KeyTypes.Tab) {\n      // More modal-like experience for checkboxes\n      if (isCheckbox && !isLastItemBeforeFooter) {\n        if (event.shiftKey) {\n          keyHandler(index, innerIndex, 'up');\n        } else {\n          keyHandler(index, innerIndex, 'down');\n        }\n        event.stopPropagation();\n      } else {\n        if (event.shiftKey) {\n          keyHandler(index, innerIndex, 'up');\n        } else {\n          keyHandler(index, innerIndex, 'tab');\n        }\n      }\n    }\n    event.preventDefault();\n    if (event.key === KeyTypes.ArrowUp) {\n      keyHandler(index, innerIndex, 'up');\n    } else if (event.key === KeyTypes.ArrowDown) {\n      keyHandler(index, innerIndex, 'down');\n    } else if (event.key === KeyTypes.ArrowLeft) {\n      keyHandler(index, innerIndex, 'left');\n    } else if (event.key === KeyTypes.ArrowRight) {\n      keyHandler(index, innerIndex, 'right');\n    } else if (event.key === KeyTypes.Enter) {\n      if (onEnter !== undefined) {\n        onEnter();\n      } else {\n        this.ref.current.click();\n      }\n    }\n  };\n\n  render() {\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    const {\n      children,\n      className,\n      id,\n      description,\n      itemCount,\n      value,\n      onClick,\n      isDisabled,\n      isPlaceholder,\n      isNoResultsOption,\n      isSelected,\n      isChecked,\n      isFocused,\n      sendRef,\n      keyHandler,\n      index,\n      component,\n      inputId,\n      isFavorite,\n      ariaIsFavoriteLabel = 'starred',\n      ariaIsNotFavoriteLabel = 'not starred',\n      isLoad,\n      isLoading,\n      setViewMoreNextIndex,\n      // eslint-disable-next-line no-console\n      isLastOptionBeforeFooter,\n      isGrouped = false,\n      ...props\n    } = this.props;\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    const Component = component as any;\n\n    if (!id && isFavorite !== null) {\n      // eslint-disable-next-line no-console\n      console.error('Please provide an id to use the favorites feature.');\n    }\n\n    const generatedId = id || getUniqueId('select-option');\n    const favoriteButton = (onFavorite: any) => (\n      <button\n        className={css(styles.selectMenuItem, styles.modifiers.action, styles.modifiers.favoriteAction)}\n        aria-label={isFavorite ? ariaIsFavoriteLabel : ariaIsNotFavoriteLabel}\n        onClick={() => {\n          onFavorite(generatedId.replace('favorite-', ''), isFavorite);\n        }}\n        onKeyDown={event => {\n          this.onKeyDown(event, 1, () => onFavorite(generatedId.replace('favorite-', ''), isFavorite));\n        }}\n        ref={this.favoriteRef}\n      >\n        <span className={css(styles.selectMenuItemActionIcon)}>\n          <StarIcon />\n        </span>\n      </button>\n    );\n\n    const itemDisplay = itemCount ? (\n      <span className={css(styles.selectMenuItemRow)}>\n        <span className={css(styles.selectMenuItemText)}>\n          {children || (value && value.toString && value.toString())}\n        </span>\n        <span className={css(styles.selectMenuItemCount)}>{itemCount}</span>\n      </span>\n    ) : (\n      children || value.toString()\n    );\n\n    const onViewMoreClick = (event: any) => {\n      // Set the index for the next item to focus after view more clicked, then call view more callback\n      setViewMoreNextIndex();\n      onClick(event);\n    };\n\n    const renderOption = (\n      onSelect: (\n        event: React.MouseEvent<any, MouseEvent> | React.ChangeEvent<HTMLInputElement>,\n        value: string | SelectOptionObject,\n        isPlaceholder?: boolean\n      ) => void,\n      onClose: () => void,\n      variant: string,\n      inputIdPrefix: string,\n      onFavorite: (itemId: string, isFavorite: boolean) => void,\n      shouldResetOnSelect: boolean\n    ) => {\n      if (variant !== SelectVariant.checkbox && isLoading && isGrouped) {\n        return (\n          <div\n            role=\"presentation\"\n            className={css(styles.selectListItem, isLoading && styles.modifiers.loading, className)}\n          >\n            {children}\n          </div>\n        );\n      } else if (variant !== SelectVariant.checkbox && isLoad && isGrouped) {\n        return (\n          <div>\n            <button\n              {...props}\n              role=\"presentation\"\n              className={css(styles.selectMenuItem, styles.modifiers.load, className)}\n              onClick={(event: any) => {\n                onViewMoreClick(event);\n                event.stopPropagation();\n              }}\n              ref={this.ref}\n              type=\"button\"\n            >\n              {children || value.toString()}\n            </button>\n          </div>\n        );\n      } else if (variant !== SelectVariant.checkbox) {\n        return (\n          <li\n            id={generatedId}\n            role=\"presentation\"\n            className={css(\n              isLoading && styles.selectListItem,\n              !isLoading && styles.selectMenuWrapper,\n              isFavorite && styles.modifiers.favorite,\n              isFocused && styles.modifiers.focus,\n              isLoading && styles.modifiers.loading\n            )}\n            ref={this.liRef}\n          >\n            {isLoading && children}\n            {isLoad && !isGrouped && (\n              <button\n                {...props}\n                className={css(styles.selectMenuItem, styles.modifiers.load, className)}\n                onClick={(event: any) => {\n                  onViewMoreClick(event);\n                  event.stopPropagation();\n                }}\n                ref={this.ref}\n                onKeyDown={(event: React.KeyboardEvent) => {\n                  this.onKeyDown(event, 0);\n                }}\n                type=\"button\"\n              >\n                {itemDisplay}\n              </button>\n            )}\n            {!isLoading && !isLoad && (\n              <>\n                <Component\n                  {...props}\n                  className={css(\n                    styles.selectMenuItem,\n                    isLoad && styles.modifiers.load,\n                    isSelected && styles.modifiers.selected,\n                    isDisabled && styles.modifiers.disabled,\n                    description && styles.modifiers.description,\n                    isFavorite !== null && styles.modifiers.link,\n                    className\n                  )}\n                  onClick={(event: any) => {\n                    if (!isDisabled) {\n                      onClick(event);\n                      onSelect(event, value, isPlaceholder);\n                      shouldResetOnSelect && onClose();\n                    }\n                  }}\n                  role=\"option\"\n                  aria-selected={isSelected || null}\n                  ref={this.ref}\n                  onKeyDown={(event: React.KeyboardEvent) => {\n                    this.onKeyDown(event, 0);\n                  }}\n                  type=\"button\"\n                >\n                  {description && (\n                    <React.Fragment>\n                      <span className={css(styles.selectMenuItemMain)}>\n                        {itemDisplay}\n                        {isSelected && (\n                          <span className={css(styles.selectMenuItemIcon)}>\n                            <CheckIcon aria-hidden />\n                          </span>\n                        )}\n                      </span>\n                      <span className={css(styles.selectMenuItemDescription)}>{description}</span>\n                    </React.Fragment>\n                  )}\n                  {!description && (\n                    <React.Fragment>\n                      {itemDisplay}\n                      {isSelected && (\n                        <span className={css(styles.selectMenuItemIcon)}>\n                          <CheckIcon aria-hidden />\n                        </span>\n                      )}\n                    </React.Fragment>\n                  )}\n                </Component>\n                {isFavorite !== null && id && favoriteButton(onFavorite)}\n              </>\n            )}\n          </li>\n        );\n      } else if (variant === SelectVariant.checkbox && isLoad) {\n        return (\n          <button\n            className={css(\n              styles.selectMenuItem,\n              styles.modifiers.load,\n              isFocused && styles.modifiers.focus,\n              className\n            )}\n            onKeyDown={(event: React.KeyboardEvent) => {\n              this.onKeyDown(event, 0, undefined, true);\n            }}\n            onClick={(event: any) => {\n              onViewMoreClick(event);\n              event.stopPropagation();\n            }}\n            ref={this.ref}\n          >\n            {children || (value && value.toString && value.toString())}\n          </button>\n        );\n      } else if (variant === SelectVariant.checkbox && isLoading) {\n        return (\n          <div className={css(styles.selectListItem, isLoading && styles.modifiers.loading, className)}>{children}</div>\n        );\n      } else if (variant === SelectVariant.checkbox && !isNoResultsOption && !isLoading && !isLoad) {\n        return (\n          <label\n            {...props}\n            className={css(\n              checkStyles.check,\n              styles.selectMenuItem,\n              isDisabled && styles.modifiers.disabled,\n              description && styles.modifiers.description,\n              className\n            )}\n            onKeyDown={(event: React.KeyboardEvent) => {\n              this.onKeyDown(event, 0, undefined, true);\n            }}\n          >\n            <input\n              id={inputId || `${inputIdPrefix}-${value.toString()}`}\n              className={css(checkStyles.checkInput)}\n              type=\"checkbox\"\n              onChange={event => {\n                if (!isDisabled) {\n                  onClick(event);\n                  onSelect(event, value);\n                }\n              }}\n              ref={this.ref}\n              checked={isChecked || false}\n              disabled={isDisabled}\n            />\n            <span className={css(checkStyles.checkLabel, isDisabled && styles.modifiers.disabled)}>{itemDisplay}</span>\n            {description && <div className={css(checkStyles.checkDescription)}>{description}</div>}\n          </label>\n        );\n      } else if (variant === SelectVariant.checkbox && isNoResultsOption && !isLoading && !isLoad) {\n        return (\n          <div>\n            <Component\n              {...props}\n              className={css(\n                styles.selectMenuItem,\n                isSelected && styles.modifiers.selected,\n                isDisabled && styles.modifiers.disabled,\n                className\n              )}\n              role=\"option\"\n              aria-selected={isSelected || null}\n              ref={this.ref}\n              onKeyDown={(event: React.KeyboardEvent) => {\n                this.onKeyDown(event, 0, undefined, true);\n              }}\n              type=\"button\"\n            >\n              {itemDisplay}\n            </Component>\n          </div>\n        );\n      }\n    };\n\n    return (\n      <SelectConsumer>\n        {({ onSelect, onClose, variant, inputIdPrefix, onFavorite, shouldResetOnSelect }) => (\n          <React.Fragment>\n            {renderOption(onSelect, onClose, variant, inputIdPrefix, onFavorite, shouldResetOnSelect)}\n          </React.Fragment>\n        )}\n      </SelectConsumer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}