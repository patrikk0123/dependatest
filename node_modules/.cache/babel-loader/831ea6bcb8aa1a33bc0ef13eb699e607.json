{"ast":null,"code":"var _jsxFileName = \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/Sorting/Sorting.tsx\";\nimport { Button, InputGroup, Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { SortAmountDownAltIcon, SortAmountDownIcon } from '@patternfly/react-icons';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { getComponentQueryParamValue, updateQueryParamsInURL } from '../../utils/queryParamsHelper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Sorting = _ref => {\n  let {\n    filterOptions,\n    componentId\n  } = _ref;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const defaultAttributeKey = Object.keys(filterOptions.filterAttributes)[0];\n  const [sortAttribute, setSortAttribute] = useState(filterOptions.filterAttributes[defaultAttributeKey]);\n  const [isSortAttributeOpen, setIsSortAttributeOpen] = useState(false);\n  const [ascending, setAscending] = useState(null);\n  const [isSorting, setIsSorting] = useState(false);\n  /**\n   * Add sort filter by updating URL.\n   */\n\n  const addSortFilter = useCallback(function (filterAttribute, order) {\n    let replace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    updateQueryParamsInURL({\n      sort: `=${order}=${filterAttribute}`,\n      pageIndex: 1\n    }, componentId, location, navigate, replace);\n  }, [componentId, location, navigate]);\n\n  const deleteSortFilter = () => {\n    updateQueryParamsInURL({\n      sort: '',\n      pageIndex: 1\n    }, componentId, location, navigate);\n  };\n\n  useEffect(() => {\n    var _currentSortParam$spl, _currentSortParam$spl2;\n\n    const currentSortParam = getComponentQueryParamValue(location.search, 'sort', componentId) || ''; // if (!currentSortParam) {\n    //   addSortFilter(defaultAttributeKey, 'asc', true);\n    // }\n\n    const sortOrder = (_currentSortParam$spl = currentSortParam.split('=')) === null || _currentSortParam$spl === void 0 ? void 0 : _currentSortParam$spl[1];\n    const sortParam = (_currentSortParam$spl2 = currentSortParam.split('=')) === null || _currentSortParam$spl2 === void 0 ? void 0 : _currentSortParam$spl2[2];\n\n    if (currentSortParam) {\n      setAscending(sortOrder === 'asc');\n      setSortAttribute(filterOptions.filterAttributes[sortParam]);\n    } else {\n      setAscending(null);\n      setSortAttribute(filterOptions.filterAttributes[defaultAttributeKey]);\n    }\n  }, [location.search, location, componentId, navigate, filterOptions.filterAttributes, defaultAttributeKey, addSortFilter]);\n  return /*#__PURE__*/_jsxDEV(InputGroup, {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      variant: SelectVariant.single,\n      onToggle: isOpen => {\n        setIsSortAttributeOpen(isOpen);\n      },\n      onSelect: (event, selection, isPlaceholder) => {\n        if (!isPlaceholder) {\n          setIsSortAttributeOpen(false);\n          setSortAttribute(selection); // addSortFilter((selection as IFilterAttribute)?.id, ascending ? 'asc' : 'desc');\n        }\n      },\n      selections: sortAttribute,\n      isOpen: isSortAttributeOpen,\n      children: Object.keys(filterOptions.filterAttributes).filter(filterAttributeKey => {\n        var _filterOptions$filter;\n\n        return (_filterOptions$filter = filterOptions.filterAttributes[filterAttributeKey]) === null || _filterOptions$filter === void 0 ? void 0 : _filterOptions$filter.sorted;\n      }).map(filterAttributeKey => {\n        const filterAttribute = filterOptions.filterAttributes[filterAttributeKey]; // use 'title' attribute as default\n\n        filterAttribute.toString = () => {\n          return filterAttribute.title;\n        };\n\n        return /*#__PURE__*/_jsxDEV(SelectOption, {\n          value: filterAttribute\n        }, filterAttribute.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        addSortFilter(sortAttribute.id, ascending === null || !ascending ? 'asc' : 'desc');\n      },\n      variant: \"plain\",\n      icon: ascending === null || ascending ? /*#__PURE__*/_jsxDEV(SortAmountDownAltIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 49\n      }, this) : /*#__PURE__*/_jsxDEV(SortAmountDownIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 77\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), ascending !== null && /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        padding: '1px'\n      },\n      onClick: () => {\n        deleteSortFilter();\n      },\n      variant: \"plain\",\n      isInline: true,\n      children: \"Remove sorting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["Button","InputGroup","Select","SelectOption","SelectVariant","SortAmountDownAltIcon","SortAmountDownIcon","useCallback","useEffect","useState","useLocation","useNavigate","getComponentQueryParamValue","updateQueryParamsInURL","Sorting","filterOptions","componentId","location","navigate","defaultAttributeKey","Object","keys","filterAttributes","sortAttribute","setSortAttribute","isSortAttributeOpen","setIsSortAttributeOpen","ascending","setAscending","isSorting","setIsSorting","addSortFilter","filterAttribute","order","replace","sort","pageIndex","deleteSortFilter","currentSortParam","search","sortOrder","split","sortParam","single","isOpen","event","selection","isPlaceholder","filter","filterAttributeKey","sorted","map","toString","title","id","padding"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/src/components/Sorting/Sorting.tsx"],"sourcesContent":["import { Button, InputGroup, Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { SortAmountDownAltIcon, SortAmountDownIcon } from '@patternfly/react-icons';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nimport { getComponentQueryParamValue, updateQueryParamsInURL } from '../../utils/queryParamsHelper';\n\nimport { IFilterAttribute, IFilterOptions } from '../Filtering/Filtering';\n\ninterface ISortingProps {\n  filterOptions: IFilterOptions;\n  componentId: any;\n}\n\nexport const Sorting = ({ filterOptions, componentId }: ISortingProps) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const defaultAttributeKey = Object.keys(filterOptions.filterAttributes)[0];\n\n  const [sortAttribute, setSortAttribute] = useState<IFilterAttribute>(filterOptions.filterAttributes[defaultAttributeKey]);\n  const [isSortAttributeOpen, setIsSortAttributeOpen] = useState<boolean>(false);\n  const [ascending, setAscending] = useState<boolean | null>(null);\n\n  const [isSorting, setIsSorting] = useState<boolean>(false);\n\n  /**\n   * Add sort filter by updating URL.\n   */\n  const addSortFilter = useCallback(\n    (filterAttribute: string, order: 'asc' | 'desc', replace: boolean = false) => {\n      updateQueryParamsInURL({ sort: `=${order}=${filterAttribute}`, pageIndex: 1 }, componentId, location, navigate, replace);\n    },\n    [componentId, location, navigate]\n  );\n\n  const deleteSortFilter = () => {\n    updateQueryParamsInURL({ sort: '', pageIndex: 1 }, componentId, location, navigate);\n  };\n\n  useEffect(() => {\n    const currentSortParam = getComponentQueryParamValue(location.search, 'sort', componentId) || '';\n    // if (!currentSortParam) {\n    //   addSortFilter(defaultAttributeKey, 'asc', true);\n    // }\n\n    const sortOrder = currentSortParam.split('=')?.[1];\n    const sortParam = currentSortParam.split('=')?.[2];\n\n    if (currentSortParam) {\n      setAscending(sortOrder === 'asc');\n      setSortAttribute(filterOptions.filterAttributes[sortParam]);\n    } else {\n      setAscending(null);\n      setSortAttribute(filterOptions.filterAttributes[defaultAttributeKey]);\n    }\n  }, [location.search, location, componentId, navigate, filterOptions.filterAttributes, defaultAttributeKey, addSortFilter]);\n\n  return (\n    <InputGroup>\n      <Select\n        variant={SelectVariant.single}\n        onToggle={(isOpen) => {\n          setIsSortAttributeOpen(isOpen);\n        }}\n        onSelect={(event, selection, isPlaceholder) => {\n          if (!isPlaceholder) {\n            setIsSortAttributeOpen(false);\n            setSortAttribute(selection as IFilterAttribute);\n            // addSortFilter((selection as IFilterAttribute)?.id, ascending ? 'asc' : 'desc');\n          }\n        }}\n        selections={sortAttribute}\n        isOpen={isSortAttributeOpen}\n      >\n        {Object.keys(filterOptions.filterAttributes)\n          .filter((filterAttributeKey: string) => {\n            return filterOptions.filterAttributes[filterAttributeKey]?.sorted;\n          })\n          .map((filterAttributeKey: string) => {\n            const filterAttribute = filterOptions.filterAttributes[filterAttributeKey];\n            // use 'title' attribute as default\n            filterAttribute.toString = () => {\n              return filterAttribute.title;\n            };\n\n            return <SelectOption key={filterAttribute.id} value={filterAttribute} />;\n          })}\n      </Select>\n      <Button\n        onClick={() => {\n          addSortFilter(sortAttribute.id, ascending === null || !ascending ? 'asc' : 'desc');\n        }}\n        variant=\"plain\"\n        icon={ascending === null || ascending ? <SortAmountDownAltIcon /> : <SortAmountDownIcon />}\n      ></Button>\n      {ascending !== null && (\n        <Button\n          style={{ padding: '1px' }}\n          onClick={() => {\n            deleteSortFilter();\n          }}\n          variant=\"plain\"\n          isInline\n        >\n          Remove sorting\n        </Button>\n      )}\n    </InputGroup>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}