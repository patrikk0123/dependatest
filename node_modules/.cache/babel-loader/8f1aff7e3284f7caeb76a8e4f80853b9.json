{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Toolbar/toolbar';\nimport { css } from '@patternfly/react-styles';\nexport var ToolbarExpandIconWrapper = function ToolbarExpandIconWrapper(_a) {\n  var children = _a.children,\n      className = _a.className,\n      props = __rest(_a, [\"children\", \"className\"]);\n\n  return React.createElement(\"span\", Object.assign({}, props, {\n    className: css(styles.toolbarExpandAllIcon, className)\n  }), children);\n};\nToolbarExpandIconWrapper.displayName = 'ToolbarExpandIconWrapper';","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,yDAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AASA,OAAO,IAAMC,wBAAwB,GAA2D,SAAnFA,wBAAmF,CAACC,EAAD,EAI5D;MAHlCC,WACSD,GADTC;MACAC,YAASF,GAATE;MACGC,QAAKC,WAHuF,yBAGvF;;EAC2B,OACnCR,8CAAUO,KAAV,EAAe;IAAED,SAAS,EAAEJ,GAAG,CAACD,MAAM,CAACQ,oBAAR,EAA8BH,SAA9B;EAAhB,CAAf,GACGD,QADH,CADmC;AAIpC,CARM;AASPF,wBAAwB,CAACO,WAAzB,GAAuC,0BAAvC","names":["React","styles","css","ToolbarExpandIconWrapper","_a","children","className","props","__rest","toolbarExpandAllIcon","displayName"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/Toolbar/ToolbarExpandIconWrapper.tsx"],"sourcesContent":["import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Toolbar/toolbar';\nimport { css } from '@patternfly/react-styles';\n\nexport interface ToolbarExpandIconWrapperProps extends React.HTMLProps<HTMLSpanElement> {\n  /** Icon content used for the expand all or collapse all indication. */\n  children?: React.ReactNode;\n  /** Additional classes added to the span */\n  className?: string;\n}\n\nexport const ToolbarExpandIconWrapper: React.FunctionComponent<ToolbarExpandIconWrapperProps> = ({\n  children,\n  className,\n  ...props\n}: ToolbarExpandIconWrapperProps) => (\n  <span {...props} className={css(styles.toolbarExpandAllIcon, className)}>\n    {children}\n  </span>\n);\nToolbarExpandIconWrapper.displayName = 'ToolbarExpandIconWrapper';\n"]},"metadata":{},"sourceType":"module"}