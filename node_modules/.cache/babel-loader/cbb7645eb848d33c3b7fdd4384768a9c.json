{"ast":null,"code":"import _toConsumableArray from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/AppLauncher/app-launcher';\nimport formStyles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport ThIcon from '@patternfly/react-icons/dist/esm/icons/th-icon';\nimport { DropdownDirection, DropdownPosition, DropdownToggle, DropdownContext } from '../Dropdown';\nimport { DropdownWithContext } from '../Dropdown/DropdownWithContext';\nimport { ApplicationLauncherGroup } from './ApplicationLauncherGroup';\nimport { ApplicationLauncherSeparator } from './ApplicationLauncherSeparator';\nimport { ApplicationLauncherItem } from './ApplicationLauncherItem';\nimport { ApplicationLauncherContext } from './ApplicationLauncherContext';\nimport { createRenderableFavorites, extendItemsWithFavorite } from '../../helpers/favorites';\nexport var ApplicationLauncher = /*#__PURE__*/function (_React$Component) {\n  _inherits(ApplicationLauncher, _React$Component);\n\n  var _super = _createSuper(ApplicationLauncher);\n\n  function ApplicationLauncher() {\n    var _this;\n\n    _classCallCheck(this, ApplicationLauncher);\n\n    _this = _super.apply(this, arguments);\n\n    _this.createSearchBox = function () {\n      var _this$props = _this.props,\n          onSearch = _this$props.onSearch,\n          searchPlaceholderText = _this$props.searchPlaceholderText,\n          searchProps = _this$props.searchProps;\n      return React.createElement(\"div\", {\n        key: \"search\",\n        className: css(styles.appLauncherMenuSearch)\n      }, React.createElement(ApplicationLauncherItem, {\n        customChild: React.createElement(\"input\", Object.assign({\n          type: \"search\",\n          className: css(formStyles.formControl),\n          placeholder: searchPlaceholderText,\n          onChange: function onChange(e) {\n            return onSearch(e.target.value);\n          }\n        }, searchProps))\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(ApplicationLauncher, [{\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          ariaLabel = _a['aria-label'],\n          isOpen = _a.isOpen,\n          onToggle = _a.onToggle,\n          toggleIcon = _a.toggleIcon,\n          toggleId = _a.toggleId,\n          onSelect = _a.onSelect,\n          isDisabled = _a.isDisabled,\n          className = _a.className,\n          isGrouped = _a.isGrouped,\n          favorites = _a.favorites,\n          onFavorite = _a.onFavorite,\n          onSearch = _a.onSearch,\n          items = _a.items,\n          searchPlaceholderText = _a.searchPlaceholderText,\n          searchProps = _a.searchProps,\n          ref = _a.ref,\n          favoritesLabel = _a.favoritesLabel,\n          searchNoResultsText = _a.searchNoResultsText,\n          menuAppendTo = _a.menuAppendTo,\n          props = __rest(_a, ['aria-label', \"isOpen\", \"onToggle\", \"toggleIcon\", \"toggleId\", \"onSelect\", \"isDisabled\", \"className\", \"isGrouped\", \"favorites\", \"onFavorite\", \"onSearch\", \"items\", \"searchPlaceholderText\", \"searchProps\", \"ref\", \"favoritesLabel\", \"searchNoResultsText\", \"menuAppendTo\"]);\n\n      var renderableItems = [];\n\n      if (onFavorite) {\n        var favoritesGroup = [];\n        var renderableFavorites = [];\n\n        if (favorites.length > 0) {\n          renderableFavorites = createRenderableFavorites(items, isGrouped, favorites, true);\n          favoritesGroup = [React.createElement(ApplicationLauncherGroup, {\n            key: \"favorites\",\n            label: favoritesLabel\n          }, renderableFavorites, React.createElement(ApplicationLauncherSeparator, {\n            key: \"separator\"\n          }))];\n        }\n\n        if (renderableFavorites.length > 0) {\n          renderableItems = favoritesGroup.concat(extendItemsWithFavorite(items, isGrouped, favorites));\n        } else {\n          renderableItems = extendItemsWithFavorite(items, isGrouped, favorites);\n        }\n      } else {\n        renderableItems = items;\n      }\n\n      if (items.length === 0) {\n        renderableItems = [React.createElement(ApplicationLauncherGroup, {\n          key: \"no-results-group\"\n        }, React.createElement(ApplicationLauncherItem, {\n          key: \"no-results\"\n        }, searchNoResultsText))];\n      }\n\n      if (onSearch) {\n        renderableItems = [this.createSearchBox()].concat(_toConsumableArray(renderableItems));\n      }\n\n      return React.createElement(ApplicationLauncherContext.Provider, {\n        value: {\n          onFavorite: onFavorite\n        }\n      }, React.createElement(DropdownContext.Provider, {\n        value: {\n          onSelect: onSelect,\n          menuClass: styles.appLauncherMenu,\n          itemClass: styles.appLauncherMenuItem,\n          toggleClass: styles.appLauncherToggle,\n          baseClass: styles.appLauncher,\n          baseComponent: 'nav',\n          sectionClass: styles.appLauncherGroup,\n          sectionTitleClass: styles.appLauncherGroupTitle,\n          sectionComponent: 'section',\n          disabledClass: styles.modifiers.disabled,\n          ouiaComponentType: ApplicationLauncher.displayName\n        }\n      }, React.createElement(DropdownWithContext, Object.assign({}, props, {\n        dropdownItems: renderableItems,\n        isOpen: isOpen,\n        className: className,\n        \"aria-label\": ariaLabel,\n        menuAppendTo: menuAppendTo,\n        toggle: React.createElement(DropdownToggle, {\n          id: toggleId,\n          toggleIndicator: null,\n          isOpen: isOpen,\n          onToggle: onToggle,\n          isDisabled: isDisabled,\n          \"aria-label\": ariaLabel\n        }, toggleIcon),\n        isGrouped: isGrouped\n      }))));\n    }\n  }]);\n\n  return ApplicationLauncher;\n}(React.Component);\nApplicationLauncher.displayName = 'ApplicationLauncher';\nApplicationLauncher.defaultProps = {\n  className: '',\n  isDisabled: false,\n  direction: DropdownDirection.down,\n  favorites: [],\n  isOpen: false,\n  position: DropdownPosition.left,\n\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  onSelect: function onSelect(_event) {\n    return undefined;\n  },\n  onToggle: function onToggle(_value) {\n    return undefined;\n  },\n\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n  'aria-label': 'Application launcher',\n  isGrouped: false,\n  toggleIcon: React.createElement(ThIcon, null),\n  searchPlaceholderText: 'Filter by name...',\n  searchNoResultsText: 'No results found',\n  favoritesLabel: 'Favorites',\n  menuAppendTo: 'inline'\n};","map":{"version":3,"mappings":"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","names":["React","css","styles","formStyles","ThIcon","DropdownDirection","DropdownPosition","DropdownToggle","DropdownContext","DropdownWithContext","ApplicationLauncherGroup","ApplicationLauncherSeparator","ApplicationLauncherItem","ApplicationLauncherContext","createRenderableFavorites","extendItemsWithFavorite","ApplicationLauncher","props","onSearch","searchPlaceholderText","searchProps","key","className","appLauncherMenuSearch","customChild","type","formControl","placeholder","onChange","e","target","value","ariaLabel","_a","isOpen","onToggle","toggleIcon","toggleId","onSelect","isDisabled","isGrouped","favorites","onFavorite","items","ref","favoritesLabel","searchNoResultsText","menuAppendTo","__rest","renderableItems","favoritesGroup","renderableFavorites","length","label","concat","createSearchBox","Provider","menuClass","appLauncherMenu","itemClass","appLauncherMenuItem","toggleClass","appLauncherToggle","baseClass","appLauncher","baseComponent","sectionClass","appLauncherGroup","sectionTitleClass","appLauncherGroupTitle","sectionComponent","disabledClass","modifiers","disabled","ouiaComponentType","displayName","Object","dropdownItems","toggle","id","toggleIndicator","Component","direction","down","position","left","_event","undefined","_value"],"sources":["/home/pkorytar/Projects/RedHat/pnc-web-ui-react/node_modules/@patternfly/react-core/src/components/ApplicationLauncher/ApplicationLauncher.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/AppLauncher/app-launcher';\nimport formStyles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport ThIcon from '@patternfly/react-icons/dist/esm/icons/th-icon';\nimport { DropdownDirection, DropdownPosition, DropdownToggle, DropdownContext } from '../Dropdown';\nimport { DropdownWithContext } from '../Dropdown/DropdownWithContext';\nimport { ApplicationLauncherGroup } from './ApplicationLauncherGroup';\nimport { ApplicationLauncherSeparator } from './ApplicationLauncherSeparator';\nimport { ApplicationLauncherItem } from './ApplicationLauncherItem';\nimport { ApplicationLauncherContext } from './ApplicationLauncherContext';\nimport { ToggleMenuBaseProps } from '../../helpers/Popper/Popper';\nimport { createRenderableFavorites, extendItemsWithFavorite } from '../../helpers/favorites';\n\nexport interface ApplicationLauncherProps\n  extends Omit<ToggleMenuBaseProps, 'menuAppendTo'>,\n    React.HTMLProps<HTMLDivElement> {\n  /** Additional element css classes */\n  className?: string;\n  /** Display menu above or below dropdown toggle */\n  direction?: DropdownDirection | 'up' | 'down';\n  /** Array of application launcher items */\n  items?: React.ReactNode[];\n  /** Render Application launcher toggle as disabled icon */\n  isDisabled?: boolean;\n  /** open bool */\n  isOpen?: boolean;\n  /** Indicates where menu will be alligned horizontally */\n  position?: DropdownPosition | 'right' | 'left';\n  /** Function callback called when user selects item */\n  onSelect?: (event: any) => void;\n  /** Callback called when application launcher toggle is clicked */\n  onToggle?: (value: boolean) => void;\n  /** Adds accessible text to the button. Required for plain buttons */\n  'aria-label'?: string;\n  /** Flag to indicate if application launcher has groups */\n  isGrouped?: boolean;\n  /** Toggle Icon, optional to override the icon used for the toggle */\n  toggleIcon?: React.ReactNode;\n  /** The container to append the menu to. Defaults to 'inline'.\n   * If your menu is being cut off you can append it to an element higher up the DOM tree.\n   * Some examples:\n   * menuAppendTo=\"parent\"\n   * menuAppendTo={() => document.body}\n   * menuAppendTo={document.getElementById('target')}\n   */\n  menuAppendTo?: HTMLElement | (() => HTMLElement) | 'inline' | 'parent';\n  /** ID list of favorited ApplicationLauncherItems */\n  favorites?: string[];\n  /** Enables favorites. Callback called when an ApplicationLauncherItem's favorite button is clicked */\n  onFavorite?: (itemId: string, isFavorite: boolean) => void;\n  /** Enables search. Callback called when text input is entered into search box */\n  onSearch?: (textInput: string) => void;\n  /** Placeholder text for search input */\n  searchPlaceholderText?: string;\n  /** Text for search input when no results are found */\n  searchNoResultsText?: string;\n  /** Additional properties for search input */\n  searchProps?: any;\n  /** Label for the favorites group */\n  favoritesLabel?: string;\n  /** ID of toggle */\n  toggleId?: string;\n}\n\nexport class ApplicationLauncher extends React.Component<ApplicationLauncherProps> {\n  static displayName = 'ApplicationLauncher';\n  static defaultProps: ApplicationLauncherProps = {\n    className: '',\n    isDisabled: false,\n    direction: DropdownDirection.down,\n    favorites: [] as string[],\n    isOpen: false,\n    position: DropdownPosition.left,\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    onSelect: (_event: any): any => undefined,\n    onToggle: (_value: boolean): any => undefined,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    'aria-label': 'Application launcher',\n    isGrouped: false,\n    toggleIcon: <ThIcon />,\n    searchPlaceholderText: 'Filter by name...',\n    searchNoResultsText: 'No results found',\n    favoritesLabel: 'Favorites',\n    menuAppendTo: 'inline'\n  };\n\n  createSearchBox = () => {\n    const { onSearch, searchPlaceholderText, searchProps } = this.props;\n\n    return (\n      <div key=\"search\" className={css(styles.appLauncherMenuSearch)}>\n        <ApplicationLauncherItem\n          customChild={\n            <input\n              type=\"search\"\n              className={css(formStyles.formControl)}\n              placeholder={searchPlaceholderText}\n              onChange={e => onSearch(e.target.value)}\n              {...searchProps}\n            ></input>\n          }\n        ></ApplicationLauncherItem>\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      'aria-label': ariaLabel,\n      isOpen,\n      onToggle,\n      toggleIcon,\n      toggleId,\n      onSelect,\n      isDisabled,\n      className,\n      isGrouped,\n      favorites,\n      onFavorite,\n      onSearch,\n      items,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      searchPlaceholderText,\n      searchProps,\n      ref,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      favoritesLabel,\n      searchNoResultsText,\n      menuAppendTo,\n      ...props\n    } = this.props;\n    let renderableItems: React.ReactNode[] = [];\n\n    if (onFavorite) {\n      let favoritesGroup: React.ReactNode[] = [];\n      let renderableFavorites: React.ReactNode[] = [];\n      if (favorites.length > 0) {\n        renderableFavorites = createRenderableFavorites(items, isGrouped, favorites, true);\n        favoritesGroup = [\n          <ApplicationLauncherGroup key=\"favorites\" label={favoritesLabel}>\n            {renderableFavorites}\n            <ApplicationLauncherSeparator key=\"separator\" />\n          </ApplicationLauncherGroup>\n        ];\n      }\n      if (renderableFavorites.length > 0) {\n        renderableItems = favoritesGroup.concat(extendItemsWithFavorite(items, isGrouped, favorites));\n      } else {\n        renderableItems = extendItemsWithFavorite(items, isGrouped, favorites);\n      }\n    } else {\n      renderableItems = items;\n    }\n\n    if (items.length === 0) {\n      renderableItems = [\n        <ApplicationLauncherGroup key=\"no-results-group\">\n          <ApplicationLauncherItem key=\"no-results\">{searchNoResultsText}</ApplicationLauncherItem>\n        </ApplicationLauncherGroup>\n      ];\n    }\n    if (onSearch) {\n      renderableItems = [this.createSearchBox(), ...renderableItems];\n    }\n\n    return (\n      <ApplicationLauncherContext.Provider value={{ onFavorite }}>\n        <DropdownContext.Provider\n          value={{\n            onSelect,\n            menuClass: styles.appLauncherMenu,\n            itemClass: styles.appLauncherMenuItem,\n            toggleClass: styles.appLauncherToggle,\n            baseClass: styles.appLauncher,\n            baseComponent: 'nav',\n            sectionClass: styles.appLauncherGroup,\n            sectionTitleClass: styles.appLauncherGroupTitle,\n            sectionComponent: 'section',\n            disabledClass: styles.modifiers.disabled,\n            ouiaComponentType: ApplicationLauncher.displayName\n          }}\n        >\n          <DropdownWithContext\n            {...props}\n            dropdownItems={renderableItems}\n            isOpen={isOpen}\n            className={className}\n            aria-label={ariaLabel}\n            menuAppendTo={menuAppendTo}\n            toggle={\n              <DropdownToggle\n                id={toggleId}\n                toggleIndicator={null}\n                isOpen={isOpen}\n                onToggle={onToggle}\n                isDisabled={isDisabled}\n                aria-label={ariaLabel}\n              >\n                {toggleIcon}\n              </DropdownToggle>\n            }\n            isGrouped={isGrouped}\n          />\n        </DropdownContext.Provider>\n      </ApplicationLauncherContext.Provider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}